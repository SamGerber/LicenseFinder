{
  "dependencies": {
    "babel-register": {
      "_from": "babel-register@^6.24.1",
      "_id": "babel-register@6.24.1",
      "_inBundle": false,
      "_integrity": "sha1-fhDhOi9xBlvfrVoXh7pFvKbe118=",
      "_location": "/babel-register",
      "_phantomChildren": {},
      "_requested": {
        "type": "range",
        "registry": true,
        "raw": "babel-register@^6.24.1",
        "name": "babel-register",
        "escapedName": "babel-register",
        "rawSpec": "^6.24.1",
        "saveSpec": null,
        "fetchSpec": "^6.24.1"
      },
      "_requiredBy": [
        "/",
        "/babel-core"
      ],
      "_resolved": "https://registry.npmjs.org/babel-register/-/babel-register-6.24.1.tgz",
      "_shasum": "7e10e13a2f71065bdfad5a1787ba45bca6ded75f",
      "_spec": "babel-register@^6.24.1",
      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies",
      "author": {
        "name": "Sebastian McKenzie",
        "email": "sebmck@gmail.com"
      },
      "browser": "lib/browser.js",
      "bundleDependencies": false,
      "dependencies": {
        "babel-core": {
          "_from": "babel-core@^6.24.1",
          "_id": "babel-core@6.25.0",
          "_inBundle": false,
          "_integrity": "sha1-fdQrBGPHQunVKW3rPsZ6kyLa1yk=",
          "_location": "/babel-core",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "babel-core@^6.24.1",
            "name": "babel-core",
            "escapedName": "babel-core",
            "rawSpec": "^6.24.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "^6.24.1"
          },
          "_requiredBy": [
            "/babel-register"
          ],
          "_resolved": "https://registry.npmjs.org/babel-core/-/babel-core-6.25.0.tgz",
          "_shasum": "7dd42b0463c742e9d5296deb3ec67a9322dad729",
          "_spec": "babel-core@^6.24.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
          "author": {
            "name": "Sebastian McKenzie",
            "email": "sebmck@gmail.com"
          },
          "bundleDependencies": false,
          "dependencies": {
            "babel-code-frame": {
              "_from": "babel-code-frame@^6.22.0",
              "_id": "babel-code-frame@6.22.0",
              "_inBundle": false,
              "_integrity": "sha1-AnYgvuVnqIwyVhV05/0IAdMxGOQ=",
              "_location": "/babel-code-frame",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "babel-code-frame@^6.22.0",
                "name": "babel-code-frame",
                "escapedName": "babel-code-frame",
                "rawSpec": "^6.22.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^6.22.0"
              },
              "_requiredBy": [
                "/babel-core",
                "/babel-traverse"
              ],
              "_resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.22.0.tgz",
              "_shasum": "027620bee567a88c32561574e7fd0801d33118e4",
              "_spec": "babel-code-frame@^6.22.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Sebastian McKenzie",
                "email": "sebmck@gmail.com"
              },
              "bundleDependencies": false,
              "dependencies": {
                "chalk": {
                  "_from": "chalk@^1.1.0",
                  "_id": "chalk@1.1.3",
                  "_inBundle": false,
                  "_integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
                  "_location": "/chalk",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "chalk@^1.1.0",
                    "name": "chalk",
                    "escapedName": "chalk",
                    "rawSpec": "^1.1.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.1.0"
                  },
                  "_requiredBy": [
                    "/babel-code-frame"
                  ],
                  "_resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
                  "_shasum": "a8115c55e4a702fe4d150abd3872822a7e09fc98",
                  "_spec": "chalk@^1.1.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-code-frame",
                  "bugs": {
                    "url": "https://github.com/chalk/chalk/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "ansi-styles": {
                      "_from": "ansi-styles@^2.2.1",
                      "_id": "ansi-styles@2.2.1",
                      "_inBundle": false,
                      "_integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
                      "_location": "/ansi-styles",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "ansi-styles@^2.2.1",
                        "name": "ansi-styles",
                        "escapedName": "ansi-styles",
                        "rawSpec": "^2.2.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^2.2.1"
                      },
                      "_requiredBy": [
                        "/chalk"
                      ],
                      "_resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
                      "_shasum": "b432dd3358b634cf75e1e4664368240533c1ddbe",
                      "_spec": "ansi-styles@^2.2.1",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/chalk",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/chalk/ansi-styles/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "ANSI escape codes for styling strings in the terminal",
                      "devDependencies": {
                        "mocha": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/chalk/ansi-styles#readme",
                      "keywords": [
                        "ansi",
                        "styles",
                        "color",
                        "colour",
                        "colors",
                        "terminal",
                        "console",
                        "cli",
                        "string",
                        "tty",
                        "escape",
                        "formatting",
                        "rgb",
                        "256",
                        "shell",
                        "xterm",
                        "log",
                        "logging",
                        "command-line",
                        "text"
                      ],
                      "license": "MIT",
                      "maintainers": [
                        {
                          "name": "Sindre Sorhus",
                          "email": "sindresorhus@gmail.com",
                          "url": "sindresorhus.com"
                        },
                        {
                          "name": "Joshua Appelman",
                          "email": "jappelman@xebia.com",
                          "url": "jbnicolai.com"
                        }
                      ],
                      "name": "ansi-styles",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/chalk/ansi-styles.git"
                      },
                      "scripts": {
                        "test": "mocha"
                      },
                      "version": "2.2.1",
                      "readme": "# ansi-styles [![Build Status](https://travis-ci.org/chalk/ansi-styles.svg?branch=master)](https://travis-ci.org/chalk/ansi-styles)\n\n> [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles) for styling strings in the terminal\n\nYou probably want the higher-level [chalk](https://github.com/chalk/chalk) module for styling your strings.\n\n![](screenshot.png)\n\n\n## Install\n\n```\n$ npm install --save ansi-styles\n```\n\n\n## Usage\n\n```js\nvar ansi = require('ansi-styles');\n\nconsole.log(ansi.green.open + 'Hello world!' + ansi.green.close);\n```\n\n\n## API\n\nEach style has an `open` and `close` property.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `gray`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n\n\n## Advanced usage\n\nBy default you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\n- `ansi.modifiers`\n- `ansi.colors`\n- `ansi.bgColors`\n\n\n###### Example\n\n```js\nconsole.log(ansi.colors.green.open);\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/ansi-styles",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "escape-string-regexp": {
                      "_from": "escape-string-regexp@^1.0.2",
                      "_id": "escape-string-regexp@1.0.5",
                      "_inBundle": false,
                      "_integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
                      "_location": "/escape-string-regexp",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "escape-string-regexp@^1.0.2",
                        "name": "escape-string-regexp",
                        "escapedName": "escape-string-regexp",
                        "rawSpec": "^1.0.2",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.2"
                      },
                      "_requiredBy": [
                        "/chalk"
                      ],
                      "_resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
                      "_shasum": "1b61c0562190a8dff6ae3bb2cf0200ca130b86d4",
                      "_spec": "escape-string-regexp@^1.0.2",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/chalk",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/escape-string-regexp/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Escape RegExp special characters",
                      "devDependencies": {
                        "ava": "*",
                        "xo": "*"
                      },
                      "engines": {
                        "node": ">=0.8.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme",
                      "keywords": [
                        "escape",
                        "regex",
                        "regexp",
                        "re",
                        "regular",
                        "expression",
                        "string",
                        "str",
                        "special",
                        "characters"
                      ],
                      "license": "MIT",
                      "maintainers": [
                        {
                          "name": "Sindre Sorhus",
                          "email": "sindresorhus@gmail.com",
                          "url": "sindresorhus.com"
                        },
                        {
                          "name": "Joshua Boy Nicolai Appelman",
                          "email": "joshua@jbna.nl",
                          "url": "jbna.nl"
                        }
                      ],
                      "name": "escape-string-regexp",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/escape-string-regexp.git"
                      },
                      "scripts": {
                        "test": "xo && ava"
                      },
                      "version": "1.0.5",
                      "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install --save escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/escape-string-regexp",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "has-ansi": {
                      "_from": "has-ansi@^2.0.0",
                      "_id": "has-ansi@2.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
                      "_location": "/has-ansi",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "has-ansi@^2.0.0",
                        "name": "has-ansi",
                        "escapedName": "has-ansi",
                        "rawSpec": "^2.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^2.0.0"
                      },
                      "_requiredBy": [
                        "/chalk"
                      ],
                      "_resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
                      "_shasum": "34f5049ce1ecdf2b0649af3ef24e45ed35416d91",
                      "_spec": "has-ansi@^2.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/chalk",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/has-ansi/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {
                        "ansi-regex": {
                          "_from": "ansi-regex@^2.0.0",
                          "_id": "ansi-regex@2.1.1",
                          "_inBundle": false,
                          "_integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
                          "_location": "/ansi-regex",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "ansi-regex@^2.0.0",
                            "name": "ansi-regex",
                            "escapedName": "ansi-regex",
                            "rawSpec": "^2.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^2.0.0"
                          },
                          "_requiredBy": [
                            "/has-ansi",
                            "/strip-ansi"
                          ],
                          "_resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
                          "_shasum": "c3b33ab5ee360d86e0e628f0468ae7ef27d654df",
                          "_spec": "ansi-regex@^2.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/has-ansi",
                          "author": {
                            "name": "Sindre Sorhus",
                            "email": "sindresorhus@gmail.com",
                            "url": "sindresorhus.com"
                          },
                          "bugs": {
                            "url": "https://github.com/chalk/ansi-regex/issues"
                          },
                          "bundleDependencies": false,
                          "deprecated": false,
                          "description": "Regular expression for matching ANSI escape codes",
                          "devDependencies": {
                            "ava": "0.17.0",
                            "xo": "0.16.0"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/chalk/ansi-regex#readme",
                          "keywords": [
                            "ansi",
                            "styles",
                            "color",
                            "colour",
                            "colors",
                            "terminal",
                            "console",
                            "cli",
                            "string",
                            "tty",
                            "escape",
                            "formatting",
                            "rgb",
                            "256",
                            "shell",
                            "xterm",
                            "command-line",
                            "text",
                            "regex",
                            "regexp",
                            "re",
                            "match",
                            "test",
                            "find",
                            "pattern"
                          ],
                          "license": "MIT",
                          "maintainers": [
                            {
                              "name": "Sindre Sorhus",
                              "email": "sindresorhus@gmail.com",
                              "url": "sindresorhus.com"
                            },
                            {
                              "name": "Joshua Appelman",
                              "email": "jappelman@xebia.com",
                              "url": "jbnicolai.com"
                            },
                            {
                              "name": "JD Ballard",
                              "email": "i.am.qix@gmail.com",
                              "url": "github.com/qix-"
                            }
                          ],
                          "name": "ansi-regex",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/chalk/ansi-regex.git"
                          },
                          "scripts": {
                            "test": "xo && ava --verbose",
                            "view-supported": "node fixtures/view-codes.js"
                          },
                          "version": "2.1.1",
                          "xo": {
                            "rules": {
                              "guard-for-in": 0,
                              "no-loop-func": 0
                            }
                          },
                          "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001b[4mcake\\u001b[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001b[4mcake\\u001b[0m'.match(ansiRegex());\n//=> ['\\u001b[4m', '\\u001b[0m']\n```\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. If I recall correctly, we test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/ansi-regex",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "deprecated": false,
                      "description": "Check if a string has ANSI escape codes",
                      "devDependencies": {
                        "ava": "0.0.4"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/has-ansi#readme",
                      "keywords": [
                        "ansi",
                        "styles",
                        "color",
                        "colour",
                        "colors",
                        "terminal",
                        "console",
                        "string",
                        "tty",
                        "escape",
                        "shell",
                        "xterm",
                        "command-line",
                        "text",
                        "regex",
                        "regexp",
                        "re",
                        "match",
                        "test",
                        "find",
                        "pattern",
                        "has"
                      ],
                      "license": "MIT",
                      "maintainers": [
                        {
                          "name": "Sindre Sorhus",
                          "email": "sindresorhus@gmail.com",
                          "url": "sindresorhus.com"
                        },
                        {
                          "name": "Joshua Appelman",
                          "email": "jappelman@xebia.com",
                          "url": "jbnicolai.com"
                        }
                      ],
                      "name": "has-ansi",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/has-ansi.git"
                      },
                      "scripts": {
                        "test": "node test.js"
                      },
                      "version": "2.0.0",
                      "readme": "# has-ansi [![Build Status](https://travis-ci.org/sindresorhus/has-ansi.svg?branch=master)](https://travis-ci.org/sindresorhus/has-ansi)\n\n> Check if a string has [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save has-ansi\n```\n\n\n## Usage\n\n```js\nvar hasAnsi = require('has-ansi');\n\nhasAnsi('\\u001b[4mcake\\u001b[0m');\n//=> true\n\nhasAnsi('cake');\n//=> false\n```\n\n\n## Related\n\n- [has-ansi-cli](https://github.com/sindresorhus/has-ansi-cli) - CLI for this module\n- [strip-ansi](https://github.com/sindresorhus/strip-ansi) - Strip ANSI escape codes\n- [ansi-regex](https://github.com/sindresorhus/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/sindresorhus/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "ansi-regex": "^2.0.0"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/has-ansi",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "strip-ansi": {
                      "_from": "strip-ansi@^3.0.0",
                      "_id": "strip-ansi@3.0.1",
                      "_inBundle": false,
                      "_integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
                      "_location": "/strip-ansi",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "strip-ansi@^3.0.0",
                        "name": "strip-ansi",
                        "escapedName": "strip-ansi",
                        "rawSpec": "^3.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^3.0.0"
                      },
                      "_requiredBy": [
                        "/chalk"
                      ],
                      "_resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
                      "_shasum": "6a385fb8853d952d5ff05d0e8aaf94278dc63dcf",
                      "_spec": "strip-ansi@^3.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/chalk",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/chalk/strip-ansi/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {
                        "ansi-regex": {
                          "_from": "ansi-regex@^2.0.0",
                          "_id": "ansi-regex@2.1.1",
                          "_inBundle": false,
                          "_integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
                          "_location": "/ansi-regex",
                          "_phantomChildren": "[Circular]",
                          "_requested": "[Circular]",
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
                          "_shasum": "c3b33ab5ee360d86e0e628f0468ae7ef27d654df",
                          "_spec": "ansi-regex@^2.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/has-ansi",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "bundleDependencies": false,
                          "deprecated": false,
                          "description": "Regular expression for matching ANSI escape codes",
                          "devDependencies": "[Circular]",
                          "engines": "[Circular]",
                          "files": "[Circular]",
                          "homepage": "https://github.com/chalk/ansi-regex#readme",
                          "keywords": "[Circular]",
                          "license": "MIT",
                          "maintainers": "[Circular]",
                          "name": "ansi-regex",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "2.1.1",
                          "xo": "[Circular]",
                          "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001b[4mcake\\u001b[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001b[4mcake\\u001b[0m'.match(ansiRegex());\n//=> ['\\u001b[4m', '\\u001b[0m']\n```\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. If I recall correctly, we test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "dependencies": {},
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/ansi-regex",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "ansi-regex"
                        }
                      },
                      "deprecated": false,
                      "description": "Strip ANSI escape codes",
                      "devDependencies": {
                        "ava": "*",
                        "xo": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/chalk/strip-ansi#readme",
                      "keywords": [
                        "strip",
                        "trim",
                        "remove",
                        "ansi",
                        "styles",
                        "color",
                        "colour",
                        "colors",
                        "terminal",
                        "console",
                        "string",
                        "tty",
                        "escape",
                        "formatting",
                        "rgb",
                        "256",
                        "shell",
                        "xterm",
                        "log",
                        "logging",
                        "command-line",
                        "text"
                      ],
                      "license": "MIT",
                      "maintainers": [
                        {
                          "name": "Sindre Sorhus",
                          "email": "sindresorhus@gmail.com",
                          "url": "sindresorhus.com"
                        },
                        {
                          "name": "Joshua Boy Nicolai Appelman",
                          "email": "joshua@jbna.nl",
                          "url": "jbna.nl"
                        },
                        {
                          "name": "JD Ballard",
                          "email": "i.am.qix@gmail.com",
                          "url": "github.com/qix-"
                        }
                      ],
                      "name": "strip-ansi",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/chalk/strip-ansi.git"
                      },
                      "scripts": {
                        "test": "xo && ava"
                      },
                      "version": "3.0.1",
                      "readme": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save strip-ansi\n```\n\n\n## Usage\n\n```js\nvar stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001b[4mcake\\u001b[0m');\n//=> 'cake'\n```\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "ansi-regex": "^2.0.0"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/strip-ansi",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "supports-color": {
                      "_from": "supports-color@^2.0.0",
                      "_id": "supports-color@2.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
                      "_location": "/supports-color",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "supports-color@^2.0.0",
                        "name": "supports-color",
                        "escapedName": "supports-color",
                        "rawSpec": "^2.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^2.0.0"
                      },
                      "_requiredBy": [
                        "/chalk"
                      ],
                      "_resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
                      "_shasum": "535d045ce6b6363fa40117084629995e9df324c7",
                      "_spec": "supports-color@^2.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/chalk",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/chalk/supports-color/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Detect whether a terminal supports color",
                      "devDependencies": {
                        "mocha": "*",
                        "require-uncached": "^1.0.2"
                      },
                      "engines": {
                        "node": ">=0.8.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/chalk/supports-color#readme",
                      "keywords": [
                        "color",
                        "colour",
                        "colors",
                        "terminal",
                        "console",
                        "cli",
                        "ansi",
                        "styles",
                        "tty",
                        "rgb",
                        "256",
                        "shell",
                        "xterm",
                        "command-line",
                        "support",
                        "supports",
                        "capability",
                        "detect"
                      ],
                      "license": "MIT",
                      "maintainers": [
                        {
                          "name": "Sindre Sorhus",
                          "email": "sindresorhus@gmail.com",
                          "url": "sindresorhus.com"
                        },
                        {
                          "name": "Joshua Appelman",
                          "email": "jappelman@xebia.com",
                          "url": "jbnicolai.com"
                        }
                      ],
                      "name": "supports-color",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/chalk/supports-color.git"
                      },
                      "scripts": {
                        "test": "mocha"
                      },
                      "version": "2.0.0",
                      "readme": "# supports-color [![Build Status](https://travis-ci.org/chalk/supports-color.svg?branch=master)](https://travis-ci.org/chalk/supports-color)\n\n> Detect whether a terminal supports color\n\n\n## Install\n\n```\n$ npm install --save supports-color\n```\n\n\n## Usage\n\n```js\nvar supportsColor = require('supports-color');\n\nif (supportsColor) {\n\tconsole.log('Terminal supports color');\n}\n```\n\nIt obeys the `--color` and `--no-color` CLI flags.\n\nFor situations where using `--color` is not possible, add an environment variable `FORCE_COLOR` with any value to force color. Trumps `--no-color`.\n\n\n## Related\n\n- [supports-color-cli](https://github.com/chalk/supports-color-cli) - CLI for this module\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/supports-color",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Terminal string styling done right. Much color.",
                  "devDependencies": {
                    "coveralls": "^2.11.2",
                    "matcha": "^0.6.0",
                    "mocha": "*",
                    "nyc": "^3.0.0",
                    "require-uncached": "^1.0.2",
                    "resolve-from": "^1.0.0",
                    "semver": "^4.3.3",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/chalk/chalk#readme",
                  "keywords": [
                    "color",
                    "colour",
                    "colors",
                    "terminal",
                    "console",
                    "cli",
                    "string",
                    "str",
                    "ansi",
                    "style",
                    "styles",
                    "tty",
                    "formatting",
                    "rgb",
                    "256",
                    "shell",
                    "xterm",
                    "log",
                    "logging",
                    "command-line",
                    "text"
                  ],
                  "license": "MIT",
                  "maintainers": [
                    {
                      "name": "Sindre Sorhus",
                      "email": "sindresorhus@gmail.com",
                      "url": "sindresorhus.com"
                    },
                    {
                      "name": "Joshua Appelman",
                      "email": "jappelman@xebia.com",
                      "url": "jbnicolai.com"
                    },
                    {
                      "name": "JD Ballard",
                      "email": "i.am.qix@gmail.com",
                      "url": "github.com/qix-"
                    }
                  ],
                  "name": "chalk",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/chalk/chalk.git"
                  },
                  "scripts": {
                    "bench": "matcha benchmark.js",
                    "coverage": "nyc npm test && nyc report",
                    "coveralls": "nyc npm test && nyc report --reporter=text-lcov | coveralls",
                    "test": "xo && mocha"
                  },
                  "version": "1.1.3",
                  "xo": {
                    "envs": [
                      "node",
                      "mocha"
                    ]
                  },
                  "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"360\" src=\"https://cdn.rawgit.com/chalk/chalk/19935d6484811c5e468817f846b7b3d417d7bf4a/logo.svg\" alt=\"chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk)\n[![Coverage Status](https://coveralls.io/repos/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/r/chalk/chalk?branch=master)\n[![](http://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4)\n\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68). Although there are other ones, they either do too much or not enough.\n\n**Chalk is a clean and focused alternative.**\n\n![](https://github.com/chalk/ansi-styles/raw/master/screenshot.png)\n\n\n## Why\n\n- Highly performant\n- Doesn't extend `String.prototype`\n- Expressive API\n- Ability to nest styles\n- Clean and focused\n- Auto-detects color support\n- Actively maintained\n- [Used by ~4500 modules](https://www.npmjs.com/browse/depended/chalk) as of July 15, 2015\n\n\n## Install\n\n```\n$ npm install --save chalk\n```\n\n\n## Usage\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nvar chalk = require('chalk');\n\n// style a string\nchalk.blue('Hello world!');\n\n// combine styled and normal strings\nchalk.blue('Hello') + 'World' + chalk.red('!');\n\n// compose multiple styles using the chainable API\nchalk.blue.bgRed.bold('Hello world!');\n\n// pass in multiple arguments\nchalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz');\n\n// nest styles\nchalk.red('Hello', chalk.underline.bgBlue('world') + '!');\n\n// nest styles of the same type even (color, underline, background)\nchalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n);\n```\n\nEasily define your own themes.\n\n```js\nvar chalk = require('chalk');\nvar error = chalk.bold.red;\nconsole.log(error('Error!'));\n```\n\nTake advantage of console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data).\n\n```js\nvar name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> Hello Sindre\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `Chalk.red.yellow.green` is equivalent to `Chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, but you can override it by setting the `enabled` property. You should however only do this in your own code as it applies globally to all chalk consumers.\n\nIf you need to change this in a reusable module create a new instance:\n\n```js\nvar ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add an environment variable `FORCE_COLOR` with any value to force color. Trumps `--no-color`.\n\n### chalk.styles\n\nExposes the styles as [ANSI escape codes](https://github.com/chalk/ansi-styles).\n\nGenerally not useful, but you might need just the `.open` or `.close` escape code if you're mixing externally styled strings with your own.\n\n```js\nvar chalk = require('chalk');\n\nconsole.log(chalk.styles.red);\n//=> {open: '\\u001b[31m', close: '\\u001b[39m'}\n\nconsole.log(chalk.styles.red.open + 'Hello' + chalk.styles.red.close);\n```\n\n### chalk.hasColor(string)\n\nCheck whether a string [has color](https://github.com/chalk/has-ansi).\n\n### chalk.stripColor(string)\n\n[Strip color](https://github.com/chalk/strip-ansi) from a string.\n\nCan be useful in combination with `.supportsColor` to strip color on externally styled text when it's not supported.\n\nExample:\n\n```js\nvar chalk = require('chalk');\nvar styledString = getText();\n\nif (!chalk.supportsColor) {\n\tstyledString = chalk.stripColor(styledString);\n}\n```\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(on Windows the bright version is used as normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n\n\n## 256-colors\n\nChalk does not support anything other than the base eight colors, which guarantees it will work on all terminals and systems. Some terminals, specifically `xterm` compliant ones, will support the full range of 8-bit colors. For this the lower level [ansi-256-colors](https://github.com/jbnicolai/ansi-256-colors) package can be used.\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://bliker.github.io/cmder/) instead of `cmd.exe`.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles/) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color/) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "ansi-styles": "^2.2.1",
                    "escape-string-regexp": "^1.0.2",
                    "has-ansi": "^2.0.0",
                    "strip-ansi": "^3.0.0",
                    "supports-color": "^2.0.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/chalk",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "esutils": {
                  "_from": "esutils@^2.0.2",
                  "_id": "esutils@2.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
                  "_location": "/esutils",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "esutils@^2.0.2",
                    "name": "esutils",
                    "escapedName": "esutils",
                    "rawSpec": "^2.0.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^2.0.2"
                  },
                  "_requiredBy": [
                    "/babel-code-frame",
                    "/babel-types"
                  ],
                  "_resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
                  "_shasum": "0abf4f1caa5bcb1f7a9d8acc6dea4faaa04bac9b",
                  "_spec": "esutils@^2.0.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-code-frame",
                  "bugs": {
                    "url": "https://github.com/estools/esutils/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "utility box for ECMAScript language tools",
                  "devDependencies": {
                    "chai": "~1.7.2",
                    "coffee-script": "~1.6.3",
                    "jshint": "2.6.3",
                    "mocha": "~2.2.1",
                    "regenerate": "~1.2.1",
                    "unicode-7.0.0": "^0.1.5"
                  },
                  "directories": {
                    "lib": "./lib"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "LICENSE.BSD",
                    "README.md",
                    "lib"
                  ],
                  "homepage": "https://github.com/estools/esutils",
                  "licenses": [
                    {
                      "type": "BSD",
                      "url": "http://github.com/estools/esutils/raw/master/LICENSE.BSD"
                    }
                  ],
                  "main": "lib/utils.js",
                  "maintainers": [
                    {
                      "name": "Yusuke Suzuki",
                      "email": "utatane.tea@gmail.com",
                      "url": "http://github.com/Constellation"
                    }
                  ],
                  "name": "esutils",
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/estools/esutils.git"
                  },
                  "scripts": {
                    "generate-regex": "node tools/generate-identifier-regex.js",
                    "lint": "jshint lib/*.js",
                    "test": "npm run-script lint && npm run-script unit-test",
                    "unit-test": "mocha --compilers coffee:coffee-script -R spec"
                  },
                  "version": "2.0.2",
                  "readme": "### esutils [![Build Status](https://secure.travis-ci.org/estools/esutils.svg)](http://travis-ci.org/estools/esutils)\nesutils ([esutils](http://github.com/estools/esutils)) is\nutility box for ECMAScript language tools.\n\n### API\n\n### ast\n\n#### ast.isExpression(node)\n\nReturns true if `node` is an Expression as defined in ECMA262 edition 5.1 section\n[11](https://es5.github.io/#x11).\n\n#### ast.isStatement(node)\n\nReturns true if `node` is a Statement as defined in ECMA262 edition 5.1 section\n[12](https://es5.github.io/#x12).\n\n#### ast.isIterationStatement(node)\n\nReturns true if `node` is an IterationStatement as defined in ECMA262 edition\n5.1 section [12.6](https://es5.github.io/#x12.6).\n\n#### ast.isSourceElement(node)\n\nReturns true if `node` is a SourceElement as defined in ECMA262 edition 5.1\nsection [14](https://es5.github.io/#x14).\n\n#### ast.trailingStatement(node)\n\nReturns `Statement?` if `node` has trailing `Statement`.\n```js\nif (cond)\n    consequent;\n```\nWhen taking this `IfStatement`, returns `consequent;` statement.\n\n#### ast.isProblematicIfStatement(node)\n\nReturns true if `node` is a problematic IfStatement. If `node` is a problematic `IfStatement`, `node` cannot be represented as an one on one JavaScript code.\n```js\n{\n    type: 'IfStatement',\n    consequent: {\n        type: 'WithStatement',\n        body: {\n            type: 'IfStatement',\n            consequent: {type: 'EmptyStatement'}\n        }\n    },\n    alternate: {type: 'EmptyStatement'}\n}\n```\nThe above node cannot be represented as a JavaScript code, since the top level `else` alternate belongs to an inner `IfStatement`.\n\n\n### code\n\n#### code.isDecimalDigit(code)\n\nReturn true if provided code is decimal digit.\n\n#### code.isHexDigit(code)\n\nReturn true if provided code is hexadecimal digit.\n\n#### code.isOctalDigit(code)\n\nReturn true if provided code is octal digit.\n\n#### code.isWhiteSpace(code)\n\nReturn true if provided code is white space. White space characters are formally defined in ECMA262.\n\n#### code.isLineTerminator(code)\n\nReturn true if provided code is line terminator. Line terminator characters are formally defined in ECMA262.\n\n#### code.isIdentifierStart(code)\n\nReturn true if provided code can be the first character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n#### code.isIdentifierPart(code)\n\nReturn true if provided code can be the trailing character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n### keyword\n\n#### keyword.isKeywordES5(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 5.1. They are formally defined in ECMA262 sections\n[7.6.1.1](http://es5.github.io/#x7.6.1.1) and [7.6.1.2](http://es5.github.io/#x7.6.1.2),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isKeywordES6(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 6. They are formally defined in ECMA262 sections\n[11.6.2.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-keywords) and\n[11.6.2.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-future-reserved-words),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isReservedWordES5(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 5.1.\nThey are formally defined in ECMA262 section [7.6.1](http://es5.github.io/#x7.6.1).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isReservedWordES6(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 6.\nThey are formally defined in ECMA262 section [11.6.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-reserved-words).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isRestrictedWord(id)\n\nReturns `true` if provided identifier string is one of `eval` or `arguments`.\nThey are restricted in strict mode code throughout ECMA262 edition 5.1 and\nin ECMA262 edition 6 section [12.1.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers-static-semantics-early-errors).\n\n#### keyword.isIdentifierName(id)\n\nReturn true if provided identifier string is an IdentifierName as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6).\n\n#### keyword.isIdentifierES5(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6). If the `strict`\nflag is truthy, this function additionally checks whether `id` is an Identifier\nunder strict mode.\n\n#### keyword.isIdentifierES6(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 6 section [12.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis an Identifier under strict mode.\n\n### License\n\nCopyright (C) 2013 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/esutils",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "js-tokens": {
                  "_from": "js-tokens@^3.0.0",
                  "_id": "js-tokens@3.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
                  "_location": "/js-tokens",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "js-tokens@^3.0.0",
                    "name": "js-tokens",
                    "escapedName": "js-tokens",
                    "rawSpec": "^3.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^3.0.0"
                  },
                  "_requiredBy": [
                    "/babel-code-frame",
                    "/loose-envify"
                  ],
                  "_resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
                  "_shasum": "9866df395102130e38f7f996bceb65443209c25b",
                  "_spec": "js-tokens@^3.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-code-frame",
                  "author": {
                    "name": "Simon Lydell"
                  },
                  "bugs": {
                    "url": "https://github.com/lydell/js-tokens/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "A regex that tokenizes JavaScript.",
                  "devDependencies": {
                    "coffee-script": "~1.12.6",
                    "esprima": "^4.0.0",
                    "everything.js": "^1.0.3",
                    "mocha": "^3.4.2"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/lydell/js-tokens#readme",
                  "keywords": [
                    "JavaScript",
                    "js",
                    "token",
                    "tokenize",
                    "regex"
                  ],
                  "license": "MIT",
                  "name": "js-tokens",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/lydell/js-tokens.git"
                  },
                  "scripts": {
                    "build": "node generate-index.js",
                    "dev": "npm run build && npm test",
                    "esprima-compare": "node esprima-compare ./index.js everything.js/es5.js",
                    "test": "mocha --ui tdd"
                  },
                  "version": "3.0.2",
                  "readme": "Overview [![Build Status](https://travis-ci.org/lydell/js-tokens.svg?branch=master)](https://travis-ci.org/lydell/js-tokens)\n========\n\nA regex that tokenizes JavaScript.\n\n```js\nvar jsTokens = require(\"js-tokens\").default\n\nvar jsString = \"var foo=opts.foo;\\n...\"\n\njsString.match(jsTokens)\n// [\"var\", \" \", \"foo\", \"=\", \"opts\", \".\", \"foo\", \";\", \"\\n\", ...]\n```\n\n\nInstallation\n============\n\n`npm install js-tokens`\n\n```js\nimport jsTokens from \"js-tokens\"\n// or:\nvar jsTokens = require(\"js-tokens\").default\n```\n\n\nUsage\n=====\n\n### `jsTokens` ###\n\nA regex with the `g` flag that matches JavaScript tokens.\n\nThe regex _always_ matches, even invalid JavaScript and the empty string.\n\nThe next match is always directly after the previous.\n\n### `var token = matchToToken(match)` ###\n\n```js\nimport {matchToToken} from \"js-tokens\"\n// or:\nvar matchToToken = require(\"js-tokens\").matchToToken\n```\n\nTakes a `match` returned by `jsTokens.exec(string)`, and returns a `{type:\nString, value: String}` object. The following types are available:\n\n- string\n- comment\n- regex\n- number\n- name\n- punctuator\n- whitespace\n- invalid\n\nMulti-line comments and strings also have a `closed` property indicating if the\ntoken was closed or not (see below).\n\nComments and strings both come in several flavors. To distinguish them, check if\nthe token starts with `//`, `/*`, `'`, `\"` or `` ` ``.\n\nNames are ECMAScript IdentifierNames, that is, including both identifiers and\nkeywords. You may use [is-keyword-js] to tell them apart.\n\nWhitespace includes both line terminators and other whitespace.\n\n[is-keyword-js]: https://github.com/crissdev/is-keyword-js\n\n\nECMAScript support\n==================\n\nThe intention is to always support the latest stable ECMAScript version.\n\nIf adding support for a newer version requires changes, a new version with a\nmajor verion bump will be released.\n\nCurrently, [ECMAScript 2017] is supported.\n\n[ECMAScript 2017]: https://www.ecma-international.org/ecma-262/8.0/index.html\n\n\nInvalid code handling\n=====================\n\nUnterminated strings are still matched as strings. JavaScript strings cannot\ncontain (unescaped) newlines, so unterminated strings simply end at the end of\nthe line. Unterminated template strings can contain unescaped newlines, though,\nso they go on to the end of input.\n\nUnterminated multi-line comments are also still matched as comments. They\nsimply go on to the end of the input.\n\nUnterminated regex literals are likely matched as division and whatever is\ninside the regex.\n\nInvalid ASCII characters have their own capturing group.\n\nInvalid non-ASCII characters are treated as names, to simplify the matching of\nnames (except unicode spaces which are treated as whitespace).\n\nRegex literals may contain invalid regex syntax. They are still matched as\nregex literals. They may also contain repeated regex flags, to keep the regex\nsimple.\n\nStrings may contain invalid escape sequences.\n\n\nLimitations\n===========\n\nTokenizing JavaScript using regexes—in fact, _one single regex_—won’t be\nperfect. But that’s not the point either.\n\nYou may compare jsTokens with [esprima] by using `esprima-compare.js`.\nSee `npm run esprima-compare`!\n\n[esprima]: http://esprima.org/\n\n### Template string interpolation ###\n\nTemplate strings are matched as single tokens, from the starting `` ` `` to the\nending `` ` ``, including interpolations (whose tokens are not matched\nindividually).\n\nMatching template string interpolations requires recursive balancing of `{` and\n`}`—something that JavaScript regexes cannot do. Only one level of nesting is\nsupported.\n\n### Division and regex literals collision ###\n\nConsider this example:\n\n```js\nvar g = 9.82\nvar number = bar / 2/g\n\nvar regex = / 2/g\n```\n\nA human can easily understand that in the `number` line we’re dealing with\ndivision, and in the `regex` line we’re dealing with a regex literal. How come?\nBecause humans can look at the whole code to put the `/` characters in context.\nA JavaScript regex cannot. It only sees forwards.\n\nWhen the `jsTokens` regex scans throught the above, it will see the following\nat the end of both the `number` and `regex` rows:\n\n```js\n/ 2/g\n```\n\nIt is then impossible to know if that is a regex literal, or part of an\nexpression dealing with division.\n\nHere is a similar case:\n\n```js\nfoo /= 2/g\nfoo(/= 2/g)\n```\n\nThe first line divides the `foo` variable with `2/g`. The second line calls the\n`foo` function with the regex literal `/= 2/g`. Again, since `jsTokens` only\nsees forwards, it cannot tell the two cases apart.\n\nThere are some cases where we _can_ tell division and regex literals apart,\nthough.\n\nFirst off, we have the simple cases where there’s only one slash in the line:\n\n```js\nvar foo = 2/g\nfoo /= 2\n```\n\nRegex literals cannot contain newlines, so the above cases are correctly\nidentified as division. Things are only problematic when there are more than\none non-comment slash in a single line.\n\nSecondly, not every character is a valid regex flag.\n\n```js\nvar number = bar / 2/e\n```\n\nThe above example is also correctly identified as division, because `e` is not a\nvalid regex flag. I initially wanted to future-proof by allowing `[a-zA-Z]*`\n(any letter) as flags, but it is not worth it since it increases the amount of\nambigous cases. So only the standard `g`, `m`, `i`, `y` and `u` flags are\nallowed. This means that the above example will be identified as division as\nlong as you don’t rename the `e` variable to some permutation of `gmiyu` 1 to 5\ncharacters long.\n\nLastly, we can look _forward_ for information.\n\n- If the token following what looks like a regex literal is not valid after a\n  regex literal, but is valid in a division expression, then the regex literal\n  is treated as division instead. For example, a flagless regex cannot be\n  followed by a string, number or name, but all of those three can be the\n  denominator of a division.\n- Generally, if what looks like a regex literal is followed by an operator, the\n  regex literal is treated as division instead. This is because regexes are\n  seldomly used with operators (such as `+`, `*`, `&&` and `==`), but division\n  could likely be part of such an expression.\n\nPlease consult the regex source and the test cases for precise information on\nwhen regex or division is matched (should you need to know). In short, you\ncould sum it up as:\n\nIf the end of a statement looks like a regex literal (even if it isn’t), it\nwill be treated as one. Otherwise it should work as expected (if you write sane\ncode).\n\n\nLicense\n=======\n\n[MIT](LICENSE).\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/js-tokens",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Generate errors that contain a code frame that point to source locations.",
              "homepage": "https://babeljs.io/",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babel-code-frame",
              "repository": {
                "type": "git",
                "url": "https://github.com/babel/babel/tree/master/packages/babel-code-frame"
              },
              "version": "6.22.0",
              "readme": "# babel-code-frame\n\n> Generate errors that contain a code frame that point to source locations.\n\n## Install\n\n```sh\nnpm install --save-dev babel-code-frame\n```\n\n## Usage\n\n```js\nimport codeFrame from 'babel-code-frame';\n\nconst rawLines = `class Foo {\n  constructor()\n}`;\nconst lineNumber = 2;\nconst colNumber = 16;\n\nconst result = codeFrame(rawLines, lineNumber, colNumber, { /* options */ });\n\nconsole.log(result);\n```\n\n```sh\n  1 | class Foo {\n> 2 |   constructor()\n    |                ^\n  3 | }\n```\n\nIf the column number is not known, you may pass `null` instead.\n\n## Options\n\nname                   | type     | default         | description\n-----------------------|----------|-----------------|------------------------------------------------------\nhighlightCode          | boolean  | `false`         | Syntax highlight the code as JavaScript for terminals\nlinesAbove             | number   | 2               | The number of lines to show above the error\nlinesBelow             | number   | 3               | The number of lines to show below the error\nforceColor             | boolean  | `false`         | Forcibly syntax highlight the code as JavaScript (for non-terminals); overrides highlightCode\n",
              "readmeFilename": "README.md",
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {
                "chalk": "^1.1.0",
                "esutils": "^2.0.2",
                "js-tokens": "^3.0.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-code-frame",
              "error": "[Circular]",
              "extraneous": false
            },
            "babel-generator": {
              "_from": "babel-generator@^6.25.0",
              "_id": "babel-generator@6.25.0",
              "_inBundle": false,
              "_integrity": "sha1-M6GvcNXyiQrrRlpKd5PB32qeqfw=",
              "_location": "/babel-generator",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "babel-generator@^6.25.0",
                "name": "babel-generator",
                "escapedName": "babel-generator",
                "rawSpec": "^6.25.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^6.25.0"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/babel-generator/-/babel-generator-6.25.0.tgz",
              "_shasum": "33a1af70d5f2890aeb465a4a7793c1df6a9ea9fc",
              "_spec": "babel-generator@^6.25.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Sebastian McKenzie",
                "email": "sebmck@gmail.com"
              },
              "bundleDependencies": false,
              "dependencies": {
                "babel-messages": {
                  "_from": "babel-messages@^6.23.0",
                  "_id": "babel-messages@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
                  "_location": "/babel-messages",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "babel-messages@^6.23.0",
                    "name": "babel-messages",
                    "escapedName": "babel-messages",
                    "rawSpec": "^6.23.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^6.23.0"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-generator",
                    "/babel-traverse"
                  ],
                  "_resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
                  "_shasum": "f3cdf4703858035b2a2951c6ec5edf6c62f2630e",
                  "_spec": "babel-messages@^6.23.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": {
                    "name": "Sebastian McKenzie",
                    "email": "sebmck@gmail.com"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Collection of debug messages used by Babel.",
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-messages",
                  "repository": {
                    "type": "git",
                    "url": "https://github.com/babel/babel/tree/master/packages/babel-messages"
                  },
                  "version": "6.23.0",
                  "readme": "# babel-messages\n\n> Collection of debug messages used by Babel.\n\n## Install\n\n```sh\nnpm install --save-dev babel-messages\n```\n\n## Usage\n\n```js\nimport * as messages from 'babel-messages';\n\nmessages.get('tailCallReassignmentDeopt');\n// > \"Function reference has been...\"\n```\n",
                  "readmeFilename": "README.md",
                  "devDependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {
                    "babel-runtime": "^6.22.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-messages",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-messages"
                },
                "babel-runtime": {
                  "_from": "babel-runtime@^6.22.0",
                  "_id": "babel-runtime@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
                  "_location": "/babel-runtime",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "babel-runtime@^6.22.0",
                    "name": "babel-runtime",
                    "escapedName": "babel-runtime",
                    "rawSpec": "^6.22.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^6.22.0"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-generator",
                    "/babel-helpers",
                    "/babel-messages",
                    "/babel-register",
                    "/babel-template",
                    "/babel-traverse",
                    "/babel-types"
                  ],
                  "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
                  "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
                  "_spec": "babel-runtime@^6.22.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": {
                    "name": "Sebastian McKenzie",
                    "email": "sebmck@gmail.com"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "babel selfContained runtime",
                  "devDependencies": {
                    "babel-helpers": "^6.22.0",
                    "babel-plugin-transform-runtime": "^6.23.0"
                  },
                  "license": "MIT",
                  "name": "babel-runtime",
                  "repository": {
                    "type": "git",
                    "url": "https://github.com/babel/babel/tree/master/packages/babel-runtime"
                  },
                  "version": "6.23.0",
                  "readme": "# babel-runtime\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "core-js": "^2.4.0",
                    "regenerator-runtime": "^0.10.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-runtime"
                },
                "babel-types": {
                  "_from": "babel-types@^6.25.0",
                  "_id": "babel-types@6.25.0",
                  "_inBundle": false,
                  "_integrity": "sha1-cK+ySNVmDl0Y+BHZHIMDtUE0oY4=",
                  "_location": "/babel-types",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "babel-types@^6.25.0",
                    "name": "babel-types",
                    "escapedName": "babel-types",
                    "rawSpec": "^6.25.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^6.25.0"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-generator",
                    "/babel-template",
                    "/babel-traverse"
                  ],
                  "_resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.25.0.tgz",
                  "_shasum": "70afb248d5660e5d18f811d91c8303b54134a18e",
                  "_spec": "babel-types@^6.25.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": {
                    "name": "Sebastian McKenzie",
                    "email": "sebmck@gmail.com"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Babel Types is a Lodash-esque utility library for AST nodes",
                  "devDependencies": {
                    "babylon": "^6.17.2"
                  },
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-types",
                  "repository": {
                    "type": "git",
                    "url": "https://github.com/babel/babel/tree/master/packages/babel-types"
                  },
                  "version": "6.25.0",
                  "readme": "# babel-types\n\n> This module contains methods for building ASTs manually and for checking the types of AST nodes.\n\n## Install\n\n```sh\nnpm install --save-dev babel-types\n```\n\n## API\n\n<!-- begin generated section -->\n\n### anyTypeAnnotation\n```javascript\nt.anyTypeAnnotation()\n```\n\nSee also `t.isAnyTypeAnnotation(node, opts)` and `t.assertAnyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### arrayExpression\n```javascript\nt.arrayExpression(elements)\n```\n\nSee also `t.isArrayExpression(node, opts)` and `t.assertArrayExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `elements`: `Array<null | Expression | SpreadElement>` (default: `[]`)\n\n---\n\n### arrayPattern\n```javascript\nt.arrayPattern(elements, typeAnnotation)\n```\n\nSee also `t.isArrayPattern(node, opts)` and `t.assertArrayPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `elements`: `Array<Identifier | Pattern | RestElement>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### arrayTypeAnnotation\n```javascript\nt.arrayTypeAnnotation(elementType)\n```\n\nSee also `t.isArrayTypeAnnotation(node, opts)` and `t.assertArrayTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `elementType` (required)\n\n---\n\n### arrowFunctionExpression\n```javascript\nt.arrowFunctionExpression(params, body, async)\n```\n\nSee also `t.isArrowFunctionExpression(node, opts)` and `t.assertArrowFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement | Expression` (required)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### assignmentExpression\n```javascript\nt.assignmentExpression(operator, left, right)\n```\n\nSee also `t.isAssignmentExpression(node, opts)` and `t.assertAssignmentExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `string` (required)\n - `left`: `LVal` (required)\n - `right`: `Expression` (required)\n\n---\n\n### assignmentPattern\n```javascript\nt.assignmentPattern(left, right)\n```\n\nSee also `t.isAssignmentPattern(node, opts)` and `t.assertAssignmentPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `left`: `Identifier` (required)\n - `right`: `Expression` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### awaitExpression\n```javascript\nt.awaitExpression(argument)\n```\n\nSee also `t.isAwaitExpression(node, opts)` and `t.assertAwaitExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (required)\n\n---\n\n### binaryExpression\n```javascript\nt.binaryExpression(operator, left, right)\n```\n\nSee also `t.isBinaryExpression(node, opts)` and `t.assertBinaryExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'+' | '-' | '/' | '%' | '*' | '**' | '&' | '|' | '>>' | '>>>' | '<<' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '>' | '<' | '>=' | '<='` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### bindExpression\n```javascript\nt.bindExpression(object, callee)\n```\n\nSee also `t.isBindExpression(node, opts)` and `t.assertBindExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `object` (required)\n - `callee` (required)\n\n---\n\n### blockStatement\n```javascript\nt.blockStatement(body, directives)\n```\n\nSee also `t.isBlockStatement(node, opts)` and `t.assertBlockStatement(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `Statement`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### booleanLiteral\n```javascript\nt.booleanLiteral(value)\n```\n\nSee also `t.isBooleanLiteral(node, opts)` and `t.assertBooleanLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `boolean` (required)\n\n---\n\n### booleanLiteralTypeAnnotation\n```javascript\nt.booleanLiteralTypeAnnotation()\n```\n\nSee also `t.isBooleanLiteralTypeAnnotation(node, opts)` and `t.assertBooleanLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### booleanTypeAnnotation\n```javascript\nt.booleanTypeAnnotation()\n```\n\nSee also `t.isBooleanTypeAnnotation(node, opts)` and `t.assertBooleanTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### breakStatement\n```javascript\nt.breakStatement(label)\n```\n\nSee also `t.isBreakStatement(node, opts)` and `t.assertBreakStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### callExpression\n```javascript\nt.callExpression(callee, arguments)\n```\n\nSee also `t.isCallExpression(node, opts)` and `t.assertCallExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### catchClause\n```javascript\nt.catchClause(param, body)\n```\n\nSee also `t.isCatchClause(node, opts)` and `t.assertCatchClause(node, opts)`.\n\nAliases: `Scopable`\n\n - `param`: `Identifier` (required)\n - `body`: `BlockStatement` (required)\n\n---\n\n### classBody\n```javascript\nt.classBody(body)\n```\n\nSee also `t.isClassBody(node, opts)` and `t.assertClassBody(node, opts)`.\n\n - `body`: `Array<ClassMethod | ClassProperty>` (required)\n\n---\n\n### classDeclaration\n```javascript\nt.classDeclaration(id, superClass, body, decorators)\n```\n\nSee also `t.isClassDeclaration(node, opts)` and `t.assertClassDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Statement`, `Declaration`, `Pureish`\n\n - `id`: `Identifier` (required)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classExpression\n```javascript\nt.classExpression(id, superClass, body, decorators)\n```\n\nSee also `t.isClassExpression(node, opts)` and `t.assertClassExpression(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classImplements\n```javascript\nt.classImplements(id, typeParameters)\n```\n\nSee also `t.isClassImplements(node, opts)` and `t.assertClassImplements(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### classMethod\n```javascript\nt.classMethod(kind, key, params, body, computed, static)\n```\n\nSee also `t.isClassMethod(node, opts)` and `t.assertClassMethod(node, opts)`.\n\nAliases: `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`\n\n - `kind`: `\"get\" | \"set\" | \"method\" | \"constructor\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `static`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classProperty\n```javascript\nt.classProperty(key, value, typeAnnotation, decorators, computed)\n```\n\nSee also `t.isClassProperty(node, opts)` and `t.assertClassProperty(node, opts)`.\n\nAliases: `Property`\n\n - `key` (required)\n - `value` (required)\n - `typeAnnotation` (required)\n - `decorators` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### conditionalExpression\n```javascript\nt.conditionalExpression(test, consequent, alternate)\n```\n\nSee also `t.isConditionalExpression(node, opts)` and `t.assertConditionalExpression(node, opts)`.\n\nAliases: `Expression`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Expression` (required)\n - `alternate`: `Expression` (required)\n\n---\n\n### continueStatement\n```javascript\nt.continueStatement(label)\n```\n\nSee also `t.isContinueStatement(node, opts)` and `t.assertContinueStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### debuggerStatement\n```javascript\nt.debuggerStatement()\n```\n\nSee also `t.isDebuggerStatement(node, opts)` and `t.assertDebuggerStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### declareClass\n```javascript\nt.declareClass(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareClass(node, opts)` and `t.assertDeclareClass(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareFunction\n```javascript\nt.declareFunction(id)\n```\n\nSee also `t.isDeclareFunction(node, opts)` and `t.assertDeclareFunction(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### declareInterface\n```javascript\nt.declareInterface(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareInterface(node, opts)` and `t.assertDeclareInterface(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareModule\n```javascript\nt.declareModule(id, body)\n```\n\nSee also `t.isDeclareModule(node, opts)` and `t.assertDeclareModule(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `body` (required)\n\n---\n\n### declareModuleExports\n```javascript\nt.declareModuleExports(typeAnnotation)\n```\n\nSee also `t.isDeclareModuleExports(node, opts)` and `t.assertDeclareModuleExports(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `typeAnnotation` (required)\n\n---\n\n### declareTypeAlias\n```javascript\nt.declareTypeAlias(id, typeParameters, right)\n```\n\nSee also `t.isDeclareTypeAlias(node, opts)` and `t.assertDeclareTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### declareVariable\n```javascript\nt.declareVariable(id)\n```\n\nSee also `t.isDeclareVariable(node, opts)` and `t.assertDeclareVariable(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### decorator\n```javascript\nt.decorator(expression)\n```\n\nSee also `t.isDecorator(node, opts)` and `t.assertDecorator(node, opts)`.\n\n - `expression`: `Expression` (required)\n\n---\n\n### directive\n```javascript\nt.directive(value)\n```\n\nSee also `t.isDirective(node, opts)` and `t.assertDirective(node, opts)`.\n\n - `value`: `DirectiveLiteral` (required)\n\n---\n\n### directiveLiteral\n```javascript\nt.directiveLiteral(value)\n```\n\nSee also `t.isDirectiveLiteral(node, opts)` and `t.assertDirectiveLiteral(node, opts)`.\n\n - `value`: `string` (required)\n\n---\n\n### doExpression\n```javascript\nt.doExpression(body)\n```\n\nSee also `t.isDoExpression(node, opts)` and `t.assertDoExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `body`: `BlockStatement` (required)\n\n---\n\n### doWhileStatement\n```javascript\nt.doWhileStatement(test, body)\n```\n\nSee also `t.isDoWhileStatement(node, opts)` and `t.assertDoWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### emptyStatement\n```javascript\nt.emptyStatement()\n```\n\nSee also `t.isEmptyStatement(node, opts)` and `t.assertEmptyStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### emptyTypeAnnotation\n```javascript\nt.emptyTypeAnnotation()\n```\n\nSee also `t.isEmptyTypeAnnotation(node, opts)` and `t.assertEmptyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### existentialTypeParam\n```javascript\nt.existentialTypeParam()\n```\n\nSee also `t.isExistentialTypeParam(node, opts)` and `t.assertExistentialTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### exportAllDeclaration\n```javascript\nt.exportAllDeclaration(source)\n```\n\nSee also `t.isExportAllDeclaration(node, opts)` and `t.assertExportAllDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `source`: `StringLiteral` (required)\n\n---\n\n### exportDefaultDeclaration\n```javascript\nt.exportDefaultDeclaration(declaration)\n```\n\nSee also `t.isExportDefaultDeclaration(node, opts)` and `t.assertExportDefaultDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `FunctionDeclaration | ClassDeclaration | Expression` (required)\n\n---\n\n### exportDefaultSpecifier\n```javascript\nt.exportDefaultSpecifier(exported)\n```\n\nSee also `t.isExportDefaultSpecifier(node, opts)` and `t.assertExportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportNamedDeclaration\n```javascript\nt.exportNamedDeclaration(declaration, specifiers, source)\n```\n\nSee also `t.isExportNamedDeclaration(node, opts)` and `t.assertExportNamedDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `Declaration` (default: `null`)\n - `specifiers`: `Array<ExportSpecifier>` (required)\n - `source`: `StringLiteral` (default: `null`)\n\n---\n\n### exportNamespaceSpecifier\n```javascript\nt.exportNamespaceSpecifier(exported)\n```\n\nSee also `t.isExportNamespaceSpecifier(node, opts)` and `t.assertExportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportSpecifier\n```javascript\nt.exportSpecifier(local, exported)\n```\n\nSee also `t.isExportSpecifier(node, opts)` and `t.assertExportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `exported`: `Identifier` (required)\n\n---\n\n### expressionStatement\n```javascript\nt.expressionStatement(expression)\n```\n\nSee also `t.isExpressionStatement(node, opts)` and `t.assertExpressionStatement(node, opts)`.\n\nAliases: `Statement`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### file\n```javascript\nt.file(program, comments, tokens)\n```\n\nSee also `t.isFile(node, opts)` and `t.assertFile(node, opts)`.\n\n - `program`: `Program` (required)\n - `comments` (required)\n - `tokens` (required)\n\n---\n\n### forAwaitStatement\n```javascript\nt.forAwaitStatement(left, right, body)\n```\n\nSee also `t.isForAwaitStatement(node, opts)` and `t.assertForAwaitStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forInStatement\n```javascript\nt.forInStatement(left, right, body)\n```\n\nSee also `t.isForInStatement(node, opts)` and `t.assertForInStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forOfStatement\n```javascript\nt.forOfStatement(left, right, body)\n```\n\nSee also `t.isForOfStatement(node, opts)` and `t.assertForOfStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forStatement\n```javascript\nt.forStatement(init, test, update, body)\n```\n\nSee also `t.isForStatement(node, opts)` and `t.assertForStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`\n\n - `init`: `VariableDeclaration | Expression` (default: `null`)\n - `test`: `Expression` (default: `null`)\n - `update`: `Expression` (default: `null`)\n - `body`: `Statement` (required)\n\n---\n\n### functionDeclaration\n```javascript\nt.functionDeclaration(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionDeclaration(node, opts)` and `t.assertFunctionDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Statement`, `Pureish`, `Declaration`\n\n - `id`: `Identifier` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionExpression\n```javascript\nt.functionExpression(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionExpression(node, opts)` and `t.assertFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionTypeAnnotation\n```javascript\nt.functionTypeAnnotation(typeParameters, params, rest, returnType)\n```\n\nSee also `t.isFunctionTypeAnnotation(node, opts)` and `t.assertFunctionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeParameters` (required)\n - `params` (required)\n - `rest` (required)\n - `returnType` (required)\n\n---\n\n### functionTypeParam\n```javascript\nt.functionTypeParam(name, typeAnnotation)\n```\n\nSee also `t.isFunctionTypeParam(node, opts)` and `t.assertFunctionTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n - `name` (required)\n - `typeAnnotation` (required)\n\n---\n\n### genericTypeAnnotation\n```javascript\nt.genericTypeAnnotation(id, typeParameters)\n```\n\nSee also `t.isGenericTypeAnnotation(node, opts)` and `t.assertGenericTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### identifier\n```javascript\nt.identifier(name)\n```\n\nSee also `t.isIdentifier(node, opts)` and `t.assertIdentifier(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `name``string` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `typeAnnotation` (default: `null`)\n\n---\n\n### ifStatement\n```javascript\nt.ifStatement(test, consequent, alternate)\n```\n\nSee also `t.isIfStatement(node, opts)` and `t.assertIfStatement(node, opts)`.\n\nAliases: `Statement`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Statement` (required)\n - `alternate`: `Statement` (default: `null`)\n\n---\n\n### import\n```javascript\nt.import()\n```\n\nSee also `t.isImport(node, opts)` and `t.assertImport(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### importDeclaration\n```javascript\nt.importDeclaration(specifiers, source)\n```\n\nSee also `t.isImportDeclaration(node, opts)` and `t.assertImportDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`\n\n - `specifiers`: `Array<ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier>` (required)\n - `source`: `StringLiteral` (required)\n\n---\n\n### importDefaultSpecifier\n```javascript\nt.importDefaultSpecifier(local)\n```\n\nSee also `t.isImportDefaultSpecifier(node, opts)` and `t.assertImportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importNamespaceSpecifier\n```javascript\nt.importNamespaceSpecifier(local)\n```\n\nSee also `t.isImportNamespaceSpecifier(node, opts)` and `t.assertImportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importSpecifier\n```javascript\nt.importSpecifier(local, imported)\n```\n\nSee also `t.isImportSpecifier(node, opts)` and `t.assertImportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `imported`: `Identifier` (required)\n - `importKind`: `null | 'type' | 'typeof'` (default: `null`)\n\n---\n\n### interfaceDeclaration\n```javascript\nt.interfaceDeclaration(id, typeParameters, extends, body)\n```\n\nSee also `t.isInterfaceDeclaration(node, opts)` and `t.assertInterfaceDeclaration(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### interfaceExtends\n```javascript\nt.interfaceExtends(id, typeParameters)\n```\n\nSee also `t.isInterfaceExtends(node, opts)` and `t.assertInterfaceExtends(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### intersectionTypeAnnotation\n```javascript\nt.intersectionTypeAnnotation(types)\n```\n\nSee also `t.isIntersectionTypeAnnotation(node, opts)` and `t.assertIntersectionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### jSXAttribute\n```javascript\nt.jSXAttribute(name, value)\n```\n\nSee also `t.isJSXAttribute(node, opts)` and `t.assertJSXAttribute(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXNamespacedName` (required)\n - `value`: `JSXElement | StringLiteral | JSXExpressionContainer` (default: `null`)\n\n---\n\n### jSXClosingElement\n```javascript\nt.jSXClosingElement(name)\n```\n\nSee also `t.isJSXClosingElement(node, opts)` and `t.assertJSXClosingElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n\n---\n\n### jSXElement\n```javascript\nt.jSXElement(openingElement, closingElement, children, selfClosing)\n```\n\nSee also `t.isJSXElement(node, opts)` and `t.assertJSXElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`, `Expression`\n\n - `openingElement`: `JSXOpeningElement` (required)\n - `closingElement`: `JSXClosingElement` (default: `null`)\n - `children`: `Array<JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement>` (required)\n - `selfClosing` (required)\n\n---\n\n### jSXEmptyExpression\n```javascript\nt.jSXEmptyExpression()\n```\n\nSee also `t.isJSXEmptyExpression(node, opts)` and `t.assertJSXEmptyExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n\n---\n\n### jSXExpressionContainer\n```javascript\nt.jSXExpressionContainer(expression)\n```\n\nSee also `t.isJSXExpressionContainer(node, opts)` and `t.assertJSXExpressionContainer(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXIdentifier\n```javascript\nt.jSXIdentifier(name)\n```\n\nSee also `t.isJSXIdentifier(node, opts)` and `t.assertJSXIdentifier(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `name`: `string` (required)\n\n---\n\n### jSXMemberExpression\n```javascript\nt.jSXMemberExpression(object, property)\n```\n\nSee also `t.isJSXMemberExpression(node, opts)` and `t.assertJSXMemberExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `object`: `JSXMemberExpression | JSXIdentifier` (required)\n - `property`: `JSXIdentifier` (required)\n\n---\n\n### jSXNamespacedName\n```javascript\nt.jSXNamespacedName(namespace, name)\n```\n\nSee also `t.isJSXNamespacedName(node, opts)` and `t.assertJSXNamespacedName(node, opts)`.\n\nAliases: `JSX`\n\n - `namespace`: `JSXIdentifier` (required)\n - `name`: `JSXIdentifier` (required)\n\n---\n\n### jSXOpeningElement\n```javascript\nt.jSXOpeningElement(name, attributes, selfClosing)\n```\n\nSee also `t.isJSXOpeningElement(node, opts)` and `t.assertJSXOpeningElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n - `attributes`: `Array<JSXAttribute | JSXSpreadAttribute>` (required)\n - `selfClosing`: `boolean` (default: `false`)\n\n---\n\n### jSXSpreadAttribute\n```javascript\nt.jSXSpreadAttribute(argument)\n```\n\nSee also `t.isJSXSpreadAttribute(node, opts)` and `t.assertJSXSpreadAttribute(node, opts)`.\n\nAliases: `JSX`\n\n - `argument`: `Expression` (required)\n\n---\n\n### jSXSpreadChild\n```javascript\nt.jSXSpreadChild(expression)\n```\n\nSee also `t.isJSXSpreadChild(node, opts)` and `t.assertJSXSpreadChild(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXText\n```javascript\nt.jSXText(value)\n```\n\nSee also `t.isJSXText(node, opts)` and `t.assertJSXText(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### labeledStatement\n```javascript\nt.labeledStatement(label, body)\n```\n\nSee also `t.isLabeledStatement(node, opts)` and `t.assertLabeledStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `label`: `Identifier` (required)\n - `body`: `Statement` (required)\n\n---\n\n### logicalExpression\n```javascript\nt.logicalExpression(operator, left, right)\n```\n\nSee also `t.isLogicalExpression(node, opts)` and `t.assertLogicalExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'||' | '&&'` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### memberExpression\n```javascript\nt.memberExpression(object, property, computed)\n```\n\nSee also `t.isMemberExpression(node, opts)` and `t.assertMemberExpression(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `object`: `Expression` (required)\n - `property`if computed then `Expression` else `Identifier` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### metaProperty\n```javascript\nt.metaProperty(meta, property)\n```\n\nSee also `t.isMetaProperty(node, opts)` and `t.assertMetaProperty(node, opts)`.\n\nAliases: `Expression`\n\n - `meta`: `string` (required)\n - `property`: `string` (required)\n\n---\n\n### mixedTypeAnnotation\n```javascript\nt.mixedTypeAnnotation()\n```\n\nSee also `t.isMixedTypeAnnotation(node, opts)` and `t.assertMixedTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### newExpression\n```javascript\nt.newExpression(callee, arguments)\n```\n\nSee also `t.isNewExpression(node, opts)` and `t.assertNewExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### noop\n```javascript\nt.noop()\n```\n\nSee also `t.isNoop(node, opts)` and `t.assertNoop(node, opts)`.\n\n\n---\n\n### nullLiteral\n```javascript\nt.nullLiteral()\n```\n\nSee also `t.isNullLiteral(node, opts)` and `t.assertNullLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n\n---\n\n### nullLiteralTypeAnnotation\n```javascript\nt.nullLiteralTypeAnnotation()\n```\n\nSee also `t.isNullLiteralTypeAnnotation(node, opts)` and `t.assertNullLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### nullableTypeAnnotation\n```javascript\nt.nullableTypeAnnotation(typeAnnotation)\n```\n\nSee also `t.isNullableTypeAnnotation(node, opts)` and `t.assertNullableTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### numberTypeAnnotation\n```javascript\nt.numberTypeAnnotation()\n```\n\nSee also `t.isNumberTypeAnnotation(node, opts)` and `t.assertNumberTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### numericLiteral\n```javascript\nt.numericLiteral(value)\n```\n\nSee also `t.isNumericLiteral(node, opts)` and `t.assertNumericLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `number` (required)\n\n---\n\n### numericLiteralTypeAnnotation\n```javascript\nt.numericLiteralTypeAnnotation()\n```\n\nSee also `t.isNumericLiteralTypeAnnotation(node, opts)` and `t.assertNumericLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### objectExpression\n```javascript\nt.objectExpression(properties)\n```\n\nSee also `t.isObjectExpression(node, opts)` and `t.assertObjectExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `properties`: `Array<ObjectMethod | ObjectProperty | SpreadProperty>` (required)\n\n---\n\n### objectMethod\n```javascript\nt.objectMethod(kind, key, params, body, computed)\n```\n\nSee also `t.isObjectMethod(node, opts)` and `t.assertObjectMethod(node, opts)`.\n\nAliases: `UserWhitespacable`, `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`, `ObjectMember`\n\n - `kind`: `\"method\" | \"get\" | \"set\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### objectPattern\n```javascript\nt.objectPattern(properties, typeAnnotation)\n```\n\nSee also `t.isObjectPattern(node, opts)` and `t.assertObjectPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `properties`: `Array<RestProperty | Property>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectProperty\n```javascript\nt.objectProperty(key, value, computed, shorthand, decorators)\n```\n\nSee also `t.isObjectProperty(node, opts)` and `t.assertObjectProperty(node, opts)`.\n\nAliases: `UserWhitespacable`, `Property`, `ObjectMember`\n\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `value`: `Expression | Pattern | RestElement` (required)\n - `computed`: `boolean` (default: `false`)\n - `shorthand`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectTypeAnnotation\n```javascript\nt.objectTypeAnnotation(properties, indexers, callProperties)\n```\n\nSee also `t.isObjectTypeAnnotation(node, opts)` and `t.assertObjectTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `properties` (required)\n - `indexers` (required)\n - `callProperties` (required)\n\n---\n\n### objectTypeCallProperty\n```javascript\nt.objectTypeCallProperty(value)\n```\n\nSee also `t.isObjectTypeCallProperty(node, opts)` and `t.assertObjectTypeCallProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `value` (required)\n\n---\n\n### objectTypeIndexer\n```javascript\nt.objectTypeIndexer(id, key, value)\n```\n\nSee also `t.isObjectTypeIndexer(node, opts)` and `t.assertObjectTypeIndexer(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `id` (required)\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeProperty\n```javascript\nt.objectTypeProperty(key, value)\n```\n\nSee also `t.isObjectTypeProperty(node, opts)` and `t.assertObjectTypeProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeSpreadProperty\n```javascript\nt.objectTypeSpreadProperty(argument)\n```\n\nSee also `t.isObjectTypeSpreadProperty(node, opts)` and `t.assertObjectTypeSpreadProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `argument` (required)\n\n---\n\n### parenthesizedExpression\n```javascript\nt.parenthesizedExpression(expression)\n```\n\nSee also `t.isParenthesizedExpression(node, opts)` and `t.assertParenthesizedExpression(node, opts)`.\n\nAliases: `Expression`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### program\n```javascript\nt.program(body, directives)\n```\n\nSee also `t.isProgram(node, opts)` and `t.assertProgram(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `FunctionParent`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### qualifiedTypeIdentifier\n```javascript\nt.qualifiedTypeIdentifier(id, qualification)\n```\n\nSee also `t.isQualifiedTypeIdentifier(node, opts)` and `t.assertQualifiedTypeIdentifier(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `qualification` (required)\n\n---\n\n### regExpLiteral\n```javascript\nt.regExpLiteral(pattern, flags)\n```\n\nSee also `t.isRegExpLiteral(node, opts)` and `t.assertRegExpLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `pattern`: `string` (required)\n - `flags`: `string` (default: `''`)\n\n---\n\n### restElement\n```javascript\nt.restElement(argument, typeAnnotation)\n```\n\nSee also `t.isRestElement(node, opts)` and `t.assertRestElement(node, opts)`.\n\nAliases: `LVal`\n\n - `argument`: `LVal` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### restProperty\n```javascript\nt.restProperty(argument)\n```\n\nSee also `t.isRestProperty(node, opts)` and `t.assertRestProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `LVal` (required)\n\n---\n\n### returnStatement\n```javascript\nt.returnStatement(argument)\n```\n\nSee also `t.isReturnStatement(node, opts)` and `t.assertReturnStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (default: `null`)\n\n---\n\n### sequenceExpression\n```javascript\nt.sequenceExpression(expressions)\n```\n\nSee also `t.isSequenceExpression(node, opts)` and `t.assertSequenceExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### spreadElement\n```javascript\nt.spreadElement(argument)\n```\n\nSee also `t.isSpreadElement(node, opts)` and `t.assertSpreadElement(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### spreadProperty\n```javascript\nt.spreadProperty(argument)\n```\n\nSee also `t.isSpreadProperty(node, opts)` and `t.assertSpreadProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### stringLiteral\n```javascript\nt.stringLiteral(value)\n```\n\nSee also `t.isStringLiteral(node, opts)` and `t.assertStringLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### stringLiteralTypeAnnotation\n```javascript\nt.stringLiteralTypeAnnotation()\n```\n\nSee also `t.isStringLiteralTypeAnnotation(node, opts)` and `t.assertStringLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### stringTypeAnnotation\n```javascript\nt.stringTypeAnnotation()\n```\n\nSee also `t.isStringTypeAnnotation(node, opts)` and `t.assertStringTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### super\n```javascript\nt.super()\n```\n\nSee also `t.isSuper(node, opts)` and `t.assertSuper(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### switchCase\n```javascript\nt.switchCase(test, consequent)\n```\n\nSee also `t.isSwitchCase(node, opts)` and `t.assertSwitchCase(node, opts)`.\n\n - `test`: `Expression` (default: `null`)\n - `consequent`: `Array<Statement>` (required)\n\n---\n\n### switchStatement\n```javascript\nt.switchStatement(discriminant, cases)\n```\n\nSee also `t.isSwitchStatement(node, opts)` and `t.assertSwitchStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Scopable`\n\n - `discriminant`: `Expression` (required)\n - `cases`: `Array<SwitchCase>` (required)\n\n---\n\n### taggedTemplateExpression\n```javascript\nt.taggedTemplateExpression(tag, quasi)\n```\n\nSee also `t.isTaggedTemplateExpression(node, opts)` and `t.assertTaggedTemplateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `tag`: `Expression` (required)\n - `quasi`: `TemplateLiteral` (required)\n\n---\n\n### templateElement\n```javascript\nt.templateElement(value, tail)\n```\n\nSee also `t.isTemplateElement(node, opts)` and `t.assertTemplateElement(node, opts)`.\n\n - `value` (required)\n - `tail`: `boolean` (default: `false`)\n\n---\n\n### templateLiteral\n```javascript\nt.templateLiteral(quasis, expressions)\n```\n\nSee also `t.isTemplateLiteral(node, opts)` and `t.assertTemplateLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `quasis`: `Array<TemplateElement>` (required)\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### thisExpression\n```javascript\nt.thisExpression()\n```\n\nSee also `t.isThisExpression(node, opts)` and `t.assertThisExpression(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### thisTypeAnnotation\n```javascript\nt.thisTypeAnnotation()\n```\n\nSee also `t.isThisTypeAnnotation(node, opts)` and `t.assertThisTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### throwStatement\n```javascript\nt.throwStatement(argument)\n```\n\nSee also `t.isThrowStatement(node, opts)` and `t.assertThrowStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (required)\n\n---\n\n### tryStatement\n```javascript\nt.tryStatement(block, handler, finalizer)\n```\n\nSee also `t.isTryStatement(node, opts)` and `t.assertTryStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `block` (required)\n - `handler` (default: `null`)\n - `finalizer`: `BlockStatement` (default: `null`)\n - `body`: `BlockStatement` (default: `null`)\n\n---\n\n### tupleTypeAnnotation\n```javascript\nt.tupleTypeAnnotation(types)\n```\n\nSee also `t.isTupleTypeAnnotation(node, opts)` and `t.assertTupleTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### typeAlias\n```javascript\nt.typeAlias(id, typeParameters, right)\n```\n\nSee also `t.isTypeAlias(node, opts)` and `t.assertTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### typeAnnotation\n```javascript\nt.typeAnnotation(typeAnnotation)\n```\n\nSee also `t.isTypeAnnotation(node, opts)` and `t.assertTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### typeCastExpression\n```javascript\nt.typeCastExpression(expression, typeAnnotation)\n```\n\nSee also `t.isTypeCastExpression(node, opts)` and `t.assertTypeCastExpression(node, opts)`.\n\nAliases: `Flow`, `ExpressionWrapper`, `Expression`\n\n - `expression` (required)\n - `typeAnnotation` (required)\n\n---\n\n### typeParameter\n```javascript\nt.typeParameter(bound)\n```\n\nSee also `t.isTypeParameter(node, opts)` and `t.assertTypeParameter(node, opts)`.\n\nAliases: `Flow`\n\n - `bound` (required)\n\n---\n\n### typeParameterDeclaration\n```javascript\nt.typeParameterDeclaration(params)\n```\n\nSee also `t.isTypeParameterDeclaration(node, opts)` and `t.assertTypeParameterDeclaration(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeParameterInstantiation\n```javascript\nt.typeParameterInstantiation(params)\n```\n\nSee also `t.isTypeParameterInstantiation(node, opts)` and `t.assertTypeParameterInstantiation(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeofTypeAnnotation\n```javascript\nt.typeofTypeAnnotation(argument)\n```\n\nSee also `t.isTypeofTypeAnnotation(node, opts)` and `t.assertTypeofTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `argument` (required)\n\n---\n\n### unaryExpression\n```javascript\nt.unaryExpression(operator, argument, prefix)\n```\n\nSee also `t.isUnaryExpression(node, opts)` and `t.assertUnaryExpression(node, opts)`.\n\nAliases: `UnaryLike`, `Expression`\n\n - `operator`: `'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `true`)\n\n---\n\n### unionTypeAnnotation\n```javascript\nt.unionTypeAnnotation(types)\n```\n\nSee also `t.isUnionTypeAnnotation(node, opts)` and `t.assertUnionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### updateExpression\n```javascript\nt.updateExpression(operator, argument, prefix)\n```\n\nSee also `t.isUpdateExpression(node, opts)` and `t.assertUpdateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `'++' | '--'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `false`)\n\n---\n\n### variableDeclaration\n```javascript\nt.variableDeclaration(kind, declarations)\n```\n\nSee also `t.isVariableDeclaration(node, opts)` and `t.assertVariableDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`\n\n - `kind`: `\"var\" | \"let\" | \"const\"` (required)\n - `declarations`: `Array<VariableDeclarator>` (required)\n\n---\n\n### variableDeclarator\n```javascript\nt.variableDeclarator(id, init)\n```\n\nSee also `t.isVariableDeclarator(node, opts)` and `t.assertVariableDeclarator(node, opts)`.\n\n - `id`: `LVal` (required)\n - `init`: `Expression` (default: `null`)\n\n---\n\n### voidTypeAnnotation\n```javascript\nt.voidTypeAnnotation()\n```\n\nSee also `t.isVoidTypeAnnotation(node, opts)` and `t.assertVoidTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### whileStatement\n```javascript\nt.whileStatement(test, body)\n```\n\nSee also `t.isWhileStatement(node, opts)` and `t.assertWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### withStatement\n```javascript\nt.withStatement(object, body)\n```\n\nSee also `t.isWithStatement(node, opts)` and `t.assertWithStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `object` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### yieldExpression\n```javascript\nt.yieldExpression(argument, delegate)\n```\n\nSee also `t.isYieldExpression(node, opts)` and `t.assertYieldExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (default: `null`)\n - `delegate`: `boolean` (default: `false`)\n\n---\n\n\n<!-- end generated section -->\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "babel-runtime": "^6.22.0",
                    "esutils": "^2.0.2",
                    "lodash": "^4.2.0",
                    "to-fast-properties": "^1.0.1"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-types",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-types"
                },
                "detect-indent": {
                  "_from": "detect-indent@^4.0.0",
                  "_id": "detect-indent@4.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-920GQ1LN9Docts5hnE7jqUdd4gg=",
                  "_location": "/detect-indent",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "detect-indent@^4.0.0",
                    "name": "detect-indent",
                    "escapedName": "detect-indent",
                    "rawSpec": "^4.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^4.0.0"
                  },
                  "_requiredBy": [
                    "/babel-generator"
                  ],
                  "_resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-4.0.0.tgz",
                  "_shasum": "f76d064352cdf43a1cb6ce619c4ee3a9475de208",
                  "_spec": "detect-indent@^4.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-generator",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/detect-indent/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "repeating": {
                      "_from": "repeating@^2.0.0",
                      "_id": "repeating@2.0.1",
                      "_inBundle": false,
                      "_integrity": "sha1-UhTFOpJtNVJwdSf7q0FdvAjQbdo=",
                      "_location": "/repeating",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "repeating@^2.0.0",
                        "name": "repeating",
                        "escapedName": "repeating",
                        "rawSpec": "^2.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^2.0.0"
                      },
                      "_requiredBy": [
                        "/detect-indent"
                      ],
                      "_resolved": "https://registry.npmjs.org/repeating/-/repeating-2.0.1.tgz",
                      "_shasum": "5214c53a926d3552707527fbab415dbc08d06dda",
                      "_spec": "repeating@^2.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/detect-indent",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/repeating/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {
                        "is-finite": {
                          "_from": "is-finite@^1.0.0",
                          "_id": "is-finite@1.0.2",
                          "_inBundle": false,
                          "_integrity": "sha1-zGZ3aVYCvlUO8R6LSqYwU0K20Ko=",
                          "_location": "/is-finite",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "is-finite@^1.0.0",
                            "name": "is-finite",
                            "escapedName": "is-finite",
                            "rawSpec": "^1.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^1.0.0"
                          },
                          "_requiredBy": [
                            "/repeating"
                          ],
                          "_resolved": "https://registry.npmjs.org/is-finite/-/is-finite-1.0.2.tgz",
                          "_shasum": "cc6677695602be550ef11e8b4aa6305342b6d0aa",
                          "_spec": "is-finite@^1.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/repeating",
                          "author": {
                            "name": "Sindre Sorhus",
                            "email": "sindresorhus@gmail.com",
                            "url": "sindresorhus.com"
                          },
                          "bugs": {
                            "url": "https://github.com/sindresorhus/is-finite/issues"
                          },
                          "bundleDependencies": false,
                          "dependencies": {
                            "number-is-nan": {
                              "_from": "number-is-nan@^1.0.0",
                              "_id": "number-is-nan@1.0.1",
                              "_inBundle": false,
                              "_integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",
                              "_location": "/number-is-nan",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "range",
                                "registry": true,
                                "raw": "number-is-nan@^1.0.0",
                                "name": "number-is-nan",
                                "escapedName": "number-is-nan",
                                "rawSpec": "^1.0.0",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "^1.0.0"
                              },
                              "_requiredBy": [
                                "/is-finite"
                              ],
                              "_resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
                              "_shasum": "097b602b53422a522c1afb8790318336941a011d",
                              "_spec": "number-is-nan@^1.0.0",
                              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/is-finite",
                              "author": {
                                "name": "Sindre Sorhus",
                                "email": "sindresorhus@gmail.com",
                                "url": "sindresorhus.com"
                              },
                              "bugs": {
                                "url": "https://github.com/sindresorhus/number-is-nan/issues"
                              },
                              "bundleDependencies": false,
                              "deprecated": false,
                              "description": "ES2015 Number.isNaN() ponyfill",
                              "devDependencies": {
                                "ava": "*"
                              },
                              "engines": {
                                "node": ">=0.10.0"
                              },
                              "files": [
                                "index.js"
                              ],
                              "homepage": "https://github.com/sindresorhus/number-is-nan#readme",
                              "keywords": [
                                "es2015",
                                "ecmascript",
                                "ponyfill",
                                "polyfill",
                                "shim",
                                "number",
                                "is",
                                "nan",
                                "not"
                              ],
                              "license": "MIT",
                              "name": "number-is-nan",
                              "repository": {
                                "type": "git",
                                "url": "git+https://github.com/sindresorhus/number-is-nan.git"
                              },
                              "scripts": {
                                "test": "ava"
                              },
                              "version": "1.0.1",
                              "readme": "# number-is-nan [![Build Status](https://travis-ci.org/sindresorhus/number-is-nan.svg?branch=master)](https://travis-ci.org/sindresorhus/number-is-nan)\n\n> ES2015 [`Number.isNaN()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save number-is-nan\n```\n\n\n## Usage\n\n```js\nvar numberIsNan = require('number-is-nan');\n\nnumberIsNan(NaN);\n//=> true\n\nnumberIsNan('unicorn');\n//=> false\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                              "readmeFilename": "readme.md",
                              "dependencies": {},
                              "optionalDependencies": {},
                              "_dependencies": {},
                              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/number-is-nan",
                              "error": "[Circular]",
                              "extraneous": false
                            }
                          },
                          "deprecated": false,
                          "description": "ES2015 Number.isFinite() ponyfill",
                          "devDependencies": {
                            "ava": "*"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/sindresorhus/is-finite#readme",
                          "keywords": [
                            "es2015",
                            "ponyfill",
                            "polyfill",
                            "shim",
                            "number",
                            "finite",
                            "is"
                          ],
                          "license": "MIT",
                          "name": "is-finite",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/sindresorhus/is-finite.git"
                          },
                          "scripts": {
                            "test": "ava"
                          },
                          "version": "1.0.2",
                          "readme": "# is-finite [![Build Status](https://travis-ci.org/sindresorhus/is-finite.svg?branch=master)](https://travis-ci.org/sindresorhus/is-finite)\n\n> ES2015 [`Number.isFinite()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```sh\n$ npm install --save is-finite\n```\n\n\n## Usage\n\n```js\nvar numIsFinite = require('is-finite');\n\nnumIsFinite(4);\n//=> true\n\nnumIsFinite(Infinity);\n//=> false\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "number-is-nan": "^1.0.0"
                          },
                          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/is-finite",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "deprecated": false,
                      "description": "Repeat a string - fast",
                      "devDependencies": {
                        "ava": "*",
                        "xo": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/repeating#readme",
                      "keywords": [
                        "repeat",
                        "string",
                        "repeating",
                        "str",
                        "text",
                        "fill",
                        "pad"
                      ],
                      "license": "MIT",
                      "name": "repeating",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/repeating.git"
                      },
                      "scripts": {
                        "test": "xo && ava"
                      },
                      "version": "2.0.1",
                      "readme": "# repeating [![Build Status](https://travis-ci.org/sindresorhus/repeating.svg?branch=master)](https://travis-ci.org/sindresorhus/repeating)\n\n> Repeat a string - fast\n\n\n## Install\n\n```\n$ npm install --save repeating\n```\n\n\n## Usage\n\n```js\nconst repeating = require('repeating');\n\nrepeating('unicorn ', 100);\n//=> 'unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn unicorn '\n```\n\n\n## Related\n\n- [repeating-cli](https://github.com/sindresorhus/repeating-cli) - CLI for this module\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "is-finite": "^1.0.0"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/repeating",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Detect the indentation of code",
                  "devDependencies": {
                    "ava": "*",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/detect-indent#readme",
                  "keywords": [
                    "indent",
                    "indentation",
                    "detect",
                    "infer",
                    "identify",
                    "code",
                    "string",
                    "text",
                    "source",
                    "space",
                    "tab"
                  ],
                  "license": "MIT",
                  "name": "detect-indent",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/detect-indent.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "4.0.0",
                  "xo": {
                    "ignores": [
                      "fixture/**"
                    ]
                  },
                  "readme": "# detect-indent [![Build Status](https://travis-ci.org/sindresorhus/detect-indent.svg?branch=master)](https://travis-ci.org/sindresorhus/detect-indent)\n\n> Detect the indentation of code\n\nPass in a string of any kind of text and get the indentation.\n\n\n## Use cases\n\n- Persisting the indentation when modifying a file.\n- Have new content match the existing indentation.\n- Setting the right indentation in your editor.\n\n\n## Install\n\n```\n$ npm install --save detect-indent\n```\n\n\n## Usage\n\nHere we modify a JSON file while persisting the indentation:\n\n```js\nvar fs = require('fs');\nvar detectIndent = require('detect-indent');\n\n/*\n{\n    \"ilove\": \"pizza\"\n}\n*/\nvar file = fs.readFileSync('foo.json', 'utf8');\n\n// tries to detect the indentation and falls back to a default if it can't\nvar indent = detectIndent(file).indent || '    ';\n\nvar json = JSON.parse(file);\n\njson.ilove = 'unicorns';\n\nfs.writeFileSync('foo.json', JSON.stringify(json, null, indent));\n/*\n{\n    \"ilove\": \"unicorns\"\n}\n*/\n```\n\n\n## API\n\nAccepts a string and returns an object with stats about the indentation:  \n\n* `amount` {number} - Amount of indentation, e.g. `2`  \n* `type` {string|null} - Type of indentation. Possible values are `tab`, `space` or `null` if no indentation is detected  \n* `indent`   {string} - Actual indentation\n\n\n## Algorithm\n\nThe current algorithm looks for the most common difference between two consecutive non-empty lines.\n\nIn the following example, even if the 4-space indentation is used 3 times whereas the 2-space one is used 2 times, it is detected as less used because there were only 2 differences with this value instead of 4 for the 2-space indentation:\n\n```css\nhtml {\n  box-sizing: border-box;\n}\n\nbody {\n  background: gray;\n}\n\np {\n    line-height: 1.3em;\n    margin-top: 1em;\n    text-indent: 2em;\n}\n```\n\n[Source.](https://medium.com/@heatherarthur/detecting-code-indentation-eff3ed0fb56b#3918)\n\nFurthermore, if there are more than one most used difference, the indentation with the most lines is selected.\n\nIn the following example, the indentation is detected as 4-spaces:\n\n```css\nbody {\n  background: gray;\n}\n\np {\n    line-height: 1.3em;\n    margin-top: 1em;\n    text-indent: 2em;\n}\n```\n\n\n## Related\n\n- [detect-indent-cli](https://github.com/sindresorhus/detect-indent-cli) - CLI for this module\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "repeating": "^2.0.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/detect-indent",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "jsesc": {
                  "_from": "jsesc@^1.3.0",
                  "_id": "jsesc@1.3.0",
                  "_inBundle": false,
                  "_integrity": "sha1-RsP+yMGJKxKwgz25vHYiF226s0s=",
                  "_location": "/jsesc",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "jsesc@^1.3.0",
                    "name": "jsesc",
                    "escapedName": "jsesc",
                    "rawSpec": "^1.3.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.3.0"
                  },
                  "_requiredBy": [
                    "/babel-generator"
                  ],
                  "_resolved": "https://registry.npmjs.org/jsesc/-/jsesc-1.3.0.tgz",
                  "_shasum": "46c3fec8c1892b12b0833db9bc7622176dbab34b",
                  "_spec": "jsesc@^1.3.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-generator",
                  "author": {
                    "name": "Mathias Bynens",
                    "url": "https://mathiasbynens.be/"
                  },
                  "bin": {
                    "jsesc": "bin/jsesc"
                  },
                  "bugs": {
                    "url": "https://github.com/mathiasbynens/jsesc/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "A JavaScript library for escaping JavaScript strings while generating the shortest possible valid output.",
                  "devDependencies": {
                    "coveralls": "^2.11.6",
                    "grunt": "^0.4.5",
                    "grunt-shell": "^1.1.2",
                    "grunt-template": "^0.2.3",
                    "istanbul": "^0.4.2",
                    "qunit-extras": "^1.4.5",
                    "qunitjs": "~1.11.0",
                    "regenerate": "^1.2.1",
                    "requirejs": "^2.1.22"
                  },
                  "files": [
                    "LICENSE-MIT.txt",
                    "jsesc.js",
                    "bin/",
                    "man/"
                  ],
                  "homepage": "https://mths.be/jsesc",
                  "keywords": [
                    "string",
                    "escape",
                    "javascript",
                    "tool"
                  ],
                  "license": "MIT",
                  "main": "jsesc.js",
                  "man": [
                    "man/jsesc.1"
                  ],
                  "name": "jsesc",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/mathiasbynens/jsesc.git"
                  },
                  "scripts": {
                    "build": "grunt template",
                    "test": "node tests/tests.js"
                  },
                  "version": "1.3.0",
                  "readme": "ERROR: No README data found!",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/jsesc",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "lodash": {
                  "_from": "lodash@^4.2.0",
                  "_id": "lodash@4.17.4",
                  "_inBundle": false,
                  "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
                  "_location": "/lodash",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "lodash@^4.2.0",
                    "name": "lodash",
                    "escapedName": "lodash",
                    "rawSpec": "^4.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^4.2.0"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-generator",
                    "/babel-register",
                    "/babel-template",
                    "/babel-traverse",
                    "/babel-types"
                  ],
                  "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
                  "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
                  "_spec": "lodash@^4.2.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": {
                    "name": "John-David Dalton",
                    "email": "john.david.dalton@gmail.com",
                    "url": "http://allyoucanleet.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/lodash/lodash/issues"
                  },
                  "bundleDependencies": false,
                  "contributors": [
                    {
                      "name": "John-David Dalton",
                      "email": "john.david.dalton@gmail.com",
                      "url": "http://allyoucanleet.com/"
                    },
                    {
                      "name": "Mathias Bynens",
                      "email": "mathias@qiwi.be",
                      "url": "https://mathiasbynens.be/"
                    }
                  ],
                  "deprecated": false,
                  "description": "Lodash modular utilities.",
                  "homepage": "https://lodash.com/",
                  "icon": "https://lodash.com/icon.svg",
                  "keywords": [
                    "modules",
                    "stdlib",
                    "util"
                  ],
                  "license": "MIT",
                  "main": "lodash.js",
                  "name": "lodash",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/lodash/lodash.git"
                  },
                  "scripts": {
                    "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
                  },
                  "version": "4.17.4",
                  "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "devDependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/lodash",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "lodash"
                },
                "source-map": {
                  "_from": "source-map@^0.5.0",
                  "_id": "source-map@0.5.6",
                  "_inBundle": false,
                  "_integrity": "sha1-dc449SvwczxafwwRjYEzSiu19BI=",
                  "_location": "/source-map",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "source-map@^0.5.0",
                    "name": "source-map",
                    "escapedName": "source-map",
                    "rawSpec": "^0.5.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^0.5.0"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-generator",
                    "/source-map-support"
                  ],
                  "_resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.6.tgz",
                  "_shasum": "75ce38f52bf0733c5a7f0c118d81334a2bb5f412",
                  "_spec": "source-map@^0.5.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": {
                    "name": "Nick Fitzgerald",
                    "email": "nfitzgerald@mozilla.com"
                  },
                  "bugs": {
                    "url": "https://github.com/mozilla/source-map/issues"
                  },
                  "bundleDependencies": false,
                  "contributors": [
                    {
                      "name": "Tobias Koppers",
                      "email": "tobias.koppers@googlemail.com"
                    },
                    {
                      "name": "Duncan Beevers",
                      "email": "duncan@dweebd.com"
                    },
                    {
                      "name": "Stephen Crane",
                      "email": "scrane@mozilla.com"
                    },
                    {
                      "name": "Ryan Seddon",
                      "email": "seddon.ryan@gmail.com"
                    },
                    {
                      "name": "Miles Elam",
                      "email": "miles.elam@deem.com"
                    },
                    {
                      "name": "Mihai Bazon",
                      "email": "mihai.bazon@gmail.com"
                    },
                    {
                      "name": "Michael Ficarra",
                      "email": "github.public.email@michael.ficarra.me"
                    },
                    {
                      "name": "Todd Wolfson",
                      "email": "todd@twolfson.com"
                    },
                    {
                      "name": "Alexander Solovyov",
                      "email": "alexander@solovyov.net"
                    },
                    {
                      "name": "Felix Gnass",
                      "email": "fgnass@gmail.com"
                    },
                    {
                      "name": "Conrad Irwin",
                      "email": "conrad.irwin@gmail.com"
                    },
                    {
                      "name": "usrbincc",
                      "email": "usrbincc@yahoo.com"
                    },
                    {
                      "name": "David Glasser",
                      "email": "glasser@davidglasser.net"
                    },
                    {
                      "name": "Chase Douglas",
                      "email": "chase@newrelic.com"
                    },
                    {
                      "name": "Evan Wallace",
                      "email": "evan.exe@gmail.com"
                    },
                    {
                      "name": "Heather Arthur",
                      "email": "fayearthur@gmail.com"
                    },
                    {
                      "name": "Hugh Kennedy",
                      "email": "hughskennedy@gmail.com"
                    },
                    {
                      "name": "David Glasser",
                      "email": "glasser@davidglasser.net"
                    },
                    {
                      "name": "Simon Lydell",
                      "email": "simon.lydell@gmail.com"
                    },
                    {
                      "name": "Jmeas Smith",
                      "email": "jellyes2@gmail.com"
                    },
                    {
                      "name": "Michael Z Goddard",
                      "email": "mzgoddard@gmail.com"
                    },
                    {
                      "name": "azu",
                      "email": "azu@users.noreply.github.com"
                    },
                    {
                      "name": "John Gozde",
                      "email": "john@gozde.ca"
                    },
                    {
                      "name": "Adam Kirkton",
                      "email": "akirkton@truefitinnovation.com"
                    },
                    {
                      "name": "Chris Montgomery",
                      "email": "christopher.montgomery@dowjones.com"
                    },
                    {
                      "name": "J. Ryan Stinnett",
                      "email": "jryans@gmail.com"
                    },
                    {
                      "name": "Jack Herrington",
                      "email": "jherrington@walmartlabs.com"
                    },
                    {
                      "name": "Chris Truter",
                      "email": "jeffpalentine@gmail.com"
                    },
                    {
                      "name": "Daniel Espeset",
                      "email": "daniel@danielespeset.com"
                    },
                    {
                      "name": "Jamie Wong",
                      "email": "jamie.lf.wong@gmail.com"
                    },
                    {
                      "name": "Eddy Bruël",
                      "email": "ejpbruel@mozilla.com"
                    },
                    {
                      "name": "Hawken Rives",
                      "email": "hawkrives@gmail.com"
                    },
                    {
                      "name": "Gilad Peleg",
                      "email": "giladp007@gmail.com"
                    },
                    {
                      "name": "djchie",
                      "email": "djchie.dev@gmail.com"
                    },
                    {
                      "name": "Gary Ye",
                      "email": "garysye@gmail.com"
                    },
                    {
                      "name": "Nicolas Lalevée",
                      "email": "nicolas.lalevee@hibnet.org"
                    }
                  ],
                  "deprecated": false,
                  "description": "Generates and consumes source maps",
                  "devDependencies": {
                    "doctoc": "^0.15.0",
                    "webpack": "^1.12.0"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "source-map.js",
                    "lib/",
                    "dist/source-map.debug.js",
                    "dist/source-map.js",
                    "dist/source-map.min.js",
                    "dist/source-map.min.js.map"
                  ],
                  "homepage": "https://github.com/mozilla/source-map",
                  "license": "BSD-3-Clause",
                  "main": "./source-map.js",
                  "name": "source-map",
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/mozilla/source-map.git"
                  },
                  "scripts": {
                    "build": "webpack --color",
                    "test": "npm run build && node test/run-tests.js",
                    "toc": "doctoc --title '## Table of Contents' README.md && doctoc --title '## Table of Contents' CONTRIBUTING.md"
                  },
                  "version": "0.5.6",
                  "readme": "# Source Map\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\n[![NPM](https://nodei.co/npm/source-map.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/source-map)\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n\n## Use with Node\n\n    $ npm install source-map\n\n## Use on the Web\n\n    <script src=\"https://raw.githubusercontent.com/mozilla/source-map/master/dist/source-map.min.js\" defer></script>\n\n--------------------------------------------------------------------------------\n\n<!-- `npm run toc` to regenerate the Table of Contents -->\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Examples](#examples)\n  - [Consuming a source map](#consuming-a-source-map)\n  - [Generating a source map](#generating-a-source-map)\n    - [With SourceNode (high level API)](#with-sourcenode-high-level-api)\n    - [With SourceMapGenerator (low level API)](#with-sourcemapgenerator-low-level-api)\n- [API](#api)\n  - [SourceMapConsumer](#sourcemapconsumer)\n    - [new SourceMapConsumer(rawSourceMap)](#new-sourcemapconsumerrawsourcemap)\n    - [SourceMapConsumer.prototype.computeColumnSpans()](#sourcemapconsumerprototypecomputecolumnspans)\n    - [SourceMapConsumer.prototype.originalPositionFor(generatedPosition)](#sourcemapconsumerprototypeoriginalpositionforgeneratedposition)\n    - [SourceMapConsumer.prototype.generatedPositionFor(originalPosition)](#sourcemapconsumerprototypegeneratedpositionfororiginalposition)\n    - [SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)](#sourcemapconsumerprototypeallgeneratedpositionsfororiginalposition)\n    - [SourceMapConsumer.prototype.hasContentsOfAllSources()](#sourcemapconsumerprototypehascontentsofallsources)\n    - [SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])](#sourcemapconsumerprototypesourcecontentforsource-returnnullonmissing)\n    - [SourceMapConsumer.prototype.eachMapping(callback, context, order)](#sourcemapconsumerprototypeeachmappingcallback-context-order)\n  - [SourceMapGenerator](#sourcemapgenerator)\n    - [new SourceMapGenerator([startOfSourceMap])](#new-sourcemapgeneratorstartofsourcemap)\n    - [SourceMapGenerator.fromSourceMap(sourceMapConsumer)](#sourcemapgeneratorfromsourcemapsourcemapconsumer)\n    - [SourceMapGenerator.prototype.addMapping(mapping)](#sourcemapgeneratorprototypeaddmappingmapping)\n    - [SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)](#sourcemapgeneratorprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])](#sourcemapgeneratorprototypeapplysourcemapsourcemapconsumer-sourcefile-sourcemappath)\n    - [SourceMapGenerator.prototype.toString()](#sourcemapgeneratorprototypetostring)\n  - [SourceNode](#sourcenode)\n    - [new SourceNode([line, column, source[, chunk[, name]]])](#new-sourcenodeline-column-source-chunk-name)\n    - [SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])](#sourcenodefromstringwithsourcemapcode-sourcemapconsumer-relativepath)\n    - [SourceNode.prototype.add(chunk)](#sourcenodeprototypeaddchunk)\n    - [SourceNode.prototype.prepend(chunk)](#sourcenodeprototypeprependchunk)\n    - [SourceNode.prototype.setSourceContent(sourceFile, sourceContent)](#sourcenodeprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceNode.prototype.walk(fn)](#sourcenodeprototypewalkfn)\n    - [SourceNode.prototype.walkSourceContents(fn)](#sourcenodeprototypewalksourcecontentsfn)\n    - [SourceNode.prototype.join(sep)](#sourcenodeprototypejoinsep)\n    - [SourceNode.prototype.replaceRight(pattern, replacement)](#sourcenodeprototypereplacerightpattern-replacement)\n    - [SourceNode.prototype.toString()](#sourcenodeprototypetostring)\n    - [SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])](#sourcenodeprototypetostringwithsourcemapstartofsourcemap)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Examples\n\n### Consuming a source map\n\n```js\nvar rawSourceMap = {\n  version: 3,\n  file: 'min.js',\n  names: ['bar', 'baz', 'n'],\n  sources: ['one.js', 'two.js'],\n  sourceRoot: 'http://example.com/www/js/',\n  mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n};\n\nvar smc = new SourceMapConsumer(rawSourceMap);\n\nconsole.log(smc.sources);\n// [ 'http://example.com/www/js/one.js',\n//   'http://example.com/www/js/two.js' ]\n\nconsole.log(smc.originalPositionFor({\n  line: 2,\n  column: 28\n}));\n// { source: 'http://example.com/www/js/two.js',\n//   line: 2,\n//   column: 10,\n//   name: 'n' }\n\nconsole.log(smc.generatedPositionFor({\n  source: 'http://example.com/www/js/two.js',\n  line: 2,\n  column: 10\n}));\n// { line: 2, column: 28 }\n\nsmc.eachMapping(function (m) {\n  // ...\n});\n```\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n```js\nfunction compile(ast) {\n  switch (ast.type) {\n  case 'BinaryExpression':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      [compile(ast.left), \" + \", compile(ast.right)]\n    );\n  case 'Literal':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      String(ast.value)\n    );\n  // ...\n  default:\n    throw new Error(\"Bad AST\");\n  }\n}\n\nvar ast = parse(\"40 + 2\", \"add.js\");\nconsole.log(compile(ast).toStringWithSourceMap({\n  file: 'add.js'\n}));\n// { code: '40 + 2',\n//   map: [object SourceMapGenerator] }\n```\n\n#### With SourceMapGenerator (low level API)\n\n```js\nvar map = new SourceMapGenerator({\n  file: \"source-mapped.js\"\n});\n\nmap.addMapping({\n  generated: {\n    line: 10,\n    column: 35\n  },\n  source: \"foo.js\",\n  original: {\n    line: 33,\n    column: 2\n  },\n  name: \"christopher\"\n});\n\nconsole.log(map.toString());\n// '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n```\n\n## API\n\nGet a reference to the module:\n\n```js\n// Node.js\nvar sourceMap = require('source-map');\n\n// Browser builds\nvar sourceMap = window.sourceMap;\n\n// Inside Firefox\nconst sourceMap = require(\"devtools/toolkit/sourcemap/source-map.js\");\n```\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n```js\nvar consumer = new sourceMap.SourceMapConsumer(rawSourceMapJsonData);\n```\n\n#### SourceMapConsumer.prototype.computeColumnSpans()\n\nCompute the last column for each generated mapping. The last column is\ninclusive.\n\n```js\n// Before:\nconsumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n\nconsumer.computeColumnSpans();\n\n// After:\nconsumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1,\n//     lastColumn: 9 },\n//   { line: 2,\n//     column: 10,\n//     lastColumn: 19 },\n//   { line: 2,\n//     column: 20,\n//     lastColumn: Infinity } ]\n\n```\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\n* `bias`: Either `SourceMapConsumer.GREATEST_LOWER_BOUND` or\n  `SourceMapConsumer.LEAST_UPPER_BOUND`. Specifies whether to return the closest\n  element that is smaller than or greater than the one we are searching for,\n  respectively, if the exact element cannot be found.  Defaults to\n  `SourceMapConsumer.GREATEST_LOWER_BOUND`.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n```js\nconsumer.originalPositionFor({ line: 2, column: 10 })\n// { source: 'foo.coffee',\n//   line: 2,\n//   column: 2,\n//   name: null }\n\nconsumer.originalPositionFor({ line: 99999999999999999, column: 999999999999999 })\n// { source: null,\n//   line: null,\n//   column: null,\n//   name: null }\n```\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.generatedPositionFor({ source: \"example.js\", line: 2, column: 10 })\n// { line: 1,\n//   column: 56 }\n```\n\n#### SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)\n\nReturns all generated line and column information for the original source, line,\nand column provided. If no column is provided, returns all mappings\ncorresponding to a either the line we are searching for or the next closest line\nthat has any mappings. Otherwise, returns all mappings corresponding to the\ngiven line and either the column we are searching for or the next closest column\nthat has any offsets.\n\nThe only argument is an object with the following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: Optional. The column number in the original source.\n\nand an array of objects is returned, each with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.allGeneratedpositionsfor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n```\n\n#### SourceMapConsumer.prototype.hasContentsOfAllSources()\n\nReturn true if we have the embedded source content for every source listed in\nthe source map, false otherwise.\n\nIn other words, if this method returns `true`, then\n`consumer.sourceContentFor(s)` will succeed for every source `s` in\n`consumer.sources`.\n\n```js\n// ...\nif (consumer.hasContentsOfAllSources()) {\n  consumerReadyCallback(consumer);\n} else {\n  fetchSources(consumer, consumerReadyCallback);\n}\n// ...\n```\n\n#### SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\nIf the source content for the given source is not found, then an error is\nthrown. Optionally, pass `true` as the second param to have `null` returned\ninstead.\n\n```js\nconsumer.sources\n// [ \"my-cool-lib.clj\" ]\n\nconsumer.sourceContentFor(\"my-cool-lib.clj\")\n// \"...\"\n\nconsumer.sourceContentFor(\"this is not in the source map\");\n// Error: \"this is not in the source map\" is not in the source map\n\nconsumer.sourceContentFor(\"this is not in the source map\", true);\n// null\n```\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n```js\nconsumer.eachMapping(function (m) { console.log(m); })\n// ...\n// { source: 'illmatic.js',\n//   generatedLine: 1,\n//   generatedColumn: 0,\n//   originalLine: 1,\n//   originalColumn: 0,\n//   name: null }\n// { source: 'illmatic.js',\n//   generatedLine: 2,\n//   generatedColumn: 0,\n//   originalLine: 2,\n//   originalColumn: 0,\n//   name: null }\n// ...\n```\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n* `skipValidation`: Optional. When `true`, disables validation of mappings as\n  they are added. This can improve performance but should be used with\n  discretion, as a last resort. Even then, one should avoid using this flag when\n  running tests, if possible.\n\n```js\nvar generator = new sourceMap.SourceMapGenerator({\n  file: \"my-generated-javascript-file.js\",\n  sourceRoot: \"http://example.com/app/js/\"\n});\n```\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new `SourceMapGenerator` from an existing `SourceMapConsumer` instance.\n\n* `sourceMapConsumer` The SourceMap.\n\n```js\nvar generator = sourceMap.SourceMapGenerator.fromSourceMap(consumer);\n```\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n```js\ngenerator.addMapping({\n  source: \"module-one.scm\",\n  original: { line: 128, column: 0 },\n  generated: { line: 3, column: 456 }\n})\n```\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n```js\ngenerator.setSourceContent(\"module-one.scm\",\n                           fs.readFileSync(\"path/to/module-one.scm\"))\n```\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimum of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren't in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `'.'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n```js\ngenerator.toString()\n// '{\"version\":3,\"sources\":[\"module-one.scm\"],\"names\":[],\"mappings\":\"...snip...\",\"file\":\"my-generated-javascript-file.js\",\"sourceRoot\":\"http://example.com/app/js/\"}'\n```\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n```js\nvar node = new SourceNode(1, 2, \"a.cpp\", [\n  new SourceNode(3, 4, \"b.cpp\", \"extern int status;\\n\"),\n  new SourceNode(5, 6, \"c.cpp\", \"std::string* make_string(size_t n);\\n\"),\n  new SourceNode(7, 8, \"d.cpp\", \"int main(int argc, char** argv) {}\\n\"),\n]);\n```\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n* `relativePath` The optional path that relative sources in `sourceMapConsumer`\n  should be relative to.\n\n```js\nvar consumer = new SourceMapConsumer(fs.readFileSync(\"path/to/my-file.js.map\"));\nvar node = SourceNode.fromStringWithSourceMap(fs.readFileSync(\"path/to/my-file.js\"),\n                                              consumer);\n```\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.add(\" + \");\nnode.add(otherNode);\nnode.add([leftHandOperandNode, \" + \", rightHandOperandNode]);\n```\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.prepend(\"/** Build Id: f783haef86324gf **/\\n\\n\");\n```\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n```js\nnode.setSourceContent(\"module-one.scm\",\n                      fs.readFileSync(\"path/to/module-one.scm\"))\n```\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.walk(function (code, loc) { console.log(\"WALK:\", code, loc); })\n// WALK: uno { source: 'b.js', line: 3, column: 4, name: null }\n// WALK: dos { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: tres { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: quatro { source: 'c.js', line: 5, column: 6, name: null }\n```\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n```js\nvar a = new SourceNode(1, 2, \"a.js\", \"generated from a\");\na.setSourceContent(\"a.js\", \"original a\");\nvar b = new SourceNode(1, 2, \"b.js\", \"generated from b\");\nb.setSourceContent(\"b.js\", \"original b\");\nvar c = new SourceNode(1, 2, \"c.js\", \"generated from c\");\nc.setSourceContent(\"c.js\", \"original c\");\n\nvar node = new SourceNode(null, null, null, [a, b, c]);\nnode.walkSourceContents(function (source, contents) { console.log(\"WALK:\", source, \":\", contents); })\n// WALK: a.js : original a\n// WALK: b.js : original b\n// WALK: c.js : original c\n```\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n```js\nvar lhs = new SourceNode(1, 2, \"a.rs\", \"my_copy\");\nvar operand = new SourceNode(3, 4, \"a.rs\", \"=\");\nvar rhs = new SourceNode(5, 6, \"a.rs\", \"orig.clone()\");\n\nvar node = new SourceNode(null, null, null, [ lhs, operand, rhs ]);\nvar joinedNode = node.join(\" \");\n```\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming white space from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n```js\n// Trim trailing white space.\nnode.replaceRight(/\\s*$/, \"\");\n```\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.toString()\n// 'unodostresquatro'\n```\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.toStringWithSourceMap({ file: \"my-output-file.js\" })\n// { code: 'unodostresquatro',\n//   map: [object SourceMapGenerator] }\n```\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/source-map",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "source-map"
                },
                "trim-right": {
                  "_from": "trim-right@^1.0.1",
                  "_id": "trim-right@1.0.1",
                  "_inBundle": false,
                  "_integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM=",
                  "_location": "/trim-right",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "trim-right@^1.0.1",
                    "name": "trim-right",
                    "escapedName": "trim-right",
                    "rawSpec": "^1.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.0.1"
                  },
                  "_requiredBy": [
                    "/babel-generator"
                  ],
                  "_resolved": "https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz",
                  "_shasum": "cb2e1203067e0c8de1f614094b9fe45704ea6003",
                  "_spec": "trim-right@^1.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-generator",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/trim-right/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Similar to String#trim() but removes only whitespace on the right",
                  "devDependencies": {
                    "ava": "0.0.4"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/trim-right#readme",
                  "keywords": [
                    "trim",
                    "right",
                    "string",
                    "str",
                    "util",
                    "utils",
                    "utility",
                    "whitespace",
                    "space",
                    "remove",
                    "delete"
                  ],
                  "license": "MIT",
                  "name": "trim-right",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/trim-right.git"
                  },
                  "scripts": {
                    "test": "node test.js"
                  },
                  "version": "1.0.1",
                  "readme": "# trim-right [![Build Status](https://travis-ci.org/sindresorhus/trim-right.svg?branch=master)](https://travis-ci.org/sindresorhus/trim-right)\n\n> Similar to [`String#trim()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim) but removes only whitespace on the right\n\n\n## Install\n\n```\n$ npm install --save trim-right\n```\n\n\n## Usage\n\n```js\nvar trimRight = require('trim-right');\n\ntrimRight('  unicorn  ');\n//=> '  unicorn'\n```\n\n\n## Related\n\n- [`trim-left`](https://github.com/sindresorhus/trim-left) - Similar to `String#trim()` but removes only whitespace on the left\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/trim-right",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Turns an AST into code.",
              "devDependencies": {
                "babel-helper-fixtures": "^6.22.0",
                "babylon": "^6.17.2"
              },
              "files": [
                "lib"
              ],
              "homepage": "https://babeljs.io/",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babel-generator",
              "repository": {
                "type": "git",
                "url": "https://github.com/babel/babel/tree/master/packages/babel-generator"
              },
              "version": "6.25.0",
              "readme": "# babel-generator\n\n> Turns an AST into code.\n\n## Install\n\n```sh\nnpm install --save-dev babel-generator\n```\n\n## Usage\n\n```js\nimport {parse} from 'babylon';\nimport generate from 'babel-generator';\n\nconst code = 'class Example {}';\nconst ast = parse(code);\n\nconst output = generate(ast, { /* options */ }, code);\n```\n\n## Options\n\nOptions for formatting output:\n\nname                   | type     | default         | description\n-----------------------|----------|-----------------|--------------------------------------------------------------------------\nauxiliaryCommentBefore | string   |                 | Optional string to add as a block comment at the start of the output file\nauxiliaryCommentAfter  | string   |                 | Optional string to add as a block comment at the end of the output file\nshouldPrintComment     | function | `opts.comments` | Function that takes a comment (as a string) and returns `true` if the comment should be included in the output.  By default, comments are included if `opts.comments` is `true` or if `opts.minifed` is `false` and the comment contains `@preserve` or `@license`\nretainLines            | boolean  | `false`         | Attempt to use the same line numbers in the output code as in the source code (helps preserve stack traces)\nretainFunctionParens   | boolean  | `false`         | Retain parens around function expressions (could be used to change engine parsing behavior)\ncomments               | boolean  | `true`          | Should comments be included in output\ncompact                | boolean or `'auto'` | `opts.minified` | Set to `true` to avoid adding whitespace for formatting\nminified               | boolean  | `false`         | Should the output be minified\nconcise                | boolean  | `false`         | Set to `true` to reduce whitespace (but not as much as `opts.compact`)\nquotes                 | `'single'` or `'double'` | autodetect based on `ast.tokens` | The type of quote to use in the output\nfilename               | string   |                 | Used in warning messages\nflowCommaSeparator     | boolean  | `false`         | Set to `true` to use commas instead of semicolons as Flow property separators\njsonCompatibleStrings  | boolean  | `false`         | Set to true to run `jsesc` with \"json\": true to print \"\\u00A9\" vs. \"©\";\n\nOptions for source maps:\n\nname                   | type     | default         | description\n-----------------------|----------|-----------------|--------------------------------------------------------------------------\nsourceMaps             | boolean  | `false`         | Enable generating source maps\nsourceMapTarget        | string   |                 | The filename of the generated code that the source map will be associated with\nsourceRoot             | string   |                 | A root for all relative URLs in the source map\nsourceFileName         | string   |                 | The filename for the source code (i.e. the code in the `code` argument).  This will only be used if `code` is a string.\n\n## AST from Multiple Sources\n\nIn most cases, Babel does a 1:1 transformation of input-file to output-file.  However,\nyou may be dealing with AST constructed from multiple sources - JS files, templates, etc.\nIf this is the case, and you want the sourcemaps to reflect the correct sources, you'll need\nto make some changes to your code.\n\nFirst, each node with a `loc` property (which indicates that node's original placement in the\nsource document) must also include a `loc.filename` property, set to the source filename.\n\nSecond, you should pass an object to `generate` as the `code` parameter.  Keys\nshould be the source filenames, and values should be the source content.\n\nHere's an example of what that might look like:\n\n```js\nimport {parse} from 'babylon';\nimport generate from 'babel-generator';\n\nconst a = 'var a = 1;';\nconst b = 'var b = 2;';\nconst astA = parse(a, { filename: 'a.js' });\nconst astB = parse(b, { filename: 'b.js' });\nconst ast = {\n  type: 'Program',\n  body: [].concat(astA.body, ast2.body)\n};\n\nconst { code, map } = generate(ast, { /* options */ }, {\n  'a.js': a,\n  'b.js': b\n});\n\n// Sourcemap will point to both a.js and b.js where appropriate.\n```\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "babel-messages": "^6.23.0",
                "babel-runtime": "^6.22.0",
                "babel-types": "^6.25.0",
                "detect-indent": "^4.0.0",
                "jsesc": "^1.3.0",
                "lodash": "^4.2.0",
                "source-map": "^0.5.0",
                "trim-right": "^1.0.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-generator",
              "error": "[Circular]",
              "extraneous": false
            },
            "babel-helpers": {
              "_from": "babel-helpers@^6.24.1",
              "_id": "babel-helpers@6.24.1",
              "_inBundle": false,
              "_integrity": "sha1-NHHenK7DiOXIUOWX5Yom3fN2ArI=",
              "_location": "/babel-helpers",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "babel-helpers@^6.24.1",
                "name": "babel-helpers",
                "escapedName": "babel-helpers",
                "rawSpec": "^6.24.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^6.24.1"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/babel-helpers/-/babel-helpers-6.24.1.tgz",
              "_shasum": "3471de9caec388e5c850e597e58a26ddf37602b2",
              "_spec": "babel-helpers@^6.24.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Sebastian McKenzie",
                "email": "sebmck@gmail.com"
              },
              "bundleDependencies": false,
              "dependencies": {
                "babel-runtime": {
                  "_from": "babel-runtime@^6.22.0",
                  "_id": "babel-runtime@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
                  "_location": "/babel-runtime",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
                  "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
                  "_spec": "babel-runtime@^6.22.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "babel selfContained runtime",
                  "devDependencies": "[Circular]",
                  "license": "MIT",
                  "name": "babel-runtime",
                  "repository": "[Circular]",
                  "version": "6.23.0",
                  "readme": "# babel-runtime\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-runtime"
                },
                "babel-template": {
                  "_from": "babel-template@^6.25.0",
                  "_id": "babel-template@6.25.0",
                  "_inBundle": false,
                  "_integrity": "sha1-ZlJBFmt8KqTGGdceGSlpVSsQwHE=",
                  "_location": "/babel-template",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "babel-template@^6.25.0",
                    "name": "babel-template",
                    "escapedName": "babel-template",
                    "rawSpec": "^6.25.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^6.25.0"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-helpers"
                  ],
                  "_resolved": "https://registry.npmjs.org/babel-template/-/babel-template-6.25.0.tgz",
                  "_shasum": "665241166b7c2aa4c619d71e192969552b10c071",
                  "_spec": "babel-template@^6.25.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": {
                    "name": "Sebastian McKenzie",
                    "email": "sebmck@gmail.com"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Generate an AST from a string template.",
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-template",
                  "repository": {
                    "type": "git",
                    "url": "https://github.com/babel/babel/tree/master/packages/babel-template"
                  },
                  "version": "6.25.0",
                  "readme": "# babel-template\n\n> Generate an AST from a string template.\n\nIn computer science, this is known as an implementation of quasiquotes.\n\n## Install\n\n```sh\nnpm install --save-dev babel-template\n```\n\n## Usage\n\n```js\nimport template from \"babel-template\";\nimport generate from \"babel-generator\";\nimport * as t from \"babel-types\";\n\nconst buildRequire = template(`\n  var IMPORT_NAME = require(SOURCE);\n`);\n\nconst ast = buildRequire({\n  IMPORT_NAME: t.identifier(\"myModule\"),\n  SOURCE: t.stringLiteral(\"my-module\")\n});\n\nconsole.log(generate(ast).code);\n```\n\n```js\nconst myModule = require(\"my-module\");\n```\n\n## API\n\n### `template(code, [opts])`\n\n#### code\n\nType: `string`\n\n#### options\n\n`babel-template` accepts all of the options from [babylon], and specifies\nsome defaults of its own:\n\n* `allowReturnOutsideFunction` is set to `true` by default.\n* `allowSuperOutsideMethod` is set to `true` by default.\n\n##### preserveComments\n\nType: `boolean`\nDefault: `false`\n\nSet this to `true` to preserve any comments from the `code` parameter.\n\n#### Return value\n\n`babel-template` returns a `function` which is invoked with an optional object\nof replacements. See the usage section for an example.\n\n[babylon]: https://github.com/babel/babylon#options\n",
                  "readmeFilename": "README.md",
                  "devDependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {
                    "babel-runtime": "^6.22.0",
                    "babel-traverse": "^6.25.0",
                    "babel-types": "^6.25.0",
                    "babylon": "^6.17.2",
                    "lodash": "^4.2.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-template",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-template"
                }
              },
              "deprecated": false,
              "description": "Collection of helper functions used by Babel transforms.",
              "homepage": "https://babeljs.io/",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babel-helpers",
              "repository": {
                "type": "git",
                "url": "https://github.com/babel/babel/tree/master/packages/babel-helpers"
              },
              "version": "6.24.1",
              "readme": "# babel-helpers\n\n> Collection of helper functions used by Babel transforms.\n\n## Install\n\n```sh\nnpm install --save-dev babel-helpers\n```\n\n## Usage\n\n```js\nimport * as helpers from 'babel-helpers';\nimport * as t from 'babel-types';\n\nconst typeofHelper = helpers.get('typeof');\n\nt.isExpressionStatement(typeofHelper);\n// true\n```\n",
              "readmeFilename": "README.md",
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {
                "babel-runtime": "^6.22.0",
                "babel-template": "^6.24.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-helpers",
              "error": "[Circular]",
              "extraneous": false
            },
            "babel-messages": {
              "_from": "babel-messages@^6.23.0",
              "_id": "babel-messages@6.23.0",
              "_inBundle": false,
              "_integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
              "_location": "/babel-messages",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
              "_shasum": "f3cdf4703858035b2a2951c6ec5edf6c62f2630e",
              "_spec": "babel-messages@^6.23.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "babel-runtime": {
                  "_from": "babel-runtime@^6.22.0",
                  "_id": "babel-runtime@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
                  "_location": "/babel-runtime",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
                  "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
                  "_spec": "babel-runtime@^6.22.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "babel selfContained runtime",
                  "devDependencies": "[Circular]",
                  "license": "MIT",
                  "name": "babel-runtime",
                  "repository": "[Circular]",
                  "version": "6.23.0",
                  "readme": "# babel-runtime\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-runtime"
                }
              },
              "deprecated": false,
              "description": "Collection of debug messages used by Babel.",
              "homepage": "https://babeljs.io/",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babel-messages",
              "repository": "[Circular]",
              "version": "6.23.0",
              "readme": "# babel-messages\n\n> Collection of debug messages used by Babel.\n\n## Install\n\n```sh\nnpm install --save-dev babel-messages\n```\n\n## Usage\n\n```js\nimport * as messages from 'babel-messages';\n\nmessages.get('tailCallReassignmentDeopt');\n// > \"Function reference has been...\"\n```\n",
              "readmeFilename": "README.md",
              "devDependencies": "[Circular]",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-messages",
              "error": "[Circular]",
              "extraneous": false
            },
            "babel-register": {
              "_from": "babel-register@^6.24.1",
              "_id": "babel-register@6.24.1",
              "_inBundle": false,
              "_integrity": "sha1-fhDhOi9xBlvfrVoXh7pFvKbe118=",
              "_location": "/babel-register",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/babel-register/-/babel-register-6.24.1.tgz",
              "_shasum": "7e10e13a2f71065bdfad5a1787ba45bca6ded75f",
              "_spec": "babel-register@^6.24.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies",
              "author": "[Circular]",
              "browser": "lib/browser.js",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "babel require hook",
              "devDependencies": {
                "decache": "^4.1.0"
              },
              "license": "MIT",
              "main": "lib/node.js",
              "name": "babel-register",
              "repository": {
                "type": "git",
                "url": "https://github.com/babel/babel/tree/master/packages/babel-register"
              },
              "version": "6.24.1",
              "readme": "# babel-register\n\n> The require hook will bind itself to node's require and automatically compile files on the fly.\n\nOne of the ways you can use Babel is through the require hook. The require hook\nwill bind itself to node's `require` and automatically compile files on the\nfly. This is equivalent to CoffeeScript's\n[coffee-script/register](http://coffeescript.org/documentation/docs/register.html).\n\n## Install\n\n```sh\nnpm install babel-register --save-dev\n```\n\n## Usage\n\n```js\nrequire(\"babel-register\");\n```\n\nAll subsequent files required by node with the extensions `.es6`, `.es`, `.jsx`\nand `.js` will be transformed by Babel.\n\n<blockquote class=\"babel-callout babel-callout-info\">\n  <h4>Polyfill not included</h4>\n  <p>\n    You must include the <a href=\"https://babeljs.io/docs/usage/polyfill/\">polyfill</a> separately\n    when using features that require it, like generators.\n  </p>\n</blockquote>\n\n### Ignores `node_modules` by default\n\n**NOTE:** By default all requires to `node_modules` will be ignored. You can\noverride this by passing an ignore regex via:\n\n```js\nrequire(\"babel-register\")({\n  // This will override `node_modules` ignoring - you can alternatively pass\n  // an array of strings to be explicitly matched or a regex / glob\n  ignore: false\n});\n```\n\n## Specifying options\n\n```javascript\nrequire(\"babel-register\")({\n  // Optional ignore regex - if any filenames **do** match this regex then they\n  // aren't compiled.\n  ignore: /regex/,\n\n  // Ignore can also be specified as a function.\n  ignore: function(filename) {\n    if (filename === \"/path/to/es6-file.js\") {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  // Optional only regex - if any filenames **don't** match this regex then they\n  // aren't compiled\n  only: /my_es6_folder/,\n\n  // Setting this will remove the currently hooked extensions of .es6, `.es`, `.jsx`\n  // and .js so you'll have to add them back if you want them to be used again.\n  extensions: [\".es6\", \".es\", \".jsx\", \".js\"]\n});\n```\n\nYou can pass in all other [options](https://babeljs.io/docs/usage/api/#options) as well,\nincluding `plugins` and `presets`. But note that the closest [`.babelrc`](https://babeljs.io/docs/usage/babelrc/)\nto each file still applies, and takes precedence over any options you pass in here.\n\n## Environment variables\n\nBy default `babel-node` and `babel-register` will save to a json cache in your\ntemporary directory.\n\nThis will heavily improve with the startup and compilation of your files. There\nare however scenarios where you want to change this behaviour and there are\nenvironment variables exposed to allow you to do this.\n\n### BABEL_CACHE_PATH\n\nSpecify a different cache location.\n\n```sh\nBABEL_CACHE_PATH=/foo/my-cache.json babel-node script.js\n```\n\n### BABEL_DISABLE_CACHE\n\nDisable the cache.\n\n```sh\nBABEL_DISABLE_CACHE=1 babel-node script.js\n```\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "babel-core": "^6.24.1",
                "babel-runtime": "^6.22.0",
                "core-js": "^2.4.0",
                "home-or-tmp": "^2.0.0",
                "lodash": "^4.2.0",
                "mkdirp": "^0.5.1",
                "source-map-support": "^0.4.2"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "babel-register"
            },
            "babel-runtime": {
              "_from": "babel-runtime@^6.22.0",
              "_id": "babel-runtime@6.23.0",
              "_inBundle": false,
              "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
              "_location": "/babel-runtime",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
              "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
              "_spec": "babel-runtime@^6.22.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
              "author": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "babel selfContained runtime",
              "devDependencies": "[Circular]",
              "license": "MIT",
              "name": "babel-runtime",
              "repository": "[Circular]",
              "version": "6.23.0",
              "readme": "# babel-runtime\n\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "babel-runtime"
            },
            "babel-template": {
              "_from": "babel-template@^6.25.0",
              "_id": "babel-template@6.25.0",
              "_inBundle": false,
              "_integrity": "sha1-ZlJBFmt8KqTGGdceGSlpVSsQwHE=",
              "_location": "/babel-template",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/babel-template/-/babel-template-6.25.0.tgz",
              "_shasum": "665241166b7c2aa4c619d71e192969552b10c071",
              "_spec": "babel-template@^6.25.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "babel-runtime": {
                  "_from": "babel-runtime@^6.22.0",
                  "_id": "babel-runtime@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
                  "_location": "/babel-runtime",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
                  "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
                  "_spec": "babel-runtime@^6.22.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "babel selfContained runtime",
                  "devDependencies": "[Circular]",
                  "license": "MIT",
                  "name": "babel-runtime",
                  "repository": "[Circular]",
                  "version": "6.23.0",
                  "readme": "# babel-runtime\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-runtime"
                },
                "babel-traverse": {
                  "_from": "babel-traverse@^6.25.0",
                  "_id": "babel-traverse@6.25.0",
                  "_inBundle": false,
                  "_integrity": "sha1-IldJfi/NGbie3BPEyROB+VEklvE=",
                  "_location": "/babel-traverse",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "babel-traverse@^6.25.0",
                    "name": "babel-traverse",
                    "escapedName": "babel-traverse",
                    "rawSpec": "^6.25.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^6.25.0"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-template"
                  ],
                  "_resolved": "https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.25.0.tgz",
                  "_shasum": "2257497e2fcd19b89edc13c4c91381f9512496f1",
                  "_spec": "babel-traverse@^6.25.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": {
                    "name": "Sebastian McKenzie",
                    "email": "sebmck@gmail.com"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "The Babel Traverse module maintains the overall tree state, and is responsible for replacing, removing, and adding nodes",
                  "devDependencies": {
                    "babel-generator": "^6.25.0"
                  },
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-traverse",
                  "repository": {
                    "type": "git",
                    "url": "https://github.com/babel/babel/tree/master/packages/babel-traverse"
                  },
                  "version": "6.25.0",
                  "readme": "# babel-traverse\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "babel-code-frame": "^6.22.0",
                    "babel-messages": "^6.23.0",
                    "babel-runtime": "^6.22.0",
                    "babel-types": "^6.25.0",
                    "babylon": "^6.17.2",
                    "debug": "^2.2.0",
                    "globals": "^9.0.0",
                    "invariant": "^2.2.0",
                    "lodash": "^4.2.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-traverse",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-traverse"
                },
                "babel-types": {
                  "_from": "babel-types@^6.25.0",
                  "_id": "babel-types@6.25.0",
                  "_inBundle": false,
                  "_integrity": "sha1-cK+ySNVmDl0Y+BHZHIMDtUE0oY4=",
                  "_location": "/babel-types",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.25.0.tgz",
                  "_shasum": "70afb248d5660e5d18f811d91c8303b54134a18e",
                  "_spec": "babel-types@^6.25.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Babel Types is a Lodash-esque utility library for AST nodes",
                  "devDependencies": "[Circular]",
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-types",
                  "repository": "[Circular]",
                  "version": "6.25.0",
                  "readme": "# babel-types\n\n> This module contains methods for building ASTs manually and for checking the types of AST nodes.\n\n## Install\n\n```sh\nnpm install --save-dev babel-types\n```\n\n## API\n\n<!-- begin generated section -->\n\n### anyTypeAnnotation\n```javascript\nt.anyTypeAnnotation()\n```\n\nSee also `t.isAnyTypeAnnotation(node, opts)` and `t.assertAnyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### arrayExpression\n```javascript\nt.arrayExpression(elements)\n```\n\nSee also `t.isArrayExpression(node, opts)` and `t.assertArrayExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `elements`: `Array<null | Expression | SpreadElement>` (default: `[]`)\n\n---\n\n### arrayPattern\n```javascript\nt.arrayPattern(elements, typeAnnotation)\n```\n\nSee also `t.isArrayPattern(node, opts)` and `t.assertArrayPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `elements`: `Array<Identifier | Pattern | RestElement>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### arrayTypeAnnotation\n```javascript\nt.arrayTypeAnnotation(elementType)\n```\n\nSee also `t.isArrayTypeAnnotation(node, opts)` and `t.assertArrayTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `elementType` (required)\n\n---\n\n### arrowFunctionExpression\n```javascript\nt.arrowFunctionExpression(params, body, async)\n```\n\nSee also `t.isArrowFunctionExpression(node, opts)` and `t.assertArrowFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement | Expression` (required)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### assignmentExpression\n```javascript\nt.assignmentExpression(operator, left, right)\n```\n\nSee also `t.isAssignmentExpression(node, opts)` and `t.assertAssignmentExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `string` (required)\n - `left`: `LVal` (required)\n - `right`: `Expression` (required)\n\n---\n\n### assignmentPattern\n```javascript\nt.assignmentPattern(left, right)\n```\n\nSee also `t.isAssignmentPattern(node, opts)` and `t.assertAssignmentPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `left`: `Identifier` (required)\n - `right`: `Expression` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### awaitExpression\n```javascript\nt.awaitExpression(argument)\n```\n\nSee also `t.isAwaitExpression(node, opts)` and `t.assertAwaitExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (required)\n\n---\n\n### binaryExpression\n```javascript\nt.binaryExpression(operator, left, right)\n```\n\nSee also `t.isBinaryExpression(node, opts)` and `t.assertBinaryExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'+' | '-' | '/' | '%' | '*' | '**' | '&' | '|' | '>>' | '>>>' | '<<' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '>' | '<' | '>=' | '<='` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### bindExpression\n```javascript\nt.bindExpression(object, callee)\n```\n\nSee also `t.isBindExpression(node, opts)` and `t.assertBindExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `object` (required)\n - `callee` (required)\n\n---\n\n### blockStatement\n```javascript\nt.blockStatement(body, directives)\n```\n\nSee also `t.isBlockStatement(node, opts)` and `t.assertBlockStatement(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `Statement`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### booleanLiteral\n```javascript\nt.booleanLiteral(value)\n```\n\nSee also `t.isBooleanLiteral(node, opts)` and `t.assertBooleanLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `boolean` (required)\n\n---\n\n### booleanLiteralTypeAnnotation\n```javascript\nt.booleanLiteralTypeAnnotation()\n```\n\nSee also `t.isBooleanLiteralTypeAnnotation(node, opts)` and `t.assertBooleanLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### booleanTypeAnnotation\n```javascript\nt.booleanTypeAnnotation()\n```\n\nSee also `t.isBooleanTypeAnnotation(node, opts)` and `t.assertBooleanTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### breakStatement\n```javascript\nt.breakStatement(label)\n```\n\nSee also `t.isBreakStatement(node, opts)` and `t.assertBreakStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### callExpression\n```javascript\nt.callExpression(callee, arguments)\n```\n\nSee also `t.isCallExpression(node, opts)` and `t.assertCallExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### catchClause\n```javascript\nt.catchClause(param, body)\n```\n\nSee also `t.isCatchClause(node, opts)` and `t.assertCatchClause(node, opts)`.\n\nAliases: `Scopable`\n\n - `param`: `Identifier` (required)\n - `body`: `BlockStatement` (required)\n\n---\n\n### classBody\n```javascript\nt.classBody(body)\n```\n\nSee also `t.isClassBody(node, opts)` and `t.assertClassBody(node, opts)`.\n\n - `body`: `Array<ClassMethod | ClassProperty>` (required)\n\n---\n\n### classDeclaration\n```javascript\nt.classDeclaration(id, superClass, body, decorators)\n```\n\nSee also `t.isClassDeclaration(node, opts)` and `t.assertClassDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Statement`, `Declaration`, `Pureish`\n\n - `id`: `Identifier` (required)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classExpression\n```javascript\nt.classExpression(id, superClass, body, decorators)\n```\n\nSee also `t.isClassExpression(node, opts)` and `t.assertClassExpression(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classImplements\n```javascript\nt.classImplements(id, typeParameters)\n```\n\nSee also `t.isClassImplements(node, opts)` and `t.assertClassImplements(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### classMethod\n```javascript\nt.classMethod(kind, key, params, body, computed, static)\n```\n\nSee also `t.isClassMethod(node, opts)` and `t.assertClassMethod(node, opts)`.\n\nAliases: `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`\n\n - `kind`: `\"get\" | \"set\" | \"method\" | \"constructor\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `static`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classProperty\n```javascript\nt.classProperty(key, value, typeAnnotation, decorators, computed)\n```\n\nSee also `t.isClassProperty(node, opts)` and `t.assertClassProperty(node, opts)`.\n\nAliases: `Property`\n\n - `key` (required)\n - `value` (required)\n - `typeAnnotation` (required)\n - `decorators` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### conditionalExpression\n```javascript\nt.conditionalExpression(test, consequent, alternate)\n```\n\nSee also `t.isConditionalExpression(node, opts)` and `t.assertConditionalExpression(node, opts)`.\n\nAliases: `Expression`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Expression` (required)\n - `alternate`: `Expression` (required)\n\n---\n\n### continueStatement\n```javascript\nt.continueStatement(label)\n```\n\nSee also `t.isContinueStatement(node, opts)` and `t.assertContinueStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### debuggerStatement\n```javascript\nt.debuggerStatement()\n```\n\nSee also `t.isDebuggerStatement(node, opts)` and `t.assertDebuggerStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### declareClass\n```javascript\nt.declareClass(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareClass(node, opts)` and `t.assertDeclareClass(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareFunction\n```javascript\nt.declareFunction(id)\n```\n\nSee also `t.isDeclareFunction(node, opts)` and `t.assertDeclareFunction(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### declareInterface\n```javascript\nt.declareInterface(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareInterface(node, opts)` and `t.assertDeclareInterface(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareModule\n```javascript\nt.declareModule(id, body)\n```\n\nSee also `t.isDeclareModule(node, opts)` and `t.assertDeclareModule(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `body` (required)\n\n---\n\n### declareModuleExports\n```javascript\nt.declareModuleExports(typeAnnotation)\n```\n\nSee also `t.isDeclareModuleExports(node, opts)` and `t.assertDeclareModuleExports(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `typeAnnotation` (required)\n\n---\n\n### declareTypeAlias\n```javascript\nt.declareTypeAlias(id, typeParameters, right)\n```\n\nSee also `t.isDeclareTypeAlias(node, opts)` and `t.assertDeclareTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### declareVariable\n```javascript\nt.declareVariable(id)\n```\n\nSee also `t.isDeclareVariable(node, opts)` and `t.assertDeclareVariable(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### decorator\n```javascript\nt.decorator(expression)\n```\n\nSee also `t.isDecorator(node, opts)` and `t.assertDecorator(node, opts)`.\n\n - `expression`: `Expression` (required)\n\n---\n\n### directive\n```javascript\nt.directive(value)\n```\n\nSee also `t.isDirective(node, opts)` and `t.assertDirective(node, opts)`.\n\n - `value`: `DirectiveLiteral` (required)\n\n---\n\n### directiveLiteral\n```javascript\nt.directiveLiteral(value)\n```\n\nSee also `t.isDirectiveLiteral(node, opts)` and `t.assertDirectiveLiteral(node, opts)`.\n\n - `value`: `string` (required)\n\n---\n\n### doExpression\n```javascript\nt.doExpression(body)\n```\n\nSee also `t.isDoExpression(node, opts)` and `t.assertDoExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `body`: `BlockStatement` (required)\n\n---\n\n### doWhileStatement\n```javascript\nt.doWhileStatement(test, body)\n```\n\nSee also `t.isDoWhileStatement(node, opts)` and `t.assertDoWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### emptyStatement\n```javascript\nt.emptyStatement()\n```\n\nSee also `t.isEmptyStatement(node, opts)` and `t.assertEmptyStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### emptyTypeAnnotation\n```javascript\nt.emptyTypeAnnotation()\n```\n\nSee also `t.isEmptyTypeAnnotation(node, opts)` and `t.assertEmptyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### existentialTypeParam\n```javascript\nt.existentialTypeParam()\n```\n\nSee also `t.isExistentialTypeParam(node, opts)` and `t.assertExistentialTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### exportAllDeclaration\n```javascript\nt.exportAllDeclaration(source)\n```\n\nSee also `t.isExportAllDeclaration(node, opts)` and `t.assertExportAllDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `source`: `StringLiteral` (required)\n\n---\n\n### exportDefaultDeclaration\n```javascript\nt.exportDefaultDeclaration(declaration)\n```\n\nSee also `t.isExportDefaultDeclaration(node, opts)` and `t.assertExportDefaultDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `FunctionDeclaration | ClassDeclaration | Expression` (required)\n\n---\n\n### exportDefaultSpecifier\n```javascript\nt.exportDefaultSpecifier(exported)\n```\n\nSee also `t.isExportDefaultSpecifier(node, opts)` and `t.assertExportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportNamedDeclaration\n```javascript\nt.exportNamedDeclaration(declaration, specifiers, source)\n```\n\nSee also `t.isExportNamedDeclaration(node, opts)` and `t.assertExportNamedDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `Declaration` (default: `null`)\n - `specifiers`: `Array<ExportSpecifier>` (required)\n - `source`: `StringLiteral` (default: `null`)\n\n---\n\n### exportNamespaceSpecifier\n```javascript\nt.exportNamespaceSpecifier(exported)\n```\n\nSee also `t.isExportNamespaceSpecifier(node, opts)` and `t.assertExportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportSpecifier\n```javascript\nt.exportSpecifier(local, exported)\n```\n\nSee also `t.isExportSpecifier(node, opts)` and `t.assertExportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `exported`: `Identifier` (required)\n\n---\n\n### expressionStatement\n```javascript\nt.expressionStatement(expression)\n```\n\nSee also `t.isExpressionStatement(node, opts)` and `t.assertExpressionStatement(node, opts)`.\n\nAliases: `Statement`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### file\n```javascript\nt.file(program, comments, tokens)\n```\n\nSee also `t.isFile(node, opts)` and `t.assertFile(node, opts)`.\n\n - `program`: `Program` (required)\n - `comments` (required)\n - `tokens` (required)\n\n---\n\n### forAwaitStatement\n```javascript\nt.forAwaitStatement(left, right, body)\n```\n\nSee also `t.isForAwaitStatement(node, opts)` and `t.assertForAwaitStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forInStatement\n```javascript\nt.forInStatement(left, right, body)\n```\n\nSee also `t.isForInStatement(node, opts)` and `t.assertForInStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forOfStatement\n```javascript\nt.forOfStatement(left, right, body)\n```\n\nSee also `t.isForOfStatement(node, opts)` and `t.assertForOfStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forStatement\n```javascript\nt.forStatement(init, test, update, body)\n```\n\nSee also `t.isForStatement(node, opts)` and `t.assertForStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`\n\n - `init`: `VariableDeclaration | Expression` (default: `null`)\n - `test`: `Expression` (default: `null`)\n - `update`: `Expression` (default: `null`)\n - `body`: `Statement` (required)\n\n---\n\n### functionDeclaration\n```javascript\nt.functionDeclaration(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionDeclaration(node, opts)` and `t.assertFunctionDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Statement`, `Pureish`, `Declaration`\n\n - `id`: `Identifier` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionExpression\n```javascript\nt.functionExpression(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionExpression(node, opts)` and `t.assertFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionTypeAnnotation\n```javascript\nt.functionTypeAnnotation(typeParameters, params, rest, returnType)\n```\n\nSee also `t.isFunctionTypeAnnotation(node, opts)` and `t.assertFunctionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeParameters` (required)\n - `params` (required)\n - `rest` (required)\n - `returnType` (required)\n\n---\n\n### functionTypeParam\n```javascript\nt.functionTypeParam(name, typeAnnotation)\n```\n\nSee also `t.isFunctionTypeParam(node, opts)` and `t.assertFunctionTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n - `name` (required)\n - `typeAnnotation` (required)\n\n---\n\n### genericTypeAnnotation\n```javascript\nt.genericTypeAnnotation(id, typeParameters)\n```\n\nSee also `t.isGenericTypeAnnotation(node, opts)` and `t.assertGenericTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### identifier\n```javascript\nt.identifier(name)\n```\n\nSee also `t.isIdentifier(node, opts)` and `t.assertIdentifier(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `name``string` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `typeAnnotation` (default: `null`)\n\n---\n\n### ifStatement\n```javascript\nt.ifStatement(test, consequent, alternate)\n```\n\nSee also `t.isIfStatement(node, opts)` and `t.assertIfStatement(node, opts)`.\n\nAliases: `Statement`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Statement` (required)\n - `alternate`: `Statement` (default: `null`)\n\n---\n\n### import\n```javascript\nt.import()\n```\n\nSee also `t.isImport(node, opts)` and `t.assertImport(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### importDeclaration\n```javascript\nt.importDeclaration(specifiers, source)\n```\n\nSee also `t.isImportDeclaration(node, opts)` and `t.assertImportDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`\n\n - `specifiers`: `Array<ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier>` (required)\n - `source`: `StringLiteral` (required)\n\n---\n\n### importDefaultSpecifier\n```javascript\nt.importDefaultSpecifier(local)\n```\n\nSee also `t.isImportDefaultSpecifier(node, opts)` and `t.assertImportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importNamespaceSpecifier\n```javascript\nt.importNamespaceSpecifier(local)\n```\n\nSee also `t.isImportNamespaceSpecifier(node, opts)` and `t.assertImportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importSpecifier\n```javascript\nt.importSpecifier(local, imported)\n```\n\nSee also `t.isImportSpecifier(node, opts)` and `t.assertImportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `imported`: `Identifier` (required)\n - `importKind`: `null | 'type' | 'typeof'` (default: `null`)\n\n---\n\n### interfaceDeclaration\n```javascript\nt.interfaceDeclaration(id, typeParameters, extends, body)\n```\n\nSee also `t.isInterfaceDeclaration(node, opts)` and `t.assertInterfaceDeclaration(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### interfaceExtends\n```javascript\nt.interfaceExtends(id, typeParameters)\n```\n\nSee also `t.isInterfaceExtends(node, opts)` and `t.assertInterfaceExtends(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### intersectionTypeAnnotation\n```javascript\nt.intersectionTypeAnnotation(types)\n```\n\nSee also `t.isIntersectionTypeAnnotation(node, opts)` and `t.assertIntersectionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### jSXAttribute\n```javascript\nt.jSXAttribute(name, value)\n```\n\nSee also `t.isJSXAttribute(node, opts)` and `t.assertJSXAttribute(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXNamespacedName` (required)\n - `value`: `JSXElement | StringLiteral | JSXExpressionContainer` (default: `null`)\n\n---\n\n### jSXClosingElement\n```javascript\nt.jSXClosingElement(name)\n```\n\nSee also `t.isJSXClosingElement(node, opts)` and `t.assertJSXClosingElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n\n---\n\n### jSXElement\n```javascript\nt.jSXElement(openingElement, closingElement, children, selfClosing)\n```\n\nSee also `t.isJSXElement(node, opts)` and `t.assertJSXElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`, `Expression`\n\n - `openingElement`: `JSXOpeningElement` (required)\n - `closingElement`: `JSXClosingElement` (default: `null`)\n - `children`: `Array<JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement>` (required)\n - `selfClosing` (required)\n\n---\n\n### jSXEmptyExpression\n```javascript\nt.jSXEmptyExpression()\n```\n\nSee also `t.isJSXEmptyExpression(node, opts)` and `t.assertJSXEmptyExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n\n---\n\n### jSXExpressionContainer\n```javascript\nt.jSXExpressionContainer(expression)\n```\n\nSee also `t.isJSXExpressionContainer(node, opts)` and `t.assertJSXExpressionContainer(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXIdentifier\n```javascript\nt.jSXIdentifier(name)\n```\n\nSee also `t.isJSXIdentifier(node, opts)` and `t.assertJSXIdentifier(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `name`: `string` (required)\n\n---\n\n### jSXMemberExpression\n```javascript\nt.jSXMemberExpression(object, property)\n```\n\nSee also `t.isJSXMemberExpression(node, opts)` and `t.assertJSXMemberExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `object`: `JSXMemberExpression | JSXIdentifier` (required)\n - `property`: `JSXIdentifier` (required)\n\n---\n\n### jSXNamespacedName\n```javascript\nt.jSXNamespacedName(namespace, name)\n```\n\nSee also `t.isJSXNamespacedName(node, opts)` and `t.assertJSXNamespacedName(node, opts)`.\n\nAliases: `JSX`\n\n - `namespace`: `JSXIdentifier` (required)\n - `name`: `JSXIdentifier` (required)\n\n---\n\n### jSXOpeningElement\n```javascript\nt.jSXOpeningElement(name, attributes, selfClosing)\n```\n\nSee also `t.isJSXOpeningElement(node, opts)` and `t.assertJSXOpeningElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n - `attributes`: `Array<JSXAttribute | JSXSpreadAttribute>` (required)\n - `selfClosing`: `boolean` (default: `false`)\n\n---\n\n### jSXSpreadAttribute\n```javascript\nt.jSXSpreadAttribute(argument)\n```\n\nSee also `t.isJSXSpreadAttribute(node, opts)` and `t.assertJSXSpreadAttribute(node, opts)`.\n\nAliases: `JSX`\n\n - `argument`: `Expression` (required)\n\n---\n\n### jSXSpreadChild\n```javascript\nt.jSXSpreadChild(expression)\n```\n\nSee also `t.isJSXSpreadChild(node, opts)` and `t.assertJSXSpreadChild(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXText\n```javascript\nt.jSXText(value)\n```\n\nSee also `t.isJSXText(node, opts)` and `t.assertJSXText(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### labeledStatement\n```javascript\nt.labeledStatement(label, body)\n```\n\nSee also `t.isLabeledStatement(node, opts)` and `t.assertLabeledStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `label`: `Identifier` (required)\n - `body`: `Statement` (required)\n\n---\n\n### logicalExpression\n```javascript\nt.logicalExpression(operator, left, right)\n```\n\nSee also `t.isLogicalExpression(node, opts)` and `t.assertLogicalExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'||' | '&&'` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### memberExpression\n```javascript\nt.memberExpression(object, property, computed)\n```\n\nSee also `t.isMemberExpression(node, opts)` and `t.assertMemberExpression(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `object`: `Expression` (required)\n - `property`if computed then `Expression` else `Identifier` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### metaProperty\n```javascript\nt.metaProperty(meta, property)\n```\n\nSee also `t.isMetaProperty(node, opts)` and `t.assertMetaProperty(node, opts)`.\n\nAliases: `Expression`\n\n - `meta`: `string` (required)\n - `property`: `string` (required)\n\n---\n\n### mixedTypeAnnotation\n```javascript\nt.mixedTypeAnnotation()\n```\n\nSee also `t.isMixedTypeAnnotation(node, opts)` and `t.assertMixedTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### newExpression\n```javascript\nt.newExpression(callee, arguments)\n```\n\nSee also `t.isNewExpression(node, opts)` and `t.assertNewExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### noop\n```javascript\nt.noop()\n```\n\nSee also `t.isNoop(node, opts)` and `t.assertNoop(node, opts)`.\n\n\n---\n\n### nullLiteral\n```javascript\nt.nullLiteral()\n```\n\nSee also `t.isNullLiteral(node, opts)` and `t.assertNullLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n\n---\n\n### nullLiteralTypeAnnotation\n```javascript\nt.nullLiteralTypeAnnotation()\n```\n\nSee also `t.isNullLiteralTypeAnnotation(node, opts)` and `t.assertNullLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### nullableTypeAnnotation\n```javascript\nt.nullableTypeAnnotation(typeAnnotation)\n```\n\nSee also `t.isNullableTypeAnnotation(node, opts)` and `t.assertNullableTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### numberTypeAnnotation\n```javascript\nt.numberTypeAnnotation()\n```\n\nSee also `t.isNumberTypeAnnotation(node, opts)` and `t.assertNumberTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### numericLiteral\n```javascript\nt.numericLiteral(value)\n```\n\nSee also `t.isNumericLiteral(node, opts)` and `t.assertNumericLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `number` (required)\n\n---\n\n### numericLiteralTypeAnnotation\n```javascript\nt.numericLiteralTypeAnnotation()\n```\n\nSee also `t.isNumericLiteralTypeAnnotation(node, opts)` and `t.assertNumericLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### objectExpression\n```javascript\nt.objectExpression(properties)\n```\n\nSee also `t.isObjectExpression(node, opts)` and `t.assertObjectExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `properties`: `Array<ObjectMethod | ObjectProperty | SpreadProperty>` (required)\n\n---\n\n### objectMethod\n```javascript\nt.objectMethod(kind, key, params, body, computed)\n```\n\nSee also `t.isObjectMethod(node, opts)` and `t.assertObjectMethod(node, opts)`.\n\nAliases: `UserWhitespacable`, `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`, `ObjectMember`\n\n - `kind`: `\"method\" | \"get\" | \"set\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### objectPattern\n```javascript\nt.objectPattern(properties, typeAnnotation)\n```\n\nSee also `t.isObjectPattern(node, opts)` and `t.assertObjectPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `properties`: `Array<RestProperty | Property>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectProperty\n```javascript\nt.objectProperty(key, value, computed, shorthand, decorators)\n```\n\nSee also `t.isObjectProperty(node, opts)` and `t.assertObjectProperty(node, opts)`.\n\nAliases: `UserWhitespacable`, `Property`, `ObjectMember`\n\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `value`: `Expression | Pattern | RestElement` (required)\n - `computed`: `boolean` (default: `false`)\n - `shorthand`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectTypeAnnotation\n```javascript\nt.objectTypeAnnotation(properties, indexers, callProperties)\n```\n\nSee also `t.isObjectTypeAnnotation(node, opts)` and `t.assertObjectTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `properties` (required)\n - `indexers` (required)\n - `callProperties` (required)\n\n---\n\n### objectTypeCallProperty\n```javascript\nt.objectTypeCallProperty(value)\n```\n\nSee also `t.isObjectTypeCallProperty(node, opts)` and `t.assertObjectTypeCallProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `value` (required)\n\n---\n\n### objectTypeIndexer\n```javascript\nt.objectTypeIndexer(id, key, value)\n```\n\nSee also `t.isObjectTypeIndexer(node, opts)` and `t.assertObjectTypeIndexer(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `id` (required)\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeProperty\n```javascript\nt.objectTypeProperty(key, value)\n```\n\nSee also `t.isObjectTypeProperty(node, opts)` and `t.assertObjectTypeProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeSpreadProperty\n```javascript\nt.objectTypeSpreadProperty(argument)\n```\n\nSee also `t.isObjectTypeSpreadProperty(node, opts)` and `t.assertObjectTypeSpreadProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `argument` (required)\n\n---\n\n### parenthesizedExpression\n```javascript\nt.parenthesizedExpression(expression)\n```\n\nSee also `t.isParenthesizedExpression(node, opts)` and `t.assertParenthesizedExpression(node, opts)`.\n\nAliases: `Expression`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### program\n```javascript\nt.program(body, directives)\n```\n\nSee also `t.isProgram(node, opts)` and `t.assertProgram(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `FunctionParent`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### qualifiedTypeIdentifier\n```javascript\nt.qualifiedTypeIdentifier(id, qualification)\n```\n\nSee also `t.isQualifiedTypeIdentifier(node, opts)` and `t.assertQualifiedTypeIdentifier(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `qualification` (required)\n\n---\n\n### regExpLiteral\n```javascript\nt.regExpLiteral(pattern, flags)\n```\n\nSee also `t.isRegExpLiteral(node, opts)` and `t.assertRegExpLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `pattern`: `string` (required)\n - `flags`: `string` (default: `''`)\n\n---\n\n### restElement\n```javascript\nt.restElement(argument, typeAnnotation)\n```\n\nSee also `t.isRestElement(node, opts)` and `t.assertRestElement(node, opts)`.\n\nAliases: `LVal`\n\n - `argument`: `LVal` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### restProperty\n```javascript\nt.restProperty(argument)\n```\n\nSee also `t.isRestProperty(node, opts)` and `t.assertRestProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `LVal` (required)\n\n---\n\n### returnStatement\n```javascript\nt.returnStatement(argument)\n```\n\nSee also `t.isReturnStatement(node, opts)` and `t.assertReturnStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (default: `null`)\n\n---\n\n### sequenceExpression\n```javascript\nt.sequenceExpression(expressions)\n```\n\nSee also `t.isSequenceExpression(node, opts)` and `t.assertSequenceExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### spreadElement\n```javascript\nt.spreadElement(argument)\n```\n\nSee also `t.isSpreadElement(node, opts)` and `t.assertSpreadElement(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### spreadProperty\n```javascript\nt.spreadProperty(argument)\n```\n\nSee also `t.isSpreadProperty(node, opts)` and `t.assertSpreadProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### stringLiteral\n```javascript\nt.stringLiteral(value)\n```\n\nSee also `t.isStringLiteral(node, opts)` and `t.assertStringLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### stringLiteralTypeAnnotation\n```javascript\nt.stringLiteralTypeAnnotation()\n```\n\nSee also `t.isStringLiteralTypeAnnotation(node, opts)` and `t.assertStringLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### stringTypeAnnotation\n```javascript\nt.stringTypeAnnotation()\n```\n\nSee also `t.isStringTypeAnnotation(node, opts)` and `t.assertStringTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### super\n```javascript\nt.super()\n```\n\nSee also `t.isSuper(node, opts)` and `t.assertSuper(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### switchCase\n```javascript\nt.switchCase(test, consequent)\n```\n\nSee also `t.isSwitchCase(node, opts)` and `t.assertSwitchCase(node, opts)`.\n\n - `test`: `Expression` (default: `null`)\n - `consequent`: `Array<Statement>` (required)\n\n---\n\n### switchStatement\n```javascript\nt.switchStatement(discriminant, cases)\n```\n\nSee also `t.isSwitchStatement(node, opts)` and `t.assertSwitchStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Scopable`\n\n - `discriminant`: `Expression` (required)\n - `cases`: `Array<SwitchCase>` (required)\n\n---\n\n### taggedTemplateExpression\n```javascript\nt.taggedTemplateExpression(tag, quasi)\n```\n\nSee also `t.isTaggedTemplateExpression(node, opts)` and `t.assertTaggedTemplateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `tag`: `Expression` (required)\n - `quasi`: `TemplateLiteral` (required)\n\n---\n\n### templateElement\n```javascript\nt.templateElement(value, tail)\n```\n\nSee also `t.isTemplateElement(node, opts)` and `t.assertTemplateElement(node, opts)`.\n\n - `value` (required)\n - `tail`: `boolean` (default: `false`)\n\n---\n\n### templateLiteral\n```javascript\nt.templateLiteral(quasis, expressions)\n```\n\nSee also `t.isTemplateLiteral(node, opts)` and `t.assertTemplateLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `quasis`: `Array<TemplateElement>` (required)\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### thisExpression\n```javascript\nt.thisExpression()\n```\n\nSee also `t.isThisExpression(node, opts)` and `t.assertThisExpression(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### thisTypeAnnotation\n```javascript\nt.thisTypeAnnotation()\n```\n\nSee also `t.isThisTypeAnnotation(node, opts)` and `t.assertThisTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### throwStatement\n```javascript\nt.throwStatement(argument)\n```\n\nSee also `t.isThrowStatement(node, opts)` and `t.assertThrowStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (required)\n\n---\n\n### tryStatement\n```javascript\nt.tryStatement(block, handler, finalizer)\n```\n\nSee also `t.isTryStatement(node, opts)` and `t.assertTryStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `block` (required)\n - `handler` (default: `null`)\n - `finalizer`: `BlockStatement` (default: `null`)\n - `body`: `BlockStatement` (default: `null`)\n\n---\n\n### tupleTypeAnnotation\n```javascript\nt.tupleTypeAnnotation(types)\n```\n\nSee also `t.isTupleTypeAnnotation(node, opts)` and `t.assertTupleTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### typeAlias\n```javascript\nt.typeAlias(id, typeParameters, right)\n```\n\nSee also `t.isTypeAlias(node, opts)` and `t.assertTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### typeAnnotation\n```javascript\nt.typeAnnotation(typeAnnotation)\n```\n\nSee also `t.isTypeAnnotation(node, opts)` and `t.assertTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### typeCastExpression\n```javascript\nt.typeCastExpression(expression, typeAnnotation)\n```\n\nSee also `t.isTypeCastExpression(node, opts)` and `t.assertTypeCastExpression(node, opts)`.\n\nAliases: `Flow`, `ExpressionWrapper`, `Expression`\n\n - `expression` (required)\n - `typeAnnotation` (required)\n\n---\n\n### typeParameter\n```javascript\nt.typeParameter(bound)\n```\n\nSee also `t.isTypeParameter(node, opts)` and `t.assertTypeParameter(node, opts)`.\n\nAliases: `Flow`\n\n - `bound` (required)\n\n---\n\n### typeParameterDeclaration\n```javascript\nt.typeParameterDeclaration(params)\n```\n\nSee also `t.isTypeParameterDeclaration(node, opts)` and `t.assertTypeParameterDeclaration(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeParameterInstantiation\n```javascript\nt.typeParameterInstantiation(params)\n```\n\nSee also `t.isTypeParameterInstantiation(node, opts)` and `t.assertTypeParameterInstantiation(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeofTypeAnnotation\n```javascript\nt.typeofTypeAnnotation(argument)\n```\n\nSee also `t.isTypeofTypeAnnotation(node, opts)` and `t.assertTypeofTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `argument` (required)\n\n---\n\n### unaryExpression\n```javascript\nt.unaryExpression(operator, argument, prefix)\n```\n\nSee also `t.isUnaryExpression(node, opts)` and `t.assertUnaryExpression(node, opts)`.\n\nAliases: `UnaryLike`, `Expression`\n\n - `operator`: `'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `true`)\n\n---\n\n### unionTypeAnnotation\n```javascript\nt.unionTypeAnnotation(types)\n```\n\nSee also `t.isUnionTypeAnnotation(node, opts)` and `t.assertUnionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### updateExpression\n```javascript\nt.updateExpression(operator, argument, prefix)\n```\n\nSee also `t.isUpdateExpression(node, opts)` and `t.assertUpdateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `'++' | '--'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `false`)\n\n---\n\n### variableDeclaration\n```javascript\nt.variableDeclaration(kind, declarations)\n```\n\nSee also `t.isVariableDeclaration(node, opts)` and `t.assertVariableDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`\n\n - `kind`: `\"var\" | \"let\" | \"const\"` (required)\n - `declarations`: `Array<VariableDeclarator>` (required)\n\n---\n\n### variableDeclarator\n```javascript\nt.variableDeclarator(id, init)\n```\n\nSee also `t.isVariableDeclarator(node, opts)` and `t.assertVariableDeclarator(node, opts)`.\n\n - `id`: `LVal` (required)\n - `init`: `Expression` (default: `null`)\n\n---\n\n### voidTypeAnnotation\n```javascript\nt.voidTypeAnnotation()\n```\n\nSee also `t.isVoidTypeAnnotation(node, opts)` and `t.assertVoidTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### whileStatement\n```javascript\nt.whileStatement(test, body)\n```\n\nSee also `t.isWhileStatement(node, opts)` and `t.assertWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### withStatement\n```javascript\nt.withStatement(object, body)\n```\n\nSee also `t.isWithStatement(node, opts)` and `t.assertWithStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `object` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### yieldExpression\n```javascript\nt.yieldExpression(argument, delegate)\n```\n\nSee also `t.isYieldExpression(node, opts)` and `t.assertYieldExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (default: `null`)\n - `delegate`: `boolean` (default: `false`)\n\n---\n\n\n<!-- end generated section -->\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-types",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-types"
                },
                "babylon": {
                  "_from": "babylon@^6.17.2",
                  "_id": "babylon@6.17.4",
                  "_inBundle": false,
                  "_integrity": "sha512-kChlV+0SXkjE0vUn9OZ7pBMWRFd8uq3mZe8x1K6jhuNcAFAtEnjchFAqB+dYEXKyd+JpT6eppRR78QAr5gTsUw==",
                  "_location": "/babylon",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "babylon@^6.17.2",
                    "name": "babylon",
                    "escapedName": "babylon",
                    "rawSpec": "^6.17.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^6.17.2"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-template",
                    "/babel-traverse"
                  ],
                  "_resolved": "https://registry.npmjs.org/babylon/-/babylon-6.17.4.tgz",
                  "_shasum": "3e8b7402b88d22c3423e137a1577883b15ff869a",
                  "_spec": "babylon@^6.17.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": {
                    "name": "Sebastian McKenzie",
                    "email": "sebmck@gmail.com"
                  },
                  "ava": {
                    "files": [
                      "test/*.js"
                    ],
                    "source": [
                      "src/**/*.js",
                      "bin/**/*.js"
                    ]
                  },
                  "bin": {
                    "babylon": "./bin/babylon.js"
                  },
                  "bugs": {
                    "url": "https://github.com/babel/babylon/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "A JavaScript parser",
                  "devDependencies": {
                    "ava": "^0.17.0",
                    "babel-cli": "^6.14.0",
                    "babel-eslint": "^7.0.0",
                    "babel-helper-fixtures": "^6.9.0",
                    "babel-plugin-external-helpers": "^6.18.0",
                    "babel-plugin-istanbul": "^3.0.0",
                    "babel-plugin-transform-flow-strip-types": "^6.14.0",
                    "babel-preset-es2015": "^6.14.0",
                    "babel-preset-stage-0": "^6.5.0",
                    "chalk": "^1.1.3",
                    "codecov": "^1.0.1",
                    "cross-env": "^2.0.0",
                    "eslint": "^3.7.1",
                    "eslint-config-babel": "^6.0.0",
                    "eslint-plugin-flowtype": "^2.20.0",
                    "flow-bin": "^0.42.0",
                    "nyc": "^10.0.0",
                    "rimraf": "^2.5.4",
                    "rollup": "^0.41.0",
                    "rollup-plugin-babel": "^2.6.1",
                    "rollup-plugin-node-resolve": "^2.0.0",
                    "rollup-watch": "^3.2.2",
                    "unicode-9.0.0": "~0.7.0"
                  },
                  "files": [
                    "bin",
                    "lib"
                  ],
                  "greenkeeper": {
                    "ignore": [
                      "cross-env"
                    ]
                  },
                  "homepage": "https://babeljs.io/",
                  "keywords": [
                    "babel",
                    "javascript",
                    "parser",
                    "babylon"
                  ],
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babylon",
                  "nyc": {
                    "include": [
                      "src/**/*.js",
                      "bin/**/*.js"
                    ],
                    "sourceMap": false,
                    "instrument": false
                  },
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/babel/babylon.git"
                  },
                  "scripts": {
                    "build": "npm run clean && rollup -c",
                    "changelog": "git log `git describe --tags --abbrev=0`..HEAD --pretty=format:' * %s (%an)' | grep -v 'Merge pull request'",
                    "clean": "rimraf lib",
                    "coverage": "nyc report --reporter=json && codecov -f coverage/coverage-final.json",
                    "flow": "flow",
                    "lint": "eslint src bin",
                    "prepublish": "cross-env BABEL_ENV=production npm run build",
                    "preversion": "npm run test && npm run changelog",
                    "test": "npm run lint && npm run flow && npm run build -- -m && npm run test-only",
                    "test-ci": "nyc npm run test-only",
                    "test-only": "ava",
                    "watch": "npm run clean && rollup -c --watch"
                  },
                  "version": "6.17.4",
                  "readme": "<p align=\"center\">\n  <img alt=\"babylon\" src=\"https://raw.githubusercontent.com/babel/logo/master/babylon.png\" width=\"700\">\n</p>\n\n<p align=\"center\">\n  Babylon is a JavaScript parser used in <a href=\"https://github.com/babel/babel\">Babel</a>.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/babel/babylon\"><img alt=\"Travis Status\" src=\"https://img.shields.io/travis/babel/babylon/master.svg?style=flat&label=travis\"></a>\n  <a href=\"https://codecov.io/gh/babel/babylon\"><img alt=\"Codecov Status\" src=\"https://img.shields.io/codecov/c/github/babel/babylon/master.svg?style=flat\"></a>\n</p>\n\n - The latest ECMAScript version enabled by default (ES2017).\n - Comment attachment.\n - Support for JSX and Flow.\n - Support for experimental language proposals (accepting PRs for anything at least [stage-0](https://github.com/tc39/proposals/blob/master/stage-0-proposals.md)).\n\n## Credits\n\nHeavily based on [acorn](https://github.com/marijnh/acorn) and [acorn-jsx](https://github.com/RReverser/acorn-jsx),\nthanks to the awesome work of [@RReverser](https://github.com/RReverser) and [@marijnh](https://github.com/marijnh).\n\nSignificant diversions are expected to occur in the future such as streaming, EBNF definitions, sweet.js integration, interspatial parsing and more.\n\n## API\n\n### `babylon.parse(code, [options])`\n\n### `babylon.parseExpression(code, [options])`\n\n`parse()` parses the provided `code` as an entire ECMAScript program, while\n`parseExpression()` tries to parse a single Expression with performance in\nmind. When in doubt, use `.parse()`.\n\n### Options\n\n- **allowImportExportEverywhere**: By default, `import` and `export`\n  declarations can only appear at a program's top level. Setting this\n  option to `true` allows them anywhere where a statement is allowed.\n\n- **allowReturnOutsideFunction**: By default, a return statement at\n  the top level raises an error. Set this to `true` to accept such\n  code.\n\n- **allowSuperOutsideMethod**: TODO\n\n- **sourceType**: Indicate the mode the code should be parsed in. Can be\n  either `\"script\"` or `\"module\"`.\n\n- **sourceFilename**: Correlate output AST nodes with their source filename.  Useful when generating code and source maps from the ASTs of multiple input files.\n\n- **startLine**: By default, the first line of code parsed is treated as line 1. You can provide a line number to alternatively start with. Useful for integration with other source tools.\n\n- **plugins**: Array containing the plugins that you want to enable.\n\n- **strictMode**: TODO\n\n### Output\n\nBabylon generates AST according to [Babel AST format][].\nIt is based on [ESTree spec][] with the following deviations:\n\n> There is now an `estree` plugin which reverts these deviations\n\n- [Literal][] token is replaced with [StringLiteral][], [NumericLiteral][], [BooleanLiteral][], [NullLiteral][], [RegExpLiteral][]\n- [Property][] token is replaced with [ObjectProperty][] and [ObjectMethod][]\n- [MethodDefinition][] is replaced with [ClassMethod][]\n- [Program][] and [BlockStatement][] contain additional `directives` field with [Directive][] and [DirectiveLiteral][]\n- [ClassMethod][], [ObjectProperty][], and [ObjectMethod][] value property's properties in [FunctionExpression][] is coerced/brought into the main method node.\n\nAST for JSX code is based on [Facebook JSX AST][] with the addition of one node type:\n\n- `JSXText`\n\n[Babel AST format]: https://github.com/babel/babylon/blob/master/ast/spec.md\n[ESTree spec]: https://github.com/estree/estree\n\n[Literal]: https://github.com/estree/estree/blob/master/es5.md#literal\n[Property]: https://github.com/estree/estree/blob/master/es5.md#property\n[MethodDefinition]: https://github.com/estree/estree/blob/master/es2015.md#methoddefinition\n\n[StringLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#stringliteral\n[NumericLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#numericliteral\n[BooleanLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#booleanliteral\n[NullLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#nullliteral\n[RegExpLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#regexpliteral\n[ObjectProperty]: https://github.com/babel/babylon/blob/master/ast/spec.md#objectproperty\n[ObjectMethod]: https://github.com/babel/babylon/blob/master/ast/spec.md#objectmethod\n[ClassMethod]: https://github.com/babel/babylon/blob/master/ast/spec.md#classmethod\n[Program]: https://github.com/babel/babylon/blob/master/ast/spec.md#programs\n[BlockStatement]: https://github.com/babel/babylon/blob/master/ast/spec.md#blockstatement\n[Directive]: https://github.com/babel/babylon/blob/master/ast/spec.md#directive\n[DirectiveLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#directiveliteral\n[FunctionExpression]: https://github.com/babel/babylon/blob/master/ast/spec.md#functionexpression\n\n[Facebook JSX AST]: https://github.com/facebook/jsx/blob/master/AST.md\n\n### Semver\n\nBabylon follows semver in most situations. The only thing to note is that some spec-compliancy bug fixes may be released under patch versions.\n\nFor example: We push a fix to early error on something like [#107](https://github.com/babel/babylon/pull/107) - multiple default exports per file. That would be considered a bug fix even though it would cause a build to fail.\n\n### Example\n\n```javascript\nrequire(\"babylon\").parse(\"code\", {\n  // parse in strict mode and allow module declarations\n  sourceType: \"module\",\n\n  plugins: [\n    // enable jsx and flow syntax\n    \"jsx\",\n    \"flow\"\n  ]\n});\n```\n\n### Plugins\n\n - `estree`\n - `jsx`\n - `flow`\n - `doExpressions`\n - `objectRestSpread`\n - `decorators` (Based on an outdated version of the Decorators proposal. Will be removed in a future version of `Babylon`)\n - `classProperties`\n - `exportExtensions`\n - `asyncGenerators`\n - `functionBind`\n - `functionSent`\n - `dynamicImport`\n - `templateInvalidEscapes`\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babylon",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babylon"
                },
                "lodash": {
                  "_from": "lodash@^4.2.0",
                  "_id": "lodash@4.17.4",
                  "_inBundle": false,
                  "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
                  "_location": "/lodash",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
                  "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
                  "_spec": "lodash@^4.2.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "contributors": "[Circular]",
                  "deprecated": false,
                  "description": "Lodash modular utilities.",
                  "homepage": "https://lodash.com/",
                  "icon": "https://lodash.com/icon.svg",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "lodash.js",
                  "name": "lodash",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "4.17.4",
                  "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "devDependencies": "[Circular]",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/lodash",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "lodash"
                }
              },
              "deprecated": false,
              "description": "Generate an AST from a string template.",
              "homepage": "https://babeljs.io/",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babel-template",
              "repository": "[Circular]",
              "version": "6.25.0",
              "readme": "# babel-template\n\n> Generate an AST from a string template.\n\nIn computer science, this is known as an implementation of quasiquotes.\n\n## Install\n\n```sh\nnpm install --save-dev babel-template\n```\n\n## Usage\n\n```js\nimport template from \"babel-template\";\nimport generate from \"babel-generator\";\nimport * as t from \"babel-types\";\n\nconst buildRequire = template(`\n  var IMPORT_NAME = require(SOURCE);\n`);\n\nconst ast = buildRequire({\n  IMPORT_NAME: t.identifier(\"myModule\"),\n  SOURCE: t.stringLiteral(\"my-module\")\n});\n\nconsole.log(generate(ast).code);\n```\n\n```js\nconst myModule = require(\"my-module\");\n```\n\n## API\n\n### `template(code, [opts])`\n\n#### code\n\nType: `string`\n\n#### options\n\n`babel-template` accepts all of the options from [babylon], and specifies\nsome defaults of its own:\n\n* `allowReturnOutsideFunction` is set to `true` by default.\n* `allowSuperOutsideMethod` is set to `true` by default.\n\n##### preserveComments\n\nType: `boolean`\nDefault: `false`\n\nSet this to `true` to preserve any comments from the `code` parameter.\n\n#### Return value\n\n`babel-template` returns a `function` which is invoked with an optional object\nof replacements. See the usage section for an example.\n\n[babylon]: https://github.com/babel/babylon#options\n",
              "readmeFilename": "README.md",
              "devDependencies": "[Circular]",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-template",
              "error": "[Circular]",
              "extraneous": false
            },
            "babel-traverse": {
              "_from": "babel-traverse@^6.25.0",
              "_id": "babel-traverse@6.25.0",
              "_inBundle": false,
              "_integrity": "sha1-IldJfi/NGbie3BPEyROB+VEklvE=",
              "_location": "/babel-traverse",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/babel-traverse/-/babel-traverse-6.25.0.tgz",
              "_shasum": "2257497e2fcd19b89edc13c4c91381f9512496f1",
              "_spec": "babel-traverse@^6.25.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "babel-code-frame": {
                  "_from": "babel-code-frame@^6.22.0",
                  "_id": "babel-code-frame@6.22.0",
                  "_inBundle": false,
                  "_integrity": "sha1-AnYgvuVnqIwyVhV05/0IAdMxGOQ=",
                  "_location": "/babel-code-frame",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.22.0.tgz",
                  "_shasum": "027620bee567a88c32561574e7fd0801d33118e4",
                  "_spec": "babel-code-frame@^6.22.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Generate errors that contain a code frame that point to source locations.",
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-code-frame",
                  "repository": "[Circular]",
                  "version": "6.22.0",
                  "readme": "# babel-code-frame\n\n> Generate errors that contain a code frame that point to source locations.\n\n## Install\n\n```sh\nnpm install --save-dev babel-code-frame\n```\n\n## Usage\n\n```js\nimport codeFrame from 'babel-code-frame';\n\nconst rawLines = `class Foo {\n  constructor()\n}`;\nconst lineNumber = 2;\nconst colNumber = 16;\n\nconst result = codeFrame(rawLines, lineNumber, colNumber, { /* options */ });\n\nconsole.log(result);\n```\n\n```sh\n  1 | class Foo {\n> 2 |   constructor()\n    |                ^\n  3 | }\n```\n\nIf the column number is not known, you may pass `null` instead.\n\n## Options\n\nname                   | type     | default         | description\n-----------------------|----------|-----------------|------------------------------------------------------\nhighlightCode          | boolean  | `false`         | Syntax highlight the code as JavaScript for terminals\nlinesAbove             | number   | 2               | The number of lines to show above the error\nlinesBelow             | number   | 3               | The number of lines to show below the error\nforceColor             | boolean  | `false`         | Forcibly syntax highlight the code as JavaScript (for non-terminals); overrides highlightCode\n",
                  "readmeFilename": "README.md",
                  "devDependencies": "[Circular]",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-code-frame",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-code-frame"
                },
                "babel-messages": {
                  "_from": "babel-messages@^6.23.0",
                  "_id": "babel-messages@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-8830cDhYA1sqKVHG7F7fbGLyYw4=",
                  "_location": "/babel-messages",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-messages/-/babel-messages-6.23.0.tgz",
                  "_shasum": "f3cdf4703858035b2a2951c6ec5edf6c62f2630e",
                  "_spec": "babel-messages@^6.23.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Collection of debug messages used by Babel.",
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-messages",
                  "repository": "[Circular]",
                  "version": "6.23.0",
                  "readme": "# babel-messages\n\n> Collection of debug messages used by Babel.\n\n## Install\n\n```sh\nnpm install --save-dev babel-messages\n```\n\n## Usage\n\n```js\nimport * as messages from 'babel-messages';\n\nmessages.get('tailCallReassignmentDeopt');\n// > \"Function reference has been...\"\n```\n",
                  "readmeFilename": "README.md",
                  "devDependencies": "[Circular]",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-messages",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-messages"
                },
                "babel-runtime": {
                  "_from": "babel-runtime@^6.22.0",
                  "_id": "babel-runtime@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
                  "_location": "/babel-runtime",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
                  "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
                  "_spec": "babel-runtime@^6.22.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "babel selfContained runtime",
                  "devDependencies": "[Circular]",
                  "license": "MIT",
                  "name": "babel-runtime",
                  "repository": "[Circular]",
                  "version": "6.23.0",
                  "readme": "# babel-runtime\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-runtime"
                },
                "babel-types": {
                  "_from": "babel-types@^6.25.0",
                  "_id": "babel-types@6.25.0",
                  "_inBundle": false,
                  "_integrity": "sha1-cK+ySNVmDl0Y+BHZHIMDtUE0oY4=",
                  "_location": "/babel-types",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.25.0.tgz",
                  "_shasum": "70afb248d5660e5d18f811d91c8303b54134a18e",
                  "_spec": "babel-types@^6.25.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Babel Types is a Lodash-esque utility library for AST nodes",
                  "devDependencies": "[Circular]",
                  "homepage": "https://babeljs.io/",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babel-types",
                  "repository": "[Circular]",
                  "version": "6.25.0",
                  "readme": "# babel-types\n\n> This module contains methods for building ASTs manually and for checking the types of AST nodes.\n\n## Install\n\n```sh\nnpm install --save-dev babel-types\n```\n\n## API\n\n<!-- begin generated section -->\n\n### anyTypeAnnotation\n```javascript\nt.anyTypeAnnotation()\n```\n\nSee also `t.isAnyTypeAnnotation(node, opts)` and `t.assertAnyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### arrayExpression\n```javascript\nt.arrayExpression(elements)\n```\n\nSee also `t.isArrayExpression(node, opts)` and `t.assertArrayExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `elements`: `Array<null | Expression | SpreadElement>` (default: `[]`)\n\n---\n\n### arrayPattern\n```javascript\nt.arrayPattern(elements, typeAnnotation)\n```\n\nSee also `t.isArrayPattern(node, opts)` and `t.assertArrayPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `elements`: `Array<Identifier | Pattern | RestElement>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### arrayTypeAnnotation\n```javascript\nt.arrayTypeAnnotation(elementType)\n```\n\nSee also `t.isArrayTypeAnnotation(node, opts)` and `t.assertArrayTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `elementType` (required)\n\n---\n\n### arrowFunctionExpression\n```javascript\nt.arrowFunctionExpression(params, body, async)\n```\n\nSee also `t.isArrowFunctionExpression(node, opts)` and `t.assertArrowFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement | Expression` (required)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### assignmentExpression\n```javascript\nt.assignmentExpression(operator, left, right)\n```\n\nSee also `t.isAssignmentExpression(node, opts)` and `t.assertAssignmentExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `string` (required)\n - `left`: `LVal` (required)\n - `right`: `Expression` (required)\n\n---\n\n### assignmentPattern\n```javascript\nt.assignmentPattern(left, right)\n```\n\nSee also `t.isAssignmentPattern(node, opts)` and `t.assertAssignmentPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `left`: `Identifier` (required)\n - `right`: `Expression` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### awaitExpression\n```javascript\nt.awaitExpression(argument)\n```\n\nSee also `t.isAwaitExpression(node, opts)` and `t.assertAwaitExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (required)\n\n---\n\n### binaryExpression\n```javascript\nt.binaryExpression(operator, left, right)\n```\n\nSee also `t.isBinaryExpression(node, opts)` and `t.assertBinaryExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'+' | '-' | '/' | '%' | '*' | '**' | '&' | '|' | '>>' | '>>>' | '<<' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '>' | '<' | '>=' | '<='` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### bindExpression\n```javascript\nt.bindExpression(object, callee)\n```\n\nSee also `t.isBindExpression(node, opts)` and `t.assertBindExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `object` (required)\n - `callee` (required)\n\n---\n\n### blockStatement\n```javascript\nt.blockStatement(body, directives)\n```\n\nSee also `t.isBlockStatement(node, opts)` and `t.assertBlockStatement(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `Statement`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### booleanLiteral\n```javascript\nt.booleanLiteral(value)\n```\n\nSee also `t.isBooleanLiteral(node, opts)` and `t.assertBooleanLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `boolean` (required)\n\n---\n\n### booleanLiteralTypeAnnotation\n```javascript\nt.booleanLiteralTypeAnnotation()\n```\n\nSee also `t.isBooleanLiteralTypeAnnotation(node, opts)` and `t.assertBooleanLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### booleanTypeAnnotation\n```javascript\nt.booleanTypeAnnotation()\n```\n\nSee also `t.isBooleanTypeAnnotation(node, opts)` and `t.assertBooleanTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### breakStatement\n```javascript\nt.breakStatement(label)\n```\n\nSee also `t.isBreakStatement(node, opts)` and `t.assertBreakStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### callExpression\n```javascript\nt.callExpression(callee, arguments)\n```\n\nSee also `t.isCallExpression(node, opts)` and `t.assertCallExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### catchClause\n```javascript\nt.catchClause(param, body)\n```\n\nSee also `t.isCatchClause(node, opts)` and `t.assertCatchClause(node, opts)`.\n\nAliases: `Scopable`\n\n - `param`: `Identifier` (required)\n - `body`: `BlockStatement` (required)\n\n---\n\n### classBody\n```javascript\nt.classBody(body)\n```\n\nSee also `t.isClassBody(node, opts)` and `t.assertClassBody(node, opts)`.\n\n - `body`: `Array<ClassMethod | ClassProperty>` (required)\n\n---\n\n### classDeclaration\n```javascript\nt.classDeclaration(id, superClass, body, decorators)\n```\n\nSee also `t.isClassDeclaration(node, opts)` and `t.assertClassDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Statement`, `Declaration`, `Pureish`\n\n - `id`: `Identifier` (required)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classExpression\n```javascript\nt.classExpression(id, superClass, body, decorators)\n```\n\nSee also `t.isClassExpression(node, opts)` and `t.assertClassExpression(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classImplements\n```javascript\nt.classImplements(id, typeParameters)\n```\n\nSee also `t.isClassImplements(node, opts)` and `t.assertClassImplements(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### classMethod\n```javascript\nt.classMethod(kind, key, params, body, computed, static)\n```\n\nSee also `t.isClassMethod(node, opts)` and `t.assertClassMethod(node, opts)`.\n\nAliases: `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`\n\n - `kind`: `\"get\" | \"set\" | \"method\" | \"constructor\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `static`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classProperty\n```javascript\nt.classProperty(key, value, typeAnnotation, decorators, computed)\n```\n\nSee also `t.isClassProperty(node, opts)` and `t.assertClassProperty(node, opts)`.\n\nAliases: `Property`\n\n - `key` (required)\n - `value` (required)\n - `typeAnnotation` (required)\n - `decorators` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### conditionalExpression\n```javascript\nt.conditionalExpression(test, consequent, alternate)\n```\n\nSee also `t.isConditionalExpression(node, opts)` and `t.assertConditionalExpression(node, opts)`.\n\nAliases: `Expression`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Expression` (required)\n - `alternate`: `Expression` (required)\n\n---\n\n### continueStatement\n```javascript\nt.continueStatement(label)\n```\n\nSee also `t.isContinueStatement(node, opts)` and `t.assertContinueStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### debuggerStatement\n```javascript\nt.debuggerStatement()\n```\n\nSee also `t.isDebuggerStatement(node, opts)` and `t.assertDebuggerStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### declareClass\n```javascript\nt.declareClass(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareClass(node, opts)` and `t.assertDeclareClass(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareFunction\n```javascript\nt.declareFunction(id)\n```\n\nSee also `t.isDeclareFunction(node, opts)` and `t.assertDeclareFunction(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### declareInterface\n```javascript\nt.declareInterface(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareInterface(node, opts)` and `t.assertDeclareInterface(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareModule\n```javascript\nt.declareModule(id, body)\n```\n\nSee also `t.isDeclareModule(node, opts)` and `t.assertDeclareModule(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `body` (required)\n\n---\n\n### declareModuleExports\n```javascript\nt.declareModuleExports(typeAnnotation)\n```\n\nSee also `t.isDeclareModuleExports(node, opts)` and `t.assertDeclareModuleExports(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `typeAnnotation` (required)\n\n---\n\n### declareTypeAlias\n```javascript\nt.declareTypeAlias(id, typeParameters, right)\n```\n\nSee also `t.isDeclareTypeAlias(node, opts)` and `t.assertDeclareTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### declareVariable\n```javascript\nt.declareVariable(id)\n```\n\nSee also `t.isDeclareVariable(node, opts)` and `t.assertDeclareVariable(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### decorator\n```javascript\nt.decorator(expression)\n```\n\nSee also `t.isDecorator(node, opts)` and `t.assertDecorator(node, opts)`.\n\n - `expression`: `Expression` (required)\n\n---\n\n### directive\n```javascript\nt.directive(value)\n```\n\nSee also `t.isDirective(node, opts)` and `t.assertDirective(node, opts)`.\n\n - `value`: `DirectiveLiteral` (required)\n\n---\n\n### directiveLiteral\n```javascript\nt.directiveLiteral(value)\n```\n\nSee also `t.isDirectiveLiteral(node, opts)` and `t.assertDirectiveLiteral(node, opts)`.\n\n - `value`: `string` (required)\n\n---\n\n### doExpression\n```javascript\nt.doExpression(body)\n```\n\nSee also `t.isDoExpression(node, opts)` and `t.assertDoExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `body`: `BlockStatement` (required)\n\n---\n\n### doWhileStatement\n```javascript\nt.doWhileStatement(test, body)\n```\n\nSee also `t.isDoWhileStatement(node, opts)` and `t.assertDoWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### emptyStatement\n```javascript\nt.emptyStatement()\n```\n\nSee also `t.isEmptyStatement(node, opts)` and `t.assertEmptyStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### emptyTypeAnnotation\n```javascript\nt.emptyTypeAnnotation()\n```\n\nSee also `t.isEmptyTypeAnnotation(node, opts)` and `t.assertEmptyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### existentialTypeParam\n```javascript\nt.existentialTypeParam()\n```\n\nSee also `t.isExistentialTypeParam(node, opts)` and `t.assertExistentialTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### exportAllDeclaration\n```javascript\nt.exportAllDeclaration(source)\n```\n\nSee also `t.isExportAllDeclaration(node, opts)` and `t.assertExportAllDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `source`: `StringLiteral` (required)\n\n---\n\n### exportDefaultDeclaration\n```javascript\nt.exportDefaultDeclaration(declaration)\n```\n\nSee also `t.isExportDefaultDeclaration(node, opts)` and `t.assertExportDefaultDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `FunctionDeclaration | ClassDeclaration | Expression` (required)\n\n---\n\n### exportDefaultSpecifier\n```javascript\nt.exportDefaultSpecifier(exported)\n```\n\nSee also `t.isExportDefaultSpecifier(node, opts)` and `t.assertExportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportNamedDeclaration\n```javascript\nt.exportNamedDeclaration(declaration, specifiers, source)\n```\n\nSee also `t.isExportNamedDeclaration(node, opts)` and `t.assertExportNamedDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `Declaration` (default: `null`)\n - `specifiers`: `Array<ExportSpecifier>` (required)\n - `source`: `StringLiteral` (default: `null`)\n\n---\n\n### exportNamespaceSpecifier\n```javascript\nt.exportNamespaceSpecifier(exported)\n```\n\nSee also `t.isExportNamespaceSpecifier(node, opts)` and `t.assertExportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportSpecifier\n```javascript\nt.exportSpecifier(local, exported)\n```\n\nSee also `t.isExportSpecifier(node, opts)` and `t.assertExportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `exported`: `Identifier` (required)\n\n---\n\n### expressionStatement\n```javascript\nt.expressionStatement(expression)\n```\n\nSee also `t.isExpressionStatement(node, opts)` and `t.assertExpressionStatement(node, opts)`.\n\nAliases: `Statement`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### file\n```javascript\nt.file(program, comments, tokens)\n```\n\nSee also `t.isFile(node, opts)` and `t.assertFile(node, opts)`.\n\n - `program`: `Program` (required)\n - `comments` (required)\n - `tokens` (required)\n\n---\n\n### forAwaitStatement\n```javascript\nt.forAwaitStatement(left, right, body)\n```\n\nSee also `t.isForAwaitStatement(node, opts)` and `t.assertForAwaitStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forInStatement\n```javascript\nt.forInStatement(left, right, body)\n```\n\nSee also `t.isForInStatement(node, opts)` and `t.assertForInStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forOfStatement\n```javascript\nt.forOfStatement(left, right, body)\n```\n\nSee also `t.isForOfStatement(node, opts)` and `t.assertForOfStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forStatement\n```javascript\nt.forStatement(init, test, update, body)\n```\n\nSee also `t.isForStatement(node, opts)` and `t.assertForStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`\n\n - `init`: `VariableDeclaration | Expression` (default: `null`)\n - `test`: `Expression` (default: `null`)\n - `update`: `Expression` (default: `null`)\n - `body`: `Statement` (required)\n\n---\n\n### functionDeclaration\n```javascript\nt.functionDeclaration(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionDeclaration(node, opts)` and `t.assertFunctionDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Statement`, `Pureish`, `Declaration`\n\n - `id`: `Identifier` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionExpression\n```javascript\nt.functionExpression(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionExpression(node, opts)` and `t.assertFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionTypeAnnotation\n```javascript\nt.functionTypeAnnotation(typeParameters, params, rest, returnType)\n```\n\nSee also `t.isFunctionTypeAnnotation(node, opts)` and `t.assertFunctionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeParameters` (required)\n - `params` (required)\n - `rest` (required)\n - `returnType` (required)\n\n---\n\n### functionTypeParam\n```javascript\nt.functionTypeParam(name, typeAnnotation)\n```\n\nSee also `t.isFunctionTypeParam(node, opts)` and `t.assertFunctionTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n - `name` (required)\n - `typeAnnotation` (required)\n\n---\n\n### genericTypeAnnotation\n```javascript\nt.genericTypeAnnotation(id, typeParameters)\n```\n\nSee also `t.isGenericTypeAnnotation(node, opts)` and `t.assertGenericTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### identifier\n```javascript\nt.identifier(name)\n```\n\nSee also `t.isIdentifier(node, opts)` and `t.assertIdentifier(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `name``string` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `typeAnnotation` (default: `null`)\n\n---\n\n### ifStatement\n```javascript\nt.ifStatement(test, consequent, alternate)\n```\n\nSee also `t.isIfStatement(node, opts)` and `t.assertIfStatement(node, opts)`.\n\nAliases: `Statement`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Statement` (required)\n - `alternate`: `Statement` (default: `null`)\n\n---\n\n### import\n```javascript\nt.import()\n```\n\nSee also `t.isImport(node, opts)` and `t.assertImport(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### importDeclaration\n```javascript\nt.importDeclaration(specifiers, source)\n```\n\nSee also `t.isImportDeclaration(node, opts)` and `t.assertImportDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`\n\n - `specifiers`: `Array<ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier>` (required)\n - `source`: `StringLiteral` (required)\n\n---\n\n### importDefaultSpecifier\n```javascript\nt.importDefaultSpecifier(local)\n```\n\nSee also `t.isImportDefaultSpecifier(node, opts)` and `t.assertImportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importNamespaceSpecifier\n```javascript\nt.importNamespaceSpecifier(local)\n```\n\nSee also `t.isImportNamespaceSpecifier(node, opts)` and `t.assertImportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importSpecifier\n```javascript\nt.importSpecifier(local, imported)\n```\n\nSee also `t.isImportSpecifier(node, opts)` and `t.assertImportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `imported`: `Identifier` (required)\n - `importKind`: `null | 'type' | 'typeof'` (default: `null`)\n\n---\n\n### interfaceDeclaration\n```javascript\nt.interfaceDeclaration(id, typeParameters, extends, body)\n```\n\nSee also `t.isInterfaceDeclaration(node, opts)` and `t.assertInterfaceDeclaration(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### interfaceExtends\n```javascript\nt.interfaceExtends(id, typeParameters)\n```\n\nSee also `t.isInterfaceExtends(node, opts)` and `t.assertInterfaceExtends(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### intersectionTypeAnnotation\n```javascript\nt.intersectionTypeAnnotation(types)\n```\n\nSee also `t.isIntersectionTypeAnnotation(node, opts)` and `t.assertIntersectionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### jSXAttribute\n```javascript\nt.jSXAttribute(name, value)\n```\n\nSee also `t.isJSXAttribute(node, opts)` and `t.assertJSXAttribute(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXNamespacedName` (required)\n - `value`: `JSXElement | StringLiteral | JSXExpressionContainer` (default: `null`)\n\n---\n\n### jSXClosingElement\n```javascript\nt.jSXClosingElement(name)\n```\n\nSee also `t.isJSXClosingElement(node, opts)` and `t.assertJSXClosingElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n\n---\n\n### jSXElement\n```javascript\nt.jSXElement(openingElement, closingElement, children, selfClosing)\n```\n\nSee also `t.isJSXElement(node, opts)` and `t.assertJSXElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`, `Expression`\n\n - `openingElement`: `JSXOpeningElement` (required)\n - `closingElement`: `JSXClosingElement` (default: `null`)\n - `children`: `Array<JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement>` (required)\n - `selfClosing` (required)\n\n---\n\n### jSXEmptyExpression\n```javascript\nt.jSXEmptyExpression()\n```\n\nSee also `t.isJSXEmptyExpression(node, opts)` and `t.assertJSXEmptyExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n\n---\n\n### jSXExpressionContainer\n```javascript\nt.jSXExpressionContainer(expression)\n```\n\nSee also `t.isJSXExpressionContainer(node, opts)` and `t.assertJSXExpressionContainer(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXIdentifier\n```javascript\nt.jSXIdentifier(name)\n```\n\nSee also `t.isJSXIdentifier(node, opts)` and `t.assertJSXIdentifier(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `name`: `string` (required)\n\n---\n\n### jSXMemberExpression\n```javascript\nt.jSXMemberExpression(object, property)\n```\n\nSee also `t.isJSXMemberExpression(node, opts)` and `t.assertJSXMemberExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `object`: `JSXMemberExpression | JSXIdentifier` (required)\n - `property`: `JSXIdentifier` (required)\n\n---\n\n### jSXNamespacedName\n```javascript\nt.jSXNamespacedName(namespace, name)\n```\n\nSee also `t.isJSXNamespacedName(node, opts)` and `t.assertJSXNamespacedName(node, opts)`.\n\nAliases: `JSX`\n\n - `namespace`: `JSXIdentifier` (required)\n - `name`: `JSXIdentifier` (required)\n\n---\n\n### jSXOpeningElement\n```javascript\nt.jSXOpeningElement(name, attributes, selfClosing)\n```\n\nSee also `t.isJSXOpeningElement(node, opts)` and `t.assertJSXOpeningElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n - `attributes`: `Array<JSXAttribute | JSXSpreadAttribute>` (required)\n - `selfClosing`: `boolean` (default: `false`)\n\n---\n\n### jSXSpreadAttribute\n```javascript\nt.jSXSpreadAttribute(argument)\n```\n\nSee also `t.isJSXSpreadAttribute(node, opts)` and `t.assertJSXSpreadAttribute(node, opts)`.\n\nAliases: `JSX`\n\n - `argument`: `Expression` (required)\n\n---\n\n### jSXSpreadChild\n```javascript\nt.jSXSpreadChild(expression)\n```\n\nSee also `t.isJSXSpreadChild(node, opts)` and `t.assertJSXSpreadChild(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXText\n```javascript\nt.jSXText(value)\n```\n\nSee also `t.isJSXText(node, opts)` and `t.assertJSXText(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### labeledStatement\n```javascript\nt.labeledStatement(label, body)\n```\n\nSee also `t.isLabeledStatement(node, opts)` and `t.assertLabeledStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `label`: `Identifier` (required)\n - `body`: `Statement` (required)\n\n---\n\n### logicalExpression\n```javascript\nt.logicalExpression(operator, left, right)\n```\n\nSee also `t.isLogicalExpression(node, opts)` and `t.assertLogicalExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'||' | '&&'` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### memberExpression\n```javascript\nt.memberExpression(object, property, computed)\n```\n\nSee also `t.isMemberExpression(node, opts)` and `t.assertMemberExpression(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `object`: `Expression` (required)\n - `property`if computed then `Expression` else `Identifier` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### metaProperty\n```javascript\nt.metaProperty(meta, property)\n```\n\nSee also `t.isMetaProperty(node, opts)` and `t.assertMetaProperty(node, opts)`.\n\nAliases: `Expression`\n\n - `meta`: `string` (required)\n - `property`: `string` (required)\n\n---\n\n### mixedTypeAnnotation\n```javascript\nt.mixedTypeAnnotation()\n```\n\nSee also `t.isMixedTypeAnnotation(node, opts)` and `t.assertMixedTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### newExpression\n```javascript\nt.newExpression(callee, arguments)\n```\n\nSee also `t.isNewExpression(node, opts)` and `t.assertNewExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### noop\n```javascript\nt.noop()\n```\n\nSee also `t.isNoop(node, opts)` and `t.assertNoop(node, opts)`.\n\n\n---\n\n### nullLiteral\n```javascript\nt.nullLiteral()\n```\n\nSee also `t.isNullLiteral(node, opts)` and `t.assertNullLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n\n---\n\n### nullLiteralTypeAnnotation\n```javascript\nt.nullLiteralTypeAnnotation()\n```\n\nSee also `t.isNullLiteralTypeAnnotation(node, opts)` and `t.assertNullLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### nullableTypeAnnotation\n```javascript\nt.nullableTypeAnnotation(typeAnnotation)\n```\n\nSee also `t.isNullableTypeAnnotation(node, opts)` and `t.assertNullableTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### numberTypeAnnotation\n```javascript\nt.numberTypeAnnotation()\n```\n\nSee also `t.isNumberTypeAnnotation(node, opts)` and `t.assertNumberTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### numericLiteral\n```javascript\nt.numericLiteral(value)\n```\n\nSee also `t.isNumericLiteral(node, opts)` and `t.assertNumericLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `number` (required)\n\n---\n\n### numericLiteralTypeAnnotation\n```javascript\nt.numericLiteralTypeAnnotation()\n```\n\nSee also `t.isNumericLiteralTypeAnnotation(node, opts)` and `t.assertNumericLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### objectExpression\n```javascript\nt.objectExpression(properties)\n```\n\nSee also `t.isObjectExpression(node, opts)` and `t.assertObjectExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `properties`: `Array<ObjectMethod | ObjectProperty | SpreadProperty>` (required)\n\n---\n\n### objectMethod\n```javascript\nt.objectMethod(kind, key, params, body, computed)\n```\n\nSee also `t.isObjectMethod(node, opts)` and `t.assertObjectMethod(node, opts)`.\n\nAliases: `UserWhitespacable`, `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`, `ObjectMember`\n\n - `kind`: `\"method\" | \"get\" | \"set\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### objectPattern\n```javascript\nt.objectPattern(properties, typeAnnotation)\n```\n\nSee also `t.isObjectPattern(node, opts)` and `t.assertObjectPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `properties`: `Array<RestProperty | Property>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectProperty\n```javascript\nt.objectProperty(key, value, computed, shorthand, decorators)\n```\n\nSee also `t.isObjectProperty(node, opts)` and `t.assertObjectProperty(node, opts)`.\n\nAliases: `UserWhitespacable`, `Property`, `ObjectMember`\n\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `value`: `Expression | Pattern | RestElement` (required)\n - `computed`: `boolean` (default: `false`)\n - `shorthand`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectTypeAnnotation\n```javascript\nt.objectTypeAnnotation(properties, indexers, callProperties)\n```\n\nSee also `t.isObjectTypeAnnotation(node, opts)` and `t.assertObjectTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `properties` (required)\n - `indexers` (required)\n - `callProperties` (required)\n\n---\n\n### objectTypeCallProperty\n```javascript\nt.objectTypeCallProperty(value)\n```\n\nSee also `t.isObjectTypeCallProperty(node, opts)` and `t.assertObjectTypeCallProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `value` (required)\n\n---\n\n### objectTypeIndexer\n```javascript\nt.objectTypeIndexer(id, key, value)\n```\n\nSee also `t.isObjectTypeIndexer(node, opts)` and `t.assertObjectTypeIndexer(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `id` (required)\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeProperty\n```javascript\nt.objectTypeProperty(key, value)\n```\n\nSee also `t.isObjectTypeProperty(node, opts)` and `t.assertObjectTypeProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeSpreadProperty\n```javascript\nt.objectTypeSpreadProperty(argument)\n```\n\nSee also `t.isObjectTypeSpreadProperty(node, opts)` and `t.assertObjectTypeSpreadProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `argument` (required)\n\n---\n\n### parenthesizedExpression\n```javascript\nt.parenthesizedExpression(expression)\n```\n\nSee also `t.isParenthesizedExpression(node, opts)` and `t.assertParenthesizedExpression(node, opts)`.\n\nAliases: `Expression`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### program\n```javascript\nt.program(body, directives)\n```\n\nSee also `t.isProgram(node, opts)` and `t.assertProgram(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `FunctionParent`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### qualifiedTypeIdentifier\n```javascript\nt.qualifiedTypeIdentifier(id, qualification)\n```\n\nSee also `t.isQualifiedTypeIdentifier(node, opts)` and `t.assertQualifiedTypeIdentifier(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `qualification` (required)\n\n---\n\n### regExpLiteral\n```javascript\nt.regExpLiteral(pattern, flags)\n```\n\nSee also `t.isRegExpLiteral(node, opts)` and `t.assertRegExpLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `pattern`: `string` (required)\n - `flags`: `string` (default: `''`)\n\n---\n\n### restElement\n```javascript\nt.restElement(argument, typeAnnotation)\n```\n\nSee also `t.isRestElement(node, opts)` and `t.assertRestElement(node, opts)`.\n\nAliases: `LVal`\n\n - `argument`: `LVal` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### restProperty\n```javascript\nt.restProperty(argument)\n```\n\nSee also `t.isRestProperty(node, opts)` and `t.assertRestProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `LVal` (required)\n\n---\n\n### returnStatement\n```javascript\nt.returnStatement(argument)\n```\n\nSee also `t.isReturnStatement(node, opts)` and `t.assertReturnStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (default: `null`)\n\n---\n\n### sequenceExpression\n```javascript\nt.sequenceExpression(expressions)\n```\n\nSee also `t.isSequenceExpression(node, opts)` and `t.assertSequenceExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### spreadElement\n```javascript\nt.spreadElement(argument)\n```\n\nSee also `t.isSpreadElement(node, opts)` and `t.assertSpreadElement(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### spreadProperty\n```javascript\nt.spreadProperty(argument)\n```\n\nSee also `t.isSpreadProperty(node, opts)` and `t.assertSpreadProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### stringLiteral\n```javascript\nt.stringLiteral(value)\n```\n\nSee also `t.isStringLiteral(node, opts)` and `t.assertStringLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### stringLiteralTypeAnnotation\n```javascript\nt.stringLiteralTypeAnnotation()\n```\n\nSee also `t.isStringLiteralTypeAnnotation(node, opts)` and `t.assertStringLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### stringTypeAnnotation\n```javascript\nt.stringTypeAnnotation()\n```\n\nSee also `t.isStringTypeAnnotation(node, opts)` and `t.assertStringTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### super\n```javascript\nt.super()\n```\n\nSee also `t.isSuper(node, opts)` and `t.assertSuper(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### switchCase\n```javascript\nt.switchCase(test, consequent)\n```\n\nSee also `t.isSwitchCase(node, opts)` and `t.assertSwitchCase(node, opts)`.\n\n - `test`: `Expression` (default: `null`)\n - `consequent`: `Array<Statement>` (required)\n\n---\n\n### switchStatement\n```javascript\nt.switchStatement(discriminant, cases)\n```\n\nSee also `t.isSwitchStatement(node, opts)` and `t.assertSwitchStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Scopable`\n\n - `discriminant`: `Expression` (required)\n - `cases`: `Array<SwitchCase>` (required)\n\n---\n\n### taggedTemplateExpression\n```javascript\nt.taggedTemplateExpression(tag, quasi)\n```\n\nSee also `t.isTaggedTemplateExpression(node, opts)` and `t.assertTaggedTemplateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `tag`: `Expression` (required)\n - `quasi`: `TemplateLiteral` (required)\n\n---\n\n### templateElement\n```javascript\nt.templateElement(value, tail)\n```\n\nSee also `t.isTemplateElement(node, opts)` and `t.assertTemplateElement(node, opts)`.\n\n - `value` (required)\n - `tail`: `boolean` (default: `false`)\n\n---\n\n### templateLiteral\n```javascript\nt.templateLiteral(quasis, expressions)\n```\n\nSee also `t.isTemplateLiteral(node, opts)` and `t.assertTemplateLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `quasis`: `Array<TemplateElement>` (required)\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### thisExpression\n```javascript\nt.thisExpression()\n```\n\nSee also `t.isThisExpression(node, opts)` and `t.assertThisExpression(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### thisTypeAnnotation\n```javascript\nt.thisTypeAnnotation()\n```\n\nSee also `t.isThisTypeAnnotation(node, opts)` and `t.assertThisTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### throwStatement\n```javascript\nt.throwStatement(argument)\n```\n\nSee also `t.isThrowStatement(node, opts)` and `t.assertThrowStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (required)\n\n---\n\n### tryStatement\n```javascript\nt.tryStatement(block, handler, finalizer)\n```\n\nSee also `t.isTryStatement(node, opts)` and `t.assertTryStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `block` (required)\n - `handler` (default: `null`)\n - `finalizer`: `BlockStatement` (default: `null`)\n - `body`: `BlockStatement` (default: `null`)\n\n---\n\n### tupleTypeAnnotation\n```javascript\nt.tupleTypeAnnotation(types)\n```\n\nSee also `t.isTupleTypeAnnotation(node, opts)` and `t.assertTupleTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### typeAlias\n```javascript\nt.typeAlias(id, typeParameters, right)\n```\n\nSee also `t.isTypeAlias(node, opts)` and `t.assertTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### typeAnnotation\n```javascript\nt.typeAnnotation(typeAnnotation)\n```\n\nSee also `t.isTypeAnnotation(node, opts)` and `t.assertTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### typeCastExpression\n```javascript\nt.typeCastExpression(expression, typeAnnotation)\n```\n\nSee also `t.isTypeCastExpression(node, opts)` and `t.assertTypeCastExpression(node, opts)`.\n\nAliases: `Flow`, `ExpressionWrapper`, `Expression`\n\n - `expression` (required)\n - `typeAnnotation` (required)\n\n---\n\n### typeParameter\n```javascript\nt.typeParameter(bound)\n```\n\nSee also `t.isTypeParameter(node, opts)` and `t.assertTypeParameter(node, opts)`.\n\nAliases: `Flow`\n\n - `bound` (required)\n\n---\n\n### typeParameterDeclaration\n```javascript\nt.typeParameterDeclaration(params)\n```\n\nSee also `t.isTypeParameterDeclaration(node, opts)` and `t.assertTypeParameterDeclaration(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeParameterInstantiation\n```javascript\nt.typeParameterInstantiation(params)\n```\n\nSee also `t.isTypeParameterInstantiation(node, opts)` and `t.assertTypeParameterInstantiation(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeofTypeAnnotation\n```javascript\nt.typeofTypeAnnotation(argument)\n```\n\nSee also `t.isTypeofTypeAnnotation(node, opts)` and `t.assertTypeofTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `argument` (required)\n\n---\n\n### unaryExpression\n```javascript\nt.unaryExpression(operator, argument, prefix)\n```\n\nSee also `t.isUnaryExpression(node, opts)` and `t.assertUnaryExpression(node, opts)`.\n\nAliases: `UnaryLike`, `Expression`\n\n - `operator`: `'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `true`)\n\n---\n\n### unionTypeAnnotation\n```javascript\nt.unionTypeAnnotation(types)\n```\n\nSee also `t.isUnionTypeAnnotation(node, opts)` and `t.assertUnionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### updateExpression\n```javascript\nt.updateExpression(operator, argument, prefix)\n```\n\nSee also `t.isUpdateExpression(node, opts)` and `t.assertUpdateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `'++' | '--'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `false`)\n\n---\n\n### variableDeclaration\n```javascript\nt.variableDeclaration(kind, declarations)\n```\n\nSee also `t.isVariableDeclaration(node, opts)` and `t.assertVariableDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`\n\n - `kind`: `\"var\" | \"let\" | \"const\"` (required)\n - `declarations`: `Array<VariableDeclarator>` (required)\n\n---\n\n### variableDeclarator\n```javascript\nt.variableDeclarator(id, init)\n```\n\nSee also `t.isVariableDeclarator(node, opts)` and `t.assertVariableDeclarator(node, opts)`.\n\n - `id`: `LVal` (required)\n - `init`: `Expression` (default: `null`)\n\n---\n\n### voidTypeAnnotation\n```javascript\nt.voidTypeAnnotation()\n```\n\nSee also `t.isVoidTypeAnnotation(node, opts)` and `t.assertVoidTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### whileStatement\n```javascript\nt.whileStatement(test, body)\n```\n\nSee also `t.isWhileStatement(node, opts)` and `t.assertWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### withStatement\n```javascript\nt.withStatement(object, body)\n```\n\nSee also `t.isWithStatement(node, opts)` and `t.assertWithStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `object` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### yieldExpression\n```javascript\nt.yieldExpression(argument, delegate)\n```\n\nSee also `t.isYieldExpression(node, opts)` and `t.assertYieldExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (default: `null`)\n - `delegate`: `boolean` (default: `false`)\n\n---\n\n\n<!-- end generated section -->\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-types",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-types"
                },
                "babylon": {
                  "_from": "babylon@^6.17.2",
                  "_id": "babylon@6.17.4",
                  "_inBundle": false,
                  "_integrity": "sha512-kChlV+0SXkjE0vUn9OZ7pBMWRFd8uq3mZe8x1K6jhuNcAFAtEnjchFAqB+dYEXKyd+JpT6eppRR78QAr5gTsUw==",
                  "_location": "/babylon",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babylon/-/babylon-6.17.4.tgz",
                  "_shasum": "3e8b7402b88d22c3423e137a1577883b15ff869a",
                  "_spec": "babylon@^6.17.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": "[Circular]",
                  "ava": "[Circular]",
                  "bin": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "A JavaScript parser",
                  "devDependencies": "[Circular]",
                  "files": "[Circular]",
                  "greenkeeper": "[Circular]",
                  "homepage": "https://babeljs.io/",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "lib/index.js",
                  "name": "babylon",
                  "nyc": "[Circular]",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "6.17.4",
                  "readme": "<p align=\"center\">\n  <img alt=\"babylon\" src=\"https://raw.githubusercontent.com/babel/logo/master/babylon.png\" width=\"700\">\n</p>\n\n<p align=\"center\">\n  Babylon is a JavaScript parser used in <a href=\"https://github.com/babel/babel\">Babel</a>.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/babel/babylon\"><img alt=\"Travis Status\" src=\"https://img.shields.io/travis/babel/babylon/master.svg?style=flat&label=travis\"></a>\n  <a href=\"https://codecov.io/gh/babel/babylon\"><img alt=\"Codecov Status\" src=\"https://img.shields.io/codecov/c/github/babel/babylon/master.svg?style=flat\"></a>\n</p>\n\n - The latest ECMAScript version enabled by default (ES2017).\n - Comment attachment.\n - Support for JSX and Flow.\n - Support for experimental language proposals (accepting PRs for anything at least [stage-0](https://github.com/tc39/proposals/blob/master/stage-0-proposals.md)).\n\n## Credits\n\nHeavily based on [acorn](https://github.com/marijnh/acorn) and [acorn-jsx](https://github.com/RReverser/acorn-jsx),\nthanks to the awesome work of [@RReverser](https://github.com/RReverser) and [@marijnh](https://github.com/marijnh).\n\nSignificant diversions are expected to occur in the future such as streaming, EBNF definitions, sweet.js integration, interspatial parsing and more.\n\n## API\n\n### `babylon.parse(code, [options])`\n\n### `babylon.parseExpression(code, [options])`\n\n`parse()` parses the provided `code` as an entire ECMAScript program, while\n`parseExpression()` tries to parse a single Expression with performance in\nmind. When in doubt, use `.parse()`.\n\n### Options\n\n- **allowImportExportEverywhere**: By default, `import` and `export`\n  declarations can only appear at a program's top level. Setting this\n  option to `true` allows them anywhere where a statement is allowed.\n\n- **allowReturnOutsideFunction**: By default, a return statement at\n  the top level raises an error. Set this to `true` to accept such\n  code.\n\n- **allowSuperOutsideMethod**: TODO\n\n- **sourceType**: Indicate the mode the code should be parsed in. Can be\n  either `\"script\"` or `\"module\"`.\n\n- **sourceFilename**: Correlate output AST nodes with their source filename.  Useful when generating code and source maps from the ASTs of multiple input files.\n\n- **startLine**: By default, the first line of code parsed is treated as line 1. You can provide a line number to alternatively start with. Useful for integration with other source tools.\n\n- **plugins**: Array containing the plugins that you want to enable.\n\n- **strictMode**: TODO\n\n### Output\n\nBabylon generates AST according to [Babel AST format][].\nIt is based on [ESTree spec][] with the following deviations:\n\n> There is now an `estree` plugin which reverts these deviations\n\n- [Literal][] token is replaced with [StringLiteral][], [NumericLiteral][], [BooleanLiteral][], [NullLiteral][], [RegExpLiteral][]\n- [Property][] token is replaced with [ObjectProperty][] and [ObjectMethod][]\n- [MethodDefinition][] is replaced with [ClassMethod][]\n- [Program][] and [BlockStatement][] contain additional `directives` field with [Directive][] and [DirectiveLiteral][]\n- [ClassMethod][], [ObjectProperty][], and [ObjectMethod][] value property's properties in [FunctionExpression][] is coerced/brought into the main method node.\n\nAST for JSX code is based on [Facebook JSX AST][] with the addition of one node type:\n\n- `JSXText`\n\n[Babel AST format]: https://github.com/babel/babylon/blob/master/ast/spec.md\n[ESTree spec]: https://github.com/estree/estree\n\n[Literal]: https://github.com/estree/estree/blob/master/es5.md#literal\n[Property]: https://github.com/estree/estree/blob/master/es5.md#property\n[MethodDefinition]: https://github.com/estree/estree/blob/master/es2015.md#methoddefinition\n\n[StringLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#stringliteral\n[NumericLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#numericliteral\n[BooleanLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#booleanliteral\n[NullLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#nullliteral\n[RegExpLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#regexpliteral\n[ObjectProperty]: https://github.com/babel/babylon/blob/master/ast/spec.md#objectproperty\n[ObjectMethod]: https://github.com/babel/babylon/blob/master/ast/spec.md#objectmethod\n[ClassMethod]: https://github.com/babel/babylon/blob/master/ast/spec.md#classmethod\n[Program]: https://github.com/babel/babylon/blob/master/ast/spec.md#programs\n[BlockStatement]: https://github.com/babel/babylon/blob/master/ast/spec.md#blockstatement\n[Directive]: https://github.com/babel/babylon/blob/master/ast/spec.md#directive\n[DirectiveLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#directiveliteral\n[FunctionExpression]: https://github.com/babel/babylon/blob/master/ast/spec.md#functionexpression\n\n[Facebook JSX AST]: https://github.com/facebook/jsx/blob/master/AST.md\n\n### Semver\n\nBabylon follows semver in most situations. The only thing to note is that some spec-compliancy bug fixes may be released under patch versions.\n\nFor example: We push a fix to early error on something like [#107](https://github.com/babel/babylon/pull/107) - multiple default exports per file. That would be considered a bug fix even though it would cause a build to fail.\n\n### Example\n\n```javascript\nrequire(\"babylon\").parse(\"code\", {\n  // parse in strict mode and allow module declarations\n  sourceType: \"module\",\n\n  plugins: [\n    // enable jsx and flow syntax\n    \"jsx\",\n    \"flow\"\n  ]\n});\n```\n\n### Plugins\n\n - `estree`\n - `jsx`\n - `flow`\n - `doExpressions`\n - `objectRestSpread`\n - `decorators` (Based on an outdated version of the Decorators proposal. Will be removed in a future version of `Babylon`)\n - `classProperties`\n - `exportExtensions`\n - `asyncGenerators`\n - `functionBind`\n - `functionSent`\n - `dynamicImport`\n - `templateInvalidEscapes`\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babylon",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babylon"
                },
                "debug": {
                  "_from": "debug@^2.1.1",
                  "_id": "debug@2.6.8",
                  "_inBundle": false,
                  "_integrity": "sha1-5zFTHKLt4n0YgiJCfaF4IdaP9Pw=",
                  "_location": "/debug",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "debug@^2.1.1",
                    "name": "debug",
                    "escapedName": "debug",
                    "rawSpec": "^2.1.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^2.1.1"
                  },
                  "_requiredBy": [
                    "/babel-core",
                    "/babel-traverse"
                  ],
                  "_resolved": "https://registry.npmjs.org/debug/-/debug-2.6.8.tgz",
                  "_shasum": "e731531ca2ede27d188222427da17821d68ff4fc",
                  "_spec": "debug@^2.1.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
                  "author": {
                    "name": "TJ Holowaychuk",
                    "email": "tj@vision-media.ca"
                  },
                  "browser": "./src/browser.js",
                  "bugs": {
                    "url": "https://github.com/visionmedia/debug/issues"
                  },
                  "bundleDependencies": false,
                  "component": {
                    "scripts": {
                      "debug/index.js": "browser.js",
                      "debug/debug.js": "debug.js"
                    }
                  },
                  "contributors": [
                    {
                      "name": "Nathan Rajlich",
                      "email": "nathan@tootallnate.net",
                      "url": "http://n8.io"
                    },
                    {
                      "name": "Andrew Rhyne",
                      "email": "rhyneandrew@gmail.com"
                    }
                  ],
                  "dependencies": {},
                  "deprecated": false,
                  "description": "small debugging utility",
                  "devDependencies": {
                    "browserify": "9.0.3",
                    "chai": "^3.5.0",
                    "concurrently": "^3.1.0",
                    "coveralls": "^2.11.15",
                    "eslint": "^3.12.1",
                    "istanbul": "^0.4.5",
                    "karma": "^1.3.0",
                    "karma-chai": "^0.1.0",
                    "karma-mocha": "^1.3.0",
                    "karma-phantomjs-launcher": "^1.0.2",
                    "karma-sinon": "^1.0.5",
                    "mocha": "^3.2.0",
                    "mocha-lcov-reporter": "^1.2.0",
                    "rimraf": "^2.5.4",
                    "sinon": "^1.17.6",
                    "sinon-chai": "^2.8.0"
                  },
                  "homepage": "https://github.com/visionmedia/debug#readme",
                  "keywords": [
                    "debug",
                    "log",
                    "debugger"
                  ],
                  "license": "MIT",
                  "main": "./src/index.js",
                  "name": "debug",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/visionmedia/debug.git"
                  },
                  "version": "2.6.8",
                  "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers) \n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n\n\nA tiny node.js debugging utility modelled after node core's debugging technique.\n\n**Discussion around the V3 API is under way [here](https://github.com/visionmedia/debug/issues/370)**\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample _app.js_:\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample _worker.js_:\n\n```js\nvar debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n```\n\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\n\n  ![debug http and worker](http://f.cl.ly/items/18471z1H402O24072r1J/Screenshot.png)\n\n  ![debug worker](http://f.cl.ly/items/1X413v1a3M0d3C2c1E0i/Screenshot.png)\n\n#### Windows note\n\n On Windows the environment variable is set using the `set` command.\n\n ```cmd\n set DEBUG=*,-not_this\n ```\n\n Note that PowerShell uses different syntax to set environment variables.\n\n ```cmd\n $env:DEBUG = \"*,-not_this\"\n  ```\n\nThen, run the program to be debugged as usual.\n\n## Millisecond diff\n\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n  ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)\n\n  When stdout is not a TTY, `Date#toUTCString()` is used, making it more useful for logging the debug information as shown below:\n\n  ![](http://f.cl.ly/items/112H3i0e0o0P0a2Q2r11/Screenshot.png)\n\n## Conventions\n\n  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".\n\n## Wildcards\n\n  The `*` character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with `DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\n  You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, `DEBUG=*,-connect:*` would include all debuggers except those starting with \"connect:\".\n\n## Environment Variables\n\n  When running through Node.js, you can set a few environment variables that will\n  change the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth. |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n  __Note:__ The environment variables beginning with `DEBUG_` end up being\n  converted into an Options object that gets used with `%o`/`%O` formatters.\n  See the Node.js documentation for\n  [`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\n  for the complete list.\n\n## Formatters\n\n\n  Debug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting. Below are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n### Custom formatters\n\n  You can add custom formatters by extending the `debug.formatters` object. For example, if you wanted to add support for rendering a Buffer as hex with `%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// …elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n## Browser support\n  You can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\n  or just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\n  if you don't want to build it yourself.\n\n  Debug's enable state is currently persisted by `localStorage`.\n  Consider the situation shown below where you have `worker:a` and `worker:b`,\n  and wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n#### Web Inspector Colors\n\n  Colors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\n  option. These are WebKit web inspectors, Firefox ([since version\n  31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\n  and the Firebug plugin for Firefox (any version).\n\n  Colored output looks something like:\n\n  ![](https://cloud.githubusercontent.com/assets/71256/3139768/b98c5fd8-e8ef-11e3-862a-f7253b6f47c6.png)\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample _stdout.js_:\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n \n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "ms": "2.0.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/debug",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "debug"
                },
                "globals": {
                  "_from": "globals@^9.0.0",
                  "_id": "globals@9.18.0",
                  "_inBundle": false,
                  "_integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==",
                  "_location": "/globals",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "globals@^9.0.0",
                    "name": "globals",
                    "escapedName": "globals",
                    "rawSpec": "^9.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^9.0.0"
                  },
                  "_requiredBy": [
                    "/babel-traverse"
                  ],
                  "_resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
                  "_shasum": "aa3896b3e69b487f17e31ed2143d69a8e30c2d8a",
                  "_spec": "globals@^9.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-traverse",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "http://sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/globals/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Global identifiers from different JavaScript environments",
                  "devDependencies": {
                    "mocha": "*"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js",
                    "globals.json"
                  ],
                  "homepage": "https://github.com/sindresorhus/globals#readme",
                  "keywords": [
                    "globals",
                    "global",
                    "identifiers",
                    "variables",
                    "vars",
                    "jshint",
                    "eslint",
                    "environments"
                  ],
                  "license": "MIT",
                  "name": "globals",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/globals.git"
                  },
                  "scripts": {
                    "test": "mocha"
                  },
                  "version": "9.18.0",
                  "readme": "# globals [![Build Status](https://travis-ci.org/sindresorhus/globals.svg?branch=master)](https://travis-ci.org/sindresorhus/globals)\n\n> Global identifiers from different JavaScript environments\n\nExtracted from [JSHint](https://github.com/jshint/jshint/blob/3a8efa979dbb157bfb5c10b5826603a55a33b9ad/src/vars.js) and [ESLint](https://github.com/eslint/eslint/blob/b648406218f8a2d7302b98f5565e23199f44eb31/conf/environments.json) and merged.\n\nIt's just a [JSON file](globals.json), so use it in whatever environment you like.\n\n**This module [no longer accepts](https://github.com/sindresorhus/globals/issues/82) new environments. If you need it for ESLint, just [create a plugin](http://eslint.org/docs/developer-guide/working-with-plugins#environments-in-plugins).**\n\n\n## Install\n\n```\n$ npm install --save globals\n```\n\n\n## Usage\n\n```js\nvar globals = require('globals');\n\nconsole.log(globals.browser);\n/*\n{\n\taddEventListener: false,\n\tapplicationCache: false,\n\tArrayBuffer: false,\n\tatob: false,\n\t...\n}\n*/\n```\n\nEach global is given a value of `true` or `false`. A value of `true` indicates that the variable may be overwritten. A value of `false` indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be `false` unless we hear otherwise.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/globals",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "invariant": {
                  "_from": "invariant@^2.2.0",
                  "_id": "invariant@2.2.2",
                  "_inBundle": false,
                  "_integrity": "sha1-nh9WrArNtr8wMwbzOL47IErmA2A=",
                  "_location": "/invariant",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "invariant@^2.2.0",
                    "name": "invariant",
                    "escapedName": "invariant",
                    "rawSpec": "^2.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^2.2.0"
                  },
                  "_requiredBy": [
                    "/babel-traverse"
                  ],
                  "_resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.2.tgz",
                  "_shasum": "9e1f56ac0acdb6bf303306f338be3b204ae60360",
                  "_spec": "invariant@^2.2.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-traverse",
                  "author": {
                    "name": "Andres Suarez",
                    "email": "zertosh@gmail.com"
                  },
                  "browser": "browser.js",
                  "browserify": {
                    "transform": [
                      "loose-envify"
                    ]
                  },
                  "bugs": {
                    "url": "https://github.com/zertosh/invariant/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "loose-envify": {
                      "_from": "loose-envify@^1.0.0",
                      "_id": "loose-envify@1.3.1",
                      "_inBundle": false,
                      "_integrity": "sha1-0aitM/qc4OcT1l/dCsi3SNR4yEg=",
                      "_location": "/loose-envify",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "loose-envify@^1.0.0",
                        "name": "loose-envify",
                        "escapedName": "loose-envify",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/invariant"
                      ],
                      "_resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.3.1.tgz",
                      "_shasum": "d1a8ad33fa9ce0e713d65fdd0ac8b748d478c848",
                      "_spec": "loose-envify@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/invariant",
                      "author": {
                        "name": "Andres Suarez",
                        "email": "zertosh@gmail.com"
                      },
                      "bin": {
                        "loose-envify": "cli.js"
                      },
                      "bugs": {
                        "url": "https://github.com/zertosh/loose-envify/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {
                        "js-tokens": {
                          "_from": "js-tokens@^3.0.0",
                          "_id": "js-tokens@3.0.2",
                          "_inBundle": false,
                          "_integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls=",
                          "_location": "/js-tokens",
                          "_phantomChildren": "[Circular]",
                          "_requested": "[Circular]",
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",
                          "_shasum": "9866df395102130e38f7f996bceb65443209c25b",
                          "_spec": "js-tokens@^3.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-code-frame",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "bundleDependencies": false,
                          "deprecated": false,
                          "description": "A regex that tokenizes JavaScript.",
                          "devDependencies": "[Circular]",
                          "files": "[Circular]",
                          "homepage": "https://github.com/lydell/js-tokens#readme",
                          "keywords": "[Circular]",
                          "license": "MIT",
                          "name": "js-tokens",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "3.0.2",
                          "readme": "Overview [![Build Status](https://travis-ci.org/lydell/js-tokens.svg?branch=master)](https://travis-ci.org/lydell/js-tokens)\n========\n\nA regex that tokenizes JavaScript.\n\n```js\nvar jsTokens = require(\"js-tokens\").default\n\nvar jsString = \"var foo=opts.foo;\\n...\"\n\njsString.match(jsTokens)\n// [\"var\", \" \", \"foo\", \"=\", \"opts\", \".\", \"foo\", \";\", \"\\n\", ...]\n```\n\n\nInstallation\n============\n\n`npm install js-tokens`\n\n```js\nimport jsTokens from \"js-tokens\"\n// or:\nvar jsTokens = require(\"js-tokens\").default\n```\n\n\nUsage\n=====\n\n### `jsTokens` ###\n\nA regex with the `g` flag that matches JavaScript tokens.\n\nThe regex _always_ matches, even invalid JavaScript and the empty string.\n\nThe next match is always directly after the previous.\n\n### `var token = matchToToken(match)` ###\n\n```js\nimport {matchToToken} from \"js-tokens\"\n// or:\nvar matchToToken = require(\"js-tokens\").matchToToken\n```\n\nTakes a `match` returned by `jsTokens.exec(string)`, and returns a `{type:\nString, value: String}` object. The following types are available:\n\n- string\n- comment\n- regex\n- number\n- name\n- punctuator\n- whitespace\n- invalid\n\nMulti-line comments and strings also have a `closed` property indicating if the\ntoken was closed or not (see below).\n\nComments and strings both come in several flavors. To distinguish them, check if\nthe token starts with `//`, `/*`, `'`, `\"` or `` ` ``.\n\nNames are ECMAScript IdentifierNames, that is, including both identifiers and\nkeywords. You may use [is-keyword-js] to tell them apart.\n\nWhitespace includes both line terminators and other whitespace.\n\n[is-keyword-js]: https://github.com/crissdev/is-keyword-js\n\n\nECMAScript support\n==================\n\nThe intention is to always support the latest stable ECMAScript version.\n\nIf adding support for a newer version requires changes, a new version with a\nmajor verion bump will be released.\n\nCurrently, [ECMAScript 2017] is supported.\n\n[ECMAScript 2017]: https://www.ecma-international.org/ecma-262/8.0/index.html\n\n\nInvalid code handling\n=====================\n\nUnterminated strings are still matched as strings. JavaScript strings cannot\ncontain (unescaped) newlines, so unterminated strings simply end at the end of\nthe line. Unterminated template strings can contain unescaped newlines, though,\nso they go on to the end of input.\n\nUnterminated multi-line comments are also still matched as comments. They\nsimply go on to the end of the input.\n\nUnterminated regex literals are likely matched as division and whatever is\ninside the regex.\n\nInvalid ASCII characters have their own capturing group.\n\nInvalid non-ASCII characters are treated as names, to simplify the matching of\nnames (except unicode spaces which are treated as whitespace).\n\nRegex literals may contain invalid regex syntax. They are still matched as\nregex literals. They may also contain repeated regex flags, to keep the regex\nsimple.\n\nStrings may contain invalid escape sequences.\n\n\nLimitations\n===========\n\nTokenizing JavaScript using regexes—in fact, _one single regex_—won’t be\nperfect. But that’s not the point either.\n\nYou may compare jsTokens with [esprima] by using `esprima-compare.js`.\nSee `npm run esprima-compare`!\n\n[esprima]: http://esprima.org/\n\n### Template string interpolation ###\n\nTemplate strings are matched as single tokens, from the starting `` ` `` to the\nending `` ` ``, including interpolations (whose tokens are not matched\nindividually).\n\nMatching template string interpolations requires recursive balancing of `{` and\n`}`—something that JavaScript regexes cannot do. Only one level of nesting is\nsupported.\n\n### Division and regex literals collision ###\n\nConsider this example:\n\n```js\nvar g = 9.82\nvar number = bar / 2/g\n\nvar regex = / 2/g\n```\n\nA human can easily understand that in the `number` line we’re dealing with\ndivision, and in the `regex` line we’re dealing with a regex literal. How come?\nBecause humans can look at the whole code to put the `/` characters in context.\nA JavaScript regex cannot. It only sees forwards.\n\nWhen the `jsTokens` regex scans throught the above, it will see the following\nat the end of both the `number` and `regex` rows:\n\n```js\n/ 2/g\n```\n\nIt is then impossible to know if that is a regex literal, or part of an\nexpression dealing with division.\n\nHere is a similar case:\n\n```js\nfoo /= 2/g\nfoo(/= 2/g)\n```\n\nThe first line divides the `foo` variable with `2/g`. The second line calls the\n`foo` function with the regex literal `/= 2/g`. Again, since `jsTokens` only\nsees forwards, it cannot tell the two cases apart.\n\nThere are some cases where we _can_ tell division and regex literals apart,\nthough.\n\nFirst off, we have the simple cases where there’s only one slash in the line:\n\n```js\nvar foo = 2/g\nfoo /= 2\n```\n\nRegex literals cannot contain newlines, so the above cases are correctly\nidentified as division. Things are only problematic when there are more than\none non-comment slash in a single line.\n\nSecondly, not every character is a valid regex flag.\n\n```js\nvar number = bar / 2/e\n```\n\nThe above example is also correctly identified as division, because `e` is not a\nvalid regex flag. I initially wanted to future-proof by allowing `[a-zA-Z]*`\n(any letter) as flags, but it is not worth it since it increases the amount of\nambigous cases. So only the standard `g`, `m`, `i`, `y` and `u` flags are\nallowed. This means that the above example will be identified as division as\nlong as you don’t rename the `e` variable to some permutation of `gmiyu` 1 to 5\ncharacters long.\n\nLastly, we can look _forward_ for information.\n\n- If the token following what looks like a regex literal is not valid after a\n  regex literal, but is valid in a division expression, then the regex literal\n  is treated as division instead. For example, a flagless regex cannot be\n  followed by a string, number or name, but all of those three can be the\n  denominator of a division.\n- Generally, if what looks like a regex literal is followed by an operator, the\n  regex literal is treated as division instead. This is because regexes are\n  seldomly used with operators (such as `+`, `*`, `&&` and `==`), but division\n  could likely be part of such an expression.\n\nPlease consult the regex source and the test cases for precise information on\nwhen regex or division is matched (should you need to know). In short, you\ncould sum it up as:\n\nIf the end of a statement looks like a regex literal (even if it isn’t), it\nwill be treated as one. Otherwise it should work as expected (if you write sane\ncode).\n\n\nLicense\n=======\n\n[MIT](LICENSE).\n",
                          "readmeFilename": "README.md",
                          "dependencies": {},
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/js-tokens",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "js-tokens"
                        }
                      },
                      "deprecated": false,
                      "description": "Fast (and loose) selective `process.env` replacer using js-tokens instead of an AST",
                      "devDependencies": {
                        "browserify": "^13.1.1",
                        "envify": "^3.4.0",
                        "tap": "^8.0.0"
                      },
                      "homepage": "https://github.com/zertosh/loose-envify",
                      "keywords": [
                        "environment",
                        "variables",
                        "browserify",
                        "browserify-transform",
                        "transform",
                        "source",
                        "configuration"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "loose-envify",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/zertosh/loose-envify.git"
                      },
                      "scripts": {
                        "test": "tap test/*.js"
                      },
                      "version": "1.3.1",
                      "readme": "# loose-envify\n\n[![Build Status](https://travis-ci.org/zertosh/loose-envify.svg?branch=master)](https://travis-ci.org/zertosh/loose-envify)\n\nFast (and loose) selective `process.env` replacer using [js-tokens](https://github.com/lydell/js-tokens) instead of an AST. Works just like [envify](https://github.com/hughsk/envify) but much faster.\n\n## Gotchas\n\n* Doesn't handle broken syntax.\n* Doesn't look inside embedded expressions in template strings.\n  - **this won't work:**\n  ```js\n  console.log(`the current env is ${process.env.NODE_ENV}`);\n  ```\n* Doesn't replace oddly-spaced or oddly-commented expressions.\n  - **this won't work:**\n  ```js\n  console.log(process./*won't*/env./*work*/NODE_ENV);\n  ```\n\n## Usage/Options\n\nloose-envify has the exact same interface as [envify](https://github.com/hughsk/envify), including the CLI.\n\n## Benchmark\n\n```\nenvify:\n\n  $ for i in {1..5}; do node bench/bench.js 'envify'; done\n  708ms\n  727ms\n  791ms\n  719ms\n  720ms\n\nloose-envify:\n\n  $ for i in {1..5}; do node bench/bench.js '../'; done\n  51ms\n  52ms\n  52ms\n  52ms\n  52ms\n```\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "js-tokens": "^3.0.0"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/loose-envify",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "invariant",
                  "devDependencies": {
                    "browserify": "^11.0.1",
                    "flow-bin": "^0.35.0",
                    "tap": "^1.4.0"
                  },
                  "files": [
                    "browser.js",
                    "invariant.js",
                    "invariant.js.flow"
                  ],
                  "homepage": "https://github.com/zertosh/invariant#readme",
                  "keywords": [
                    "test",
                    "invariant"
                  ],
                  "license": "BSD-3-Clause",
                  "main": "invariant.js",
                  "name": "invariant",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/zertosh/invariant.git"
                  },
                  "scripts": {
                    "test": "NODE_ENV=production tap test/*.js && NODE_ENV=development tap test/*.js"
                  },
                  "version": "2.2.2",
                  "readme": "# invariant\n\n[![Build Status](https://travis-ci.org/zertosh/invariant.svg?branch=master)](https://travis-ci.org/zertosh/invariant)\n\nA mirror of Facebook's `invariant` (e.g. [React](https://github.com/facebook/react/blob/v0.13.3/src/vendor/core/invariant.js), [flux](https://github.com/facebook/flux/blob/2.0.2/src/invariant.js)).\n\nA way to provide descriptive errors in development but generic errors in production.\n\n## Install\n\nWith [npm](http://npmjs.org) do:\n\n```sh\nnpm install invariant\n```\n\n## `invariant(condition, message)`\n\n```js\nvar invariant = require('invariant');\n\ninvariant(someTruthyVal, 'This will not throw');\n// No errors\n\ninvariant(someFalseyVal, 'This will throw an error with this message');\n// Error: Invariant Violation: This will throw an error with this message\n```\n\n**Note:** When `process.env.NODE_ENV` is not `production`, the message is required. If omitted, `invariant` will throw regardless of the truthiness of the condition. When `process.env.NODE_ENV` is `production`, the message is optional – so they can be minified away.\n\n### Browser\n\nWhen used with [browserify](https://github.com/substack/node-browserify), it'll use `browser.js` (instead of `invariant.js`) and the [envify](https://github.com/hughsk/envify) transform will inline the value of `process.env.NODE_ENV`.\n\n### Node\n\nThe node version is optimized around the performance implications of accessing `process.env`. The value of `process.env.NODE_ENV` is cached, and repeatedly used instead of reading `proces.env`. See [Server rendering is slower with npm react #812](https://github.com/facebook/react/issues/812)\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "loose-envify": "^1.0.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/invariant",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "lodash": {
                  "_from": "lodash@^4.2.0",
                  "_id": "lodash@4.17.4",
                  "_inBundle": false,
                  "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
                  "_location": "/lodash",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
                  "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
                  "_spec": "lodash@^4.2.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "contributors": "[Circular]",
                  "deprecated": false,
                  "description": "Lodash modular utilities.",
                  "homepage": "https://lodash.com/",
                  "icon": "https://lodash.com/icon.svg",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "lodash.js",
                  "name": "lodash",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "4.17.4",
                  "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "devDependencies": "[Circular]",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/lodash",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "lodash"
                }
              },
              "deprecated": false,
              "description": "The Babel Traverse module maintains the overall tree state, and is responsible for replacing, removing, and adding nodes",
              "devDependencies": "[Circular]",
              "homepage": "https://babeljs.io/",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babel-traverse",
              "repository": "[Circular]",
              "version": "6.25.0",
              "readme": "# babel-traverse\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-traverse",
              "error": "[Circular]",
              "extraneous": false
            },
            "babel-types": {
              "_from": "babel-types@^6.25.0",
              "_id": "babel-types@6.25.0",
              "_inBundle": false,
              "_integrity": "sha1-cK+ySNVmDl0Y+BHZHIMDtUE0oY4=",
              "_location": "/babel-types",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/babel-types/-/babel-types-6.25.0.tgz",
              "_shasum": "70afb248d5660e5d18f811d91c8303b54134a18e",
              "_spec": "babel-types@^6.25.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "babel-runtime": {
                  "_from": "babel-runtime@^6.22.0",
                  "_id": "babel-runtime@6.23.0",
                  "_inBundle": false,
                  "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
                  "_location": "/babel-runtime",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
                  "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
                  "_spec": "babel-runtime@^6.22.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "babel selfContained runtime",
                  "devDependencies": "[Circular]",
                  "license": "MIT",
                  "name": "babel-runtime",
                  "repository": "[Circular]",
                  "version": "6.23.0",
                  "readme": "# babel-runtime\n\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "babel-runtime"
                },
                "esutils": {
                  "_from": "esutils@^2.0.2",
                  "_id": "esutils@2.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
                  "_location": "/esutils",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
                  "_shasum": "0abf4f1caa5bcb1f7a9d8acc6dea4faaa04bac9b",
                  "_spec": "esutils@^2.0.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-code-frame",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "utility box for ECMAScript language tools",
                  "devDependencies": "[Circular]",
                  "directories": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/estools/esutils",
                  "licenses": "[Circular]",
                  "main": "lib/utils.js",
                  "maintainers": "[Circular]",
                  "name": "esutils",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "2.0.2",
                  "readme": "### esutils [![Build Status](https://secure.travis-ci.org/estools/esutils.svg)](http://travis-ci.org/estools/esutils)\nesutils ([esutils](http://github.com/estools/esutils)) is\nutility box for ECMAScript language tools.\n\n### API\n\n### ast\n\n#### ast.isExpression(node)\n\nReturns true if `node` is an Expression as defined in ECMA262 edition 5.1 section\n[11](https://es5.github.io/#x11).\n\n#### ast.isStatement(node)\n\nReturns true if `node` is a Statement as defined in ECMA262 edition 5.1 section\n[12](https://es5.github.io/#x12).\n\n#### ast.isIterationStatement(node)\n\nReturns true if `node` is an IterationStatement as defined in ECMA262 edition\n5.1 section [12.6](https://es5.github.io/#x12.6).\n\n#### ast.isSourceElement(node)\n\nReturns true if `node` is a SourceElement as defined in ECMA262 edition 5.1\nsection [14](https://es5.github.io/#x14).\n\n#### ast.trailingStatement(node)\n\nReturns `Statement?` if `node` has trailing `Statement`.\n```js\nif (cond)\n    consequent;\n```\nWhen taking this `IfStatement`, returns `consequent;` statement.\n\n#### ast.isProblematicIfStatement(node)\n\nReturns true if `node` is a problematic IfStatement. If `node` is a problematic `IfStatement`, `node` cannot be represented as an one on one JavaScript code.\n```js\n{\n    type: 'IfStatement',\n    consequent: {\n        type: 'WithStatement',\n        body: {\n            type: 'IfStatement',\n            consequent: {type: 'EmptyStatement'}\n        }\n    },\n    alternate: {type: 'EmptyStatement'}\n}\n```\nThe above node cannot be represented as a JavaScript code, since the top level `else` alternate belongs to an inner `IfStatement`.\n\n\n### code\n\n#### code.isDecimalDigit(code)\n\nReturn true if provided code is decimal digit.\n\n#### code.isHexDigit(code)\n\nReturn true if provided code is hexadecimal digit.\n\n#### code.isOctalDigit(code)\n\nReturn true if provided code is octal digit.\n\n#### code.isWhiteSpace(code)\n\nReturn true if provided code is white space. White space characters are formally defined in ECMA262.\n\n#### code.isLineTerminator(code)\n\nReturn true if provided code is line terminator. Line terminator characters are formally defined in ECMA262.\n\n#### code.isIdentifierStart(code)\n\nReturn true if provided code can be the first character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n#### code.isIdentifierPart(code)\n\nReturn true if provided code can be the trailing character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n### keyword\n\n#### keyword.isKeywordES5(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 5.1. They are formally defined in ECMA262 sections\n[7.6.1.1](http://es5.github.io/#x7.6.1.1) and [7.6.1.2](http://es5.github.io/#x7.6.1.2),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isKeywordES6(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 6. They are formally defined in ECMA262 sections\n[11.6.2.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-keywords) and\n[11.6.2.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-future-reserved-words),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isReservedWordES5(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 5.1.\nThey are formally defined in ECMA262 section [7.6.1](http://es5.github.io/#x7.6.1).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isReservedWordES6(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 6.\nThey are formally defined in ECMA262 section [11.6.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-reserved-words).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isRestrictedWord(id)\n\nReturns `true` if provided identifier string is one of `eval` or `arguments`.\nThey are restricted in strict mode code throughout ECMA262 edition 5.1 and\nin ECMA262 edition 6 section [12.1.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers-static-semantics-early-errors).\n\n#### keyword.isIdentifierName(id)\n\nReturn true if provided identifier string is an IdentifierName as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6).\n\n#### keyword.isIdentifierES5(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6). If the `strict`\nflag is truthy, this function additionally checks whether `id` is an Identifier\nunder strict mode.\n\n#### keyword.isIdentifierES6(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 6 section [12.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis an Identifier under strict mode.\n\n### License\n\nCopyright (C) 2013 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/esutils",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "esutils"
                },
                "lodash": {
                  "_from": "lodash@^4.2.0",
                  "_id": "lodash@4.17.4",
                  "_inBundle": false,
                  "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
                  "_location": "/lodash",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
                  "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
                  "_spec": "lodash@^4.2.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "contributors": "[Circular]",
                  "deprecated": false,
                  "description": "Lodash modular utilities.",
                  "homepage": "https://lodash.com/",
                  "icon": "https://lodash.com/icon.svg",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "lodash.js",
                  "name": "lodash",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "4.17.4",
                  "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "devDependencies": "[Circular]",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/lodash",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "lodash"
                },
                "to-fast-properties": {
                  "_from": "to-fast-properties@^1.0.1",
                  "_id": "to-fast-properties@1.0.3",
                  "_inBundle": false,
                  "_integrity": "sha1-uDVx+k2MJbguIxsG46MFXeTKGkc=",
                  "_location": "/to-fast-properties",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "to-fast-properties@^1.0.1",
                    "name": "to-fast-properties",
                    "escapedName": "to-fast-properties",
                    "rawSpec": "^1.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.0.1"
                  },
                  "_requiredBy": [
                    "/babel-types"
                  ],
                  "_resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-1.0.3.tgz",
                  "_shasum": "b83571fa4d8c25b82e231b06e3a3055de4ca1a47",
                  "_spec": "to-fast-properties@^1.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-types",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/to-fast-properties/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Force V8 to use fast properties for an object",
                  "devDependencies": {
                    "ava": "0.0.4"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/to-fast-properties#readme",
                  "keywords": [
                    "object",
                    "obj",
                    "properties",
                    "props",
                    "v8",
                    "optimize",
                    "fast",
                    "convert",
                    "mode"
                  ],
                  "license": "MIT",
                  "name": "to-fast-properties",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/to-fast-properties.git"
                  },
                  "scripts": {
                    "test": "node --allow-natives-syntax test.js"
                  },
                  "version": "1.0.3",
                  "readme": "# to-fast-properties [![Build Status](https://travis-ci.org/sindresorhus/to-fast-properties.svg?branch=master)](https://travis-ci.org/sindresorhus/to-fast-properties)\n\n> Force V8 to use fast properties for an object\n\n[Read more.](http://stackoverflow.com/questions/24987896/)\n\nUse `%HasFastProperties(object)` and `--allow-natives-syntax` to check whether an object already has fast properties.\n\n\n## Install\n\n```\n$ npm install --save to-fast-properties\n```\n\n\n## Usage\n\n```js\nconst toFastProperties = require('to-fast-properties');\n\nconst obj = {\n\tfoo: true,\n\tbar: true\n};\n\ndelete obj.foo;\n// `obj` now has slow properties\n\ntoFastProperties(obj);\n// `obj` now has fast properties\n```\n\n\n## License\n\nMIT © Petka Antonov, Sindre Sorhus\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/to-fast-properties",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Babel Types is a Lodash-esque utility library for AST nodes",
              "devDependencies": "[Circular]",
              "homepage": "https://babeljs.io/",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babel-types",
              "repository": "[Circular]",
              "version": "6.25.0",
              "readme": "# babel-types\n\n> This module contains methods for building ASTs manually and for checking the types of AST nodes.\n\n## Install\n\n```sh\nnpm install --save-dev babel-types\n```\n\n## API\n\n<!-- begin generated section -->\n\n### anyTypeAnnotation\n```javascript\nt.anyTypeAnnotation()\n```\n\nSee also `t.isAnyTypeAnnotation(node, opts)` and `t.assertAnyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### arrayExpression\n```javascript\nt.arrayExpression(elements)\n```\n\nSee also `t.isArrayExpression(node, opts)` and `t.assertArrayExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `elements`: `Array<null | Expression | SpreadElement>` (default: `[]`)\n\n---\n\n### arrayPattern\n```javascript\nt.arrayPattern(elements, typeAnnotation)\n```\n\nSee also `t.isArrayPattern(node, opts)` and `t.assertArrayPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `elements`: `Array<Identifier | Pattern | RestElement>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### arrayTypeAnnotation\n```javascript\nt.arrayTypeAnnotation(elementType)\n```\n\nSee also `t.isArrayTypeAnnotation(node, opts)` and `t.assertArrayTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `elementType` (required)\n\n---\n\n### arrowFunctionExpression\n```javascript\nt.arrowFunctionExpression(params, body, async)\n```\n\nSee also `t.isArrowFunctionExpression(node, opts)` and `t.assertArrowFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement | Expression` (required)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### assignmentExpression\n```javascript\nt.assignmentExpression(operator, left, right)\n```\n\nSee also `t.isAssignmentExpression(node, opts)` and `t.assertAssignmentExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `string` (required)\n - `left`: `LVal` (required)\n - `right`: `Expression` (required)\n\n---\n\n### assignmentPattern\n```javascript\nt.assignmentPattern(left, right)\n```\n\nSee also `t.isAssignmentPattern(node, opts)` and `t.assertAssignmentPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `left`: `Identifier` (required)\n - `right`: `Expression` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### awaitExpression\n```javascript\nt.awaitExpression(argument)\n```\n\nSee also `t.isAwaitExpression(node, opts)` and `t.assertAwaitExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (required)\n\n---\n\n### binaryExpression\n```javascript\nt.binaryExpression(operator, left, right)\n```\n\nSee also `t.isBinaryExpression(node, opts)` and `t.assertBinaryExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'+' | '-' | '/' | '%' | '*' | '**' | '&' | '|' | '>>' | '>>>' | '<<' | '^' | '==' | '===' | '!=' | '!==' | 'in' | 'instanceof' | '>' | '<' | '>=' | '<='` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### bindExpression\n```javascript\nt.bindExpression(object, callee)\n```\n\nSee also `t.isBindExpression(node, opts)` and `t.assertBindExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `object` (required)\n - `callee` (required)\n\n---\n\n### blockStatement\n```javascript\nt.blockStatement(body, directives)\n```\n\nSee also `t.isBlockStatement(node, opts)` and `t.assertBlockStatement(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `Statement`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### booleanLiteral\n```javascript\nt.booleanLiteral(value)\n```\n\nSee also `t.isBooleanLiteral(node, opts)` and `t.assertBooleanLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `boolean` (required)\n\n---\n\n### booleanLiteralTypeAnnotation\n```javascript\nt.booleanLiteralTypeAnnotation()\n```\n\nSee also `t.isBooleanLiteralTypeAnnotation(node, opts)` and `t.assertBooleanLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### booleanTypeAnnotation\n```javascript\nt.booleanTypeAnnotation()\n```\n\nSee also `t.isBooleanTypeAnnotation(node, opts)` and `t.assertBooleanTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### breakStatement\n```javascript\nt.breakStatement(label)\n```\n\nSee also `t.isBreakStatement(node, opts)` and `t.assertBreakStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### callExpression\n```javascript\nt.callExpression(callee, arguments)\n```\n\nSee also `t.isCallExpression(node, opts)` and `t.assertCallExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### catchClause\n```javascript\nt.catchClause(param, body)\n```\n\nSee also `t.isCatchClause(node, opts)` and `t.assertCatchClause(node, opts)`.\n\nAliases: `Scopable`\n\n - `param`: `Identifier` (required)\n - `body`: `BlockStatement` (required)\n\n---\n\n### classBody\n```javascript\nt.classBody(body)\n```\n\nSee also `t.isClassBody(node, opts)` and `t.assertClassBody(node, opts)`.\n\n - `body`: `Array<ClassMethod | ClassProperty>` (required)\n\n---\n\n### classDeclaration\n```javascript\nt.classDeclaration(id, superClass, body, decorators)\n```\n\nSee also `t.isClassDeclaration(node, opts)` and `t.assertClassDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Statement`, `Declaration`, `Pureish`\n\n - `id`: `Identifier` (required)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classExpression\n```javascript\nt.classExpression(id, superClass, body, decorators)\n```\n\nSee also `t.isClassExpression(node, opts)` and `t.assertClassExpression(node, opts)`.\n\nAliases: `Scopable`, `Class`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `superClass`: `Expression` (default: `null`)\n - `body`: `ClassBody` (required)\n - `decorators`: `Array<Decorator>` (required)\n - `implements` (default: `null`)\n - `mixins` (default: `null`)\n - `superTypeParameters` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classImplements\n```javascript\nt.classImplements(id, typeParameters)\n```\n\nSee also `t.isClassImplements(node, opts)` and `t.assertClassImplements(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### classMethod\n```javascript\nt.classMethod(kind, key, params, body, computed, static)\n```\n\nSee also `t.isClassMethod(node, opts)` and `t.assertClassMethod(node, opts)`.\n\nAliases: `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`\n\n - `kind`: `\"get\" | \"set\" | \"method\" | \"constructor\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `static`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### classProperty\n```javascript\nt.classProperty(key, value, typeAnnotation, decorators, computed)\n```\n\nSee also `t.isClassProperty(node, opts)` and `t.assertClassProperty(node, opts)`.\n\nAliases: `Property`\n\n - `key` (required)\n - `value` (required)\n - `typeAnnotation` (required)\n - `decorators` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### conditionalExpression\n```javascript\nt.conditionalExpression(test, consequent, alternate)\n```\n\nSee also `t.isConditionalExpression(node, opts)` and `t.assertConditionalExpression(node, opts)`.\n\nAliases: `Expression`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Expression` (required)\n - `alternate`: `Expression` (required)\n\n---\n\n### continueStatement\n```javascript\nt.continueStatement(label)\n```\n\nSee also `t.isContinueStatement(node, opts)` and `t.assertContinueStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `label`: `Identifier` (default: `null`)\n\n---\n\n### debuggerStatement\n```javascript\nt.debuggerStatement()\n```\n\nSee also `t.isDebuggerStatement(node, opts)` and `t.assertDebuggerStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### declareClass\n```javascript\nt.declareClass(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareClass(node, opts)` and `t.assertDeclareClass(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareFunction\n```javascript\nt.declareFunction(id)\n```\n\nSee also `t.isDeclareFunction(node, opts)` and `t.assertDeclareFunction(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### declareInterface\n```javascript\nt.declareInterface(id, typeParameters, extends, body)\n```\n\nSee also `t.isDeclareInterface(node, opts)` and `t.assertDeclareInterface(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### declareModule\n```javascript\nt.declareModule(id, body)\n```\n\nSee also `t.isDeclareModule(node, opts)` and `t.assertDeclareModule(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `body` (required)\n\n---\n\n### declareModuleExports\n```javascript\nt.declareModuleExports(typeAnnotation)\n```\n\nSee also `t.isDeclareModuleExports(node, opts)` and `t.assertDeclareModuleExports(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `typeAnnotation` (required)\n\n---\n\n### declareTypeAlias\n```javascript\nt.declareTypeAlias(id, typeParameters, right)\n```\n\nSee also `t.isDeclareTypeAlias(node, opts)` and `t.assertDeclareTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### declareVariable\n```javascript\nt.declareVariable(id)\n```\n\nSee also `t.isDeclareVariable(node, opts)` and `t.assertDeclareVariable(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n\n---\n\n### decorator\n```javascript\nt.decorator(expression)\n```\n\nSee also `t.isDecorator(node, opts)` and `t.assertDecorator(node, opts)`.\n\n - `expression`: `Expression` (required)\n\n---\n\n### directive\n```javascript\nt.directive(value)\n```\n\nSee also `t.isDirective(node, opts)` and `t.assertDirective(node, opts)`.\n\n - `value`: `DirectiveLiteral` (required)\n\n---\n\n### directiveLiteral\n```javascript\nt.directiveLiteral(value)\n```\n\nSee also `t.isDirectiveLiteral(node, opts)` and `t.assertDirectiveLiteral(node, opts)`.\n\n - `value`: `string` (required)\n\n---\n\n### doExpression\n```javascript\nt.doExpression(body)\n```\n\nSee also `t.isDoExpression(node, opts)` and `t.assertDoExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `body`: `BlockStatement` (required)\n\n---\n\n### doWhileStatement\n```javascript\nt.doWhileStatement(test, body)\n```\n\nSee also `t.isDoWhileStatement(node, opts)` and `t.assertDoWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### emptyStatement\n```javascript\nt.emptyStatement()\n```\n\nSee also `t.isEmptyStatement(node, opts)` and `t.assertEmptyStatement(node, opts)`.\n\nAliases: `Statement`\n\n\n---\n\n### emptyTypeAnnotation\n```javascript\nt.emptyTypeAnnotation()\n```\n\nSee also `t.isEmptyTypeAnnotation(node, opts)` and `t.assertEmptyTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### existentialTypeParam\n```javascript\nt.existentialTypeParam()\n```\n\nSee also `t.isExistentialTypeParam(node, opts)` and `t.assertExistentialTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### exportAllDeclaration\n```javascript\nt.exportAllDeclaration(source)\n```\n\nSee also `t.isExportAllDeclaration(node, opts)` and `t.assertExportAllDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `source`: `StringLiteral` (required)\n\n---\n\n### exportDefaultDeclaration\n```javascript\nt.exportDefaultDeclaration(declaration)\n```\n\nSee also `t.isExportDefaultDeclaration(node, opts)` and `t.assertExportDefaultDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `FunctionDeclaration | ClassDeclaration | Expression` (required)\n\n---\n\n### exportDefaultSpecifier\n```javascript\nt.exportDefaultSpecifier(exported)\n```\n\nSee also `t.isExportDefaultSpecifier(node, opts)` and `t.assertExportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportNamedDeclaration\n```javascript\nt.exportNamedDeclaration(declaration, specifiers, source)\n```\n\nSee also `t.isExportNamedDeclaration(node, opts)` and `t.assertExportNamedDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`, `ExportDeclaration`\n\n - `declaration`: `Declaration` (default: `null`)\n - `specifiers`: `Array<ExportSpecifier>` (required)\n - `source`: `StringLiteral` (default: `null`)\n\n---\n\n### exportNamespaceSpecifier\n```javascript\nt.exportNamespaceSpecifier(exported)\n```\n\nSee also `t.isExportNamespaceSpecifier(node, opts)` and `t.assertExportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `exported`: `Identifier` (required)\n\n---\n\n### exportSpecifier\n```javascript\nt.exportSpecifier(local, exported)\n```\n\nSee also `t.isExportSpecifier(node, opts)` and `t.assertExportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `exported`: `Identifier` (required)\n\n---\n\n### expressionStatement\n```javascript\nt.expressionStatement(expression)\n```\n\nSee also `t.isExpressionStatement(node, opts)` and `t.assertExpressionStatement(node, opts)`.\n\nAliases: `Statement`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### file\n```javascript\nt.file(program, comments, tokens)\n```\n\nSee also `t.isFile(node, opts)` and `t.assertFile(node, opts)`.\n\n - `program`: `Program` (required)\n - `comments` (required)\n - `tokens` (required)\n\n---\n\n### forAwaitStatement\n```javascript\nt.forAwaitStatement(left, right, body)\n```\n\nSee also `t.isForAwaitStatement(node, opts)` and `t.assertForAwaitStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forInStatement\n```javascript\nt.forInStatement(left, right, body)\n```\n\nSee also `t.isForInStatement(node, opts)` and `t.assertForInStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forOfStatement\n```javascript\nt.forOfStatement(left, right, body)\n```\n\nSee also `t.isForOfStatement(node, opts)` and `t.assertForOfStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`, `ForXStatement`\n\n - `left`: `VariableDeclaration | LVal` (required)\n - `right`: `Expression` (required)\n - `body`: `Statement` (required)\n\n---\n\n### forStatement\n```javascript\nt.forStatement(init, test, update, body)\n```\n\nSee also `t.isForStatement(node, opts)` and `t.assertForStatement(node, opts)`.\n\nAliases: `Scopable`, `Statement`, `For`, `BlockParent`, `Loop`\n\n - `init`: `VariableDeclaration | Expression` (default: `null`)\n - `test`: `Expression` (default: `null`)\n - `update`: `Expression` (default: `null`)\n - `body`: `Statement` (required)\n\n---\n\n### functionDeclaration\n```javascript\nt.functionDeclaration(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionDeclaration(node, opts)` and `t.assertFunctionDeclaration(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Statement`, `Pureish`, `Declaration`\n\n - `id`: `Identifier` (required)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionExpression\n```javascript\nt.functionExpression(id, params, body, generator, async)\n```\n\nSee also `t.isFunctionExpression(node, opts)` and `t.assertFunctionExpression(node, opts)`.\n\nAliases: `Scopable`, `Function`, `BlockParent`, `FunctionParent`, `Expression`, `Pureish`\n\n - `id`: `Identifier` (default: `null`)\n - `params`: `Array<LVal>` (required)\n - `body`: `BlockStatement` (required)\n - `generator`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### functionTypeAnnotation\n```javascript\nt.functionTypeAnnotation(typeParameters, params, rest, returnType)\n```\n\nSee also `t.isFunctionTypeAnnotation(node, opts)` and `t.assertFunctionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeParameters` (required)\n - `params` (required)\n - `rest` (required)\n - `returnType` (required)\n\n---\n\n### functionTypeParam\n```javascript\nt.functionTypeParam(name, typeAnnotation)\n```\n\nSee also `t.isFunctionTypeParam(node, opts)` and `t.assertFunctionTypeParam(node, opts)`.\n\nAliases: `Flow`\n\n - `name` (required)\n - `typeAnnotation` (required)\n\n---\n\n### genericTypeAnnotation\n```javascript\nt.genericTypeAnnotation(id, typeParameters)\n```\n\nSee also `t.isGenericTypeAnnotation(node, opts)` and `t.assertGenericTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### identifier\n```javascript\nt.identifier(name)\n```\n\nSee also `t.isIdentifier(node, opts)` and `t.assertIdentifier(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `name``string` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `typeAnnotation` (default: `null`)\n\n---\n\n### ifStatement\n```javascript\nt.ifStatement(test, consequent, alternate)\n```\n\nSee also `t.isIfStatement(node, opts)` and `t.assertIfStatement(node, opts)`.\n\nAliases: `Statement`, `Conditional`\n\n - `test`: `Expression` (required)\n - `consequent`: `Statement` (required)\n - `alternate`: `Statement` (default: `null`)\n\n---\n\n### import\n```javascript\nt.import()\n```\n\nSee also `t.isImport(node, opts)` and `t.assertImport(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### importDeclaration\n```javascript\nt.importDeclaration(specifiers, source)\n```\n\nSee also `t.isImportDeclaration(node, opts)` and `t.assertImportDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`, `ModuleDeclaration`\n\n - `specifiers`: `Array<ImportSpecifier | ImportDefaultSpecifier | ImportNamespaceSpecifier>` (required)\n - `source`: `StringLiteral` (required)\n\n---\n\n### importDefaultSpecifier\n```javascript\nt.importDefaultSpecifier(local)\n```\n\nSee also `t.isImportDefaultSpecifier(node, opts)` and `t.assertImportDefaultSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importNamespaceSpecifier\n```javascript\nt.importNamespaceSpecifier(local)\n```\n\nSee also `t.isImportNamespaceSpecifier(node, opts)` and `t.assertImportNamespaceSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n\n---\n\n### importSpecifier\n```javascript\nt.importSpecifier(local, imported)\n```\n\nSee also `t.isImportSpecifier(node, opts)` and `t.assertImportSpecifier(node, opts)`.\n\nAliases: `ModuleSpecifier`\n\n - `local`: `Identifier` (required)\n - `imported`: `Identifier` (required)\n - `importKind`: `null | 'type' | 'typeof'` (default: `null`)\n\n---\n\n### interfaceDeclaration\n```javascript\nt.interfaceDeclaration(id, typeParameters, extends, body)\n```\n\nSee also `t.isInterfaceDeclaration(node, opts)` and `t.assertInterfaceDeclaration(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `extends` (required)\n - `body` (required)\n\n---\n\n### interfaceExtends\n```javascript\nt.interfaceExtends(id, typeParameters)\n```\n\nSee also `t.isInterfaceExtends(node, opts)` and `t.assertInterfaceExtends(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `typeParameters` (required)\n\n---\n\n### intersectionTypeAnnotation\n```javascript\nt.intersectionTypeAnnotation(types)\n```\n\nSee also `t.isIntersectionTypeAnnotation(node, opts)` and `t.assertIntersectionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### jSXAttribute\n```javascript\nt.jSXAttribute(name, value)\n```\n\nSee also `t.isJSXAttribute(node, opts)` and `t.assertJSXAttribute(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXNamespacedName` (required)\n - `value`: `JSXElement | StringLiteral | JSXExpressionContainer` (default: `null`)\n\n---\n\n### jSXClosingElement\n```javascript\nt.jSXClosingElement(name)\n```\n\nSee also `t.isJSXClosingElement(node, opts)` and `t.assertJSXClosingElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n\n---\n\n### jSXElement\n```javascript\nt.jSXElement(openingElement, closingElement, children, selfClosing)\n```\n\nSee also `t.isJSXElement(node, opts)` and `t.assertJSXElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`, `Expression`\n\n - `openingElement`: `JSXOpeningElement` (required)\n - `closingElement`: `JSXClosingElement` (default: `null`)\n - `children`: `Array<JSXText | JSXExpressionContainer | JSXSpreadChild | JSXElement>` (required)\n - `selfClosing` (required)\n\n---\n\n### jSXEmptyExpression\n```javascript\nt.jSXEmptyExpression()\n```\n\nSee also `t.isJSXEmptyExpression(node, opts)` and `t.assertJSXEmptyExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n\n---\n\n### jSXExpressionContainer\n```javascript\nt.jSXExpressionContainer(expression)\n```\n\nSee also `t.isJSXExpressionContainer(node, opts)` and `t.assertJSXExpressionContainer(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXIdentifier\n```javascript\nt.jSXIdentifier(name)\n```\n\nSee also `t.isJSXIdentifier(node, opts)` and `t.assertJSXIdentifier(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `name`: `string` (required)\n\n---\n\n### jSXMemberExpression\n```javascript\nt.jSXMemberExpression(object, property)\n```\n\nSee also `t.isJSXMemberExpression(node, opts)` and `t.assertJSXMemberExpression(node, opts)`.\n\nAliases: `JSX`, `Expression`\n\n - `object`: `JSXMemberExpression | JSXIdentifier` (required)\n - `property`: `JSXIdentifier` (required)\n\n---\n\n### jSXNamespacedName\n```javascript\nt.jSXNamespacedName(namespace, name)\n```\n\nSee also `t.isJSXNamespacedName(node, opts)` and `t.assertJSXNamespacedName(node, opts)`.\n\nAliases: `JSX`\n\n - `namespace`: `JSXIdentifier` (required)\n - `name`: `JSXIdentifier` (required)\n\n---\n\n### jSXOpeningElement\n```javascript\nt.jSXOpeningElement(name, attributes, selfClosing)\n```\n\nSee also `t.isJSXOpeningElement(node, opts)` and `t.assertJSXOpeningElement(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `name`: `JSXIdentifier | JSXMemberExpression` (required)\n - `attributes`: `Array<JSXAttribute | JSXSpreadAttribute>` (required)\n - `selfClosing`: `boolean` (default: `false`)\n\n---\n\n### jSXSpreadAttribute\n```javascript\nt.jSXSpreadAttribute(argument)\n```\n\nSee also `t.isJSXSpreadAttribute(node, opts)` and `t.assertJSXSpreadAttribute(node, opts)`.\n\nAliases: `JSX`\n\n - `argument`: `Expression` (required)\n\n---\n\n### jSXSpreadChild\n```javascript\nt.jSXSpreadChild(expression)\n```\n\nSee also `t.isJSXSpreadChild(node, opts)` and `t.assertJSXSpreadChild(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `expression`: `Expression` (required)\n\n---\n\n### jSXText\n```javascript\nt.jSXText(value)\n```\n\nSee also `t.isJSXText(node, opts)` and `t.assertJSXText(node, opts)`.\n\nAliases: `JSX`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### labeledStatement\n```javascript\nt.labeledStatement(label, body)\n```\n\nSee also `t.isLabeledStatement(node, opts)` and `t.assertLabeledStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `label`: `Identifier` (required)\n - `body`: `Statement` (required)\n\n---\n\n### logicalExpression\n```javascript\nt.logicalExpression(operator, left, right)\n```\n\nSee also `t.isLogicalExpression(node, opts)` and `t.assertLogicalExpression(node, opts)`.\n\nAliases: `Binary`, `Expression`\n\n - `operator`: `'||' | '&&'` (required)\n - `left`: `Expression` (required)\n - `right`: `Expression` (required)\n\n---\n\n### memberExpression\n```javascript\nt.memberExpression(object, property, computed)\n```\n\nSee also `t.isMemberExpression(node, opts)` and `t.assertMemberExpression(node, opts)`.\n\nAliases: `Expression`, `LVal`\n\n - `object`: `Expression` (required)\n - `property`if computed then `Expression` else `Identifier` (required)\n - `computed`: `boolean` (default: `false`)\n\n---\n\n### metaProperty\n```javascript\nt.metaProperty(meta, property)\n```\n\nSee also `t.isMetaProperty(node, opts)` and `t.assertMetaProperty(node, opts)`.\n\nAliases: `Expression`\n\n - `meta`: `string` (required)\n - `property`: `string` (required)\n\n---\n\n### mixedTypeAnnotation\n```javascript\nt.mixedTypeAnnotation()\n```\n\nSee also `t.isMixedTypeAnnotation(node, opts)` and `t.assertMixedTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### newExpression\n```javascript\nt.newExpression(callee, arguments)\n```\n\nSee also `t.isNewExpression(node, opts)` and `t.assertNewExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `callee`: `Expression` (required)\n - `arguments`: `Array<Expression | SpreadElement>` (required)\n\n---\n\n### noop\n```javascript\nt.noop()\n```\n\nSee also `t.isNoop(node, opts)` and `t.assertNoop(node, opts)`.\n\n\n---\n\n### nullLiteral\n```javascript\nt.nullLiteral()\n```\n\nSee also `t.isNullLiteral(node, opts)` and `t.assertNullLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n\n---\n\n### nullLiteralTypeAnnotation\n```javascript\nt.nullLiteralTypeAnnotation()\n```\n\nSee also `t.isNullLiteralTypeAnnotation(node, opts)` and `t.assertNullLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### nullableTypeAnnotation\n```javascript\nt.nullableTypeAnnotation(typeAnnotation)\n```\n\nSee also `t.isNullableTypeAnnotation(node, opts)` and `t.assertNullableTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### numberTypeAnnotation\n```javascript\nt.numberTypeAnnotation()\n```\n\nSee also `t.isNumberTypeAnnotation(node, opts)` and `t.assertNumberTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### numericLiteral\n```javascript\nt.numericLiteral(value)\n```\n\nSee also `t.isNumericLiteral(node, opts)` and `t.assertNumericLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `number` (required)\n\n---\n\n### numericLiteralTypeAnnotation\n```javascript\nt.numericLiteralTypeAnnotation()\n```\n\nSee also `t.isNumericLiteralTypeAnnotation(node, opts)` and `t.assertNumericLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### objectExpression\n```javascript\nt.objectExpression(properties)\n```\n\nSee also `t.isObjectExpression(node, opts)` and `t.assertObjectExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `properties`: `Array<ObjectMethod | ObjectProperty | SpreadProperty>` (required)\n\n---\n\n### objectMethod\n```javascript\nt.objectMethod(kind, key, params, body, computed)\n```\n\nSee also `t.isObjectMethod(node, opts)` and `t.assertObjectMethod(node, opts)`.\n\nAliases: `UserWhitespacable`, `Function`, `Scopable`, `BlockParent`, `FunctionParent`, `Method`, `ObjectMember`\n\n - `kind`: `\"method\" | \"get\" | \"set\"` (default: `'method'`)\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `params` (required)\n - `body`: `BlockStatement` (required)\n - `computed`: `boolean` (default: `false`)\n - `async`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n - `generator`: `boolean` (default: `false`)\n - `returnType` (default: `null`)\n - `typeParameters` (default: `null`)\n\n---\n\n### objectPattern\n```javascript\nt.objectPattern(properties, typeAnnotation)\n```\n\nSee also `t.isObjectPattern(node, opts)` and `t.assertObjectPattern(node, opts)`.\n\nAliases: `Pattern`, `LVal`\n\n - `properties`: `Array<RestProperty | Property>` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectProperty\n```javascript\nt.objectProperty(key, value, computed, shorthand, decorators)\n```\n\nSee also `t.isObjectProperty(node, opts)` and `t.assertObjectProperty(node, opts)`.\n\nAliases: `UserWhitespacable`, `Property`, `ObjectMember`\n\n - `key`if computed then `Expression` else `Identifier | Literal` (required)\n - `value`: `Expression | Pattern | RestElement` (required)\n - `computed`: `boolean` (default: `false`)\n - `shorthand`: `boolean` (default: `false`)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### objectTypeAnnotation\n```javascript\nt.objectTypeAnnotation(properties, indexers, callProperties)\n```\n\nSee also `t.isObjectTypeAnnotation(node, opts)` and `t.assertObjectTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `properties` (required)\n - `indexers` (required)\n - `callProperties` (required)\n\n---\n\n### objectTypeCallProperty\n```javascript\nt.objectTypeCallProperty(value)\n```\n\nSee also `t.isObjectTypeCallProperty(node, opts)` and `t.assertObjectTypeCallProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `value` (required)\n\n---\n\n### objectTypeIndexer\n```javascript\nt.objectTypeIndexer(id, key, value)\n```\n\nSee also `t.isObjectTypeIndexer(node, opts)` and `t.assertObjectTypeIndexer(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `id` (required)\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeProperty\n```javascript\nt.objectTypeProperty(key, value)\n```\n\nSee also `t.isObjectTypeProperty(node, opts)` and `t.assertObjectTypeProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `key` (required)\n - `value` (required)\n\n---\n\n### objectTypeSpreadProperty\n```javascript\nt.objectTypeSpreadProperty(argument)\n```\n\nSee also `t.isObjectTypeSpreadProperty(node, opts)` and `t.assertObjectTypeSpreadProperty(node, opts)`.\n\nAliases: `Flow`, `UserWhitespacable`\n\n - `argument` (required)\n\n---\n\n### parenthesizedExpression\n```javascript\nt.parenthesizedExpression(expression)\n```\n\nSee also `t.isParenthesizedExpression(node, opts)` and `t.assertParenthesizedExpression(node, opts)`.\n\nAliases: `Expression`, `ExpressionWrapper`\n\n - `expression`: `Expression` (required)\n\n---\n\n### program\n```javascript\nt.program(body, directives)\n```\n\nSee also `t.isProgram(node, opts)` and `t.assertProgram(node, opts)`.\n\nAliases: `Scopable`, `BlockParent`, `Block`, `FunctionParent`\n\n - `body`: `Array<Statement>` (required)\n - `directives`: `Array<Directive>` (default: `[]`)\n\n---\n\n### qualifiedTypeIdentifier\n```javascript\nt.qualifiedTypeIdentifier(id, qualification)\n```\n\nSee also `t.isQualifiedTypeIdentifier(node, opts)` and `t.assertQualifiedTypeIdentifier(node, opts)`.\n\nAliases: `Flow`\n\n - `id` (required)\n - `qualification` (required)\n\n---\n\n### regExpLiteral\n```javascript\nt.regExpLiteral(pattern, flags)\n```\n\nSee also `t.isRegExpLiteral(node, opts)` and `t.assertRegExpLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `pattern`: `string` (required)\n - `flags`: `string` (default: `''`)\n\n---\n\n### restElement\n```javascript\nt.restElement(argument, typeAnnotation)\n```\n\nSee also `t.isRestElement(node, opts)` and `t.assertRestElement(node, opts)`.\n\nAliases: `LVal`\n\n - `argument`: `LVal` (required)\n - `typeAnnotation` (required)\n - `decorators`: `Array<Decorator>` (default: `null`)\n\n---\n\n### restProperty\n```javascript\nt.restProperty(argument)\n```\n\nSee also `t.isRestProperty(node, opts)` and `t.assertRestProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `LVal` (required)\n\n---\n\n### returnStatement\n```javascript\nt.returnStatement(argument)\n```\n\nSee also `t.isReturnStatement(node, opts)` and `t.assertReturnStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (default: `null`)\n\n---\n\n### sequenceExpression\n```javascript\nt.sequenceExpression(expressions)\n```\n\nSee also `t.isSequenceExpression(node, opts)` and `t.assertSequenceExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### spreadElement\n```javascript\nt.spreadElement(argument)\n```\n\nSee also `t.isSpreadElement(node, opts)` and `t.assertSpreadElement(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### spreadProperty\n```javascript\nt.spreadProperty(argument)\n```\n\nSee also `t.isSpreadProperty(node, opts)` and `t.assertSpreadProperty(node, opts)`.\n\nAliases: `UnaryLike`\n\n - `argument`: `Expression` (required)\n\n---\n\n### stringLiteral\n```javascript\nt.stringLiteral(value)\n```\n\nSee also `t.isStringLiteral(node, opts)` and `t.assertStringLiteral(node, opts)`.\n\nAliases: `Expression`, `Pureish`, `Literal`, `Immutable`\n\n - `value`: `string` (required)\n\n---\n\n### stringLiteralTypeAnnotation\n```javascript\nt.stringLiteralTypeAnnotation()\n```\n\nSee also `t.isStringLiteralTypeAnnotation(node, opts)` and `t.assertStringLiteralTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n\n---\n\n### stringTypeAnnotation\n```javascript\nt.stringTypeAnnotation()\n```\n\nSee also `t.isStringTypeAnnotation(node, opts)` and `t.assertStringTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### super\n```javascript\nt.super()\n```\n\nSee also `t.isSuper(node, opts)` and `t.assertSuper(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### switchCase\n```javascript\nt.switchCase(test, consequent)\n```\n\nSee also `t.isSwitchCase(node, opts)` and `t.assertSwitchCase(node, opts)`.\n\n - `test`: `Expression` (default: `null`)\n - `consequent`: `Array<Statement>` (required)\n\n---\n\n### switchStatement\n```javascript\nt.switchStatement(discriminant, cases)\n```\n\nSee also `t.isSwitchStatement(node, opts)` and `t.assertSwitchStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Scopable`\n\n - `discriminant`: `Expression` (required)\n - `cases`: `Array<SwitchCase>` (required)\n\n---\n\n### taggedTemplateExpression\n```javascript\nt.taggedTemplateExpression(tag, quasi)\n```\n\nSee also `t.isTaggedTemplateExpression(node, opts)` and `t.assertTaggedTemplateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `tag`: `Expression` (required)\n - `quasi`: `TemplateLiteral` (required)\n\n---\n\n### templateElement\n```javascript\nt.templateElement(value, tail)\n```\n\nSee also `t.isTemplateElement(node, opts)` and `t.assertTemplateElement(node, opts)`.\n\n - `value` (required)\n - `tail`: `boolean` (default: `false`)\n\n---\n\n### templateLiteral\n```javascript\nt.templateLiteral(quasis, expressions)\n```\n\nSee also `t.isTemplateLiteral(node, opts)` and `t.assertTemplateLiteral(node, opts)`.\n\nAliases: `Expression`, `Literal`\n\n - `quasis`: `Array<TemplateElement>` (required)\n - `expressions`: `Array<Expression>` (required)\n\n---\n\n### thisExpression\n```javascript\nt.thisExpression()\n```\n\nSee also `t.isThisExpression(node, opts)` and `t.assertThisExpression(node, opts)`.\n\nAliases: `Expression`\n\n\n---\n\n### thisTypeAnnotation\n```javascript\nt.thisTypeAnnotation()\n```\n\nSee also `t.isThisTypeAnnotation(node, opts)` and `t.assertThisTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### throwStatement\n```javascript\nt.throwStatement(argument)\n```\n\nSee also `t.isThrowStatement(node, opts)` and `t.assertThrowStatement(node, opts)`.\n\nAliases: `Statement`, `Terminatorless`, `CompletionStatement`\n\n - `argument`: `Expression` (required)\n\n---\n\n### tryStatement\n```javascript\nt.tryStatement(block, handler, finalizer)\n```\n\nSee also `t.isTryStatement(node, opts)` and `t.assertTryStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `block` (required)\n - `handler` (default: `null`)\n - `finalizer`: `BlockStatement` (default: `null`)\n - `body`: `BlockStatement` (default: `null`)\n\n---\n\n### tupleTypeAnnotation\n```javascript\nt.tupleTypeAnnotation(types)\n```\n\nSee also `t.isTupleTypeAnnotation(node, opts)` and `t.assertTupleTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### typeAlias\n```javascript\nt.typeAlias(id, typeParameters, right)\n```\n\nSee also `t.isTypeAlias(node, opts)` and `t.assertTypeAlias(node, opts)`.\n\nAliases: `Flow`, `FlowDeclaration`, `Statement`, `Declaration`\n\n - `id` (required)\n - `typeParameters` (required)\n - `right` (required)\n\n---\n\n### typeAnnotation\n```javascript\nt.typeAnnotation(typeAnnotation)\n```\n\nSee also `t.isTypeAnnotation(node, opts)` and `t.assertTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `typeAnnotation` (required)\n\n---\n\n### typeCastExpression\n```javascript\nt.typeCastExpression(expression, typeAnnotation)\n```\n\nSee also `t.isTypeCastExpression(node, opts)` and `t.assertTypeCastExpression(node, opts)`.\n\nAliases: `Flow`, `ExpressionWrapper`, `Expression`\n\n - `expression` (required)\n - `typeAnnotation` (required)\n\n---\n\n### typeParameter\n```javascript\nt.typeParameter(bound)\n```\n\nSee also `t.isTypeParameter(node, opts)` and `t.assertTypeParameter(node, opts)`.\n\nAliases: `Flow`\n\n - `bound` (required)\n\n---\n\n### typeParameterDeclaration\n```javascript\nt.typeParameterDeclaration(params)\n```\n\nSee also `t.isTypeParameterDeclaration(node, opts)` and `t.assertTypeParameterDeclaration(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeParameterInstantiation\n```javascript\nt.typeParameterInstantiation(params)\n```\n\nSee also `t.isTypeParameterInstantiation(node, opts)` and `t.assertTypeParameterInstantiation(node, opts)`.\n\nAliases: `Flow`\n\n - `params` (required)\n\n---\n\n### typeofTypeAnnotation\n```javascript\nt.typeofTypeAnnotation(argument)\n```\n\nSee also `t.isTypeofTypeAnnotation(node, opts)` and `t.assertTypeofTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `argument` (required)\n\n---\n\n### unaryExpression\n```javascript\nt.unaryExpression(operator, argument, prefix)\n```\n\nSee also `t.isUnaryExpression(node, opts)` and `t.assertUnaryExpression(node, opts)`.\n\nAliases: `UnaryLike`, `Expression`\n\n - `operator`: `'void' | 'delete' | '!' | '+' | '-' | '++' | '--' | '~' | 'typeof'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `true`)\n\n---\n\n### unionTypeAnnotation\n```javascript\nt.unionTypeAnnotation(types)\n```\n\nSee also `t.isUnionTypeAnnotation(node, opts)` and `t.assertUnionTypeAnnotation(node, opts)`.\n\nAliases: `Flow`\n\n - `types` (required)\n\n---\n\n### updateExpression\n```javascript\nt.updateExpression(operator, argument, prefix)\n```\n\nSee also `t.isUpdateExpression(node, opts)` and `t.assertUpdateExpression(node, opts)`.\n\nAliases: `Expression`\n\n - `operator`: `'++' | '--'` (required)\n - `argument`: `Expression` (required)\n - `prefix`: `boolean` (default: `false`)\n\n---\n\n### variableDeclaration\n```javascript\nt.variableDeclaration(kind, declarations)\n```\n\nSee also `t.isVariableDeclaration(node, opts)` and `t.assertVariableDeclaration(node, opts)`.\n\nAliases: `Statement`, `Declaration`\n\n - `kind`: `\"var\" | \"let\" | \"const\"` (required)\n - `declarations`: `Array<VariableDeclarator>` (required)\n\n---\n\n### variableDeclarator\n```javascript\nt.variableDeclarator(id, init)\n```\n\nSee also `t.isVariableDeclarator(node, opts)` and `t.assertVariableDeclarator(node, opts)`.\n\n - `id`: `LVal` (required)\n - `init`: `Expression` (default: `null`)\n\n---\n\n### voidTypeAnnotation\n```javascript\nt.voidTypeAnnotation()\n```\n\nSee also `t.isVoidTypeAnnotation(node, opts)` and `t.assertVoidTypeAnnotation(node, opts)`.\n\nAliases: `Flow`, `FlowBaseAnnotation`\n\n\n---\n\n### whileStatement\n```javascript\nt.whileStatement(test, body)\n```\n\nSee also `t.isWhileStatement(node, opts)` and `t.assertWhileStatement(node, opts)`.\n\nAliases: `Statement`, `BlockParent`, `Loop`, `While`, `Scopable`\n\n - `test`: `Expression` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### withStatement\n```javascript\nt.withStatement(object, body)\n```\n\nSee also `t.isWithStatement(node, opts)` and `t.assertWithStatement(node, opts)`.\n\nAliases: `Statement`\n\n - `object` (required)\n - `body`: `BlockStatement | Statement` (required)\n\n---\n\n### yieldExpression\n```javascript\nt.yieldExpression(argument, delegate)\n```\n\nSee also `t.isYieldExpression(node, opts)` and `t.assertYieldExpression(node, opts)`.\n\nAliases: `Expression`, `Terminatorless`\n\n - `argument`: `Expression` (default: `null`)\n - `delegate`: `boolean` (default: `false`)\n\n---\n\n\n<!-- end generated section -->\n\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-types",
              "error": "[Circular]",
              "extraneous": false
            },
            "babylon": {
              "_from": "babylon@^6.17.2",
              "_id": "babylon@6.17.4",
              "_inBundle": false,
              "_integrity": "sha512-kChlV+0SXkjE0vUn9OZ7pBMWRFd8uq3mZe8x1K6jhuNcAFAtEnjchFAqB+dYEXKyd+JpT6eppRR78QAr5gTsUw==",
              "_location": "/babylon",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/babylon/-/babylon-6.17.4.tgz",
              "_shasum": "3e8b7402b88d22c3423e137a1577883b15ff869a",
              "_spec": "babylon@^6.17.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "ava": "[Circular]",
              "bin": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "deprecated": false,
              "description": "A JavaScript parser",
              "devDependencies": "[Circular]",
              "files": "[Circular]",
              "greenkeeper": "[Circular]",
              "homepage": "https://babeljs.io/",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "lib/index.js",
              "name": "babylon",
              "nyc": "[Circular]",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "6.17.4",
              "readme": "<p align=\"center\">\n  <img alt=\"babylon\" src=\"https://raw.githubusercontent.com/babel/logo/master/babylon.png\" width=\"700\">\n</p>\n\n<p align=\"center\">\n  Babylon is a JavaScript parser used in <a href=\"https://github.com/babel/babel\">Babel</a>.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/babel/babylon\"><img alt=\"Travis Status\" src=\"https://img.shields.io/travis/babel/babylon/master.svg?style=flat&label=travis\"></a>\n  <a href=\"https://codecov.io/gh/babel/babylon\"><img alt=\"Codecov Status\" src=\"https://img.shields.io/codecov/c/github/babel/babylon/master.svg?style=flat\"></a>\n</p>\n\n - The latest ECMAScript version enabled by default (ES2017).\n - Comment attachment.\n - Support for JSX and Flow.\n - Support for experimental language proposals (accepting PRs for anything at least [stage-0](https://github.com/tc39/proposals/blob/master/stage-0-proposals.md)).\n\n## Credits\n\nHeavily based on [acorn](https://github.com/marijnh/acorn) and [acorn-jsx](https://github.com/RReverser/acorn-jsx),\nthanks to the awesome work of [@RReverser](https://github.com/RReverser) and [@marijnh](https://github.com/marijnh).\n\nSignificant diversions are expected to occur in the future such as streaming, EBNF definitions, sweet.js integration, interspatial parsing and more.\n\n## API\n\n### `babylon.parse(code, [options])`\n\n### `babylon.parseExpression(code, [options])`\n\n`parse()` parses the provided `code` as an entire ECMAScript program, while\n`parseExpression()` tries to parse a single Expression with performance in\nmind. When in doubt, use `.parse()`.\n\n### Options\n\n- **allowImportExportEverywhere**: By default, `import` and `export`\n  declarations can only appear at a program's top level. Setting this\n  option to `true` allows them anywhere where a statement is allowed.\n\n- **allowReturnOutsideFunction**: By default, a return statement at\n  the top level raises an error. Set this to `true` to accept such\n  code.\n\n- **allowSuperOutsideMethod**: TODO\n\n- **sourceType**: Indicate the mode the code should be parsed in. Can be\n  either `\"script\"` or `\"module\"`.\n\n- **sourceFilename**: Correlate output AST nodes with their source filename.  Useful when generating code and source maps from the ASTs of multiple input files.\n\n- **startLine**: By default, the first line of code parsed is treated as line 1. You can provide a line number to alternatively start with. Useful for integration with other source tools.\n\n- **plugins**: Array containing the plugins that you want to enable.\n\n- **strictMode**: TODO\n\n### Output\n\nBabylon generates AST according to [Babel AST format][].\nIt is based on [ESTree spec][] with the following deviations:\n\n> There is now an `estree` plugin which reverts these deviations\n\n- [Literal][] token is replaced with [StringLiteral][], [NumericLiteral][], [BooleanLiteral][], [NullLiteral][], [RegExpLiteral][]\n- [Property][] token is replaced with [ObjectProperty][] and [ObjectMethod][]\n- [MethodDefinition][] is replaced with [ClassMethod][]\n- [Program][] and [BlockStatement][] contain additional `directives` field with [Directive][] and [DirectiveLiteral][]\n- [ClassMethod][], [ObjectProperty][], and [ObjectMethod][] value property's properties in [FunctionExpression][] is coerced/brought into the main method node.\n\nAST for JSX code is based on [Facebook JSX AST][] with the addition of one node type:\n\n- `JSXText`\n\n[Babel AST format]: https://github.com/babel/babylon/blob/master/ast/spec.md\n[ESTree spec]: https://github.com/estree/estree\n\n[Literal]: https://github.com/estree/estree/blob/master/es5.md#literal\n[Property]: https://github.com/estree/estree/blob/master/es5.md#property\n[MethodDefinition]: https://github.com/estree/estree/blob/master/es2015.md#methoddefinition\n\n[StringLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#stringliteral\n[NumericLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#numericliteral\n[BooleanLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#booleanliteral\n[NullLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#nullliteral\n[RegExpLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#regexpliteral\n[ObjectProperty]: https://github.com/babel/babylon/blob/master/ast/spec.md#objectproperty\n[ObjectMethod]: https://github.com/babel/babylon/blob/master/ast/spec.md#objectmethod\n[ClassMethod]: https://github.com/babel/babylon/blob/master/ast/spec.md#classmethod\n[Program]: https://github.com/babel/babylon/blob/master/ast/spec.md#programs\n[BlockStatement]: https://github.com/babel/babylon/blob/master/ast/spec.md#blockstatement\n[Directive]: https://github.com/babel/babylon/blob/master/ast/spec.md#directive\n[DirectiveLiteral]: https://github.com/babel/babylon/blob/master/ast/spec.md#directiveliteral\n[FunctionExpression]: https://github.com/babel/babylon/blob/master/ast/spec.md#functionexpression\n\n[Facebook JSX AST]: https://github.com/facebook/jsx/blob/master/AST.md\n\n### Semver\n\nBabylon follows semver in most situations. The only thing to note is that some spec-compliancy bug fixes may be released under patch versions.\n\nFor example: We push a fix to early error on something like [#107](https://github.com/babel/babylon/pull/107) - multiple default exports per file. That would be considered a bug fix even though it would cause a build to fail.\n\n### Example\n\n```javascript\nrequire(\"babylon\").parse(\"code\", {\n  // parse in strict mode and allow module declarations\n  sourceType: \"module\",\n\n  plugins: [\n    // enable jsx and flow syntax\n    \"jsx\",\n    \"flow\"\n  ]\n});\n```\n\n### Plugins\n\n - `estree`\n - `jsx`\n - `flow`\n - `doExpressions`\n - `objectRestSpread`\n - `decorators` (Based on an outdated version of the Decorators proposal. Will be removed in a future version of `Babylon`)\n - `classProperties`\n - `exportExtensions`\n - `asyncGenerators`\n - `functionBind`\n - `functionSent`\n - `dynamicImport`\n - `templateInvalidEscapes`\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babylon",
              "error": "[Circular]",
              "extraneous": false
            },
            "convert-source-map": {
              "_from": "convert-source-map@^1.1.0",
              "_id": "convert-source-map@1.5.0",
              "_inBundle": false,
              "_integrity": "sha1-ms1whRxtXf3ZPZKC5e35SgP/RrU=",
              "_location": "/convert-source-map",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "convert-source-map@^1.1.0",
                "name": "convert-source-map",
                "escapedName": "convert-source-map",
                "rawSpec": "^1.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.1.0"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.5.0.tgz",
              "_shasum": "9acd70851c6d5dfdd93d9282e5edf94a03ff46b5",
              "_spec": "convert-source-map@^1.1.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Thorsten Lorenz",
                "email": "thlorenz@gmx.de",
                "url": "http://thlorenz.com"
              },
              "bugs": {
                "url": "https://github.com/thlorenz/convert-source-map/issues"
              },
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Converts a source-map from/to  different formats and allows adding/changing properties.",
              "devDependencies": {
                "inline-source-map": "~0.6.2",
                "tap": "~9.0.0"
              },
              "engine": {
                "node": ">=0.6"
              },
              "homepage": "https://github.com/thlorenz/convert-source-map",
              "keywords": [
                "convert",
                "sourcemap",
                "source",
                "map",
                "browser",
                "debug"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "convert-source-map",
              "repository": {
                "type": "git",
                "url": "git://github.com/thlorenz/convert-source-map.git"
              },
              "scripts": {
                "test": "tap test/*.js --color"
              },
              "version": "1.5.0",
              "readme": "# convert-source-map [![build status](https://secure.travis-ci.org/thlorenz/convert-source-map.png)](http://travis-ci.org/thlorenz/convert-source-map)\n\n[![NPM](https://nodei.co/npm/convert-source-map.png?downloads=true&stars=true)](https://nodei.co/npm/convert-source-map/)\n\nConverts a source-map from/to  different formats and allows adding/changing properties.\n\n```js\nvar convert = require('convert-source-map');\n\nvar json = convert\n  .fromComment('//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=')\n  .toJSON();\n\nvar modified = convert\n  .fromComment('//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVpbGQvZm9vLm1pbi5qcyIsInNvdXJjZXMiOlsic3JjL2Zvby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIvIn0=')\n  .setProperty('sources', [ 'SRC/FOO.JS' ])\n  .toJSON();\n\nconsole.log(json);\nconsole.log(modified);\n```\n\n```json\n{\"version\":3,\"file\":\"build/foo.min.js\",\"sources\":[\"src/foo.js\"],\"names\":[],\"mappings\":\"AAAA\",\"sourceRoot\":\"/\"}\n{\"version\":3,\"file\":\"build/foo.min.js\",\"sources\":[\"SRC/FOO.JS\"],\"names\":[],\"mappings\":\"AAAA\",\"sourceRoot\":\"/\"}\n```\n\n## API\n\n### fromObject(obj)\n\nReturns source map converter from given object.\n\n### fromJSON(json)\n\nReturns source map converter from given json string.\n\n### fromBase64(base64)\n\nReturns source map converter from given base64 encoded json string.\n\n### fromComment(comment)\n\nReturns source map converter from given base64 encoded json string prefixed with `//# sourceMappingURL=...`.\n\n### fromMapFileComment(comment, mapFileDir)\n\nReturns source map converter from given `filename` by parsing `//# sourceMappingURL=filename`.\n\n`filename` must point to a file that is found inside the `mapFileDir`. Most tools store this file right next to the\ngenerated file, i.e. the one containing the source map.\n\n### fromSource(source)\n\nFinds last sourcemap comment in file and returns source map converter or returns null if no source map comment was found.\n\n### fromMapFileSource(source, mapFileDir)\n\nFinds last sourcemap comment in file and returns source map converter or returns null if no source map comment was\nfound.\n\nThe sourcemap will be read from the map file found by parsing `# sourceMappingURL=file` comment. For more info see\nfromMapFileComment.\n\n### toObject()\n\nReturns a copy of the underlying source map.\n\n### toJSON([space])\n\nConverts source map to json string. If `space` is given (optional), this will be passed to\n[JSON.stringify](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify) when the\nJSON string is generated.\n\n### toBase64()\n\nConverts source map to base64 encoded json string.\n\n### toComment([options])\n\nConverts source map to an inline comment that can be appended to the source-file.\n\nBy default, the comment is formatted like: `//# sourceMappingURL=...`, which you would\nnormally see in a JS source file.\n\nWhen `options.multiline == true`, the comment is formatted like: `/*# sourceMappingURL=... */`, which you would find in a CSS source file.\n\n### addProperty(key, value)\n\nAdds given property to the source map. Throws an error if property already exists.\n\n### setProperty(key, value)\n\nSets given property to the source map. If property doesn't exist it is added, otherwise its value is updated.\n\n### getProperty(key)\n\nGets given property of the source map.\n\n### removeComments(src)\n\nReturns `src` with all source map comments removed\n\n### removeMapFileComments(src)\n\nReturns `src` with all source map comments pointing to map files removed.\n\n### commentRegex\n\nProvides __a fresh__ RegExp each time it is accessed. Can be used to find source map comments.\n\n### mapFileCommentRegex\n\nProvides __a fresh__ RegExp each time it is accessed. Can be used to find source map comments pointing to map files.\n\n### generateMapFileComment(file, [options])\n\nReturns a comment that links to an external source map via `file`.\n\nBy default, the comment is formatted like: `//# sourceMappingURL=...`, which you would normally see in a JS source file.\n\nWhen `options.multiline == true`, the comment is formatted like: `/*# sourceMappingURL=... */`, which you would find in a CSS source file.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/thlorenz/convert-source-map/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/convert-source-map",
              "error": "[Circular]",
              "extraneous": false
            },
            "debug": {
              "_from": "debug@^2.1.1",
              "_id": "debug@2.6.8",
              "_inBundle": false,
              "_integrity": "sha1-5zFTHKLt4n0YgiJCfaF4IdaP9Pw=",
              "_location": "/debug",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/debug/-/debug-2.6.8.tgz",
              "_shasum": "e731531ca2ede27d188222427da17821d68ff4fc",
              "_spec": "debug@^2.1.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "browser": "./src/browser.js",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "component": "[Circular]",
              "contributors": "[Circular]",
              "dependencies": {
                "ms": {
                  "_from": "ms@2.0.0",
                  "_id": "ms@2.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
                  "_location": "/ms",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "ms@2.0.0",
                    "name": "ms",
                    "escapedName": "ms",
                    "rawSpec": "2.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "2.0.0"
                  },
                  "_requiredBy": [
                    "/debug"
                  ],
                  "_resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
                  "_shasum": "5608aeadfc00be6c2901df5f9861788de0d597c8",
                  "_spec": "ms@2.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/debug",
                  "bugs": {
                    "url": "https://github.com/zeit/ms/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Tiny milisecond conversion utility",
                  "devDependencies": {
                    "eslint": "3.19.0",
                    "expect.js": "0.3.1",
                    "husky": "0.13.3",
                    "lint-staged": "3.4.1",
                    "mocha": "3.4.1"
                  },
                  "eslintConfig": {
                    "extends": "eslint:recommended",
                    "env": {
                      "node": true,
                      "es6": true
                    }
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/zeit/ms#readme",
                  "license": "MIT",
                  "lint-staged": {
                    "*.js": [
                      "npm run lint",
                      "prettier --single-quote --write",
                      "git add"
                    ]
                  },
                  "main": "./index",
                  "name": "ms",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/zeit/ms.git"
                  },
                  "scripts": {
                    "lint": "eslint lib/* bin/*",
                    "precommit": "lint-staged",
                    "test": "mocha tests.js"
                  },
                  "version": "2.0.0",
                  "readme": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Slack Channel](http://zeit-slackin.now.sh/badge.svg)](https://zeit.chat/)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n```\n\n### Convert from milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time format written-out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [node](https://nodejs.org) and in the browser.\n- If a number is supplied to `ms`, a string with a unit is returned.\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`).\n- If you pass a string with a number and a valid unit, the number of equivalent ms is returned.\n\n## Caught a bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, node will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/ms",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "small debugging utility",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/visionmedia/debug#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "./src/index.js",
              "name": "debug",
              "repository": "[Circular]",
              "version": "2.6.8",
              "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers) \n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n\n\nA tiny node.js debugging utility modelled after node core's debugging technique.\n\n**Discussion around the V3 API is under way [here](https://github.com/visionmedia/debug/issues/370)**\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample _app.js_:\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample _worker.js_:\n\n```js\nvar debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n```\n\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\n\n  ![debug http and worker](http://f.cl.ly/items/18471z1H402O24072r1J/Screenshot.png)\n\n  ![debug worker](http://f.cl.ly/items/1X413v1a3M0d3C2c1E0i/Screenshot.png)\n\n#### Windows note\n\n On Windows the environment variable is set using the `set` command.\n\n ```cmd\n set DEBUG=*,-not_this\n ```\n\n Note that PowerShell uses different syntax to set environment variables.\n\n ```cmd\n $env:DEBUG = \"*,-not_this\"\n  ```\n\nThen, run the program to be debugged as usual.\n\n## Millisecond diff\n\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n  ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)\n\n  When stdout is not a TTY, `Date#toUTCString()` is used, making it more useful for logging the debug information as shown below:\n\n  ![](http://f.cl.ly/items/112H3i0e0o0P0a2Q2r11/Screenshot.png)\n\n## Conventions\n\n  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".\n\n## Wildcards\n\n  The `*` character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with `DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\n  You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, `DEBUG=*,-connect:*` would include all debuggers except those starting with \"connect:\".\n\n## Environment Variables\n\n  When running through Node.js, you can set a few environment variables that will\n  change the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth. |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n  __Note:__ The environment variables beginning with `DEBUG_` end up being\n  converted into an Options object that gets used with `%o`/`%O` formatters.\n  See the Node.js documentation for\n  [`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\n  for the complete list.\n\n## Formatters\n\n\n  Debug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting. Below are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n### Custom formatters\n\n  You can add custom formatters by extending the `debug.formatters` object. For example, if you wanted to add support for rendering a Buffer as hex with `%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// …elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n## Browser support\n  You can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\n  or just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\n  if you don't want to build it yourself.\n\n  Debug's enable state is currently persisted by `localStorage`.\n  Consider the situation shown below where you have `worker:a` and `worker:b`,\n  and wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n#### Web Inspector Colors\n\n  Colors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\n  option. These are WebKit web inspectors, Firefox ([since version\n  31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\n  and the Firebug plugin for Firefox (any version).\n\n  Colored output looks something like:\n\n  ![](https://cloud.githubusercontent.com/assets/71256/3139768/b98c5fd8-e8ef-11e3-862a-f7253b6f47c6.png)\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample _stdout.js_:\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n \n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/debug",
              "error": "[Circular]",
              "extraneous": false
            },
            "json5": {
              "_from": "json5@^0.5.0",
              "_id": "json5@0.5.1",
              "_inBundle": false,
              "_integrity": "sha1-Hq3nrMASA0rYTiOWdn6tn6VJWCE=",
              "_location": "/json5",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "json5@^0.5.0",
                "name": "json5",
                "escapedName": "json5",
                "rawSpec": "^0.5.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^0.5.0"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/json5/-/json5-0.5.1.tgz",
              "_shasum": "1eade7acc012034ad84e2396767ead9fa5495821",
              "_spec": "json5@^0.5.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Aseem Kishore",
                "email": "aseem.kishore@gmail.com"
              },
              "bin": {
                "json5": "lib/cli.js"
              },
              "bugs": {
                "url": "https://github.com/aseemk/json5/issues"
              },
              "bundleDependencies": false,
              "contributors": [
                {
                  "name": "Max Nanasy",
                  "email": "max.nanasy@gmail.com"
                },
                {
                  "name": "Andrew Eisenberg",
                  "email": "andrew@eisenberg.as"
                },
                {
                  "name": "Jordan Tucker",
                  "email": "jordanbtucker@gmail.com"
                }
              ],
              "dependencies": {},
              "deprecated": false,
              "description": "JSON for the ES5 era.",
              "devDependencies": {
                "gulp": "^3.9.1",
                "gulp-jshint": "^2.0.1",
                "jshint": "^2.9.3",
                "jshint-stylish": "^2.2.1",
                "mocha": "^3.1.0"
              },
              "files": [
                "lib/"
              ],
              "homepage": "http://json5.org/",
              "keywords": [
                "json",
                "es5"
              ],
              "license": "MIT",
              "main": "lib/json5.js",
              "name": "json5",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/aseemk/json5.git"
              },
              "scripts": {
                "build": "node ./lib/cli.js -c package.json5",
                "test": "mocha --ui exports --reporter spec"
              },
              "version": "0.5.1",
              "readme": "# JSON5 – Modern JSON\n\n[![Build Status](https://travis-ci.org/json5/json5.svg)](https://travis-ci.org/json5/json5)\n\nJSON is an excellent data format, but we think it can be better.\n\n**JSON5 is a proposed extension to JSON** that aims to make it easier for\n*humans to write and maintain* by hand. It does this by adding some minimal\nsyntax features directly from ECMAScript 5.\n\nJSON5 remains a **strict subset of JavaScript**, adds **no new data types**,\nand **works with all existing JSON content**.\n\nJSON5 is *not* an official successor to JSON, and JSON5 content may *not*\nwork with existing JSON parsers. For this reason, JSON5 files use a new .json5\nextension. *(TODO: new MIME type needed too.)*\n\nThe code here is a **reference JavaScript implementation** for both Node.js\nand all browsers. It’s based directly off of Douglas Crockford’s own [JSON\nimplementation][json_parse.js], and it’s both robust and secure.\n\n\n## Why\n\nJSON isn’t the friendliest to *write*. Keys need to be quoted, objects and\narrays can’t have trailing commas, and comments aren’t allowed — even though\nnone of these are the case with regular JavaScript today.\n\nThat was fine when JSON’s goal was to be a great data format, but JSON’s usage\nhas expanded beyond *machines*. JSON is now used for writing [configs][ex1],\n[manifests][ex2], even [tests][ex3] — all by *humans*.\n\n[ex1]: http://plovr.com/docs.html\n[ex2]: https://www.npmjs.org/doc/files/package.json.html\n[ex3]: http://code.google.com/p/fuzztester/wiki/JSONFileFormat\n\nThere are other formats that are human-friendlier, like YAML, but changing\nfrom JSON to a completely different format is undesirable in many cases.\nJSON5’s aim is to remain close to JSON and JavaScript.\n\n\n## Features\n\nThe following is the exact list of additions to JSON’s syntax introduced by\nJSON5. **All of these are optional**, and **all of these come from ES5**.\n\n### Objects\n\n- Object keys can be unquoted if they’re valid [identifiers][mdn_variables].\n  Yes, even reserved keywords (like `default`) are valid unquoted keys in ES5\n  [[§11.1.5](http://es5.github.com/#x11.1.5), [§7.6](http://es5.github.com/#x7.6)].\n  ([More info](https://mathiasbynens.be/notes/javascript-identifiers))\n\n  *(TODO: Unicode characters and escape sequences aren’t yet supported in this\n  implementation.)*\n  \n- Object keys can also be single-quoted.\n\n- Objects can have trailing commas.\n\n[mdn_variables]: https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variables\n\n### Arrays\n\n- Arrays can have trailing commas.\n\n### Strings\n\n- Strings can be single-quoted.\n\n- Strings can be split across multiple lines; just prefix each newline with a\n  backslash. [ES5 [§7.8.4](http://es5.github.com/#x7.8.4)]\n\n### Numbers\n\n- Numbers can be hexadecimal (base 16).\n\n- Numbers can begin or end with a (leading or trailing) decimal point.\n\n- Numbers can include `Infinity`, `-Infinity`,  `NaN`, and `-NaN`.\n\n- Numbers can begin with an explicit plus sign.\n\n### Comments\n\n- Both inline (single-line) and block (multi-line) comments are allowed.\n\n\n## Example\n\nThe following is a contrived example, but it illustrates most of the features:\n\n```js\n{\n    foo: 'bar',\n    while: true,\n\n    this: 'is a \\\nmulti-line string',\n\n    // this is an inline comment\n    here: 'is another', // inline comment\n\n    /* this is a block comment\n       that continues on another line */\n\n    hex: 0xDEADbeef,\n    half: .5,\n    delta: +10,\n    to: Infinity,   // and beyond!\n\n    finally: 'a trailing comma',\n    oh: [\n        \"we shouldn't forget\",\n        'arrays can have',\n        'trailing commas too',\n    ],\n}\n```\n\nThis implementation’s own [package.json5](package.json5) is more realistic:\n\n```js\n// This file is written in JSON5 syntax, naturally, but npm needs a regular\n// JSON file, so compile via `npm run build`. Be sure to keep both in sync!\n\n{\n    name: 'json5',\n    version: '0.5.0',\n    description: 'JSON for the ES5 era.',\n    keywords: ['json', 'es5'],\n    author: 'Aseem Kishore <aseem.kishore@gmail.com>',\n    contributors: [\n        // TODO: Should we remove this section in favor of GitHub's list?\n        // https://github.com/aseemk/json5/contributors\n        'Max Nanasy <max.nanasy@gmail.com>',\n        'Andrew Eisenberg <andrew@eisenberg.as>',\n        'Jordan Tucker <jordanbtucker@gmail.com>',\n    ],\n    main: 'lib/json5.js',\n    bin: 'lib/cli.js',\n    files: [\"lib/\"],\n    dependencies: {},\n    devDependencies: {\n        gulp: \"^3.9.1\",\n        'gulp-jshint': \"^2.0.0\",\n        jshint: \"^2.9.1\",\n        'jshint-stylish': \"^2.1.0\",\n        mocha: \"^2.4.5\"\n    },\n    scripts: {\n        build: 'node ./lib/cli.js -c package.json5',\n        test: 'mocha --ui exports --reporter spec',\n            // TODO: Would it be better to define these in a mocha.opts file?\n    },\n    homepage: 'http://json5.org/',\n    license: 'MIT',\n    repository: {\n        type: 'git',\n        url: 'https://github.com/aseemk/json5.git',\n    },\n}\n```\n\n\n## Community\n\nJoin the [Google Group](http://groups.google.com/group/json5) if you’re\ninterested in JSON5 news, updates, and general discussion.\nDon’t worry, it’s very low-traffic.\n\nThe [GitHub wiki](https://github.com/aseemk/json5/wiki) is a good place to track\nJSON5 support and usage. Contribute freely there!\n\n[GitHub Issues](https://github.com/aseemk/json5/issues) is the place to\nformally propose feature requests and report bugs. Questions and general\nfeedback are better directed at the Google Group.\n\n\n## Usage\n\nThis JavaScript implementation of JSON5 simply provides a `JSON5` object just\nlike the native ES5 `JSON` object.\n\nTo use from Node:\n\n```sh\nnpm install json5\n```\n\n```js\nvar JSON5 = require('json5');\n```\n\nTo use in the browser (adds the `JSON5` object to the global namespace):\n\n```html\n<script src=\"json5.js\"></script>\n```\n\nThen in both cases, you can simply replace native `JSON` calls with `JSON5`:\n\n```js\nvar obj = JSON5.parse('{unquoted:\"key\",trailing:\"comma\",}');\nvar str = JSON5.stringify(obj);\n```\n\n`JSON5.parse` supports all of the JSON5 features listed above (*TODO: except\nUnicode*), as well as the native [`reviver` argument][json-parse].\n\n[json-parse]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\n\n`JSON5.stringify` mainly avoids quoting keys where possible, but we hope to\nkeep expanding it in the future (e.g. to also output trailing commas).\nIt supports the native [`replacer` and `space` arguments][json-stringify],\nas well. *(TODO: Any implemented `toJSON` methods aren’t used today.)*\n\n[json-stringify]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n\n\n### Extras\n\nIf you’re running this on Node, you can also register a JSON5 `require()` hook\nto let you `require()` `.json5` files just like you can `.json` files:\n\n```js\nrequire('json5/lib/require');\nrequire('./path/to/foo');   // tries foo.json5 after foo.js, foo.json, etc.\nrequire('./path/to/bar.json5');\n```\n\nThis module also provides a `json5` executable (requires Node) for converting\nJSON5 files to JSON:\n\n```sh\njson5 -c path/to/foo.json5    # generates path/to/foo.json\n```\n\n\n## Development\n\n```sh\ngit clone git://github.com/aseemk/json5.git\ncd json5\nnpm install\nnpm test\n```\n\nAs the `package.json5` file states, be sure to run `npm run build` on changes\nto `package.json5`, since npm requires `package.json`.\n\nFeel free to [file issues](https://github.com/aseemk/json5/issues) and submit\n[pull requests](https://github.com/aseemk/json5/pulls) — contributions are\nwelcome. If you do submit a pull request, please be sure to add or update the\ntests, and ensure that `npm test` continues to pass.\n\n\n## License\n\nMIT. See [LICENSE.md](./LICENSE.md) for details.\n\n\n## Credits\n\n[Michael Bolin](http://bolinfest.com/) independently arrived at and published\nsome of these same ideas with awesome explanations and detail.\nRecommended reading:\n[Suggested Improvements to JSON](http://bolinfest.com/essays/json.html)\n\n[Douglas Crockford](http://www.crockford.com/) of course designed and built\nJSON, but his state machine diagrams on the [JSON website](http://json.org/),\nas cheesy as it may sound, gave me motivation and confidence that building a\nnew parser to implement these ideas this was within my reach!\nThis code is also modeled directly off of Doug’s open-source [json_parse.js][]\nparser. I’m super grateful for that clean and well-documented code.\n\n[json_parse.js]: https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n\n[Max Nanasy](https://github.com/MaxNanasy) has been an early and prolific\nsupporter, contributing multiple patches and ideas. Thanks Max!\n\n[Andrew Eisenberg](https://github.com/aeisenberg) has contributed the\n`stringify` method.\n\n[Jordan Tucker](https://github.com/jordanbtucker) has aligned JSON5 more closely\nwith ES5 and is actively maintaining this project.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/json5",
              "error": "[Circular]",
              "extraneous": false
            },
            "lodash": {
              "_from": "lodash@^4.2.0",
              "_id": "lodash@4.17.4",
              "_inBundle": false,
              "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
              "_location": "/lodash",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
              "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
              "_spec": "lodash@^4.2.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "contributors": "[Circular]",
              "deprecated": false,
              "description": "Lodash modular utilities.",
              "homepage": "https://lodash.com/",
              "icon": "https://lodash.com/icon.svg",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "lodash.js",
              "name": "lodash",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "4.17.4",
              "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "devDependencies": "[Circular]",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/lodash",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "lodash"
            },
            "minimatch": {
              "_from": "minimatch@^3.0.2",
              "_id": "minimatch@3.0.4",
              "_inBundle": false,
              "_integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
              "_location": "/minimatch",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "minimatch@^3.0.2",
                "name": "minimatch",
                "escapedName": "minimatch",
                "rawSpec": "^3.0.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "^3.0.2"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
              "_shasum": "5166e286457f03306064be5497e8dbb0c3d32083",
              "_spec": "minimatch@^3.0.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Isaac Z. Schlueter",
                "email": "i@izs.me",
                "url": "http://blog.izs.me"
              },
              "bugs": {
                "url": "https://github.com/isaacs/minimatch/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "brace-expansion": {
                  "_from": "brace-expansion@^1.1.7",
                  "_id": "brace-expansion@1.1.8",
                  "_inBundle": false,
                  "_integrity": "sha1-wHshHHyVLsH479Uad+8NHTmQopI=",
                  "_location": "/brace-expansion",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "brace-expansion@^1.1.7",
                    "name": "brace-expansion",
                    "escapedName": "brace-expansion",
                    "rawSpec": "^1.1.7",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.1.7"
                  },
                  "_requiredBy": [
                    "/minimatch"
                  ],
                  "_resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.8.tgz",
                  "_shasum": "c07b211c7c952ec1f8efd51a77ef0d1d3990a292",
                  "_spec": "brace-expansion@^1.1.7",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/minimatch",
                  "author": {
                    "name": "Julian Gruber",
                    "email": "mail@juliangruber.com",
                    "url": "http://juliangruber.com"
                  },
                  "bugs": {
                    "url": "https://github.com/juliangruber/brace-expansion/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "balanced-match": {
                      "_from": "balanced-match@^1.0.0",
                      "_id": "balanced-match@1.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
                      "_location": "/balanced-match",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "balanced-match@^1.0.0",
                        "name": "balanced-match",
                        "escapedName": "balanced-match",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/brace-expansion"
                      ],
                      "_resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
                      "_shasum": "89b4d199ab2bee49de164ea02b89ce462d71b767",
                      "_spec": "balanced-match@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/brace-expansion",
                      "author": {
                        "name": "Julian Gruber",
                        "email": "mail@juliangruber.com",
                        "url": "http://juliangruber.com"
                      },
                      "bugs": {
                        "url": "https://github.com/juliangruber/balanced-match/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {},
                      "deprecated": false,
                      "description": "Match balanced character pairs, like \"{\" and \"}\"",
                      "devDependencies": {
                        "matcha": "^0.7.0",
                        "tape": "^4.6.0"
                      },
                      "homepage": "https://github.com/juliangruber/balanced-match",
                      "keywords": [
                        "match",
                        "regexp",
                        "test",
                        "balanced",
                        "parse"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "balanced-match",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/juliangruber/balanced-match.git"
                      },
                      "scripts": {
                        "bench": "make bench",
                        "test": "make test"
                      },
                      "testling": {
                        "files": "test/*.js",
                        "browsers": [
                          "ie/8..latest",
                          "firefox/20..latest",
                          "firefox/nightly",
                          "chrome/25..latest",
                          "chrome/canary",
                          "opera/12..latest",
                          "opera/next",
                          "safari/5.1..latest",
                          "ipad/6.0..latest",
                          "iphone/6.0..latest",
                          "android-browser/4.2..latest"
                        ]
                      },
                      "version": "1.0.0",
                      "readme": "# balanced-match\n\nMatch balanced string pairs, like `{` and `}` or `<b>` and `</b>`. Supports regular expressions as well!\n\n[![build status](https://secure.travis-ci.org/juliangruber/balanced-match.svg)](http://travis-ci.org/juliangruber/balanced-match)\n[![downloads](https://img.shields.io/npm/dm/balanced-match.svg)](https://www.npmjs.org/package/balanced-match)\n\n[![testling badge](https://ci.testling.com/juliangruber/balanced-match.png)](https://ci.testling.com/juliangruber/balanced-match)\n\n## Example\n\nGet the first matching pair of braces:\n\n```js\nvar balanced = require('balanced-match');\n\nconsole.log(balanced('{', '}', 'pre{in{nested}}post'));\nconsole.log(balanced('{', '}', 'pre{first}between{second}post'));\nconsole.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, 'pre  {   in{nest}   }  post'));\n```\n\nThe matches are:\n\n```bash\n$ node example.js\n{ start: 3, end: 14, pre: 'pre', body: 'in{nested}', post: 'post' }\n{ start: 3,\n  end: 9,\n  pre: 'pre',\n  body: 'first',\n  post: 'between{second}post' }\n{ start: 3, end: 17, pre: 'pre', body: 'in{nest}', post: 'post' }\n```\n\n## API\n\n### var m = balanced(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\nobject with those keys:\n\n* **start** the index of the first match of `a`\n* **end** the index of the matching `b`\n* **pre** the preamble, `a` and `b` not included\n* **body** the match, `a` and `b` not included\n* **post** the postscript, `a` and `b` not included\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `['{', 'a', '']` and `{a}}` will match `['', 'a', '}']`.\n\n### var r = balanced.range(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\narray with indexes: `[ <a index>, <b index> ]`.\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `[ 1, 3 ]` and `{a}}` will match `[0, 2]`.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install balanced-match\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/balanced-match",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "concat-map": {
                      "_from": "concat-map@0.0.1",
                      "_id": "concat-map@0.0.1",
                      "_inBundle": false,
                      "_integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
                      "_location": "/concat-map",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "concat-map@0.0.1",
                        "name": "concat-map",
                        "escapedName": "concat-map",
                        "rawSpec": "0.0.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "0.0.1"
                      },
                      "_requiredBy": [
                        "/brace-expansion"
                      ],
                      "_resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
                      "_shasum": "d8a96bd77fd68df7793a73036a3ba0d5405d477b",
                      "_spec": "concat-map@0.0.1",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/brace-expansion",
                      "author": {
                        "name": "James Halliday",
                        "email": "mail@substack.net",
                        "url": "http://substack.net"
                      },
                      "bugs": {
                        "url": "https://github.com/substack/node-concat-map/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "concatenative mapdashery",
                      "devDependencies": {
                        "tape": "~2.4.0"
                      },
                      "directories": {
                        "example": "example",
                        "test": "test"
                      },
                      "homepage": "https://github.com/substack/node-concat-map#readme",
                      "keywords": [
                        "concat",
                        "concatMap",
                        "map",
                        "functional",
                        "higher-order"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "concat-map",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/substack/node-concat-map.git"
                      },
                      "scripts": {
                        "test": "tape test/*.js"
                      },
                      "testling": {
                        "files": "test/*.js",
                        "browsers": {
                          "ie": [
                            6,
                            7,
                            8,
                            9
                          ],
                          "ff": [
                            3.5,
                            10,
                            15
                          ],
                          "chrome": [
                            10,
                            22
                          ],
                          "safari": [
                            5.1
                          ],
                          "opera": [
                            12
                          ]
                        }
                      },
                      "version": "0.0.1",
                      "readme": "concat-map\n==========\n\nConcatenative mapdashery.\n\n[![browser support](http://ci.testling.com/substack/node-concat-map.png)](http://ci.testling.com/substack/node-concat-map)\n\n[![build status](https://secure.travis-ci.org/substack/node-concat-map.png)](http://travis-ci.org/substack/node-concat-map)\n\nexample\n=======\n\n``` js\nvar concatMap = require('concat-map');\nvar xs = [ 1, 2, 3, 4, 5, 6 ];\nvar ys = concatMap(xs, function (x) {\n    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n});\nconsole.dir(ys);\n```\n\n***\n\n```\n[ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]\n```\n\nmethods\n=======\n\n``` js\nvar concatMap = require('concat-map')\n```\n\nconcatMap(xs, fn)\n-----------------\n\nReturn an array of concatenated elements by calling `fn(x, i)` for each element\n`x` and each index `i` in the array `xs`.\n\nWhen `fn(x, i)` returns an array, its result will be concatenated with the\nresult array. If `fn(x, i)` returns anything else, that value will be pushed\nonto the end of the result array.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install concat-map\n```\n\nlicense\n=======\n\nMIT\n\nnotes\n=====\n\nThis module was written while sitting high above the ground in a tree.\n",
                      "readmeFilename": "README.markdown",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/concat-map",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Brace expansion as known from sh/bash",
                  "devDependencies": {
                    "matcha": "^0.7.0",
                    "tape": "^4.6.0"
                  },
                  "homepage": "https://github.com/juliangruber/brace-expansion",
                  "keywords": [],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "brace-expansion",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/juliangruber/brace-expansion.git"
                  },
                  "scripts": {
                    "bench": "matcha test/perf/bench.js",
                    "gentest": "bash test/generate.sh",
                    "test": "tape test/*.js"
                  },
                  "testling": {
                    "files": "test/*.js",
                    "browsers": [
                      "ie/8..latest",
                      "firefox/20..latest",
                      "firefox/nightly",
                      "chrome/25..latest",
                      "chrome/canary",
                      "opera/12..latest",
                      "opera/next",
                      "safari/5.1..latest",
                      "ipad/6.0..latest",
                      "iphone/6.0..latest",
                      "android-browser/4.2..latest"
                    ]
                  },
                  "version": "1.1.8",
                  "readme": "# brace-expansion\n\n[Brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html), \nas known from sh/bash, in JavaScript.\n\n[![build status](https://secure.travis-ci.org/juliangruber/brace-expansion.svg)](http://travis-ci.org/juliangruber/brace-expansion)\n[![downloads](https://img.shields.io/npm/dm/brace-expansion.svg)](https://www.npmjs.org/package/brace-expansion)\n[![Greenkeeper badge](https://badges.greenkeeper.io/juliangruber/brace-expansion.svg)](https://greenkeeper.io/)\n\n[![testling badge](https://ci.testling.com/juliangruber/brace-expansion.png)](https://ci.testling.com/juliangruber/brace-expansion)\n\n## Example\n\n```js\nvar expand = require('brace-expansion');\n\nexpand('file-{a,b,c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('-v{,,}')\n// => ['-v', '-v', '-v']\n\nexpand('file{0..2}.jpg')\n// => ['file0.jpg', 'file1.jpg', 'file2.jpg']\n\nexpand('file-{a..c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('file{2..0}.jpg')\n// => ['file2.jpg', 'file1.jpg', 'file0.jpg']\n\nexpand('file{0..4..2}.jpg')\n// => ['file0.jpg', 'file2.jpg', 'file4.jpg']\n\nexpand('file-{a..e..2}.jpg')\n// => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg']\n\nexpand('file{00..10..5}.jpg')\n// => ['file00.jpg', 'file05.jpg', 'file10.jpg']\n\nexpand('{{A..C},{a..c}}')\n// => ['A', 'B', 'C', 'a', 'b', 'c']\n\nexpand('ppp{,config,oe{,conf}}')\n// => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']\n```\n\n## API\n\n```js\nvar expand = require('brace-expansion');\n```\n\n### var expanded = expand(str)\n\nReturn an array of all possible and valid expansions of `str`. If none are\nfound, `[str]` is returned.\n\nValid expansions are:\n\n```js\n/^(.*,)+(.+)?$/\n// {a,b,...}\n```\n\nA comma seperated list of options, like `{a,b}` or `{a,{b,c}}` or `{,a,}`.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nA numeric sequence from `x` to `y` inclusive, with optional increment.\nIf `x` or `y` start with a leading `0`, all the numbers will be padded\nto have equal length. Negative numbers and backwards iteration work too.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nAn alphabetic sequence from `x` to `y` inclusive, with optional increment.\n`x` and `y` must be exactly one character, and if given, `incr` must be a\nnumber.\n\nFor compatibility reasons, the string `${` is not eligible for brace expansion.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install brace-expansion\n```\n\n## Contributors\n\n- [Julian Gruber](https://github.com/juliangruber)\n- [Isaac Z. Schlueter](https://github.com/isaacs)\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "balanced-match": "^1.0.0",
                    "concat-map": "0.0.1"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/brace-expansion",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "a glob matcher in javascript",
              "devDependencies": {
                "tap": "^10.3.2"
              },
              "engines": {
                "node": "*"
              },
              "files": [
                "minimatch.js"
              ],
              "homepage": "https://github.com/isaacs/minimatch#readme",
              "license": "ISC",
              "main": "minimatch.js",
              "name": "minimatch",
              "repository": {
                "type": "git",
                "url": "git://github.com/isaacs/minimatch.git"
              },
              "scripts": {
                "postpublish": "git push origin --all; git push origin --tags",
                "postversion": "npm publish",
                "preversion": "npm test",
                "test": "tap test/*.js --cov"
              },
              "version": "3.0.4",
              "readme": "# minimatch\n\nA minimal matching utility.\n\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.svg)](http://travis-ci.org/isaacs/minimatch)\n\n\nThis is the matching library used internally by npm.\n\nIt works by converting glob expressions into JavaScript `RegExp`\nobjects.\n\n## Usage\n\n```javascript\nvar minimatch = require(\"minimatch\")\n\nminimatch(\"bar.foo\", \"*.foo\") // true!\nminimatch(\"bar.foo\", \"*.bar\") // false!\nminimatch(\"bar.foo\", \"*.+(bar|foo)\", { debug: true }) // true, and noisy!\n```\n\n## Features\n\nSupports these glob features:\n\n* Brace Expansion\n* Extended glob matching\n* \"Globstar\" `**` matching\n\nSee:\n\n* `man sh`\n* `man bash`\n* `man 3 fnmatch`\n* `man 5 gitignore`\n\n## Minimatch Class\n\nCreate a minimatch object by instantiating the `minimatch.Minimatch` class.\n\n```javascript\nvar Minimatch = require(\"minimatch\").Minimatch\nvar mm = new Minimatch(pattern, options)\n```\n\n### Properties\n\n* `pattern` The original pattern the minimatch object represents.\n* `options` The options supplied to the constructor.\n* `set` A 2-dimensional array of regexp or string expressions.\n  Each row in the\n  array corresponds to a brace-expanded pattern.  Each item in the row\n  corresponds to a single path-part.  For example, the pattern\n  `{a,b/c}/d` would expand to a set of patterns like:\n\n        [ [ a, d ]\n        , [ b, c, d ] ]\n\n    If a portion of the pattern doesn't have any \"magic\" in it\n    (that is, it's something like `\"foo\"` rather than `fo*o?`), then it\n    will be left as a string rather than converted to a regular\n    expression.\n\n* `regexp` Created by the `makeRe` method.  A single regular expression\n  expressing the entire pattern.  This is useful in cases where you wish\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\n* `negate` True if the pattern is negated.\n* `comment` True if the pattern is a comment.\n* `empty` True if the pattern is `\"\"`.\n\n### Methods\n\n* `makeRe` Generate the `regexp` member if necessary, and return it.\n  Will return `false` if the pattern is invalid.\n* `match(fname)` Return true if the filename matches the pattern, or\n  false otherwise.\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\n  filename, and match it against a single row in the `regExpSet`.  This\n  method is mainly for internal use, but is exposed so that it can be\n  used by a glob-walker that needs to avoid excessive filesystem calls.\n\nAll other methods are internal, and will be called as necessary.\n\n### minimatch(path, pattern, options)\n\nMain export.  Tests a path against the pattern using the options.\n\n```javascript\nvar isJS = minimatch(file, \"*.js\", { matchBase: true })\n```\n\n### minimatch.filter(pattern, options)\n\nReturns a function that tests its\nsupplied argument, suitable for use with `Array.filter`.  Example:\n\n```javascript\nvar javascripts = fileList.filter(minimatch.filter(\"*.js\", {matchBase: true}))\n```\n\n### minimatch.match(list, pattern, options)\n\nMatch against the list of\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\noptions.nonull is set, then return a list containing the pattern itself.\n\n```javascript\nvar javascripts = minimatch.match(fileList, \"*.js\", {matchBase: true}))\n```\n\n### minimatch.makeRe(pattern, options)\n\nMake a regular expression object from the pattern.\n\n## Options\n\nAll options are `false` by default.\n\n### debug\n\nDump a ton of stuff to stderr.\n\n### nobrace\n\nDo not expand `{a,b}` and `{1..3}` brace sets.\n\n### noglobstar\n\nDisable `**` matching against multiple folder names.\n\n### dot\n\nAllow patterns to match filenames starting with a period, even if\nthe pattern does not explicitly have a period in that spot.\n\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\nis set.\n\n### noext\n\nDisable \"extglob\" style patterns like `+(a|b)`.\n\n### nocase\n\nPerform a case-insensitive match.\n\n### nonull\n\nWhen a match is not found by `minimatch.match`, return a list containing\nthe pattern itself if this option is set.  When not set, an empty list\nis returned if there are no matches.\n\n### matchBase\n\nIf set, then patterns without slashes will be matched\nagainst the basename of the path if it contains slashes.  For example,\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\n\n### nocomment\n\nSuppress the behavior of treating `#` at the start of a pattern as a\ncomment.\n\n### nonegate\n\nSuppress the behavior of treating a leading `!` character as negation.\n\n### flipNegate\n\nReturns from negate expressions the same as if they were not negated.\n(Ie, true on a hit, false on a miss.)\n\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between minimatch and other\nimplementations, and are intentional.\n\nIf the pattern starts with a `!` character, then it is negated.  Set the\n`nonegate` flag to suppress this behavior, and treat leading `!`\ncharacters normally.  This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.\n\nIf a pattern starts with `#`, then it is treated as a comment, and\nwill not match anything.  Use `\\#` to match a literal `#` at the\nstart of a line, or set the `nocomment` flag to suppress this behavior.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.1, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen minimatch.match returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`minimatch.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "brace-expansion": "^1.1.7"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/minimatch",
              "error": "[Circular]",
              "extraneous": false
            },
            "path-is-absolute": {
              "_from": "path-is-absolute@^1.0.0",
              "_id": "path-is-absolute@1.0.1",
              "_inBundle": false,
              "_integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
              "_location": "/path-is-absolute",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "path-is-absolute@^1.0.0",
                "name": "path-is-absolute",
                "escapedName": "path-is-absolute",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
              "_shasum": "174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f",
              "_spec": "path-is-absolute@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/path-is-absolute/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Node.js 0.12 path.isAbsolute() ponyfill",
              "devDependencies": {
                "xo": "^0.16.0"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/path-is-absolute#readme",
              "keywords": [
                "path",
                "paths",
                "file",
                "dir",
                "absolute",
                "isabsolute",
                "is-absolute",
                "built-in",
                "util",
                "utils",
                "core",
                "ponyfill",
                "polyfill",
                "shim",
                "is",
                "detect",
                "check"
              ],
              "license": "MIT",
              "name": "path-is-absolute",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/path-is-absolute.git"
              },
              "scripts": {
                "test": "xo && node test.js"
              },
              "version": "1.0.1",
              "readme": "# path-is-absolute [![Build Status](https://travis-ci.org/sindresorhus/path-is-absolute.svg?branch=master)](https://travis-ci.org/sindresorhus/path-is-absolute)\n\n> Node.js 0.12 [`path.isAbsolute()`](http://nodejs.org/api/path.html#path_path_isabsolute_path) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save path-is-absolute\n```\n\n\n## Usage\n\n```js\nconst pathIsAbsolute = require('path-is-absolute');\n\n// Running on Linux\npathIsAbsolute('/home/foo');\n//=> true\npathIsAbsolute('C:/Users/foo');\n//=> false\n\n// Running on Windows\npathIsAbsolute('C:/Users/foo');\n//=> true\npathIsAbsolute('/home/foo');\n//=> false\n\n// Running on any OS\npathIsAbsolute.posix('/home/foo');\n//=> true\npathIsAbsolute.posix('C:/Users/foo');\n//=> false\npathIsAbsolute.win32('C:/Users/foo');\n//=> true\npathIsAbsolute.win32('/home/foo');\n//=> false\n```\n\n\n## API\n\nSee the [`path.isAbsolute()` docs](http://nodejs.org/api/path.html#path_path_isabsolute_path).\n\n### pathIsAbsolute(path)\n\n### pathIsAbsolute.posix(path)\n\nPOSIX specific version.\n\n### pathIsAbsolute.win32(path)\n\nWindows specific version.\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/path-is-absolute",
              "error": "[Circular]",
              "extraneous": false
            },
            "private": {
              "_from": "private@^0.1.6",
              "_id": "private@0.1.7",
              "_inBundle": false,
              "_integrity": "sha1-aM5eih7woju1cMwoU3tTMqumPvE=",
              "_location": "/private",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "private@^0.1.6",
                "name": "private",
                "escapedName": "private",
                "rawSpec": "^0.1.6",
                "saveSpec": "[Circular]",
                "fetchSpec": "^0.1.6"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/private/-/private-0.1.7.tgz",
              "_shasum": "68ce5e8a1ef0a23bb570cc28537b5332aba63ef1",
              "_spec": "private@^0.1.6",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Ben Newman",
                "email": "bn@cs.stanford.edu"
              },
              "bugs": {
                "url": "https://github.com/benjamn/private/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Utility for associating truly private state with any JavaScript object",
              "devDependencies": {
                "mocha": "^3.2.0"
              },
              "engines": {
                "node": ">= 0.6"
              },
              "files": [
                "private.js"
              ],
              "homepage": "http://github.com/benjamn/private",
              "keywords": [
                "private",
                "access control",
                "access modifiers",
                "encapsulation",
                "secret",
                "state",
                "privilege",
                "scope",
                "es5"
              ],
              "license": "MIT",
              "main": "private.js",
              "name": "private",
              "repository": {
                "type": "git",
                "url": "git://github.com/benjamn/private.git"
              },
              "scripts": {
                "test": "mocha --reporter spec --full-trace test/run.js"
              },
              "version": "0.1.7",
              "readme": "private [![Build Status](https://travis-ci.org/benjamn/private.png?branch=master)](https://travis-ci.org/benjamn/private)\n===\n\nA general-purpose utility for associating truly private state with any JavaScript object.\n\nInstallation\n---\n\nFrom NPM:\n\n    npm install private\n\nFrom GitHub:\n\n    cd path/to/node_modules\n    git clone git://github.com/benjamn/private.git\n    cd private\n    npm install .\n\nUsage\n---\n**Get or create a secret object associated with any (non-frozen) object:**\n```js\nvar getSecret = require(\"private\").makeAccessor();\nvar obj = Object.create(null); // any kind of object works\ngetSecret(obj).totallySafeProperty = \"p455w0rd\";\n\nconsole.log(Object.keys(obj)); // []\nconsole.log(Object.getOwnPropertyNames(obj)); // []\nconsole.log(getSecret(obj)); // { totallySafeProperty: \"p455w0rd\" }\n```\nNow, only code that has a reference to both `getSecret` and `obj` can possibly access `.totallySafeProperty`.\n\n*Importantly, no global references to the secret object are retained by the `private` package, so as soon as `obj` gets garbage collected, the secret will be reclaimed as well. In other words, you don't have to worry about memory leaks.*\n\n**Create a unique property name that cannot be enumerated or guessed:**\n```js\nvar secretKey = require(\"private\").makeUniqueKey();\nvar obj = Object.create(null); // any kind of object works\n\nObject.defineProperty(obj, secretKey, {\n  value: { totallySafeProperty: \"p455w0rd\" },\n  enumerable: false // optional; non-enumerability is the default\n});\n\nObject.defineProperty(obj, \"nonEnumerableProperty\", {\n  value: \"anyone can guess my name\",\n  enumerable: false\n});\n\nconsole.log(obj[secretKey].totallySafeProperty); // p455w0rd\nconsole.log(obj.nonEnumerableProperty); // \"anyone can guess my name\"\nconsole.log(Object.keys(obj)); // []\nconsole.log(Object.getOwnPropertyNames(obj)); // [\"nonEnumerableProperty\"]\n\nfor (var key in obj) {\n  console.log(key); // never called\n}\n```\nBecause these keys are non-enumerable, you can't discover them using a `for`-`in` loop. Because `secretKey` is a long string of random characters, you would have a lot of trouble guessing it. And because the `private` module wraps `Object.getOwnPropertyNames` to exclude the keys it generates, you can't even use that interface to discover it.\n\nUnless you have access to the value of the `secretKey` property name, there is no way to access the value associated with it. So your only responsibility as secret-keeper is to avoid handing out the value of `secretKey` to untrusted code.\n\nThink of this style as a home-grown version of the first style. Note, however, that it requires a full implementation of ES5's `Object.defineProperty` method in order to make any safety guarantees, whereas the first example will provide safety even in environments that do not support `Object.defineProperty`.\n\nRationale\n---\n\nIn JavaScript, the only data that are truly private are local variables\nwhose values do not *leak* from the scope in which they were defined.\n\nThis notion of *closure privacy* is powerful, and it readily provides some\nof the benefits of traditional data privacy, a la Java or C++:\n```js\nfunction MyClass(secret) {\n    this.increment = function() {\n        return ++secret;\n    };\n}\n\nvar mc = new MyClass(3);\nconsole.log(mc.increment()); // 4\n```\nYou can learn something about `secret` by calling `.increment()`, and you\ncan increase its value by one as many times as you like, but you can never\ndecrease its value, because it is completely inaccessible except through\nthe `.increment` method. And if the `.increment` method were not\navailable, it would be as if no `secret` variable had ever been declared,\nas far as you could tell.\n\nThis style breaks down as soon as you want to inherit methods from the\nprototype of a class:\n```js\nfunction MyClass(secret) {\n    this.secret = secret;\n}\n\nMyClass.prototype.increment = function() {\n    return ++this.secret;\n};\n```\nThe only way to communicate between the `MyClass` constructor and the\n`.increment` method in this example is to manipulate shared properties of\n`this`. Unfortunately `this.secret` is now exposed to unlicensed\nmodification:\n```js\nvar mc = new MyClass(6);\nconsole.log(mc.increment()); // 7\nmc.secret -= Infinity;\nconsole.log(mc.increment()); // -Infinity\nmc.secret = \"Go home JavaScript, you're drunk.\";\nmc.increment(); // NaN\n```\nAnother problem with closure privacy is that it only lends itself to\nper-instance privacy, whereas the `private` keyword in most\nobject-oriented languages indicates that the data member in question is\nvisible to all instances of the same class.\n\nSuppose you have a `Node` class with a notion of parents and children:\n```js\nfunction Node() {\n    var parent;\n    var children = [];\n\n    this.getParent = function() {\n        return parent;\n    };\n\n    this.appendChild = function(child) {\n        children.push(child);\n        child.parent = this; // Can this be made to work?\n    };\n}\n```\nThe desire here is to allow other `Node` objects to manipulate the value\nreturned by `.getParent()`, but otherwise disallow any modification of the\n`parent` variable. You could expose a `.setParent` function, but then\nanyone could call it, and you might as well give up on the getter/setter\npattern.\n\nThis module solves both of these problems.\n\nUsage\n---\n\nLet's revisit the `Node` example from above:\n```js\nvar p = require(\"private\").makeAccessor();\n\nfunction Node() {\n    var privates = p(this);\n    var children = [];\n\n    this.getParent = function() {\n        return privates.parent;\n    };\n\n    this.appendChild = function(child) {\n        children.push(child);\n        var cp = p(child);\n        if (cp.parent)\n            cp.parent.removeChild(child);\n        cp.parent = this;\n        return child;\n    };\n}\n```\nNow, in order to access the private data of a `Node` object, you need to\nhave access to the unique `p` function that is being used here.  This is\nalready an improvement over the previous example, because it allows\nrestricted access by other `Node` instances, but can it help with the\n`Node.prototype` problem too?\n\nYes it can!\n```js\nvar p = require(\"private\").makeAccessor();\n\nfunction Node() {\n    p(this).children = [];\n}\n\nvar Np = Node.prototype;\n\nNp.getParent = function() {\n    return p(this).parent;\n};\n\nNp.appendChild = function(child) {\n    p(this).children.push(child);\n    var cp = p(child);\n    if (cp.parent)\n        cp.parent.removeChild(child);\n    cp.parent = this;\n    return child;\n};\n```\nBecause `p` is in scope not only within the `Node` constructor but also\nwithin `Node` methods, we can finally avoid redefining methods every time\nthe `Node` constructor is called.\n\nNow, you might be wondering how you can restrict access to `p` so that no\nuntrusted code is able to call it. The answer is to use your favorite\nmodule pattern, be it CommonJS, AMD `define`, or even the old\nImmediately-Invoked Function Expression:\n```js\nvar Node = (function() {\n    var p = require(\"private\").makeAccessor();\n\n    function Node() {\n        p(this).children = [];\n    }\n\n    var Np = Node.prototype;\n\n    Np.getParent = function() {\n        return p(this).parent;\n    };\n\n    Np.appendChild = function(child) {\n        p(this).children.push(child);\n        var cp = p(child);\n        if (cp.parent)\n            cp.parent.removeChild(child);\n        cp.parent = this;\n        return child;\n    };\n\n    return Node;\n}());\n\nvar parent = new Node;\nvar child = new Node;\nparent.appendChild(child);\nassert.strictEqual(child.getParent(), parent);\n```\nBecause this version of `p` never leaks from the enclosing function scope,\nonly `Node` objects have access to it.\n\nSo, you see, the claim I made at the beginning of this README remains\ntrue:\n\n> In JavaScript, the only data that are truly private are local variables\n> whose values do not *leak* from the scope in which they were defined.\n\nIt just so happens that closure privacy is sufficient to implement a\nprivacy model similar to that provided by other languages.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/private",
              "error": "[Circular]",
              "extraneous": false
            },
            "slash": {
              "_from": "slash@^1.0.0",
              "_id": "slash@1.0.0",
              "_inBundle": false,
              "_integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU=",
              "_location": "/slash",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "slash@^1.0.0",
                "name": "slash",
                "escapedName": "slash",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/babel-core"
              ],
              "_resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",
              "_shasum": "c41f2f6c39fc16d1cd17ad4b5d896114ae470d55",
              "_spec": "slash@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "http://sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/slash/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Convert Windows backslash paths to slash paths",
              "devDependencies": {
                "mocha": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/slash#readme",
              "keywords": [
                "path",
                "seperator",
                "sep",
                "slash",
                "backslash",
                "windows",
                "win"
              ],
              "license": "MIT",
              "name": "slash",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/slash.git"
              },
              "scripts": {
                "test": "mocha"
              },
              "version": "1.0.0",
              "readme": "# slash [![Build Status](https://travis-ci.org/sindresorhus/slash.svg?branch=master)](https://travis-ci.org/sindresorhus/slash)\n\n> Convert Windows backslash paths to slash paths: `foo\\\\bar` ➔ `foo/bar`\n\n[Forward-slash paths can be used in Windows](http://superuser.com/a/176395/6877) as long as they're not extended-length paths and don't contain any non-ascii characters.\n\nThis was created since the `path` methods in Node outputs `\\\\` paths on Windows.\n\n\n## Install\n\n```sh\n$ npm install --save slash\n```\n\n\n## Usage\n\n```js\nvar path = require('path');\nvar slash = require('slash');\n\nvar str = path.join('foo', 'bar');\n// Unix    => foo/bar\n// Windows => foo\\\\bar\n\nslash(str);\n// Unix    => foo/bar\n// Windows => foo/bar\n```\n\n\n## API\n\n### slash(path)\n\nType: `string`\n\nAccepts a Windows backslash path and returns a slash path.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/slash",
              "error": "[Circular]",
              "extraneous": false
            },
            "source-map": {
              "_from": "source-map@^0.5.0",
              "_id": "source-map@0.5.6",
              "_inBundle": false,
              "_integrity": "sha1-dc449SvwczxafwwRjYEzSiu19BI=",
              "_location": "/source-map",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.6.tgz",
              "_shasum": "75ce38f52bf0733c5a7f0c118d81334a2bb5f412",
              "_spec": "source-map@^0.5.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "contributors": "[Circular]",
              "deprecated": false,
              "description": "Generates and consumes source maps",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/mozilla/source-map",
              "license": "BSD-3-Clause",
              "main": "./source-map.js",
              "name": "source-map",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.5.6",
              "readme": "# Source Map\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\n[![NPM](https://nodei.co/npm/source-map.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/source-map)\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n\n## Use with Node\n\n    $ npm install source-map\n\n## Use on the Web\n\n    <script src=\"https://raw.githubusercontent.com/mozilla/source-map/master/dist/source-map.min.js\" defer></script>\n\n--------------------------------------------------------------------------------\n\n<!-- `npm run toc` to regenerate the Table of Contents -->\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Examples](#examples)\n  - [Consuming a source map](#consuming-a-source-map)\n  - [Generating a source map](#generating-a-source-map)\n    - [With SourceNode (high level API)](#with-sourcenode-high-level-api)\n    - [With SourceMapGenerator (low level API)](#with-sourcemapgenerator-low-level-api)\n- [API](#api)\n  - [SourceMapConsumer](#sourcemapconsumer)\n    - [new SourceMapConsumer(rawSourceMap)](#new-sourcemapconsumerrawsourcemap)\n    - [SourceMapConsumer.prototype.computeColumnSpans()](#sourcemapconsumerprototypecomputecolumnspans)\n    - [SourceMapConsumer.prototype.originalPositionFor(generatedPosition)](#sourcemapconsumerprototypeoriginalpositionforgeneratedposition)\n    - [SourceMapConsumer.prototype.generatedPositionFor(originalPosition)](#sourcemapconsumerprototypegeneratedpositionfororiginalposition)\n    - [SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)](#sourcemapconsumerprototypeallgeneratedpositionsfororiginalposition)\n    - [SourceMapConsumer.prototype.hasContentsOfAllSources()](#sourcemapconsumerprototypehascontentsofallsources)\n    - [SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])](#sourcemapconsumerprototypesourcecontentforsource-returnnullonmissing)\n    - [SourceMapConsumer.prototype.eachMapping(callback, context, order)](#sourcemapconsumerprototypeeachmappingcallback-context-order)\n  - [SourceMapGenerator](#sourcemapgenerator)\n    - [new SourceMapGenerator([startOfSourceMap])](#new-sourcemapgeneratorstartofsourcemap)\n    - [SourceMapGenerator.fromSourceMap(sourceMapConsumer)](#sourcemapgeneratorfromsourcemapsourcemapconsumer)\n    - [SourceMapGenerator.prototype.addMapping(mapping)](#sourcemapgeneratorprototypeaddmappingmapping)\n    - [SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)](#sourcemapgeneratorprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])](#sourcemapgeneratorprototypeapplysourcemapsourcemapconsumer-sourcefile-sourcemappath)\n    - [SourceMapGenerator.prototype.toString()](#sourcemapgeneratorprototypetostring)\n  - [SourceNode](#sourcenode)\n    - [new SourceNode([line, column, source[, chunk[, name]]])](#new-sourcenodeline-column-source-chunk-name)\n    - [SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])](#sourcenodefromstringwithsourcemapcode-sourcemapconsumer-relativepath)\n    - [SourceNode.prototype.add(chunk)](#sourcenodeprototypeaddchunk)\n    - [SourceNode.prototype.prepend(chunk)](#sourcenodeprototypeprependchunk)\n    - [SourceNode.prototype.setSourceContent(sourceFile, sourceContent)](#sourcenodeprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceNode.prototype.walk(fn)](#sourcenodeprototypewalkfn)\n    - [SourceNode.prototype.walkSourceContents(fn)](#sourcenodeprototypewalksourcecontentsfn)\n    - [SourceNode.prototype.join(sep)](#sourcenodeprototypejoinsep)\n    - [SourceNode.prototype.replaceRight(pattern, replacement)](#sourcenodeprototypereplacerightpattern-replacement)\n    - [SourceNode.prototype.toString()](#sourcenodeprototypetostring)\n    - [SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])](#sourcenodeprototypetostringwithsourcemapstartofsourcemap)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Examples\n\n### Consuming a source map\n\n```js\nvar rawSourceMap = {\n  version: 3,\n  file: 'min.js',\n  names: ['bar', 'baz', 'n'],\n  sources: ['one.js', 'two.js'],\n  sourceRoot: 'http://example.com/www/js/',\n  mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n};\n\nvar smc = new SourceMapConsumer(rawSourceMap);\n\nconsole.log(smc.sources);\n// [ 'http://example.com/www/js/one.js',\n//   'http://example.com/www/js/two.js' ]\n\nconsole.log(smc.originalPositionFor({\n  line: 2,\n  column: 28\n}));\n// { source: 'http://example.com/www/js/two.js',\n//   line: 2,\n//   column: 10,\n//   name: 'n' }\n\nconsole.log(smc.generatedPositionFor({\n  source: 'http://example.com/www/js/two.js',\n  line: 2,\n  column: 10\n}));\n// { line: 2, column: 28 }\n\nsmc.eachMapping(function (m) {\n  // ...\n});\n```\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n```js\nfunction compile(ast) {\n  switch (ast.type) {\n  case 'BinaryExpression':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      [compile(ast.left), \" + \", compile(ast.right)]\n    );\n  case 'Literal':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      String(ast.value)\n    );\n  // ...\n  default:\n    throw new Error(\"Bad AST\");\n  }\n}\n\nvar ast = parse(\"40 + 2\", \"add.js\");\nconsole.log(compile(ast).toStringWithSourceMap({\n  file: 'add.js'\n}));\n// { code: '40 + 2',\n//   map: [object SourceMapGenerator] }\n```\n\n#### With SourceMapGenerator (low level API)\n\n```js\nvar map = new SourceMapGenerator({\n  file: \"source-mapped.js\"\n});\n\nmap.addMapping({\n  generated: {\n    line: 10,\n    column: 35\n  },\n  source: \"foo.js\",\n  original: {\n    line: 33,\n    column: 2\n  },\n  name: \"christopher\"\n});\n\nconsole.log(map.toString());\n// '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n```\n\n## API\n\nGet a reference to the module:\n\n```js\n// Node.js\nvar sourceMap = require('source-map');\n\n// Browser builds\nvar sourceMap = window.sourceMap;\n\n// Inside Firefox\nconst sourceMap = require(\"devtools/toolkit/sourcemap/source-map.js\");\n```\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n```js\nvar consumer = new sourceMap.SourceMapConsumer(rawSourceMapJsonData);\n```\n\n#### SourceMapConsumer.prototype.computeColumnSpans()\n\nCompute the last column for each generated mapping. The last column is\ninclusive.\n\n```js\n// Before:\nconsumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n\nconsumer.computeColumnSpans();\n\n// After:\nconsumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1,\n//     lastColumn: 9 },\n//   { line: 2,\n//     column: 10,\n//     lastColumn: 19 },\n//   { line: 2,\n//     column: 20,\n//     lastColumn: Infinity } ]\n\n```\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\n* `bias`: Either `SourceMapConsumer.GREATEST_LOWER_BOUND` or\n  `SourceMapConsumer.LEAST_UPPER_BOUND`. Specifies whether to return the closest\n  element that is smaller than or greater than the one we are searching for,\n  respectively, if the exact element cannot be found.  Defaults to\n  `SourceMapConsumer.GREATEST_LOWER_BOUND`.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n```js\nconsumer.originalPositionFor({ line: 2, column: 10 })\n// { source: 'foo.coffee',\n//   line: 2,\n//   column: 2,\n//   name: null }\n\nconsumer.originalPositionFor({ line: 99999999999999999, column: 999999999999999 })\n// { source: null,\n//   line: null,\n//   column: null,\n//   name: null }\n```\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.generatedPositionFor({ source: \"example.js\", line: 2, column: 10 })\n// { line: 1,\n//   column: 56 }\n```\n\n#### SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)\n\nReturns all generated line and column information for the original source, line,\nand column provided. If no column is provided, returns all mappings\ncorresponding to a either the line we are searching for or the next closest line\nthat has any mappings. Otherwise, returns all mappings corresponding to the\ngiven line and either the column we are searching for or the next closest column\nthat has any offsets.\n\nThe only argument is an object with the following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: Optional. The column number in the original source.\n\nand an array of objects is returned, each with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.allGeneratedpositionsfor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n```\n\n#### SourceMapConsumer.prototype.hasContentsOfAllSources()\n\nReturn true if we have the embedded source content for every source listed in\nthe source map, false otherwise.\n\nIn other words, if this method returns `true`, then\n`consumer.sourceContentFor(s)` will succeed for every source `s` in\n`consumer.sources`.\n\n```js\n// ...\nif (consumer.hasContentsOfAllSources()) {\n  consumerReadyCallback(consumer);\n} else {\n  fetchSources(consumer, consumerReadyCallback);\n}\n// ...\n```\n\n#### SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\nIf the source content for the given source is not found, then an error is\nthrown. Optionally, pass `true` as the second param to have `null` returned\ninstead.\n\n```js\nconsumer.sources\n// [ \"my-cool-lib.clj\" ]\n\nconsumer.sourceContentFor(\"my-cool-lib.clj\")\n// \"...\"\n\nconsumer.sourceContentFor(\"this is not in the source map\");\n// Error: \"this is not in the source map\" is not in the source map\n\nconsumer.sourceContentFor(\"this is not in the source map\", true);\n// null\n```\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n```js\nconsumer.eachMapping(function (m) { console.log(m); })\n// ...\n// { source: 'illmatic.js',\n//   generatedLine: 1,\n//   generatedColumn: 0,\n//   originalLine: 1,\n//   originalColumn: 0,\n//   name: null }\n// { source: 'illmatic.js',\n//   generatedLine: 2,\n//   generatedColumn: 0,\n//   originalLine: 2,\n//   originalColumn: 0,\n//   name: null }\n// ...\n```\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n* `skipValidation`: Optional. When `true`, disables validation of mappings as\n  they are added. This can improve performance but should be used with\n  discretion, as a last resort. Even then, one should avoid using this flag when\n  running tests, if possible.\n\n```js\nvar generator = new sourceMap.SourceMapGenerator({\n  file: \"my-generated-javascript-file.js\",\n  sourceRoot: \"http://example.com/app/js/\"\n});\n```\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new `SourceMapGenerator` from an existing `SourceMapConsumer` instance.\n\n* `sourceMapConsumer` The SourceMap.\n\n```js\nvar generator = sourceMap.SourceMapGenerator.fromSourceMap(consumer);\n```\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n```js\ngenerator.addMapping({\n  source: \"module-one.scm\",\n  original: { line: 128, column: 0 },\n  generated: { line: 3, column: 456 }\n})\n```\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n```js\ngenerator.setSourceContent(\"module-one.scm\",\n                           fs.readFileSync(\"path/to/module-one.scm\"))\n```\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimum of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren't in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `'.'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n```js\ngenerator.toString()\n// '{\"version\":3,\"sources\":[\"module-one.scm\"],\"names\":[],\"mappings\":\"...snip...\",\"file\":\"my-generated-javascript-file.js\",\"sourceRoot\":\"http://example.com/app/js/\"}'\n```\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n```js\nvar node = new SourceNode(1, 2, \"a.cpp\", [\n  new SourceNode(3, 4, \"b.cpp\", \"extern int status;\\n\"),\n  new SourceNode(5, 6, \"c.cpp\", \"std::string* make_string(size_t n);\\n\"),\n  new SourceNode(7, 8, \"d.cpp\", \"int main(int argc, char** argv) {}\\n\"),\n]);\n```\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n* `relativePath` The optional path that relative sources in `sourceMapConsumer`\n  should be relative to.\n\n```js\nvar consumer = new SourceMapConsumer(fs.readFileSync(\"path/to/my-file.js.map\"));\nvar node = SourceNode.fromStringWithSourceMap(fs.readFileSync(\"path/to/my-file.js\"),\n                                              consumer);\n```\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.add(\" + \");\nnode.add(otherNode);\nnode.add([leftHandOperandNode, \" + \", rightHandOperandNode]);\n```\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.prepend(\"/** Build Id: f783haef86324gf **/\\n\\n\");\n```\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n```js\nnode.setSourceContent(\"module-one.scm\",\n                      fs.readFileSync(\"path/to/module-one.scm\"))\n```\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.walk(function (code, loc) { console.log(\"WALK:\", code, loc); })\n// WALK: uno { source: 'b.js', line: 3, column: 4, name: null }\n// WALK: dos { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: tres { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: quatro { source: 'c.js', line: 5, column: 6, name: null }\n```\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n```js\nvar a = new SourceNode(1, 2, \"a.js\", \"generated from a\");\na.setSourceContent(\"a.js\", \"original a\");\nvar b = new SourceNode(1, 2, \"b.js\", \"generated from b\");\nb.setSourceContent(\"b.js\", \"original b\");\nvar c = new SourceNode(1, 2, \"c.js\", \"generated from c\");\nc.setSourceContent(\"c.js\", \"original c\");\n\nvar node = new SourceNode(null, null, null, [a, b, c]);\nnode.walkSourceContents(function (source, contents) { console.log(\"WALK:\", source, \":\", contents); })\n// WALK: a.js : original a\n// WALK: b.js : original b\n// WALK: c.js : original c\n```\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n```js\nvar lhs = new SourceNode(1, 2, \"a.rs\", \"my_copy\");\nvar operand = new SourceNode(3, 4, \"a.rs\", \"=\");\nvar rhs = new SourceNode(5, 6, \"a.rs\", \"orig.clone()\");\n\nvar node = new SourceNode(null, null, null, [ lhs, operand, rhs ]);\nvar joinedNode = node.join(\" \");\n```\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming white space from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n```js\n// Trim trailing white space.\nnode.replaceRight(/\\s*$/, \"\");\n```\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.toString()\n// 'unodostresquatro'\n```\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.toStringWithSourceMap({ file: \"my-output-file.js\" })\n// { code: 'unodostresquatro',\n//   map: [object SourceMapGenerator] }\n```\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/source-map",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Babel compiler core.",
          "devDependencies": {
            "babel-helper-fixtures": "^6.22.0",
            "babel-helper-transform-fixture-test-runner": "^6.24.1",
            "babel-polyfill": "^6.23.0"
          },
          "homepage": "https://babeljs.io/",
          "keywords": [
            "6to5",
            "babel",
            "classes",
            "const",
            "es6",
            "harmony",
            "let",
            "modules",
            "transpile",
            "transpiler",
            "var",
            "babel-core",
            "compiler"
          ],
          "license": "MIT",
          "name": "babel-core",
          "repository": {
            "type": "git",
            "url": "https://github.com/babel/babel/tree/master/packages/babel-core"
          },
          "scripts": {
            "bench": "make bench",
            "test": "make test"
          },
          "version": "6.25.0",
          "readme": "# babel-core\n\n> Babel compiler core.\n\n\n```javascript\nvar babel = require(\"babel-core\");\nimport { transform } from 'babel-core';\nimport * as babel from 'babel-core';\n```\n\nAll transformations will use your local configuration files (.babelrc or in package.json). See [options](#options) to disable it.\n\n## babel.transform(code: string, [options?](#options): Object)\n\nTransforms the passed in `code`. Returning an object with the generated code,\nsource map, and AST.\n\n```js\nbabel.transform(code, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nvar result = babel.transform(\"code();\", options);\nresult.code;\nresult.map;\nresult.ast;\n```\n\n## babel.transformFile(filename: string, [options?](#options): Object, callback: Function)\n\nAsynchronously transforms the entire contents of a file.\n\n```js\nbabel.transformFile(filename, options, callback)\n```\n\n**Example**\n\n```js\nbabel.transformFile(\"filename.js\", options, function (err, result) {\n  result; // => { code, map, ast }\n});\n```\n\n## babel.transformFileSync(filename: string, [options?](#options): Object)\n\nSynchronous version of `babel.transformFile`. Returns the transformed contents of\nthe `filename`.\n\n```js\nbabel.transformFileSync(filename, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nbabel.transformFileSync(\"filename.js\", options).code;\n```\n\n## babel.transformFromAst(ast: Object, code?: string, [options?](#options): Object)\n\nGiven, an [AST](https://astexplorer.net/), transform it.\n\n```js\nconst code = \"if (true) return;\";\nconst ast = babylon.parse(code, { allowReturnOutsideFunction: true });\nconst { code, map, ast } = babel.transformFromAst(ast, code, options);\n```\n\n## Options\n\n<blockquote class=\"babel-callout babel-callout-info\">\n  <h4>Babel CLI</h4>\n  <p>\n    You can pass these options from the Babel CLI like so:\n  </p>\n  <p>\n    <code>babel --name<span class=\"o\">=</span>value</code>\n  </p>\n</blockquote>\n\nFollowing is a table of the options you can use:\n\n| Option                   | Default              | Description                     |\n| ------------------------ | -------------------- | ------------------------------- |\n| `ast`                    | `true`               | Include the AST in the returned object |\n| `auxiliaryCommentAfter`  | `null`               | Attach a comment after all non-user injected code. |\n| `auxiliaryCommentBefore` | `null`               | Attach a comment before all non-user injected code. |\n| `babelrc`                | `true`               | Specify whether or not to use .babelrc and .babelignore files. Not available when using the CLI, [use `--no-babelrc` instead](https://babeljs.io/docs/usage/cli/#babel-ignoring-babelrc). |\n| `code`                   | `true`               | Enable code generation |\n| `comments`               | `true`               | Output comments in generated output. |\n| `compact`                | `\"auto\"`             | Do not include superfluous whitespace characters and line terminators. When set to `\"auto\"` compact is set to `true` on input sizes of >500KB. |\n| `env`                    | `{}`                 | This is an object of keys that represent different environments. For example, you may have: `{ env: { production: { /* specific options */ } } }` which will use those options when the environment variable `BABEL_ENV` is set to `\"production\"`. If `BABEL_ENV` isn't set then `NODE_ENV` will be used, if it's not set then it defaults to `\"development\"` |\n| `extends`                | `null`               | A path to an `.babelrc` file to extend |\n| `filename`               | `\"unknown\"`          | Filename for use in errors etc. |\n| `filenameRelative`       | `(filename)`         | Filename relative to `sourceRoot`. |\n| `generatorOpts`          | `{}`                 | An object containing the options to be passed down to the babel code generator, babel-generator |\n| `getModuleId`            | `null`               | Specify a custom callback to generate a module id with. Called as `getModuleId(moduleName)`. If falsy value is returned then the generated module id is used. |\n| `highlightCode`          | `true`               | ANSI highlight syntax error code frames |\n| `ignore`                 | `null`               | Opposite to the `only` option. `ignore` is disregarded if `only` is specified. |\n| `inputSourceMap`         | `null`               | A source map object that the output source map will be based on. |\n| `minified`               | `false`              | Should the output be minified (not printing last semicolons in blocks, printing literal string values instead of escaped ones, stripping `()` from `new` when safe) |\n| `moduleId`               | `null`               | Specify a custom name for module ids. |\n| `moduleIds`              | `false`              | If truthy, insert an explicit id for modules. By default, all modules are anonymous. (Not available for `common` modules) |\n| `moduleRoot`             | `(sourceRoot)`       | Optional prefix for the AMD module formatter that will be prepend to the filename on module definitions. |\n| `only`                   | `null`               | A [glob](https://github.com/isaacs/minimatch), regex, or mixed array of both, matching paths to **only** compile. Can also be an array of arrays containing paths to explicitly match. When attempting to compile a non-matching file it's returned verbatim. |\n| `parserOpts`             | `{}`                 | An object containing the options to be passed down to the babel parser, babylon |\n| `plugins`                | `[]`                 | List of [plugins](https://babeljs.io/docs/plugins/) to load and use. |\n| `presets`                | `[]`                 | List of [presets](https://babeljs.io/docs/plugins/#presets) (a set of plugins) to load and use. |\n| `retainLines`            | `false`              | Retain line numbers. This will lead to wacky code but is handy for scenarios where you can't use source maps. (**NOTE:** This will not retain the columns) |\n| `resolveModuleSource`    | `null`               | Resolve a module source ie. `import \"SOURCE\";` to a custom value. Called as `resolveModuleSource(source, filename)`. |\n| `shouldPrintComment`     | `null`               | An optional callback that controls whether a comment should be output or not. Called as `shouldPrintComment(commentContents)`. **NOTE:** This overrides the `comment` option when used. |\n| `sourceFileName`         | `(filenameRelative)` | Set `sources[0]` on returned source map. |\n| `sourceMaps`             | `false`              | If truthy, adds a `map` property to returned output. If set to `\"inline\"`, a comment with a sourceMappingURL directive is added to the bottom of the returned code. If set to `\"both\"` then a `map` property is returned as well as a source map comment appended. **This does not emit sourcemap files by itself!** To have sourcemaps emitted using the CLI, you must pass it the `--source-maps` option. |\n| `sourceMapTarget`        | `(filenameRelative)` | Set `file` on returned source map. |\n| `sourceRoot`             | `(moduleRoot)`       | The root from which all sources are relative. |\n| `sourceType`             | `\"module\"`           | Indicate the mode the code should be parsed in. Can be either \"script\" or \"module\". |\n| `wrapPluginVisitorMethod`| `null`               | An optional callback that can be used to wrap visitor methods. **NOTE:** This is useful for things like introspection, and not really needed for implementing anything. Called as `wrapPluginVisitorMethod(pluginAlias, visitorType, callback)`.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "babel-code-frame": "^6.22.0",
            "babel-generator": "^6.25.0",
            "babel-helpers": "^6.24.1",
            "babel-messages": "^6.23.0",
            "babel-register": "^6.24.1",
            "babel-runtime": "^6.22.0",
            "babel-template": "^6.25.0",
            "babel-traverse": "^6.25.0",
            "babel-types": "^6.25.0",
            "babylon": "^6.17.2",
            "convert-source-map": "^1.1.0",
            "debug": "^2.1.1",
            "json5": "^0.5.0",
            "lodash": "^4.2.0",
            "minimatch": "^3.0.2",
            "path-is-absolute": "^1.0.0",
            "private": "^0.1.6",
            "slash": "^1.0.0",
            "source-map": "^0.5.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
          "error": "[Circular]",
          "extraneous": false
        },
        "babel-runtime": {
          "_from": "babel-runtime@^6.22.0",
          "_id": "babel-runtime@6.23.0",
          "_inBundle": false,
          "_integrity": "sha1-CpSJ8UTecO+zzkMArM2zKeL8VDs=",
          "_location": "/babel-runtime",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.23.0.tgz",
          "_shasum": "0a9489f144de70efb3ce4300accdb329e2fc543b",
          "_spec": "babel-runtime@^6.22.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
          "author": "[Circular]",
          "bundleDependencies": false,
          "dependencies": {
            "core-js": {
              "_from": "core-js@^2.4.0",
              "_id": "core-js@2.4.1",
              "_inBundle": false,
              "_integrity": "sha1-TekR5mew6ukSTjQlS1OupvxhjT4=",
              "_location": "/core-js",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "core-js@^2.4.0",
                "name": "core-js",
                "escapedName": "core-js",
                "rawSpec": "^2.4.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.4.0"
              },
              "_requiredBy": [
                "/babel-register",
                "/babel-runtime"
              ],
              "_resolved": "https://registry.npmjs.org/core-js/-/core-js-2.4.1.tgz",
              "_shasum": "4de911e667b0eae9124e34254b53aea6fc618d3e",
              "_spec": "core-js@^2.4.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
              "bugs": {
                "url": "https://github.com/zloirock/core-js/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Standard library",
              "devDependencies": {
                "LiveScript": "1.3.x",
                "es-observable-tests": "0.2.x",
                "eslint": "3.1.x",
                "grunt": "1.0.x",
                "grunt-cli": "1.2.x",
                "grunt-contrib-clean": "1.0.x",
                "grunt-contrib-copy": "1.0.x",
                "grunt-contrib-uglify": "1.0.x",
                "grunt-contrib-watch": "1.0.x",
                "grunt-karma": "2.0.x",
                "grunt-livescript": "0.6.x",
                "karma": "1.1.x",
                "karma-chrome-launcher": "1.0.x",
                "karma-firefox-launcher": "1.0.x",
                "karma-ie-launcher": "1.0.x",
                "karma-phantomjs-launcher": "1.0.x",
                "karma-qunit": "1.1.x",
                "phantomjs-prebuilt": "2.1.x",
                "promises-aplus-tests": "2.1.x",
                "qunitjs": "2.0.x",
                "temp": "0.8.x",
                "webpack": "1.13.x"
              },
              "homepage": "https://github.com/zloirock/core-js#readme",
              "keywords": [
                "ES3",
                "ECMAScript 3",
                "ES5",
                "ECMAScript 5",
                "ES6",
                "ES2015",
                "ECMAScript 6",
                "ECMAScript 2015",
                "ES7",
                "ES2016",
                "ECMAScript 7",
                "ECMAScript 2016",
                "Harmony",
                "Strawman",
                "Map",
                "Set",
                "WeakMap",
                "WeakSet",
                "Promise",
                "Symbol",
                "TypedArray",
                "setImmediate",
                "Dict",
                "polyfill",
                "shim"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "core-js",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/zloirock/core-js.git"
              },
              "scripts": {
                "grunt": "grunt",
                "lint": "eslint es5 es6 es7 stage web core fn modules",
                "observables-tests": "node tests/observables/adapter && node tests/observables/adapter-library",
                "promises-tests": "promises-aplus-tests tests/promises-aplus/adapter",
                "test": "npm run lint && npm run grunt livescript client karma:default && npm run grunt library karma:library && npm run promises-tests && npm run observables-tests && lsc tests/commonjs"
              },
              "version": "2.4.1",
              "readme": "ERROR: No README data found!",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/core-js",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "core-js"
            },
            "regenerator-runtime": {
              "_from": "regenerator-runtime@^0.10.0",
              "_id": "regenerator-runtime@0.10.5",
              "_inBundle": false,
              "_integrity": "sha1-M2w+/BIgrc7dosn6tntaeVWjNlg=",
              "_location": "/regenerator-runtime",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "regenerator-runtime@^0.10.0",
                "name": "regenerator-runtime",
                "escapedName": "regenerator-runtime",
                "rawSpec": "^0.10.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^0.10.0"
              },
              "_requiredBy": [
                "/babel-runtime"
              ],
              "_resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.10.5.tgz",
              "_shasum": "336c3efc1220adcedda2c9fab67b5a7955a33658",
              "_spec": "regenerator-runtime@^0.10.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
              "author": {
                "name": "Ben Newman",
                "email": "bn@cs.stanford.edu"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Runtime for Regenerator-compiled generator and async functions.",
              "keywords": [
                "regenerator",
                "runtime",
                "generator",
                "async"
              ],
              "license": "MIT",
              "main": "runtime-module.js",
              "name": "regenerator-runtime",
              "repository": {
                "type": "git",
                "url": "https://github.com/facebook/regenerator/tree/master/packages/regenerator-runtime"
              },
              "version": "0.10.5",
              "readme": "# regenerator-runtime\n\nStandalone runtime for\n[Regenerator](https://github.com/facebook/regenerator)-compiled generator\nand `async` functions.\n\nTo import the runtime as a module (recommended), either of the following\nimport styles will work:\n```js\n// CommonJS\nconst regeneratorRuntime = require(\"regenerator-runtime\");\n\n// ECMAScript 2015\nimport regeneratorRuntime from \"regenerator-runtime\";\n```\n\nTo ensure that `regeneratorRuntime` is defined globally, either of the\nfollowing styles will work:\n```js\n// CommonJS\nrequire(\"regenerator-runtime/runtime\");\n\n// ECMAScript 2015\nimport \"regenerator-runtime/runtime\";\n```\n\nTo get the absolute file system path of `runtime.js`, evaluate the\nfollowing expression:\n```js\nrequire(\"regenerator-runtime/path\").path\n```\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/regenerator-runtime",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "babel selfContained runtime",
          "devDependencies": "[Circular]",
          "license": "MIT",
          "name": "babel-runtime",
          "repository": "[Circular]",
          "version": "6.23.0",
          "readme": "# babel-runtime\n\n",
          "readmeFilename": "README.md",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-runtime",
          "error": "[Circular]",
          "extraneous": false
        },
        "core-js": {
          "_from": "core-js@^2.4.0",
          "_id": "core-js@2.4.1",
          "_inBundle": false,
          "_integrity": "sha1-TekR5mew6ukSTjQlS1OupvxhjT4=",
          "_location": "/core-js",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/core-js/-/core-js-2.4.1.tgz",
          "_shasum": "4de911e667b0eae9124e34254b53aea6fc618d3e",
          "_spec": "core-js@^2.4.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "deprecated": false,
          "description": "Standard library",
          "devDependencies": "[Circular]",
          "homepage": "https://github.com/zloirock/core-js#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "main": "index.js",
          "name": "core-js",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "2.4.1",
          "readme": "ERROR: No README data found!",
          "dependencies": {},
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/core-js",
          "error": "[Circular]",
          "extraneous": false
        },
        "home-or-tmp": {
          "_from": "home-or-tmp@^2.0.0",
          "_id": "home-or-tmp@2.0.0",
          "_inBundle": false,
          "_integrity": "sha1-42w/LSyufXRqhX440Y1fMqeILbg=",
          "_location": "/home-or-tmp",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "home-or-tmp@^2.0.0",
            "name": "home-or-tmp",
            "escapedName": "home-or-tmp",
            "rawSpec": "^2.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^2.0.0"
          },
          "_requiredBy": [
            "/babel-register"
          ],
          "_resolved": "https://registry.npmjs.org/home-or-tmp/-/home-or-tmp-2.0.0.tgz",
          "_shasum": "e36c3f2d2cae7d746a857e38d18d5f32a7882db8",
          "_spec": "home-or-tmp@^2.0.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/home-or-tmp/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "os-homedir": {
              "_from": "os-homedir@^1.0.0",
              "_id": "os-homedir@1.0.2",
              "_inBundle": false,
              "_integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
              "_location": "/os-homedir",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "os-homedir@^1.0.0",
                "name": "os-homedir",
                "escapedName": "os-homedir",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/home-or-tmp"
              ],
              "_resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
              "_shasum": "ffbc4988336e0e833de0c168c7ef152121aa7fb3",
              "_spec": "os-homedir@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/home-or-tmp",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/os-homedir/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Node.js 4 `os.homedir()` ponyfill",
              "devDependencies": {
                "ava": "*",
                "path-exists": "^2.0.0",
                "xo": "^0.16.0"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/os-homedir#readme",
              "keywords": [
                "builtin",
                "core",
                "ponyfill",
                "polyfill",
                "shim",
                "os",
                "homedir",
                "home",
                "dir",
                "directory",
                "folder",
                "user",
                "path"
              ],
              "license": "MIT",
              "name": "os-homedir",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/os-homedir.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.2",
              "readme": "# os-homedir [![Build Status](https://travis-ci.org/sindresorhus/os-homedir.svg?branch=master)](https://travis-ci.org/sindresorhus/os-homedir)\n\n> Node.js 4 [`os.homedir()`](https://nodejs.org/api/os.html#os_os_homedir) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save os-homedir\n```\n\n\n## Usage\n\n```js\nconst osHomedir = require('os-homedir');\n\nconsole.log(osHomedir());\n//=> '/Users/sindresorhus'\n```\n\n\n## Related\n\n- [user-home](https://github.com/sindresorhus/user-home) - Same as this module but caches the result\n- [home-or-tmp](https://github.com/sindresorhus/home-or-tmp) - Get the user home directory with fallback to the system temp directory\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/os-homedir",
              "error": "[Circular]",
              "extraneous": false
            },
            "os-tmpdir": {
              "_from": "os-tmpdir@^1.0.1",
              "_id": "os-tmpdir@1.0.2",
              "_inBundle": false,
              "_integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=",
              "_location": "/os-tmpdir",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "os-tmpdir@^1.0.1",
                "name": "os-tmpdir",
                "escapedName": "os-tmpdir",
                "rawSpec": "^1.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.1"
              },
              "_requiredBy": [
                "/home-or-tmp"
              ],
              "_resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",
              "_shasum": "bbe67406c79aa85c5cfec766fe5734555dfa1274",
              "_spec": "os-tmpdir@^1.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/home-or-tmp",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/os-tmpdir/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Node.js os.tmpdir() ponyfill",
              "devDependencies": {
                "ava": "*",
                "xo": "^0.16.0"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/os-tmpdir#readme",
              "keywords": [
                "built-in",
                "core",
                "ponyfill",
                "polyfill",
                "shim",
                "os",
                "tmpdir",
                "tempdir",
                "tmp",
                "temp",
                "dir",
                "directory",
                "env",
                "environment"
              ],
              "license": "MIT",
              "name": "os-tmpdir",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/os-tmpdir.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.2",
              "readme": "# os-tmpdir [![Build Status](https://travis-ci.org/sindresorhus/os-tmpdir.svg?branch=master)](https://travis-ci.org/sindresorhus/os-tmpdir)\n\n> Node.js [`os.tmpdir()`](https://nodejs.org/api/os.html#os_os_tmpdir) [ponyfill](https://ponyfill.com)\n\nUse this instead of `require('os').tmpdir()` to get a consistent behavior on different Node.js versions (even 0.8).\n\n\n## Install\n\n```\n$ npm install --save os-tmpdir\n```\n\n\n## Usage\n\n```js\nconst osTmpdir = require('os-tmpdir');\n\nosTmpdir();\n//=> '/var/folders/m3/5574nnhn0yj488ccryqr7tc80000gn/T'\n```\n\n\n## API\n\nSee the [`os.tmpdir()` docs](https://nodejs.org/api/os.html#os_os_tmpdir).\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/os-tmpdir",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Get the user home directory with fallback to the system temp directory",
          "devDependencies": {
            "ava": "0.0.4"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "index.js"
          ],
          "homepage": "https://github.com/sindresorhus/home-or-tmp#readme",
          "keywords": [
            "user",
            "home",
            "homedir",
            "dir",
            "directory",
            "folder",
            "path",
            "tmp",
            "temp",
            "temporary",
            "fallback",
            "graceful",
            "userprofile"
          ],
          "license": "MIT",
          "name": "home-or-tmp",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/home-or-tmp.git"
          },
          "scripts": {
            "test": "node test.js"
          },
          "version": "2.0.0",
          "readme": "# home-or-tmp [![Build Status](https://travis-ci.org/sindresorhus/home-or-tmp.svg?branch=master)](https://travis-ci.org/sindresorhus/home-or-tmp)\n\n> Get the user home directory with fallback to the system temp directory\n\nUseful in cases where the home directory either isn't set or doesn't exist.\n\n\n## Install\n\n```\n$ npm install --save home-or-tmp\n```\n\n\n## Usage\n\n```js\nvar homeOrTmp = require('home-or-tmp');\n\nconsole.log(homeOrTmp);\n//=> '/Users/sindresorhus'\n\n// and if there's no home directory:\n\nconsole.log(homeOrTmp);\n//=> '/var/folders/m3/5574nnhn0yj488ccryqr7tc80000gn/T'\n```\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "os-homedir": "^1.0.0",
            "os-tmpdir": "^1.0.1"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/home-or-tmp",
          "error": "[Circular]",
          "extraneous": false
        },
        "lodash": {
          "_from": "lodash@^4.2.0",
          "_id": "lodash@4.17.4",
          "_inBundle": false,
          "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
          "_location": "/lodash",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
          "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
          "_spec": "lodash@^4.2.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "contributors": "[Circular]",
          "deprecated": false,
          "description": "Lodash modular utilities.",
          "homepage": "https://lodash.com/",
          "icon": "https://lodash.com/icon.svg",
          "keywords": "[Circular]",
          "license": "MIT",
          "main": "lodash.js",
          "name": "lodash",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "4.17.4",
          "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
          "readmeFilename": "README.md",
          "dependencies": {},
          "devDependencies": "[Circular]",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/lodash",
          "error": "[Circular]",
          "extraneous": false
        },
        "mkdirp": {
          "_from": "mkdirp@^0.5.1",
          "_id": "mkdirp@0.5.1",
          "_inBundle": false,
          "_integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
          "_location": "/mkdirp",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "mkdirp@^0.5.1",
            "name": "mkdirp",
            "escapedName": "mkdirp",
            "rawSpec": "^0.5.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.5.1"
          },
          "_requiredBy": [
            "/babel-register"
          ],
          "_resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
          "_shasum": "30057438eac6cf7f8c4767f38648d6697d75c903",
          "_spec": "mkdirp@^0.5.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
          "author": {
            "name": "James Halliday",
            "email": "mail@substack.net",
            "url": "http://substack.net"
          },
          "bin": {
            "mkdirp": "bin/cmd.js"
          },
          "bugs": {
            "url": "https://github.com/substack/node-mkdirp/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "minimist": {
              "_from": "minimist@0.0.8",
              "_id": "minimist@0.0.8",
              "_inBundle": false,
              "_integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
              "_location": "/minimist",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "minimist@0.0.8",
                "name": "minimist",
                "escapedName": "minimist",
                "rawSpec": "0.0.8",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.0.8"
              },
              "_requiredBy": [
                "/mkdirp"
              ],
              "_resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
              "_shasum": "857fcabfc3397d2625b8228262e86aa7a011b05d",
              "_spec": "minimist@0.0.8",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/mkdirp",
              "author": {
                "name": "James Halliday",
                "email": "mail@substack.net",
                "url": "http://substack.net"
              },
              "bugs": {
                "url": "https://github.com/substack/minimist/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "parse argument options",
              "devDependencies": {
                "tap": "~0.4.0",
                "tape": "~1.0.4"
              },
              "homepage": "https://github.com/substack/minimist",
              "keywords": [
                "argv",
                "getopt",
                "parser",
                "optimist"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "minimist",
              "repository": {
                "type": "git",
                "url": "git://github.com/substack/minimist.git"
              },
              "scripts": {
                "test": "tap test/*.js"
              },
              "testling": {
                "files": "test/*.js",
                "browsers": [
                  "ie/6..latest",
                  "ff/5",
                  "firefox/latest",
                  "chrome/10",
                  "chrome/latest",
                  "safari/5.1",
                  "safari/latest",
                  "opera/12"
                ]
              },
              "version": "0.0.8",
              "readme": "# minimist\n\nparse argument options\n\nThis module is the guts of optimist's argument parser without all the\nfanciful decoration.\n\n[![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)\n\n[![build status](https://secure.travis-ci.org/substack/minimist.png)](http://travis-ci.org/substack/minimist)\n\n# example\n\n``` js\nvar argv = require('minimist')(process.argv.slice(2));\nconsole.dir(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: 'beep', b: 'boop' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ 'foo', 'bar', 'baz' ],\n  x: 3,\n  y: 4,\n  n: 5,\n  a: true,\n  b: true,\n  c: true,\n  beep: 'boop' }\n```\n\n# methods\n\n``` js\nvar parseArgs = require('minimist')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn't have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `'--'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a string or array of strings to always treat as booleans\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT\n",
              "readmeFilename": "readme.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/minimist",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Recursively mkdir, like `mkdir -p`",
          "devDependencies": {
            "mock-fs": "2 >=2.7.0",
            "tap": "1"
          },
          "homepage": "https://github.com/substack/node-mkdirp#readme",
          "keywords": [
            "mkdir",
            "directory"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "mkdirp",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/substack/node-mkdirp.git"
          },
          "scripts": {
            "test": "tap test/*.js"
          },
          "version": "0.5.1",
          "readme": "# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require('mkdirp');\n    \nmkdirp('/tmp/foo/bar/baz', function (err) {\n    if (err) console.error(err)\n    else console.log('pow!')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require('mkdirp');\n```\n\n## mkdirp(dir, opts, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `opts.mode`. If `opts` is a non-object, it will be treated as\nthe `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdir(path, mode, cb)` and\n`opts.fs.stat(path, cb)`.\n\n## mkdirp.sync(dir, opts)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `opts.mode`. If `opts` is a non-object, it will be\ntreated as the `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdirSync(path, mode)` and\n`opts.fs.statSync(path)`.\n\n# usage\n\nThis package also ships with a `mkdirp` command.\n\n```\nusage: mkdirp [DIR1,DIR2..] {OPTIONS}\n\n  Create each supplied directory including any necessary parent directories that\n  don't yet exist.\n  \n  If the directory already exists, do nothing.\n\nOPTIONS are:\n\n  -m, --mode   If a directory needs to be created, set the mode as an octal\n               permission string.\n\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\nto get the library, or\n\n```\nnpm install -g mkdirp\n```\n\nto get the command.\n\n# license\n\nMIT\n",
          "readmeFilename": "readme.markdown",
          "optionalDependencies": {},
          "_dependencies": {
            "minimist": "0.0.8"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/mkdirp",
          "error": "[Circular]",
          "extraneous": false
        },
        "source-map-support": {
          "_from": "source-map-support@^0.4.2",
          "_id": "source-map-support@0.4.15",
          "_inBundle": false,
          "_integrity": "sha1-AyAt9lwG0r2MfsI2KhkwVv7407E=",
          "_location": "/source-map-support",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "source-map-support@^0.4.2",
            "name": "source-map-support",
            "escapedName": "source-map-support",
            "rawSpec": "^0.4.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.4.2"
          },
          "_requiredBy": [
            "/babel-register"
          ],
          "_resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.4.15.tgz",
          "_shasum": "03202df65c06d2bd8c7ec2362a193056fef8d3b1",
          "_spec": "source-map-support@^0.4.2",
          "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
          "bugs": {
            "url": "https://github.com/evanw/node-source-map-support/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "source-map": {
              "_from": "source-map@^0.5.0",
              "_id": "source-map@0.5.6",
              "_inBundle": false,
              "_integrity": "sha1-dc449SvwczxafwwRjYEzSiu19BI=",
              "_location": "/source-map",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.6.tgz",
              "_shasum": "75ce38f52bf0733c5a7f0c118d81334a2bb5f412",
              "_spec": "source-map@^0.5.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-core",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "contributors": "[Circular]",
              "deprecated": false,
              "description": "Generates and consumes source maps",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/mozilla/source-map",
              "license": "BSD-3-Clause",
              "main": "./source-map.js",
              "name": "source-map",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.5.6",
              "readme": "# Source Map\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\n[![NPM](https://nodei.co/npm/source-map.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/source-map)\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n\n## Use with Node\n\n    $ npm install source-map\n\n## Use on the Web\n\n    <script src=\"https://raw.githubusercontent.com/mozilla/source-map/master/dist/source-map.min.js\" defer></script>\n\n--------------------------------------------------------------------------------\n\n<!-- `npm run toc` to regenerate the Table of Contents -->\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n## Table of Contents\n\n- [Examples](#examples)\n  - [Consuming a source map](#consuming-a-source-map)\n  - [Generating a source map](#generating-a-source-map)\n    - [With SourceNode (high level API)](#with-sourcenode-high-level-api)\n    - [With SourceMapGenerator (low level API)](#with-sourcemapgenerator-low-level-api)\n- [API](#api)\n  - [SourceMapConsumer](#sourcemapconsumer)\n    - [new SourceMapConsumer(rawSourceMap)](#new-sourcemapconsumerrawsourcemap)\n    - [SourceMapConsumer.prototype.computeColumnSpans()](#sourcemapconsumerprototypecomputecolumnspans)\n    - [SourceMapConsumer.prototype.originalPositionFor(generatedPosition)](#sourcemapconsumerprototypeoriginalpositionforgeneratedposition)\n    - [SourceMapConsumer.prototype.generatedPositionFor(originalPosition)](#sourcemapconsumerprototypegeneratedpositionfororiginalposition)\n    - [SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)](#sourcemapconsumerprototypeallgeneratedpositionsfororiginalposition)\n    - [SourceMapConsumer.prototype.hasContentsOfAllSources()](#sourcemapconsumerprototypehascontentsofallsources)\n    - [SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])](#sourcemapconsumerprototypesourcecontentforsource-returnnullonmissing)\n    - [SourceMapConsumer.prototype.eachMapping(callback, context, order)](#sourcemapconsumerprototypeeachmappingcallback-context-order)\n  - [SourceMapGenerator](#sourcemapgenerator)\n    - [new SourceMapGenerator([startOfSourceMap])](#new-sourcemapgeneratorstartofsourcemap)\n    - [SourceMapGenerator.fromSourceMap(sourceMapConsumer)](#sourcemapgeneratorfromsourcemapsourcemapconsumer)\n    - [SourceMapGenerator.prototype.addMapping(mapping)](#sourcemapgeneratorprototypeaddmappingmapping)\n    - [SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)](#sourcemapgeneratorprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])](#sourcemapgeneratorprototypeapplysourcemapsourcemapconsumer-sourcefile-sourcemappath)\n    - [SourceMapGenerator.prototype.toString()](#sourcemapgeneratorprototypetostring)\n  - [SourceNode](#sourcenode)\n    - [new SourceNode([line, column, source[, chunk[, name]]])](#new-sourcenodeline-column-source-chunk-name)\n    - [SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])](#sourcenodefromstringwithsourcemapcode-sourcemapconsumer-relativepath)\n    - [SourceNode.prototype.add(chunk)](#sourcenodeprototypeaddchunk)\n    - [SourceNode.prototype.prepend(chunk)](#sourcenodeprototypeprependchunk)\n    - [SourceNode.prototype.setSourceContent(sourceFile, sourceContent)](#sourcenodeprototypesetsourcecontentsourcefile-sourcecontent)\n    - [SourceNode.prototype.walk(fn)](#sourcenodeprototypewalkfn)\n    - [SourceNode.prototype.walkSourceContents(fn)](#sourcenodeprototypewalksourcecontentsfn)\n    - [SourceNode.prototype.join(sep)](#sourcenodeprototypejoinsep)\n    - [SourceNode.prototype.replaceRight(pattern, replacement)](#sourcenodeprototypereplacerightpattern-replacement)\n    - [SourceNode.prototype.toString()](#sourcenodeprototypetostring)\n    - [SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])](#sourcenodeprototypetostringwithsourcemapstartofsourcemap)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Examples\n\n### Consuming a source map\n\n```js\nvar rawSourceMap = {\n  version: 3,\n  file: 'min.js',\n  names: ['bar', 'baz', 'n'],\n  sources: ['one.js', 'two.js'],\n  sourceRoot: 'http://example.com/www/js/',\n  mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n};\n\nvar smc = new SourceMapConsumer(rawSourceMap);\n\nconsole.log(smc.sources);\n// [ 'http://example.com/www/js/one.js',\n//   'http://example.com/www/js/two.js' ]\n\nconsole.log(smc.originalPositionFor({\n  line: 2,\n  column: 28\n}));\n// { source: 'http://example.com/www/js/two.js',\n//   line: 2,\n//   column: 10,\n//   name: 'n' }\n\nconsole.log(smc.generatedPositionFor({\n  source: 'http://example.com/www/js/two.js',\n  line: 2,\n  column: 10\n}));\n// { line: 2, column: 28 }\n\nsmc.eachMapping(function (m) {\n  // ...\n});\n```\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n```js\nfunction compile(ast) {\n  switch (ast.type) {\n  case 'BinaryExpression':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      [compile(ast.left), \" + \", compile(ast.right)]\n    );\n  case 'Literal':\n    return new SourceNode(\n      ast.location.line,\n      ast.location.column,\n      ast.location.source,\n      String(ast.value)\n    );\n  // ...\n  default:\n    throw new Error(\"Bad AST\");\n  }\n}\n\nvar ast = parse(\"40 + 2\", \"add.js\");\nconsole.log(compile(ast).toStringWithSourceMap({\n  file: 'add.js'\n}));\n// { code: '40 + 2',\n//   map: [object SourceMapGenerator] }\n```\n\n#### With SourceMapGenerator (low level API)\n\n```js\nvar map = new SourceMapGenerator({\n  file: \"source-mapped.js\"\n});\n\nmap.addMapping({\n  generated: {\n    line: 10,\n    column: 35\n  },\n  source: \"foo.js\",\n  original: {\n    line: 33,\n    column: 2\n  },\n  name: \"christopher\"\n});\n\nconsole.log(map.toString());\n// '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n```\n\n## API\n\nGet a reference to the module:\n\n```js\n// Node.js\nvar sourceMap = require('source-map');\n\n// Browser builds\nvar sourceMap = window.sourceMap;\n\n// Inside Firefox\nconst sourceMap = require(\"devtools/toolkit/sourcemap/source-map.js\");\n```\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n```js\nvar consumer = new sourceMap.SourceMapConsumer(rawSourceMapJsonData);\n```\n\n#### SourceMapConsumer.prototype.computeColumnSpans()\n\nCompute the last column for each generated mapping. The last column is\ninclusive.\n\n```js\n// Before:\nconsumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n\nconsumer.computeColumnSpans();\n\n// After:\nconsumer.allGeneratedPositionsFor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1,\n//     lastColumn: 9 },\n//   { line: 2,\n//     column: 10,\n//     lastColumn: 19 },\n//   { line: 2,\n//     column: 20,\n//     lastColumn: Infinity } ]\n\n```\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\n* `bias`: Either `SourceMapConsumer.GREATEST_LOWER_BOUND` or\n  `SourceMapConsumer.LEAST_UPPER_BOUND`. Specifies whether to return the closest\n  element that is smaller than or greater than the one we are searching for,\n  respectively, if the exact element cannot be found.  Defaults to\n  `SourceMapConsumer.GREATEST_LOWER_BOUND`.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n```js\nconsumer.originalPositionFor({ line: 2, column: 10 })\n// { source: 'foo.coffee',\n//   line: 2,\n//   column: 2,\n//   name: null }\n\nconsumer.originalPositionFor({ line: 99999999999999999, column: 999999999999999 })\n// { source: null,\n//   line: null,\n//   column: null,\n//   name: null }\n```\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.generatedPositionFor({ source: \"example.js\", line: 2, column: 10 })\n// { line: 1,\n//   column: 56 }\n```\n\n#### SourceMapConsumer.prototype.allGeneratedPositionsFor(originalPosition)\n\nReturns all generated line and column information for the original source, line,\nand column provided. If no column is provided, returns all mappings\ncorresponding to a either the line we are searching for or the next closest line\nthat has any mappings. Otherwise, returns all mappings corresponding to the\ngiven line and either the column we are searching for or the next closest column\nthat has any offsets.\n\nThe only argument is an object with the following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: Optional. The column number in the original source.\n\nand an array of objects is returned, each with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n```js\nconsumer.allGeneratedpositionsfor({ line: 2, source: \"foo.coffee\" })\n// [ { line: 2,\n//     column: 1 },\n//   { line: 2,\n//     column: 10 },\n//   { line: 2,\n//     column: 20 } ]\n```\n\n#### SourceMapConsumer.prototype.hasContentsOfAllSources()\n\nReturn true if we have the embedded source content for every source listed in\nthe source map, false otherwise.\n\nIn other words, if this method returns `true`, then\n`consumer.sourceContentFor(s)` will succeed for every source `s` in\n`consumer.sources`.\n\n```js\n// ...\nif (consumer.hasContentsOfAllSources()) {\n  consumerReadyCallback(consumer);\n} else {\n  fetchSources(consumer, consumerReadyCallback);\n}\n// ...\n```\n\n#### SourceMapConsumer.prototype.sourceContentFor(source[, returnNullOnMissing])\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\nIf the source content for the given source is not found, then an error is\nthrown. Optionally, pass `true` as the second param to have `null` returned\ninstead.\n\n```js\nconsumer.sources\n// [ \"my-cool-lib.clj\" ]\n\nconsumer.sourceContentFor(\"my-cool-lib.clj\")\n// \"...\"\n\nconsumer.sourceContentFor(\"this is not in the source map\");\n// Error: \"this is not in the source map\" is not in the source map\n\nconsumer.sourceContentFor(\"this is not in the source map\", true);\n// null\n```\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n```js\nconsumer.eachMapping(function (m) { console.log(m); })\n// ...\n// { source: 'illmatic.js',\n//   generatedLine: 1,\n//   generatedColumn: 0,\n//   originalLine: 1,\n//   originalColumn: 0,\n//   name: null }\n// { source: 'illmatic.js',\n//   generatedLine: 2,\n//   generatedColumn: 0,\n//   originalLine: 2,\n//   originalColumn: 0,\n//   name: null }\n// ...\n```\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n* `skipValidation`: Optional. When `true`, disables validation of mappings as\n  they are added. This can improve performance but should be used with\n  discretion, as a last resort. Even then, one should avoid using this flag when\n  running tests, if possible.\n\n```js\nvar generator = new sourceMap.SourceMapGenerator({\n  file: \"my-generated-javascript-file.js\",\n  sourceRoot: \"http://example.com/app/js/\"\n});\n```\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new `SourceMapGenerator` from an existing `SourceMapConsumer` instance.\n\n* `sourceMapConsumer` The SourceMap.\n\n```js\nvar generator = sourceMap.SourceMapGenerator.fromSourceMap(consumer);\n```\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n```js\ngenerator.addMapping({\n  source: \"module-one.scm\",\n  original: { line: 128, column: 0 },\n  generated: { line: 3, column: 456 }\n})\n```\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n```js\ngenerator.setSourceContent(\"module-one.scm\",\n                           fs.readFileSync(\"path/to/module-one.scm\"))\n```\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimum of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren't in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `'.'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n```js\ngenerator.toString()\n// '{\"version\":3,\"sources\":[\"module-one.scm\"],\"names\":[],\"mappings\":\"...snip...\",\"file\":\"my-generated-javascript-file.js\",\"sourceRoot\":\"http://example.com/app/js/\"}'\n```\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n```js\nvar node = new SourceNode(1, 2, \"a.cpp\", [\n  new SourceNode(3, 4, \"b.cpp\", \"extern int status;\\n\"),\n  new SourceNode(5, 6, \"c.cpp\", \"std::string* make_string(size_t n);\\n\"),\n  new SourceNode(7, 8, \"d.cpp\", \"int main(int argc, char** argv) {}\\n\"),\n]);\n```\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer[, relativePath])\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n* `relativePath` The optional path that relative sources in `sourceMapConsumer`\n  should be relative to.\n\n```js\nvar consumer = new SourceMapConsumer(fs.readFileSync(\"path/to/my-file.js.map\"));\nvar node = SourceNode.fromStringWithSourceMap(fs.readFileSync(\"path/to/my-file.js\"),\n                                              consumer);\n```\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.add(\" + \");\nnode.add(otherNode);\nnode.add([leftHandOperandNode, \" + \", rightHandOperandNode]);\n```\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n```js\nnode.prepend(\"/** Build Id: f783haef86324gf **/\\n\\n\");\n```\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n```js\nnode.setSourceContent(\"module-one.scm\",\n                      fs.readFileSync(\"path/to/module-one.scm\"))\n```\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.walk(function (code, loc) { console.log(\"WALK:\", code, loc); })\n// WALK: uno { source: 'b.js', line: 3, column: 4, name: null }\n// WALK: dos { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: tres { source: 'a.js', line: 1, column: 2, name: null }\n// WALK: quatro { source: 'c.js', line: 5, column: 6, name: null }\n```\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n```js\nvar a = new SourceNode(1, 2, \"a.js\", \"generated from a\");\na.setSourceContent(\"a.js\", \"original a\");\nvar b = new SourceNode(1, 2, \"b.js\", \"generated from b\");\nb.setSourceContent(\"b.js\", \"original b\");\nvar c = new SourceNode(1, 2, \"c.js\", \"generated from c\");\nc.setSourceContent(\"c.js\", \"original c\");\n\nvar node = new SourceNode(null, null, null, [a, b, c]);\nnode.walkSourceContents(function (source, contents) { console.log(\"WALK:\", source, \":\", contents); })\n// WALK: a.js : original a\n// WALK: b.js : original b\n// WALK: c.js : original c\n```\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n```js\nvar lhs = new SourceNode(1, 2, \"a.rs\", \"my_copy\");\nvar operand = new SourceNode(3, 4, \"a.rs\", \"=\");\nvar rhs = new SourceNode(5, 6, \"a.rs\", \"orig.clone()\");\n\nvar node = new SourceNode(null, null, null, [ lhs, operand, rhs ]);\nvar joinedNode = node.join(\" \");\n```\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming white space from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n```js\n// Trim trailing white space.\nnode.replaceRight(/\\s*$/, \"\");\n```\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.toString()\n// 'unodostresquatro'\n```\n\n#### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n```js\nvar node = new SourceNode(1, 2, \"a.js\", [\n  new SourceNode(3, 4, \"b.js\", \"uno\"),\n  \"dos\",\n  [\n    \"tres\",\n    new SourceNode(5, 6, \"c.js\", \"quatro\")\n  ]\n]);\n\nnode.toStringWithSourceMap({ file: \"my-output-file.js\" })\n// { code: 'unodostresquatro',\n//   map: [object SourceMapGenerator] }\n```\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/source-map",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "source-map"
            }
          },
          "deprecated": false,
          "description": "Fixes stack traces for files with source maps",
          "devDependencies": {
            "browserify": "3.44.2",
            "coffee-script": "1.7.1",
            "http-server": "^0.8.5",
            "mocha": "1.18.2",
            "webpack": "^1.13.3"
          },
          "homepage": "https://github.com/evanw/node-source-map-support#readme",
          "license": "MIT",
          "main": "./source-map-support.js",
          "name": "source-map-support",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/evanw/node-source-map-support.git"
          },
          "scripts": {
            "build": "node build.js",
            "prepublish": "npm run build",
            "serve-tests": "http-server -p 1336",
            "test": "mocha"
          },
          "version": "0.4.15",
          "readme": "# Source Map Support\n[![Build Status](https://travis-ci.org/evanw/node-source-map-support.svg?branch=master)](https://travis-ci.org/evanw/node-source-map-support)\n\nThis module provides source map support for stack traces in node via the [V8 stack trace API](http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi). It uses the [source-map](https://github.com/mozilla/source-map) module to replace the paths and line numbers of source-mapped files with their original paths and line numbers. The output mimics node's stack trace format with the goal of making every compile-to-JS language more of a first-class citizen. Source maps are completely general (not specific to any one language) so you can use source maps with multiple compile-to-JS languages in the same node process.\n\n## Installation and Usage\n\n#### Node support\n\n```\n$ npm install source-map-support\n```\n\nSource maps can be generated using libraries such as [source-map-index-generator](https://github.com/twolfson/source-map-index-generator). Once you have a valid source map, insert the following line at the top of your compiled code:\n\n```js\nrequire('source-map-support').install();\n```\n\nAnd place a source mapping comment somewhere in the file (usually done automatically or with an option by your transpiler):\n\n```\n//# sourceMappingURL=path/to/source.map\n```\n\nIf multiple sourceMappingURL comments exist in one file, the last sourceMappingURL comment will be\nrespected (e.g. if a file mentions the comment in code, or went through multiple transpilers).\nThe path should either be absolute or relative to the compiled file.\n\nIt is also possible to to install the source map support directly by\nrequiring the `register` module which can be handy with ES6:\n\n```js\nimport 'source-map-support/register'\n\n// Instead of:\nimport sourceMapSupport from 'source-map-support'\nsourceMapSupport.install()\n```\nNote: if you're using babel-register, it includes source-map-support already.\n\nIt is also very useful with Mocha:\n\n```\n$ mocha --require source-map-support/register tests/\n```\n\n#### Browser support\n\nThis library also works in Chrome. While the DevTools console already supports source maps, the V8 engine doesn't and `Error.prototype.stack` will be incorrect without this library. Everything will just work if you deploy your source files using [browserify](http://browserify.org/). Just make sure to pass the `--debug` flag to the browserify command so your source maps are included in the bundled code.\n\nThis library also works if you use another build process or just include the source files directly. In this case, include the file `browser-source-map-support.js` in your page and call `sourceMapSupport.install()`. It contains the whole library already bundled for the browser using browserify.\n\n```html\n<script src=\"browser-source-map-support.js\"></script>\n<script>sourceMapSupport.install();</script>\n```\n\nThis library also works if you use AMD (Asynchronous Module Definition), which is used in tools like [RequireJS](http://requirejs.org/). Just list `browser-source-map-support` as a dependency:\n\n```html\n<script>\n  define(['browser-source-map-support'], function(sourceMapSupport) {\n    sourceMapSupport.install();\n  });\n</script>\n```\n\n## Options\n\nThis module installs two things: a change to the `stack` property on `Error` objects and a handler for uncaught exceptions that mimics node's default exception handler (the handler can be seen in the demos below). You may want to disable the handler if you have your own uncaught exception handler. This can be done by passing an argument to the installer:\n\n```js\nrequire('source-map-support').install({\n  handleUncaughtExceptions: false\n});\n```\n\nThis module loads source maps from the filesystem by default. You can provide alternate loading behavior through a callback as shown below. For example, [Meteor](https://github.com/meteor) keeps all source maps cached in memory to avoid disk access.\n\n```js\nrequire('source-map-support').install({\n  retrieveSourceMap: function(source) {\n    if (source === 'compiled.js') {\n      return {\n        url: 'original.js',\n        map: fs.readFileSync('compiled.js.map', 'utf8')\n      };\n    }\n    return null;\n  }\n});\n```\n\nThe module will by default assume a browser environment if XMLHttpRequest and window are defined. If either of these do not exist it will instead assume a node environment. \nIn some rare cases, e.g. when running a browser emulation and where both variables are also set, you can explictly specify the environment to be either 'browser' or 'node'. \n\n```js\nrequire('source-map-support').install({\n  environment: 'node'\n});\n```\n\nTo support files with inline source maps, the `hookRequire` options can be specified, which will monitor all source files for inline source maps.\n\n\n```js\nrequire('source-map-support').install({\n  hookRequire: true\n});\n```\n\nThis monkey patches the `require` module loading chain, so is not enabled by default and is not recommended for any sort of production usage.\n\n## Demos\n\n#### Basic Demo\n\noriginal.js:\n\n```js\nthrow new Error('test'); // This is the original code\n```\n\ncompiled.js:\n\n```js\nrequire('source-map-support').install();\n\nthrow new Error('test'); // This is the compiled code\n// The next line defines the sourceMapping.\n//# sourceMappingURL=compiled.js.map\n```\n\ncompiled.js.map:\n\n```json\n{\n  \"version\": 3,\n  \"file\": \"compiled.js\",\n  \"sources\": [\"original.js\"],\n  \"names\": [],\n  \"mappings\": \";;AAAA,MAAM,IAAI\"\n}\n```\n\nRun compiled.js using node (notice how the stack trace uses original.js instead of compiled.js):\n\n```\n$ node compiled.js\n\noriginal.js:1\nthrow new Error('test'); // This is the original code\n      ^\nError: test\n    at Object.<anonymous> (original.js:1:7)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n\n#### TypeScript Demo\n\ndemo.ts:\n\n```typescript\ndeclare function require(name: string);\nrequire('source-map-support').install();\nclass Foo {\n  constructor() { this.bar(); }\n  bar() { throw new Error('this is a demo'); }\n}\nnew Foo();\n```\n\nCompile and run the file using the TypeScript compiler from the terminal:\n\n```\n$ npm install source-map-support typescript\n$ node_modules/typescript/bin/tsc -sourcemap demo.ts\n$ node demo.js\n\ndemo.ts:5\n  bar() { throw new Error('this is a demo'); }\n                ^\nError: this is a demo\n    at Foo.bar (demo.ts:5:17)\n    at new Foo (demo.ts:4:24)\n    at Object.<anonymous> (demo.ts:7:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n    \n#### CoffeeScript Demo\n\ndemo.coffee:\n\n```coffee\nrequire('source-map-support').install()\nfoo = ->\n  bar = -> throw new Error 'this is a demo'\n  bar()\nfoo()\n```\n\nCompile and run the file using the CoffeeScript compiler from the terminal:\n\n```sh\n$ npm install source-map-support coffee-script\n$ node_modules/coffee-script/bin/coffee --map --compile demo.coffee\n$ node demo.js\n\ndemo.coffee:3\n  bar = -> throw new Error 'this is a demo'\n                     ^\nError: this is a demo\n    at bar (demo.coffee:3:22)\n    at foo (demo.coffee:4:3)\n    at Object.<anonymous> (demo.coffee:5:1)\n    at Object.<anonymous> (demo.coffee:1:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n```\n\n## Tests\n\nThis repo contains both automated tests for node and manual tests for the browser. The automated tests can be run using mocha (type `mocha` in the root directory). To run the manual tests:\n\n* Build the tests using `build.js`\n* Launch the HTTP server (`npm run serve-tests`) and visit\n  * http://127.0.0.1:1336/amd-test\n  * http://127.0.0.1:1336/browser-test\n  * http://127.0.0.1:1336/browserify-test - **Currently not working** due to a bug with browserify (see [pull request #66](https://github.com/evanw/node-source-map-support/pull/66) for details).\n* For `header-test`, run `server.js` inside that directory and visit http://127.0.0.1:1337/\n\n## License\n\nThis code is available under the [MIT license](http://opensource.org/licenses/MIT).\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "source-map": "^0.5.6"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/source-map-support",
          "error": "[Circular]",
          "extraneous": false
        }
      },
      "deprecated": false,
      "description": "babel require hook",
      "devDependencies": "[Circular]",
      "license": "MIT",
      "main": "lib/node.js",
      "name": "babel-register",
      "repository": "[Circular]",
      "version": "6.24.1",
      "readme": "# babel-register\n\n> The require hook will bind itself to node's require and automatically compile files on the fly.\n\nOne of the ways you can use Babel is through the require hook. The require hook\nwill bind itself to node's `require` and automatically compile files on the\nfly. This is equivalent to CoffeeScript's\n[coffee-script/register](http://coffeescript.org/documentation/docs/register.html).\n\n## Install\n\n```sh\nnpm install babel-register --save-dev\n```\n\n## Usage\n\n```js\nrequire(\"babel-register\");\n```\n\nAll subsequent files required by node with the extensions `.es6`, `.es`, `.jsx`\nand `.js` will be transformed by Babel.\n\n<blockquote class=\"babel-callout babel-callout-info\">\n  <h4>Polyfill not included</h4>\n  <p>\n    You must include the <a href=\"https://babeljs.io/docs/usage/polyfill/\">polyfill</a> separately\n    when using features that require it, like generators.\n  </p>\n</blockquote>\n\n### Ignores `node_modules` by default\n\n**NOTE:** By default all requires to `node_modules` will be ignored. You can\noverride this by passing an ignore regex via:\n\n```js\nrequire(\"babel-register\")({\n  // This will override `node_modules` ignoring - you can alternatively pass\n  // an array of strings to be explicitly matched or a regex / glob\n  ignore: false\n});\n```\n\n## Specifying options\n\n```javascript\nrequire(\"babel-register\")({\n  // Optional ignore regex - if any filenames **do** match this regex then they\n  // aren't compiled.\n  ignore: /regex/,\n\n  // Ignore can also be specified as a function.\n  ignore: function(filename) {\n    if (filename === \"/path/to/es6-file.js\") {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  // Optional only regex - if any filenames **don't** match this regex then they\n  // aren't compiled\n  only: /my_es6_folder/,\n\n  // Setting this will remove the currently hooked extensions of .es6, `.es`, `.jsx`\n  // and .js so you'll have to add them back if you want them to be used again.\n  extensions: [\".es6\", \".es\", \".jsx\", \".js\"]\n});\n```\n\nYou can pass in all other [options](https://babeljs.io/docs/usage/api/#options) as well,\nincluding `plugins` and `presets`. But note that the closest [`.babelrc`](https://babeljs.io/docs/usage/babelrc/)\nto each file still applies, and takes precedence over any options you pass in here.\n\n## Environment variables\n\nBy default `babel-node` and `babel-register` will save to a json cache in your\ntemporary directory.\n\nThis will heavily improve with the startup and compilation of your files. There\nare however scenarios where you want to change this behaviour and there are\nenvironment variables exposed to allow you to do this.\n\n### BABEL_CACHE_PATH\n\nSpecify a different cache location.\n\n```sh\nBABEL_CACHE_PATH=/foo/my-cache.json babel-node script.js\n```\n\n### BABEL_DISABLE_CACHE\n\nDisable the cache.\n\n```sh\nBABEL_DISABLE_CACHE=1 babel-node script.js\n```\n",
      "readmeFilename": "README.md",
      "optionalDependencies": "[Circular]",
      "_dependencies": "[Circular]",
      "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies/node_modules/babel-register",
      "error": "[Circular]",
      "extraneous": false
    }
  },
  "name": "",
  "version": "",
  "readme": "ERROR: No README data found!",
  "devDependencies": {},
  "optionalDependencies": {},
  "_dependencies": {
    "babel-register": "^6.24.1"
  },
  "path": "/Users/pivotal/workspace/LicenseFinder/spec/fixtures/npm-circular-dependencies",
  "error": "[Circular]",
  "extraneous": false
}
