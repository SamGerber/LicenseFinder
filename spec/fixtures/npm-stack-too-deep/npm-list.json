{
  "dependencies": {
    "eslint": {
      "_from": "eslint@2.13.1",
      "_id": "eslint@2.13.1",
      "_inBundle": false,
      "_integrity": "sha1-5MyPoPAJ+4KaquI4VaKTYL4fbBE=",
      "_location": "/eslint",
      "_phantomChildren": {},
      "_requested": {
        "type": "version",
        "registry": true,
        "raw": "eslint@2.13.1",
        "name": "eslint",
        "escapedName": "eslint",
        "rawSpec": "2.13.1",
        "saveSpec": null,
        "fetchSpec": "2.13.1"
      },
      "_requiredBy": [
        "/"
      ],
      "_resolved": "https://registry.npmjs.org/eslint/-/eslint-2.13.1.tgz",
      "_shasum": "e4cc8fa0f009fb829aaae23855a29360be1f6c11",
      "_spec": "eslint@2.13.1",
      "_where": "/Users/pivotal/workspace/LicenseFinder/bin",
      "author": {
        "name": "Nicholas C. Zakas",
        "email": "nicholas+npm@nczconsulting.com"
      },
      "bin": {
        "eslint": "./bin/eslint.js"
      },
      "bugs": {
        "url": "https://github.com/eslint/eslint/issues/"
      },
      "bundleDependencies": false,
      "dependencies": {
        "chalk": {
          "_from": "chalk@^1.1.3",
          "_id": "chalk@1.1.3",
          "_inBundle": false,
          "_integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
          "_location": "/chalk",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "chalk@^1.1.3",
            "name": "chalk",
            "escapedName": "chalk",
            "rawSpec": "^1.1.3",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.1.3"
          },
          "_requiredBy": [
            "/eslint",
            "/inquirer",
            "/table"
          ],
          "_resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
          "_shasum": "a8115c55e4a702fe4d150abd3872822a7e09fc98",
          "_spec": "chalk@^1.1.3",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "bugs": {
            "url": "https://github.com/chalk/chalk/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "ansi-styles": {
              "_from": "ansi-styles@^2.2.1",
              "_id": "ansi-styles@2.2.1",
              "_inBundle": false,
              "_integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=",
              "_location": "/ansi-styles",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "ansi-styles@^2.2.1",
                "name": "ansi-styles",
                "escapedName": "ansi-styles",
                "rawSpec": "^2.2.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.2.1"
              },
              "_requiredBy": [
                "/chalk"
              ],
              "_resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",
              "_shasum": "b432dd3358b634cf75e1e4664368240533c1ddbe",
              "_spec": "ansi-styles@^2.2.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/chalk/ansi-styles/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "ANSI escape codes for styling strings in the terminal",
              "devDependencies": {
                "mocha": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/chalk/ansi-styles#readme",
              "keywords": [
                "ansi",
                "styles",
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "cli",
                "string",
                "tty",
                "escape",
                "formatting",
                "rgb",
                "256",
                "shell",
                "xterm",
                "log",
                "logging",
                "command-line",
                "text"
              ],
              "license": "MIT",
              "maintainers": [
                {
                  "name": "Sindre Sorhus",
                  "email": "sindresorhus@gmail.com",
                  "url": "sindresorhus.com"
                },
                {
                  "name": "Joshua Appelman",
                  "email": "jappelman@xebia.com",
                  "url": "jbnicolai.com"
                }
              ],
              "name": "ansi-styles",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/chalk/ansi-styles.git"
              },
              "scripts": {
                "test": "mocha"
              },
              "version": "2.2.1",
              "readme": "# ansi-styles [![Build Status](https://travis-ci.org/chalk/ansi-styles.svg?branch=master)](https://travis-ci.org/chalk/ansi-styles)\n\n> [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles) for styling strings in the terminal\n\nYou probably want the higher-level [chalk](https://github.com/chalk/chalk) module for styling your strings.\n\n![](screenshot.png)\n\n\n## Install\n\n```\n$ npm install --save ansi-styles\n```\n\n\n## Usage\n\n```js\nvar ansi = require('ansi-styles');\n\nconsole.log(ansi.green.open + 'Hello world!' + ansi.green.close);\n```\n\n\n## API\n\nEach style has an `open` and `close` property.\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `gray`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n\n\n## Advanced usage\n\nBy default you get a map of styles, but the styles are also available as groups. They are non-enumerable so they don't show up unless you access them explicitly. This makes it easier to expose only a subset in a higher-level module.\n\n- `ansi.modifiers`\n- `ansi.colors`\n- `ansi.bgColors`\n\n\n###### Example\n\n```js\nconsole.log(ansi.colors.green.open);\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ansi-styles",
              "error": "[Circular]",
              "extraneous": false
            },
            "escape-string-regexp": {
              "_from": "escape-string-regexp@^1.0.2",
              "_id": "escape-string-regexp@1.0.5",
              "_inBundle": false,
              "_integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
              "_location": "/escape-string-regexp",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "escape-string-regexp@^1.0.2",
                "name": "escape-string-regexp",
                "escapedName": "escape-string-regexp",
                "rawSpec": "^1.0.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.2"
              },
              "_requiredBy": [
                "/chalk",
                "/figures"
              ],
              "_resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
              "_shasum": "1b61c0562190a8dff6ae3bb2cf0200ca130b86d4",
              "_spec": "escape-string-regexp@^1.0.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/escape-string-regexp/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Escape RegExp special characters",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.8.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme",
              "keywords": [
                "escape",
                "regex",
                "regexp",
                "re",
                "regular",
                "expression",
                "string",
                "str",
                "special",
                "characters"
              ],
              "license": "MIT",
              "maintainers": [
                {
                  "name": "Sindre Sorhus",
                  "email": "sindresorhus@gmail.com",
                  "url": "sindresorhus.com"
                },
                {
                  "name": "Joshua Boy Nicolai Appelman",
                  "email": "joshua@jbna.nl",
                  "url": "jbna.nl"
                }
              ],
              "name": "escape-string-regexp",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/escape-string-regexp.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.5",
              "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install --save escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/escape-string-regexp",
              "error": "[Circular]",
              "extraneous": false
            },
            "has-ansi": {
              "_from": "has-ansi@^2.0.0",
              "_id": "has-ansi@2.0.0",
              "_inBundle": false,
              "_integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",
              "_location": "/has-ansi",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "has-ansi@^2.0.0",
                "name": "has-ansi",
                "escapedName": "has-ansi",
                "rawSpec": "^2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.0"
              },
              "_requiredBy": [
                "/chalk"
              ],
              "_resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",
              "_shasum": "34f5049ce1ecdf2b0649af3ef24e45ed35416d91",
              "_spec": "has-ansi@^2.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/has-ansi/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "ansi-regex": {
                  "_from": "ansi-regex@^2.0.0",
                  "_id": "ansi-regex@2.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
                  "_location": "/ansi-regex",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "ansi-regex@^2.0.0",
                    "name": "ansi-regex",
                    "escapedName": "ansi-regex",
                    "rawSpec": "^2.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^2.0.0"
                  },
                  "_requiredBy": [
                    "/has-ansi",
                    "/inquirer",
                    "/strip-ansi"
                  ],
                  "_resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
                  "_shasum": "c3b33ab5ee360d86e0e628f0468ae7ef27d654df",
                  "_spec": "ansi-regex@^2.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/has-ansi",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/chalk/ansi-regex/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Regular expression for matching ANSI escape codes",
                  "devDependencies": {
                    "ava": "0.17.0",
                    "xo": "0.16.0"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/chalk/ansi-regex#readme",
                  "keywords": [
                    "ansi",
                    "styles",
                    "color",
                    "colour",
                    "colors",
                    "terminal",
                    "console",
                    "cli",
                    "string",
                    "tty",
                    "escape",
                    "formatting",
                    "rgb",
                    "256",
                    "shell",
                    "xterm",
                    "command-line",
                    "text",
                    "regex",
                    "regexp",
                    "re",
                    "match",
                    "test",
                    "find",
                    "pattern"
                  ],
                  "license": "MIT",
                  "maintainers": [
                    {
                      "name": "Sindre Sorhus",
                      "email": "sindresorhus@gmail.com",
                      "url": "sindresorhus.com"
                    },
                    {
                      "name": "Joshua Appelman",
                      "email": "jappelman@xebia.com",
                      "url": "jbnicolai.com"
                    },
                    {
                      "name": "JD Ballard",
                      "email": "i.am.qix@gmail.com",
                      "url": "github.com/qix-"
                    }
                  ],
                  "name": "ansi-regex",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/chalk/ansi-regex.git"
                  },
                  "scripts": {
                    "test": "xo && ava --verbose",
                    "view-supported": "node fixtures/view-codes.js"
                  },
                  "version": "2.1.1",
                  "xo": {
                    "rules": {
                      "guard-for-in": 0,
                      "no-loop-func": 0
                    }
                  },
                  "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001b[4mcake\\u001b[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001b[4mcake\\u001b[0m'.match(ansiRegex());\n//=> ['\\u001b[4m', '\\u001b[0m']\n```\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. If I recall correctly, we test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ansi-regex",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "ansi-regex"
                }
              },
              "deprecated": false,
              "description": "Check if a string has ANSI escape codes",
              "devDependencies": {
                "ava": "0.0.4"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/has-ansi#readme",
              "keywords": [
                "ansi",
                "styles",
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "string",
                "tty",
                "escape",
                "shell",
                "xterm",
                "command-line",
                "text",
                "regex",
                "regexp",
                "re",
                "match",
                "test",
                "find",
                "pattern",
                "has"
              ],
              "license": "MIT",
              "maintainers": [
                {
                  "name": "Sindre Sorhus",
                  "email": "sindresorhus@gmail.com",
                  "url": "sindresorhus.com"
                },
                {
                  "name": "Joshua Appelman",
                  "email": "jappelman@xebia.com",
                  "url": "jbnicolai.com"
                }
              ],
              "name": "has-ansi",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/has-ansi.git"
              },
              "scripts": {
                "test": "node test.js"
              },
              "version": "2.0.0",
              "readme": "# has-ansi [![Build Status](https://travis-ci.org/sindresorhus/has-ansi.svg?branch=master)](https://travis-ci.org/sindresorhus/has-ansi)\n\n> Check if a string has [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save has-ansi\n```\n\n\n## Usage\n\n```js\nvar hasAnsi = require('has-ansi');\n\nhasAnsi('\\u001b[4mcake\\u001b[0m');\n//=> true\n\nhasAnsi('cake');\n//=> false\n```\n\n\n## Related\n\n- [has-ansi-cli](https://github.com/sindresorhus/has-ansi-cli) - CLI for this module\n- [strip-ansi](https://github.com/sindresorhus/strip-ansi) - Strip ANSI escape codes\n- [ansi-regex](https://github.com/sindresorhus/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/sindresorhus/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "ansi-regex": "^2.0.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/has-ansi",
              "error": "[Circular]",
              "extraneous": false
            },
            "strip-ansi": {
              "_from": "strip-ansi@^3.0.0",
              "_id": "strip-ansi@3.0.1",
              "_inBundle": false,
              "_integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
              "_location": "/strip-ansi",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "strip-ansi@^3.0.0",
                "name": "strip-ansi",
                "escapedName": "strip-ansi",
                "rawSpec": "^3.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^3.0.0"
              },
              "_requiredBy": [
                "/chalk",
                "/inquirer",
                "/string-width"
              ],
              "_resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
              "_shasum": "6a385fb8853d952d5ff05d0e8aaf94278dc63dcf",
              "_spec": "strip-ansi@^3.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/chalk/strip-ansi/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "ansi-regex": {
                  "_from": "ansi-regex@^2.0.0",
                  "_id": "ansi-regex@2.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
                  "_location": "/ansi-regex",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
                  "_shasum": "c3b33ab5ee360d86e0e628f0468ae7ef27d654df",
                  "_spec": "ansi-regex@^2.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/has-ansi",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Regular expression for matching ANSI escape codes",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/chalk/ansi-regex#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "maintainers": "[Circular]",
                  "name": "ansi-regex",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "2.1.1",
                  "xo": "[Circular]",
                  "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001b[4mcake\\u001b[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001b[4mcake\\u001b[0m'.match(ansiRegex());\n//=> ['\\u001b[4m', '\\u001b[0m']\n```\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. If I recall correctly, we test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ansi-regex",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "ansi-regex"
                }
              },
              "deprecated": false,
              "description": "Strip ANSI escape codes",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/chalk/strip-ansi#readme",
              "keywords": [
                "strip",
                "trim",
                "remove",
                "ansi",
                "styles",
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "string",
                "tty",
                "escape",
                "formatting",
                "rgb",
                "256",
                "shell",
                "xterm",
                "log",
                "logging",
                "command-line",
                "text"
              ],
              "license": "MIT",
              "maintainers": [
                {
                  "name": "Sindre Sorhus",
                  "email": "sindresorhus@gmail.com",
                  "url": "sindresorhus.com"
                },
                {
                  "name": "Joshua Boy Nicolai Appelman",
                  "email": "joshua@jbna.nl",
                  "url": "jbna.nl"
                },
                {
                  "name": "JD Ballard",
                  "email": "i.am.qix@gmail.com",
                  "url": "github.com/qix-"
                }
              ],
              "name": "strip-ansi",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/chalk/strip-ansi.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "3.0.1",
              "readme": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save strip-ansi\n```\n\n\n## Usage\n\n```js\nvar stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001b[4mcake\\u001b[0m');\n//=> 'cake'\n```\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "ansi-regex": "^2.0.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/strip-ansi",
              "error": "[Circular]",
              "extraneous": false
            },
            "supports-color": {
              "_from": "supports-color@^2.0.0",
              "_id": "supports-color@2.0.0",
              "_inBundle": false,
              "_integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=",
              "_location": "/supports-color",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "supports-color@^2.0.0",
                "name": "supports-color",
                "escapedName": "supports-color",
                "rawSpec": "^2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.0"
              },
              "_requiredBy": [
                "/chalk"
              ],
              "_resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",
              "_shasum": "535d045ce6b6363fa40117084629995e9df324c7",
              "_spec": "supports-color@^2.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/chalk/supports-color/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Detect whether a terminal supports color",
              "devDependencies": {
                "mocha": "*",
                "require-uncached": "^1.0.2"
              },
              "engines": {
                "node": ">=0.8.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/chalk/supports-color#readme",
              "keywords": [
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "cli",
                "ansi",
                "styles",
                "tty",
                "rgb",
                "256",
                "shell",
                "xterm",
                "command-line",
                "support",
                "supports",
                "capability",
                "detect"
              ],
              "license": "MIT",
              "maintainers": [
                {
                  "name": "Sindre Sorhus",
                  "email": "sindresorhus@gmail.com",
                  "url": "sindresorhus.com"
                },
                {
                  "name": "Joshua Appelman",
                  "email": "jappelman@xebia.com",
                  "url": "jbnicolai.com"
                }
              ],
              "name": "supports-color",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/chalk/supports-color.git"
              },
              "scripts": {
                "test": "mocha"
              },
              "version": "2.0.0",
              "readme": "# supports-color [![Build Status](https://travis-ci.org/chalk/supports-color.svg?branch=master)](https://travis-ci.org/chalk/supports-color)\n\n> Detect whether a terminal supports color\n\n\n## Install\n\n```\n$ npm install --save supports-color\n```\n\n\n## Usage\n\n```js\nvar supportsColor = require('supports-color');\n\nif (supportsColor) {\n\tconsole.log('Terminal supports color');\n}\n```\n\nIt obeys the `--color` and `--no-color` CLI flags.\n\nFor situations where using `--color` is not possible, add an environment variable `FORCE_COLOR` with any value to force color. Trumps `--no-color`.\n\n\n## Related\n\n- [supports-color-cli](https://github.com/chalk/supports-color-cli) - CLI for this module\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/supports-color",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Terminal string styling done right. Much color.",
          "devDependencies": {
            "coveralls": "^2.11.2",
            "matcha": "^0.6.0",
            "mocha": "*",
            "nyc": "^3.0.0",
            "require-uncached": "^1.0.2",
            "resolve-from": "^1.0.0",
            "semver": "^4.3.3",
            "xo": "*"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "index.js"
          ],
          "homepage": "https://github.com/chalk/chalk#readme",
          "keywords": [
            "color",
            "colour",
            "colors",
            "terminal",
            "console",
            "cli",
            "string",
            "str",
            "ansi",
            "style",
            "styles",
            "tty",
            "formatting",
            "rgb",
            "256",
            "shell",
            "xterm",
            "log",
            "logging",
            "command-line",
            "text"
          ],
          "license": "MIT",
          "maintainers": [
            {
              "name": "Sindre Sorhus",
              "email": "sindresorhus@gmail.com",
              "url": "sindresorhus.com"
            },
            {
              "name": "Joshua Appelman",
              "email": "jappelman@xebia.com",
              "url": "jbnicolai.com"
            },
            {
              "name": "JD Ballard",
              "email": "i.am.qix@gmail.com",
              "url": "github.com/qix-"
            }
          ],
          "name": "chalk",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/chalk/chalk.git"
          },
          "scripts": {
            "bench": "matcha benchmark.js",
            "coverage": "nyc npm test && nyc report",
            "coveralls": "nyc npm test && nyc report --reporter=text-lcov | coveralls",
            "test": "xo && mocha"
          },
          "version": "1.1.3",
          "xo": {
            "envs": [
              "node",
              "mocha"
            ]
          },
          "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"360\" src=\"https://cdn.rawgit.com/chalk/chalk/19935d6484811c5e468817f846b7b3d417d7bf4a/logo.svg\" alt=\"chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk)\n[![Coverage Status](https://coveralls.io/repos/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/r/chalk/chalk?branch=master)\n[![](http://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4)\n\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68). Although there are other ones, they either do too much or not enough.\n\n**Chalk is a clean and focused alternative.**\n\n![](https://github.com/chalk/ansi-styles/raw/master/screenshot.png)\n\n\n## Why\n\n- Highly performant\n- Doesn't extend `String.prototype`\n- Expressive API\n- Ability to nest styles\n- Clean and focused\n- Auto-detects color support\n- Actively maintained\n- [Used by ~4500 modules](https://www.npmjs.com/browse/depended/chalk) as of July 15, 2015\n\n\n## Install\n\n```\n$ npm install --save chalk\n```\n\n\n## Usage\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nvar chalk = require('chalk');\n\n// style a string\nchalk.blue('Hello world!');\n\n// combine styled and normal strings\nchalk.blue('Hello') + 'World' + chalk.red('!');\n\n// compose multiple styles using the chainable API\nchalk.blue.bgRed.bold('Hello world!');\n\n// pass in multiple arguments\nchalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz');\n\n// nest styles\nchalk.red('Hello', chalk.underline.bgBlue('world') + '!');\n\n// nest styles of the same type even (color, underline, background)\nchalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n);\n```\n\nEasily define your own themes.\n\n```js\nvar chalk = require('chalk');\nvar error = chalk.bold.red;\nconsole.log(error('Error!'));\n```\n\nTake advantage of console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data).\n\n```js\nvar name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> Hello Sindre\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `Chalk.red.yellow.green` is equivalent to `Chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, but you can override it by setting the `enabled` property. You should however only do this in your own code as it applies globally to all chalk consumers.\n\nIf you need to change this in a reusable module create a new instance:\n\n```js\nvar ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add an environment variable `FORCE_COLOR` with any value to force color. Trumps `--no-color`.\n\n### chalk.styles\n\nExposes the styles as [ANSI escape codes](https://github.com/chalk/ansi-styles).\n\nGenerally not useful, but you might need just the `.open` or `.close` escape code if you're mixing externally styled strings with your own.\n\n```js\nvar chalk = require('chalk');\n\nconsole.log(chalk.styles.red);\n//=> {open: '\\u001b[31m', close: '\\u001b[39m'}\n\nconsole.log(chalk.styles.red.open + 'Hello' + chalk.styles.red.close);\n```\n\n### chalk.hasColor(string)\n\nCheck whether a string [has color](https://github.com/chalk/has-ansi).\n\n### chalk.stripColor(string)\n\n[Strip color](https://github.com/chalk/strip-ansi) from a string.\n\nCan be useful in combination with `.supportsColor` to strip color on externally styled text when it's not supported.\n\nExample:\n\n```js\nvar chalk = require('chalk');\nvar styledString = getText();\n\nif (!chalk.supportsColor) {\n\tstyledString = chalk.stripColor(styledString);\n}\n```\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(on Windows the bright version is used as normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n\n\n## 256-colors\n\nChalk does not support anything other than the base eight colors, which guarantees it will work on all terminals and systems. Some terminals, specifically `xterm` compliant ones, will support the full range of 8-bit colors. For this the lower level [ansi-256-colors](https://github.com/jbnicolai/ansi-256-colors) package can be used.\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://bliker.github.io/cmder/) instead of `cmd.exe`.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles/) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color/) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "ansi-styles": "^2.2.1",
            "escape-string-regexp": "^1.0.2",
            "has-ansi": "^2.0.0",
            "strip-ansi": "^3.0.0",
            "supports-color": "^2.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
          "error": "[Circular]",
          "extraneous": false
        },
        "concat-stream": {
          "_from": "concat-stream@^1.4.6",
          "_id": "concat-stream@1.6.0",
          "_inBundle": false,
          "_integrity": "sha1-CqxmL9Ur54lk1VMvaUeE5wEQrPc=",
          "_location": "/concat-stream",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "concat-stream@^1.4.6",
            "name": "concat-stream",
            "escapedName": "concat-stream",
            "rawSpec": "^1.4.6",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.4.6"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.0.tgz",
          "_shasum": "0aac662fd52be78964d5532f694784e70110acf7",
          "_spec": "concat-stream@^1.4.6",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Max Ogden",
            "email": "max@maxogden.com"
          },
          "bugs": {
            "url": "http://github.com/maxogden/concat-stream/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "inherits": {
              "_from": "inherits@^2.0.3",
              "_id": "inherits@2.0.3",
              "_inBundle": false,
              "_integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
              "_location": "/inherits",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "inherits@^2.0.3",
                "name": "inherits",
                "escapedName": "inherits",
                "rawSpec": "^2.0.3",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.3"
              },
              "_requiredBy": [
                "/concat-stream",
                "/glob",
                "/readable-stream"
              ],
              "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
              "_shasum": "633c2c83e3da42a502f52466022480f4208261de",
              "_spec": "inherits@^2.0.3",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/concat-stream",
              "browser": "./inherits_browser.js",
              "bugs": {
                "url": "https://github.com/isaacs/inherits/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
              "devDependencies": {
                "tap": "^7.1.0"
              },
              "files": [
                "inherits.js",
                "inherits_browser.js"
              ],
              "homepage": "https://github.com/isaacs/inherits#readme",
              "keywords": [
                "inheritance",
                "class",
                "klass",
                "oop",
                "object-oriented",
                "inherits",
                "browser",
                "browserify"
              ],
              "license": "ISC",
              "main": "./inherits.js",
              "name": "inherits",
              "repository": {
                "type": "git",
                "url": "git://github.com/isaacs/inherits.git"
              },
              "scripts": {
                "test": "node test"
              },
              "version": "2.0.3",
              "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inherits",
              "error": "[Circular]",
              "extraneous": false
            },
            "readable-stream": {
              "_from": "readable-stream@^2.2.2",
              "_id": "readable-stream@2.3.3",
              "_inBundle": false,
              "_integrity": "sha512-m+qzzcn7KUxEmd1gMbchF+Y2eIUbieUaxkWtptyHywrX0rE8QEYqPC07Vuy4Wm32/xE16NcdBctb8S0Xe/5IeQ==",
              "_location": "/readable-stream",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "readable-stream@^2.2.2",
                "name": "readable-stream",
                "escapedName": "readable-stream",
                "rawSpec": "^2.2.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.2.2"
              },
              "_requiredBy": [
                "/concat-stream"
              ],
              "_resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.3.tgz",
              "_shasum": "368f2512d79f9d46fdfc71349ae7878bbc1eb95c",
              "_spec": "readable-stream@^2.2.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/concat-stream",
              "browser": {
                "util": false,
                "./readable.js": "./readable-browser.js",
                "./writable.js": "./writable-browser.js",
                "./duplex.js": "./duplex-browser.js",
                "./lib/internal/streams/stream.js": "./lib/internal/streams/stream-browser.js"
              },
              "bugs": {
                "url": "https://github.com/nodejs/readable-stream/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "core-util-is": {
                  "_from": "core-util-is@~1.0.0",
                  "_id": "core-util-is@1.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=",
                  "_location": "/core-util-is",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "core-util-is@~1.0.0",
                    "name": "core-util-is",
                    "escapedName": "core-util-is",
                    "rawSpec": "~1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~1.0.0"
                  },
                  "_requiredBy": [
                    "/readable-stream"
                  ],
                  "_resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
                  "_shasum": "b5fd54220aa2bc5ab57aab7140c940754503c1a7",
                  "_spec": "core-util-is@~1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
                  "author": {
                    "name": "Isaac Z. Schlueter",
                    "email": "i@izs.me",
                    "url": "http://blog.izs.me/"
                  },
                  "bugs": {
                    "url": "https://github.com/isaacs/core-util-is/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "The `util.is*` functions introduced in Node v0.12.",
                  "devDependencies": {
                    "tap": "^2.3.0"
                  },
                  "homepage": "https://github.com/isaacs/core-util-is#readme",
                  "keywords": [
                    "util",
                    "isBuffer",
                    "isArray",
                    "isNumber",
                    "isString",
                    "isRegExp",
                    "isThis",
                    "isThat",
                    "polyfill"
                  ],
                  "license": "MIT",
                  "main": "lib/util.js",
                  "name": "core-util-is",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/isaacs/core-util-is.git"
                  },
                  "scripts": {
                    "test": "tap test.js"
                  },
                  "version": "1.0.2",
                  "readme": "# core-util-is\n\nThe `util.is*` functions introduced in Node v0.12.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/core-util-is",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "inherits": {
                  "_from": "inherits@^2.0.3",
                  "_id": "inherits@2.0.3",
                  "_inBundle": false,
                  "_integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
                  "_location": "/inherits",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
                  "_shasum": "633c2c83e3da42a502f52466022480f4208261de",
                  "_spec": "inherits@^2.0.3",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/concat-stream",
                  "browser": "./inherits_browser.js",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
                  "devDependencies": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/isaacs/inherits#readme",
                  "keywords": "[Circular]",
                  "license": "ISC",
                  "main": "./inherits.js",
                  "name": "inherits",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "2.0.3",
                  "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inherits",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "inherits"
                },
                "isarray": {
                  "_from": "isarray@~1.0.0",
                  "_id": "isarray@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
                  "_location": "/isarray",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "isarray@~1.0.0",
                    "name": "isarray",
                    "escapedName": "isarray",
                    "rawSpec": "~1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~1.0.0"
                  },
                  "_requiredBy": [
                    "/doctrine",
                    "/readable-stream"
                  ],
                  "_resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
                  "_shasum": "bb935d48582cba168c06834957a54a3e07124f11",
                  "_spec": "isarray@~1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
                  "author": {
                    "name": "Julian Gruber",
                    "email": "mail@juliangruber.com",
                    "url": "http://juliangruber.com"
                  },
                  "bugs": {
                    "url": "https://github.com/juliangruber/isarray/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Array#isArray for older browsers",
                  "devDependencies": {
                    "tape": "~2.13.4"
                  },
                  "homepage": "https://github.com/juliangruber/isarray",
                  "keywords": [
                    "browser",
                    "isarray",
                    "array"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "isarray",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/juliangruber/isarray.git"
                  },
                  "scripts": {
                    "test": "tape test.js"
                  },
                  "testling": {
                    "files": "test.js",
                    "browsers": [
                      "ie/8..latest",
                      "firefox/17..latest",
                      "firefox/nightly",
                      "chrome/22..latest",
                      "chrome/canary",
                      "opera/12..latest",
                      "opera/next",
                      "safari/5.1..latest",
                      "ipad/6.0..latest",
                      "iphone/6.0..latest",
                      "android-browser/4.2..latest"
                    ]
                  },
                  "version": "1.0.0",
                  "readme": "\n# isarray\n\n`Array#isArray` for older browsers.\n\n[![build status](https://secure.travis-ci.org/juliangruber/isarray.svg)](http://travis-ci.org/juliangruber/isarray)\n[![downloads](https://img.shields.io/npm/dm/isarray.svg)](https://www.npmjs.org/package/isarray)\n\n[![browser support](https://ci.testling.com/juliangruber/isarray.png)\n](https://ci.testling.com/juliangruber/isarray)\n\n## Usage\n\n```js\nvar isArray = require('isarray');\n\nconsole.log(isArray([])); // => true\nconsole.log(isArray({})); // => false\n```\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install isarray\n```\n\nThen bundle for the browser with\n[browserify](https://github.com/substack/browserify).\n\nWith [component](http://component.io) do\n\n```bash\n$ component install juliangruber/isarray\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/isarray",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "isarray"
                },
                "process-nextick-args": {
                  "_from": "process-nextick-args@~1.0.6",
                  "_id": "process-nextick-args@1.0.7",
                  "_inBundle": false,
                  "_integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=",
                  "_location": "/process-nextick-args",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "process-nextick-args@~1.0.6",
                    "name": "process-nextick-args",
                    "escapedName": "process-nextick-args",
                    "rawSpec": "~1.0.6",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~1.0.6"
                  },
                  "_requiredBy": [
                    "/readable-stream"
                  ],
                  "_resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",
                  "_shasum": "150e20b756590ad3f91093f25a4f2ad8bff30ba3",
                  "_spec": "process-nextick-args@~1.0.6",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
                  "author": "",
                  "bugs": {
                    "url": "https://github.com/calvinmetcalf/process-nextick-args/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "process.nextTick but always with args",
                  "devDependencies": {
                    "tap": "~0.2.6"
                  },
                  "homepage": "https://github.com/calvinmetcalf/process-nextick-args",
                  "license": "MIT",
                  "main": "index.js",
                  "name": "process-nextick-args",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/calvinmetcalf/process-nextick-args.git"
                  },
                  "scripts": {
                    "test": "node test.js"
                  },
                  "version": "1.0.7",
                  "readme": "process-nextick-args\n=====\n\n[![Build Status](https://travis-ci.org/calvinmetcalf/process-nextick-args.svg?branch=master)](https://travis-ci.org/calvinmetcalf/process-nextick-args)\n\n```bash\nnpm install --save process-nextick-args\n```\n\nAlways be able to pass arguments to process.nextTick, no matter the platform\n\n```js\nvar nextTick = require('process-nextick-args');\n\nnextTick(function (a, b, c) {\n  console.log(a, b, c);\n}, 'step', 3,  'profit');\n```\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/process-nextick-args",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "safe-buffer": {
                  "_from": "safe-buffer@~5.1.1",
                  "_id": "safe-buffer@5.1.1",
                  "_inBundle": false,
                  "_integrity": "sha512-kKvNJn6Mm93gAczWVJg7wH+wGYWNrDHdWvpUmHyEsgCtIwwo3bqPtV4tR5tuPaUhTOo/kvhVwd8XwwOllGYkbg==",
                  "_location": "/safe-buffer",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "safe-buffer@~5.1.1",
                    "name": "safe-buffer",
                    "escapedName": "safe-buffer",
                    "rawSpec": "~5.1.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~5.1.1"
                  },
                  "_requiredBy": [
                    "/readable-stream",
                    "/string_decoder"
                  ],
                  "_resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz",
                  "_shasum": "893312af69b2123def71f57889001671eeb2c853",
                  "_spec": "safe-buffer@~5.1.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
                  "author": {
                    "name": "Feross Aboukhadijeh",
                    "email": "feross@feross.org",
                    "url": "http://feross.org"
                  },
                  "bugs": {
                    "url": "https://github.com/feross/safe-buffer/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Safer Node.js Buffer API",
                  "devDependencies": {
                    "standard": "*",
                    "tape": "^4.0.0",
                    "zuul": "^3.0.0"
                  },
                  "homepage": "https://github.com/feross/safe-buffer",
                  "keywords": [
                    "buffer",
                    "buffer allocate",
                    "node security",
                    "safe",
                    "safe-buffer",
                    "security",
                    "uninitialized"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "safe-buffer",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/feross/safe-buffer.git"
                  },
                  "scripts": {
                    "test": "standard && tape test.js"
                  },
                  "version": "5.1.1",
                  "readme": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tÃ©st');\nconsole.log(buf1.toString());\n  // prints: this is a tÃ©st\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tÃ©st\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/safe-buffer",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "string_decoder": {
                  "_from": "string_decoder@~1.0.3",
                  "_id": "string_decoder@1.0.3",
                  "_inBundle": false,
                  "_integrity": "sha512-4AH6Z5fzNNBcH+6XDMfA/BTt87skxqJlO0lAh3Dker5zThcAxG6mKz+iGu308UKoPPQ8Dcqx/4JhujzltRa+hQ==",
                  "_location": "/string_decoder",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "string_decoder@~1.0.3",
                    "name": "string_decoder",
                    "escapedName": "string_decoder",
                    "rawSpec": "~1.0.3",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~1.0.3"
                  },
                  "_requiredBy": [
                    "/readable-stream"
                  ],
                  "_resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.0.3.tgz",
                  "_shasum": "0fc67d7c141825de94282dd536bec6b9bce860ab",
                  "_spec": "string_decoder@~1.0.3",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
                  "bugs": {
                    "url": "https://github.com/rvagg/string_decoder/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "safe-buffer": {
                      "_from": "safe-buffer@~5.1.1",
                      "_id": "safe-buffer@5.1.1",
                      "_inBundle": false,
                      "_integrity": "sha512-kKvNJn6Mm93gAczWVJg7wH+wGYWNrDHdWvpUmHyEsgCtIwwo3bqPtV4tR5tuPaUhTOo/kvhVwd8XwwOllGYkbg==",
                      "_location": "/safe-buffer",
                      "_phantomChildren": "[Circular]",
                      "_requested": "[Circular]",
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.1.tgz",
                      "_shasum": "893312af69b2123def71f57889001671eeb2c853",
                      "_spec": "safe-buffer@~5.1.1",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Safer Node.js Buffer API",
                      "devDependencies": "[Circular]",
                      "homepage": "https://github.com/feross/safe-buffer",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "main": "index.js",
                      "name": "safe-buffer",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "5.1.1",
                      "readme": "# safe-buffer [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/safe-buffer/master.svg\n[travis-url]: https://travis-ci.org/feross/safe-buffer\n[npm-image]: https://img.shields.io/npm/v/safe-buffer.svg\n[npm-url]: https://npmjs.org/package/safe-buffer\n[downloads-image]: https://img.shields.io/npm/dm/safe-buffer.svg\n[downloads-url]: https://npmjs.org/package/safe-buffer\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### Safer Node.js Buffer API\n\n**Use the new Node.js Buffer APIs (`Buffer.from`, `Buffer.alloc`,\n`Buffer.allocUnsafe`, `Buffer.allocUnsafeSlow`) in all versions of Node.js.**\n\n**Uses the built-in implementation when available.**\n\n## install\n\n```\nnpm install safe-buffer\n```\n\n## usage\n\nThe goal of this package is to provide a safe replacement for the node.js `Buffer`.\n\nIt's a drop-in replacement for `Buffer`. You can use it by adding one `require` line to\nthe top of your node.js modules:\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n\n// Existing buffer code will continue to work without issues:\n\nnew Buffer('hey', 'utf8')\nnew Buffer([1, 2, 3], 'utf8')\nnew Buffer(obj)\nnew Buffer(16) // create an uninitialized buffer (potentially unsafe)\n\n// But you can use these new explicit APIs to make clear what you want:\n\nBuffer.from('hey', 'utf8') // convert from many types to a Buffer\nBuffer.alloc(16) // create a zero-filled buffer (safe)\nBuffer.allocUnsafe(16) // create an uninitialized buffer (potentially unsafe)\n```\n\n## api\n\n### Class Method: Buffer.from(array)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `array` {Array}\n\nAllocates a new `Buffer` using an `array` of octets.\n\n```js\nconst buf = Buffer.from([0x62,0x75,0x66,0x66,0x65,0x72]);\n  // creates a new Buffer containing ASCII bytes\n  // ['b','u','f','f','e','r']\n```\n\nA `TypeError` will be thrown if `array` is not an `Array`.\n\n### Class Method: Buffer.from(arrayBuffer[, byteOffset[, length]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `arrayBuffer` {ArrayBuffer} The `.buffer` property of a `TypedArray` or\n  a `new ArrayBuffer()`\n* `byteOffset` {Number} Default: `0`\n* `length` {Number} Default: `arrayBuffer.length - byteOffset`\n\nWhen passed a reference to the `.buffer` property of a `TypedArray` instance,\nthe newly created `Buffer` will share the same allocated memory as the\nTypedArray.\n\n```js\nconst arr = new Uint16Array(2);\narr[0] = 5000;\narr[1] = 4000;\n\nconst buf = Buffer.from(arr.buffer); // shares the memory with arr;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 a0 0f>\n\n// changing the TypedArray changes the Buffer also\narr[1] = 6000;\n\nconsole.log(buf);\n  // Prints: <Buffer 88 13 70 17>\n```\n\nThe optional `byteOffset` and `length` arguments specify a memory range within\nthe `arrayBuffer` that will be shared by the `Buffer`.\n\n```js\nconst ab = new ArrayBuffer(10);\nconst buf = Buffer.from(ab, 0, 2);\nconsole.log(buf.length);\n  // Prints: 2\n```\n\nA `TypeError` will be thrown if `arrayBuffer` is not an `ArrayBuffer`.\n\n### Class Method: Buffer.from(buffer)\n<!-- YAML\nadded: v3.0.0\n-->\n\n* `buffer` {Buffer}\n\nCopies the passed `buffer` data onto a new `Buffer` instance.\n\n```js\nconst buf1 = Buffer.from('buffer');\nconst buf2 = Buffer.from(buf1);\n\nbuf1[0] = 0x61;\nconsole.log(buf1.toString());\n  // 'auffer'\nconsole.log(buf2.toString());\n  // 'buffer' (copy is not changed)\n```\n\nA `TypeError` will be thrown if `buffer` is not a `Buffer`.\n\n### Class Method: Buffer.from(str[, encoding])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `str` {String} String to encode.\n* `encoding` {String} Encoding to use, Default: `'utf8'`\n\nCreates a new `Buffer` containing the given JavaScript string `str`. If\nprovided, the `encoding` parameter identifies the character encoding.\nIf not provided, `encoding` defaults to `'utf8'`.\n\n```js\nconst buf1 = Buffer.from('this is a tÃ©st');\nconsole.log(buf1.toString());\n  // prints: this is a tÃ©st\nconsole.log(buf1.toString('ascii'));\n  // prints: this is a tC)st\n\nconst buf2 = Buffer.from('7468697320697320612074c3a97374', 'hex');\nconsole.log(buf2.toString());\n  // prints: this is a tÃ©st\n```\n\nA `TypeError` will be thrown if `str` is not a string.\n\n### Class Method: Buffer.alloc(size[, fill[, encoding]])\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n* `fill` {Value} Default: `undefined`\n* `encoding` {String} Default: `utf8`\n\nAllocates a new `Buffer` of `size` bytes. If `fill` is `undefined`, the\n`Buffer` will be *zero-filled*.\n\n```js\nconst buf = Buffer.alloc(5);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nThe `size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nIf `fill` is specified, the allocated `Buffer` will be initialized by calling\n`buf.fill(fill)`. See [`buf.fill()`][] for more information.\n\n```js\nconst buf = Buffer.alloc(5, 'a');\nconsole.log(buf);\n  // <Buffer 61 61 61 61 61>\n```\n\nIf both `fill` and `encoding` are specified, the allocated `Buffer` will be\ninitialized by calling `buf.fill(fill, encoding)`. For example:\n\n```js\nconst buf = Buffer.alloc(11, 'aGVsbG8gd29ybGQ=', 'base64');\nconsole.log(buf);\n  // <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>\n```\n\nCalling `Buffer.alloc(size)` can be significantly slower than the alternative\n`Buffer.allocUnsafe(size)` but ensures that the newly created `Buffer` instance\ncontents will *never contain sensitive data*.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### Class Method: Buffer.allocUnsafe(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* `Buffer` of `size` bytes.  The `size` must\nbe less than or equal to the value of `require('buffer').kMaxLength` (on 64-bit\narchitectures, `kMaxLength` is `(2^31)-1`). Otherwise, a [`RangeError`][] is\nthrown. A zero-length Buffer will be created if a `size` less than or equal to\n0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\n```js\nconst buf = Buffer.allocUnsafe(5);\nconsole.log(buf);\n  // <Buffer 78 e0 82 02 01>\n  // (octets will be different, every time)\nbuf.fill(0);\nconsole.log(buf);\n  // <Buffer 00 00 00 00 00>\n```\n\nA `TypeError` will be thrown if `size` is not a number.\n\nNote that the `Buffer` module pre-allocates an internal `Buffer` instance of\nsize `Buffer.poolSize` that is used as a pool for the fast allocation of new\n`Buffer` instances created using `Buffer.allocUnsafe(size)` (and the deprecated\n`new Buffer(size)` constructor) only when `size` is less than or equal to\n`Buffer.poolSize >> 1` (floor of `Buffer.poolSize` divided by two). The default\nvalue of `Buffer.poolSize` is `8192` but can be modified.\n\nUse of this pre-allocated internal memory pool is a key difference between\ncalling `Buffer.alloc(size, fill)` vs. `Buffer.allocUnsafe(size).fill(fill)`.\nSpecifically, `Buffer.alloc(size, fill)` will *never* use the internal Buffer\npool, while `Buffer.allocUnsafe(size).fill(fill)` *will* use the internal\nBuffer pool if `size` is less than or equal to half `Buffer.poolSize`. The\ndifference is subtle but can be important when an application requires the\nadditional performance that `Buffer.allocUnsafe(size)` provides.\n\n### Class Method: Buffer.allocUnsafeSlow(size)\n<!-- YAML\nadded: v5.10.0\n-->\n\n* `size` {Number}\n\nAllocates a new *non-zero-filled* and non-pooled `Buffer` of `size` bytes.  The\n`size` must be less than or equal to the value of\n`require('buffer').kMaxLength` (on 64-bit architectures, `kMaxLength` is\n`(2^31)-1`). Otherwise, a [`RangeError`][] is thrown. A zero-length Buffer will\nbe created if a `size` less than or equal to 0 is specified.\n\nThe underlying memory for `Buffer` instances created in this way is *not\ninitialized*. The contents of the newly created `Buffer` are unknown and\n*may contain sensitive data*. Use [`buf.fill(0)`][] to initialize such\n`Buffer` instances to zeroes.\n\nWhen using `Buffer.allocUnsafe()` to allocate new `Buffer` instances,\nallocations under 4KB are, by default, sliced from a single pre-allocated\n`Buffer`. This allows applications to avoid the garbage collection overhead of\ncreating many individually allocated Buffers. This approach improves both\nperformance and memory usage by eliminating the need to track and cleanup as\nmany `Persistent` objects.\n\nHowever, in the case where a developer may need to retain a small chunk of\nmemory from a pool for an indeterminate amount of time, it may be appropriate\nto create an un-pooled Buffer instance using `Buffer.allocUnsafeSlow()` then\ncopy out the relevant bits.\n\n```js\n// need to keep around a few small chunks of memory\nconst store = [];\n\nsocket.on('readable', () => {\n  const data = socket.read();\n  // allocate for retained data\n  const sb = Buffer.allocUnsafeSlow(10);\n  // copy the data into the new allocation\n  data.copy(sb, 0, 0, 10);\n  store.push(sb);\n});\n```\n\nUse of `Buffer.allocUnsafeSlow()` should be used only as a last resort *after*\na developer has observed undue memory retention in their applications.\n\nA `TypeError` will be thrown if `size` is not a number.\n\n### All the Rest\n\nThe rest of the `Buffer` API is exactly the same as in node.js.\n[See the docs](https://nodejs.org/api/buffer.html).\n\n\n## Related links\n\n- [Node.js issue: Buffer(number) is unsafe](https://github.com/nodejs/node/issues/4660)\n- [Node.js Enhancement Proposal: Buffer.from/Buffer.alloc/Buffer.zalloc/Buffer() soft-deprecate](https://github.com/nodejs/node-eps/pull/4)\n\n## Why is `Buffer` unsafe?\n\nToday, the node.js `Buffer` constructor is overloaded to handle many different argument\ntypes like `String`, `Array`, `Object`, `TypedArrayView` (`Uint8Array`, etc.),\n`ArrayBuffer`, and also `Number`.\n\nThe API is optimized for convenience: you can throw any type at it, and it will try to do\nwhat you want.\n\nBecause the Buffer constructor is so powerful, you often see code like this:\n\n```js\n// Convert UTF-8 strings to hex\nfunction toHex (str) {\n  return new Buffer(str).toString('hex')\n}\n```\n\n***But what happens if `toHex` is called with a `Number` argument?***\n\n### Remote Memory Disclosure\n\nIf an attacker can make your program call the `Buffer` constructor with a `Number`\nargument, then they can make it allocate uninitialized memory from the node.js process.\nThis could potentially disclose TLS private keys, user data, or database passwords.\n\nWhen the `Buffer` constructor is passed a `Number` argument, it returns an\n**UNINITIALIZED** block of memory of the specified `size`. When you create a `Buffer` like\nthis, you **MUST** overwrite the contents before returning it to the user.\n\nFrom the [node.js docs](https://nodejs.org/api/buffer.html#buffer_new_buffer_size):\n\n> `new Buffer(size)`\n>\n> - `size` Number\n>\n> The underlying memory for `Buffer` instances created in this way is not initialized.\n> **The contents of a newly created `Buffer` are unknown and could contain sensitive\n> data.** Use `buf.fill(0)` to initialize a Buffer to zeroes.\n\n(Emphasis our own.)\n\nWhenever the programmer intended to create an uninitialized `Buffer` you often see code\nlike this:\n\n```js\nvar buf = new Buffer(16)\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### Would this ever be a problem in real code?\n\nYes. It's surprisingly common to forget to check the type of your variables in a\ndynamically-typed language like JavaScript.\n\nUsually the consequences of assuming the wrong type is that your program crashes with an\nuncaught exception. But the failure mode for forgetting to check the type of arguments to\nthe `Buffer` constructor is more catastrophic.\n\nHere's an example of a vulnerable service that takes a JSON payload and converts it to\nhex:\n\n```js\n// Take a JSON payload {str: \"some string\"} and convert it to hex\nvar server = http.createServer(function (req, res) {\n  var data = ''\n  req.setEncoding('utf8')\n  req.on('data', function (chunk) {\n    data += chunk\n  })\n  req.on('end', function () {\n    var body = JSON.parse(data)\n    res.end(new Buffer(body.str).toString('hex'))\n  })\n})\n\nserver.listen(8080)\n```\n\nIn this example, an http client just has to send:\n\n```json\n{\n  \"str\": 1000\n}\n```\n\nand it will get back 1,000 bytes of uninitialized memory from the server.\n\nThis is a very serious bug. It's similar in severity to the\n[the Heartbleed bug](http://heartbleed.com/) that allowed disclosure of OpenSSL process\nmemory by remote attackers.\n\n\n### Which real-world packages were vulnerable?\n\n#### [`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht)\n\n[Mathias Buus](https://github.com/mafintosh) and I\n([Feross Aboukhadijeh](http://feross.org/)) found this issue in one of our own packages,\n[`bittorrent-dht`](https://www.npmjs.com/package/bittorrent-dht). The bug would allow\nanyone on the internet to send a series of messages to a user of `bittorrent-dht` and get\nthem to reveal 20 bytes at a time of uninitialized memory from the node.js process.\n\nHere's\n[the commit](https://github.com/feross/bittorrent-dht/commit/6c7da04025d5633699800a99ec3fbadf70ad35b8)\nthat fixed it. We released a new fixed version, created a\n[Node Security Project disclosure](https://nodesecurity.io/advisories/68), and deprecated all\nvulnerable versions on npm so users will get a warning to upgrade to a newer version.\n\n#### [`ws`](https://www.npmjs.com/package/ws)\n\nThat got us wondering if there were other vulnerable packages. Sure enough, within a short\nperiod of time, we found the same issue in [`ws`](https://www.npmjs.com/package/ws), the\nmost popular WebSocket implementation in node.js.\n\nIf certain APIs were called with `Number` parameters instead of `String` or `Buffer` as\nexpected, then uninitialized server memory would be disclosed to the remote peer.\n\nThese were the vulnerable methods:\n\n```js\nsocket.send(number)\nsocket.ping(number)\nsocket.pong(number)\n```\n\nHere's a vulnerable socket server with some echo functionality:\n\n```js\nserver.on('connection', function (socket) {\n  socket.on('message', function (message) {\n    message = JSON.parse(message)\n    if (message.type === 'echo') {\n      socket.send(message.data) // send back the user's message\n    }\n  })\n})\n```\n\n`socket.send(number)` called on the server, will disclose server memory.\n\nHere's [the release](https://github.com/websockets/ws/releases/tag/1.0.1) where the issue\nwas fixed, with a more detailed explanation. Props to\n[Arnout Kazemier](https://github.com/3rd-Eden) for the quick fix. Here's the\n[Node Security Project disclosure](https://nodesecurity.io/advisories/67).\n\n\n### What's the solution?\n\nIt's important that node.js offers a fast way to get memory otherwise performance-critical\napplications would needlessly get a lot slower.\n\nBut we need a better way to *signal our intent* as programmers. **When we want\nuninitialized memory, we should request it explicitly.**\n\nSensitive functionality should not be packed into a developer-friendly API that loosely\naccepts many different types. This type of API encourages the lazy practice of passing\nvariables in without checking the type very carefully.\n\n#### A new API: `Buffer.allocUnsafe(number)`\n\nThe functionality of creating buffers with uninitialized memory should be part of another\nAPI. We propose `Buffer.allocUnsafe(number)`. This way, it's not part of an API that\nfrequently gets user input of all sorts of different types passed into it.\n\n```js\nvar buf = Buffer.allocUnsafe(16) // careful, uninitialized memory!\n\n// Immediately overwrite the uninitialized buffer with data from another buffer\nfor (var i = 0; i < buf.length; i++) {\n  buf[i] = otherBuf[i]\n}\n```\n\n\n### How do we fix node.js core?\n\nWe sent [a PR to node.js core](https://github.com/nodejs/node/pull/4514) (merged as\n`semver-major`) which defends against one case:\n\n```js\nvar str = 16\nnew Buffer(str, 'utf8')\n```\n\nIn this situation, it's implied that the programmer intended the first argument to be a\nstring, since they passed an encoding as a second argument. Today, node.js will allocate\nuninitialized memory in the case of `new Buffer(number, encoding)`, which is probably not\nwhat the programmer intended.\n\nBut this is only a partial solution, since if the programmer does `new Buffer(variable)`\n(without an `encoding` parameter) there's no way to know what they intended. If `variable`\nis sometimes a number, then uninitialized memory will sometimes be returned.\n\n### What's the real long-term fix?\n\nWe could deprecate and remove `new Buffer(number)` and use `Buffer.allocUnsafe(number)` when\nwe need uninitialized memory. But that would break 1000s of packages.\n\n~~We believe the best solution is to:~~\n\n~~1. Change `new Buffer(number)` to return safe, zeroed-out memory~~\n\n~~2. Create a new API for creating uninitialized Buffers. We propose: `Buffer.allocUnsafe(number)`~~\n\n#### Update\n\nWe now support adding three new APIs:\n\n- `Buffer.from(value)` - convert from any type to a buffer\n- `Buffer.alloc(size)` - create a zero-filled buffer\n- `Buffer.allocUnsafe(size)` - create an uninitialized buffer with given size\n\nThis solves the core problem that affected `ws` and `bittorrent-dht` which is\n`Buffer(variable)` getting tricked into taking a number argument.\n\nThis way, existing code continues working and the impact on the npm ecosystem will be\nminimal. Over time, npm maintainers can migrate performance-critical code to use\n`Buffer.allocUnsafe(number)` instead of `new Buffer(number)`.\n\n\n### Conclusion\n\nWe think there's a serious design issue with the `Buffer` API as it exists today. It\npromotes insecure software by putting high-risk functionality into a convenient API\nwith friendly \"developer ergonomics\".\n\nThis wasn't merely a theoretical exercise because we found the issue in some of the\nmost popular npm packages.\n\nFortunately, there's an easy fix that can be applied today. Use `safe-buffer` in place of\n`buffer`.\n\n```js\nvar Buffer = require('safe-buffer').Buffer\n```\n\nEventually, we hope that node.js core can switch to this new, safer behavior. We believe\nthe impact on the ecosystem would be minimal since it's not a breaking change.\nWell-maintained, popular packages would be updated to use `Buffer.alloc` quickly, while\nolder, insecure packages would magically become safe from this attack vector.\n\n\n## links\n\n- [Node.js PR: buffer: throw if both length and enc are passed](https://github.com/nodejs/node/pull/4514)\n- [Node Security Project disclosure for `ws`](https://nodesecurity.io/advisories/67)\n- [Node Security Project disclosure for`bittorrent-dht`](https://nodesecurity.io/advisories/68)\n\n\n## credit\n\nThe original issues in `bittorrent-dht`\n([disclosure](https://nodesecurity.io/advisories/68)) and\n`ws` ([disclosure](https://nodesecurity.io/advisories/67)) were discovered by\n[Mathias Buus](https://github.com/mafintosh) and\n[Feross Aboukhadijeh](http://feross.org/).\n\nThanks to [Adam Baldwin](https://github.com/evilpacket) for helping disclose these issues\nand for his work running the [Node Security Project](https://nodesecurity.io/).\n\nThanks to [John Hiesey](https://github.com/jhiesey) for proofreading this README and\nauditing the code.\n\n\n## license\n\nMIT. Copyright (C) [Feross Aboukhadijeh](http://feross.org)\n",
                      "readmeFilename": "README.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/safe-buffer",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "safe-buffer"
                    }
                  },
                  "deprecated": false,
                  "description": "The string_decoder module from Node core",
                  "devDependencies": {
                    "babel-polyfill": "^6.23.0",
                    "tap": "~0.4.8"
                  },
                  "homepage": "https://github.com/rvagg/string_decoder",
                  "keywords": [
                    "string",
                    "decoder",
                    "browser",
                    "browserify"
                  ],
                  "license": "MIT",
                  "main": "lib/string_decoder.js",
                  "name": "string_decoder",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/rvagg/string_decoder.git"
                  },
                  "scripts": {
                    "test": "tap test/parallel/*.js && node test/verify-dependencies"
                  },
                  "version": "1.0.3",
                  "readme": "# string_decoder\n\n***Node-core v7.0.0 string_decoder for userland***\n\n\n[![NPM](https://nodei.co/npm/string_decoder.png?downloads=true&downloadRank=true)](https://nodei.co/npm/string_decoder/)\n[![NPM](https://nodei.co/npm-dl/string_decoder.png?&months=6&height=3)](https://nodei.co/npm/string_decoder/)\n\n\n```bash\nnpm install --save string_decoder\n```\n\n***Node-core string_decoderstring_decoder for userland***\n\nThis package is a mirror of the string_decoder implementation in Node-core.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v7.8.0/docs/api/).\n\nAs of version 1.0.0 **string_decoder** uses semantic versioning.\n\n## Previous versions\n\nPrevious version numbers match the versions found in Node core, e.g. 0.10.24 matches Node 0.10.24, likewise 0.11.10 matches Node 0.11.10.\n\n## Update\n\nThe *build/* directory contains a build script that will scrape the source from the [nodejs/node](https://github.com/nodejs/node) repo given a specific Node version.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "safe-buffer": "~5.1.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/string_decoder",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "util-deprecate": {
                  "_from": "util-deprecate@~1.0.1",
                  "_id": "util-deprecate@1.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=",
                  "_location": "/util-deprecate",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "util-deprecate@~1.0.1",
                    "name": "util-deprecate",
                    "escapedName": "util-deprecate",
                    "rawSpec": "~1.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~1.0.1"
                  },
                  "_requiredBy": [
                    "/readable-stream"
                  ],
                  "_resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
                  "_shasum": "450d4dc9fa70de732762fbd2d4a28981419a0ccf",
                  "_spec": "util-deprecate@~1.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
                  "author": {
                    "name": "Nathan Rajlich",
                    "email": "nathan@tootallnate.net",
                    "url": "http://n8.io/"
                  },
                  "browser": "browser.js",
                  "bugs": {
                    "url": "https://github.com/TooTallNate/util-deprecate/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "The Node.js `util.deprecate()` function with browser support",
                  "homepage": "https://github.com/TooTallNate/util-deprecate",
                  "keywords": [
                    "util",
                    "deprecate",
                    "browserify",
                    "browser",
                    "node"
                  ],
                  "license": "MIT",
                  "main": "node.js",
                  "name": "util-deprecate",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/TooTallNate/util-deprecate.git"
                  },
                  "scripts": {
                    "test": "echo \"Error: no test specified\" && exit 1"
                  },
                  "version": "1.0.2",
                  "readme": "util-deprecate\n==============\n### The Node.js `util.deprecate()` function with browser support\n\nIn Node.js, this module simply re-exports the `util.deprecate()` function.\n\nIn the web browser (i.e. via browserify), a browser-specific implementation\nof the `util.deprecate()` function is used.\n\n\n## API\n\nA `deprecate()` function is the only thing exposed by this module.\n\n``` javascript\n// setup:\nexports.foo = deprecate(foo, 'foo() is deprecated, use bar() instead');\n\n\n// users see:\nfoo();\n// foo() is deprecated, use bar() instead\nfoo();\nfoo();\n```\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 Nathan Rajlich <nathan@tootallnate.net>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "devDependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/util-deprecate",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Streams3, a user-land copy of the stream library from Node.js",
              "devDependencies": {
                "assert": "~1.4.0",
                "babel-polyfill": "^6.9.1",
                "buffer": "^4.9.0",
                "nyc": "^6.4.0",
                "tap": "~0.7.1",
                "tape": "~4.5.1",
                "zuul": "~3.10.0"
              },
              "homepage": "https://github.com/nodejs/readable-stream#readme",
              "keywords": [
                "readable",
                "stream",
                "pipe"
              ],
              "license": "MIT",
              "main": "readable.js",
              "name": "readable-stream",
              "nyc": {
                "include": [
                  "lib/**.js"
                ]
              },
              "repository": {
                "type": "git",
                "url": "git://github.com/nodejs/readable-stream.git"
              },
              "scripts": {
                "browser": "npm run write-zuul && zuul --browser-retries 2 -- test/browser.js",
                "cover": "nyc npm test",
                "local": "zuul --local 3000 --no-coverage -- test/browser.js",
                "report": "nyc report --reporter=lcov",
                "test": "tap test/parallel/*.js test/ours/*.js && node test/verify-dependencies.js",
                "write-zuul": "printf \"ui: tape\nbrowsers:\n  - name: $BROWSER_NAME\n    version: $BROWSER_VERSION\n\">.zuul.yml"
              },
              "version": "2.3.3",
              "readme": "# readable-stream\n\n***Node-core v8.1.3 streams for userland*** [![Build Status](https://travis-ci.org/nodejs/readable-stream.svg?branch=master)](https://travis-ci.org/nodejs/readable-stream)\n\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true&downloadRank=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png?&months=6&height=3)](https://nodei.co/npm/readable-stream/)\n\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/readable-stream.svg)](https://saucelabs.com/u/readable-stream)\n\n```bash\nnpm install --save readable-stream\n```\n\n***Node-core streams for userland***\n\nThis package is a mirror of the Streams2 and Streams3 implementations in\nNode-core.\n\nFull documentation may be found on the [Node.js website](https://nodejs.org/dist/v8.1.3/docs/api/stream.html).\n\nIf you want to guarantee a stable streams base, regardless of what version of\nNode you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *\"stream\"* module in Node-core, for background see [this blogpost](http://r.va.gg/2014/06/why-i-dont-use-nodes-core-stream-module.html).\n\nAs of version 2.0.0 **readable-stream** uses semantic versioning.\n\n# Streams Working Group\n\n`readable-stream` is maintained by the Streams Working Group, which\noversees the development and maintenance of the Streams API within\nNode.js. The responsibilities of the Streams Working Group include:\n\n* Addressing stream issues on the Node.js issue tracker.\n* Authoring and editing stream documentation within the Node.js project.\n* Reviewing changes to stream subclasses within the Node.js project.\n* Redirecting changes to streams from the Node.js project to this\n  project.\n* Assisting in the implementation of stream providers within Node.js.\n* Recommending versions of `readable-stream` to be included in Node.js.\n* Messaging about the future of streams to give the community advance\n  notice of changes.\n\n<a name=\"members\"></a>\n## Team Members\n\n* **Chris Dickinson** ([@chrisdickinson](https://github.com/chrisdickinson)) &lt;christopher.s.dickinson@gmail.com&gt;\n  - Release GPG key: 9554F04D7259F04124DE6B476D5A82AC7E37093B\n* **Calvin Metcalf** ([@calvinmetcalf](https://github.com/calvinmetcalf)) &lt;calvin.metcalf@gmail.com&gt;\n  - Release GPG key: F3EF5F62A87FC27A22E643F714CE4FF5015AA242\n* **Rod Vagg** ([@rvagg](https://github.com/rvagg)) &lt;rod@vagg.org&gt;\n  - Release GPG key: DD8F2338BAE7501E3DD5AC78C273792F7D83545D\n* **Sam Newman** ([@sonewman](https://github.com/sonewman)) &lt;newmansam@outlook.com&gt;\n* **Mathias Buus** ([@mafintosh](https://github.com/mafintosh)) &lt;mathiasbuus@gmail.com&gt;\n* **Domenic Denicola** ([@domenic](https://github.com/domenic)) &lt;d@domenic.me&gt;\n* **Matteo Collina** ([@mcollina](https://github.com/mcollina)) &lt;matteo.collina@gmail.com&gt;\n  - Release GPG key: 3ABC01543F22DD2239285CDD818674489FBC127E\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "core-util-is": "~1.0.0",
                "inherits": "~2.0.3",
                "isarray": "~1.0.0",
                "process-nextick-args": "~1.0.6",
                "safe-buffer": "~5.1.1",
                "string_decoder": "~1.0.3",
                "util-deprecate": "~1.0.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
              "error": "[Circular]",
              "extraneous": false
            },
            "typedarray": {
              "_from": "typedarray@^0.0.6",
              "_id": "typedarray@0.0.6",
              "_inBundle": false,
              "_integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=",
              "_location": "/typedarray",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "typedarray@^0.0.6",
                "name": "typedarray",
                "escapedName": "typedarray",
                "rawSpec": "^0.0.6",
                "saveSpec": "[Circular]",
                "fetchSpec": "^0.0.6"
              },
              "_requiredBy": [
                "/concat-stream"
              ],
              "_resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
              "_shasum": "867ac74e3864187b1d3d47d996a78ec5c8830777",
              "_spec": "typedarray@^0.0.6",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/concat-stream",
              "author": {
                "name": "James Halliday",
                "email": "mail@substack.net",
                "url": "http://substack.net"
              },
              "bugs": {
                "url": "https://github.com/substack/typedarray/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "TypedArray polyfill for old browsers",
              "devDependencies": {
                "tape": "~2.3.2"
              },
              "homepage": "https://github.com/substack/typedarray",
              "keywords": [
                "ArrayBuffer",
                "DataView",
                "Float32Array",
                "Float64Array",
                "Int8Array",
                "Int16Array",
                "Int32Array",
                "Uint8Array",
                "Uint8ClampedArray",
                "Uint16Array",
                "Uint32Array",
                "typed",
                "array",
                "polyfill"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "typedarray",
              "repository": {
                "type": "git",
                "url": "git://github.com/substack/typedarray.git"
              },
              "scripts": {
                "test": "tape test/*.js test/server/*.js"
              },
              "testling": {
                "files": "test/*.js",
                "browsers": [
                  "ie/6..latest",
                  "firefox/16..latest",
                  "firefox/nightly",
                  "chrome/22..latest",
                  "chrome/canary",
                  "opera/12..latest",
                  "opera/next",
                  "safari/5.1..latest",
                  "ipad/6.0..latest",
                  "iphone/6.0..latest",
                  "android-browser/4.2..latest"
                ]
              },
              "version": "0.0.6",
              "readme": "# typedarray\n\nTypedArray polyfill ripped from [this\nmodule](https://raw.github.com/inexorabletash/polyfill).\n\n[![build status](https://secure.travis-ci.org/substack/typedarray.png)](http://travis-ci.org/substack/typedarray)\n\n[![testling badge](https://ci.testling.com/substack/typedarray.png)](https://ci.testling.com/substack/typedarray)\n\n# example\n\n``` js\nvar Uint8Array = require('typedarray').Uint8Array;\nvar ua = new Uint8Array(5);\nua[1] = 256 + 55;\nconsole.log(ua[1]);\n```\n\noutput:\n\n```\n55\n```\n\n# methods\n\n``` js\nvar TA = require('typedarray')\n```\n\nThe `TA` object has the following constructors:\n\n* TA.ArrayBuffer\n* TA.DataView\n* TA.Float32Array\n* TA.Float64Array\n* TA.Int8Array\n* TA.Int16Array\n* TA.Int32Array\n* TA.Uint8Array\n* TA.Uint8ClampedArray\n* TA.Uint16Array\n* TA.Uint32Array\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install typedarray\n```\n\nTo use this module in the browser, compile with\n[browserify](http://browserify.org)\nor download a UMD build from browserify CDN:\n\nhttp://wzrd.in/standalone/typedarray@latest\n\n# license\n\nMIT\n",
              "readmeFilename": "readme.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/typedarray",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "writable stream that concatenates strings or binary data and calls a callback with the result",
          "devDependencies": {
            "tape": "^4.6.3"
          },
          "engines": [
            "node >= 0.8"
          ],
          "files": [
            "index.js"
          ],
          "homepage": "https://github.com/maxogden/concat-stream#readme",
          "license": "MIT",
          "main": "index.js",
          "name": "concat-stream",
          "repository": {
            "type": "git",
            "url": "git+ssh://git@github.com/maxogden/concat-stream.git"
          },
          "scripts": {
            "test": "tape test/*.js test/server/*.js"
          },
          "tags": [
            "stream",
            "simple",
            "util",
            "utility"
          ],
          "testling": {
            "files": "test/*.js",
            "browsers": [
              "ie/8..latest",
              "firefox/17..latest",
              "firefox/nightly",
              "chrome/22..latest",
              "chrome/canary",
              "opera/12..latest",
              "opera/next",
              "safari/5.1..latest",
              "ipad/6.0..latest",
              "iphone/6.0..latest",
              "android-browser/4.2..latest"
            ]
          },
          "version": "1.6.0",
          "readme": "# concat-stream\n\nWritable stream that concatenates all the data from a stream and calls a callback with the result. Use this when you want to collect all the data from a stream into a single buffer.\n\n[![Build Status](https://travis-ci.org/maxogden/concat-stream.svg?branch=master)](https://travis-ci.org/maxogden/concat-stream)\n\n[![NPM](https://nodei.co/npm/concat-stream.png)](https://nodei.co/npm/concat-stream/)\n\n### description\n\nStreams emit many buffers. If you want to collect all of the buffers, and when the stream ends concatenate all of the buffers together and receive a single buffer then this is the module for you.\n\nOnly use this if you know you can fit all of the output of your stream into a single Buffer (e.g. in RAM).\n\nThere are also `objectMode` streams that emit things other than Buffers, and you can concatenate these too. See below for details.\n\n## Related\n\n`concat-stream` is part of the [mississippi stream utility collection](https://github.com/maxogden/mississippi) which includes more useful stream modules similar to this one.\n\n### examples\n\n#### Buffers\n\n```js\nvar fs = require('fs')\nvar concat = require('concat-stream')\n\nvar readStream = fs.createReadStream('cat.png')\nvar concatStream = concat(gotPicture)\n\nreadStream.on('error', handleError)\nreadStream.pipe(concatStream)\n\nfunction gotPicture(imageBuffer) {\n  // imageBuffer is all of `cat.png` as a node.js Buffer\n}\n\nfunction handleError(err) {\n  // handle your error appropriately here, e.g.:\n  console.error(err) // print the error to STDERR\n  process.exit(1) // exit program with non-zero exit code\n}\n\n```\n\n#### Arrays\n\n```js\nvar write = concat(function(data) {})\nwrite.write([1,2,3])\nwrite.write([4,5,6])\nwrite.end()\n// data will be [1,2,3,4,5,6] in the above callback\n```\n\n#### Uint8Arrays\n\n```js\nvar write = concat(function(data) {})\nvar a = new Uint8Array(3)\na[0] = 97; a[1] = 98; a[2] = 99\nwrite.write(a)\nwrite.write('!')\nwrite.end(Buffer('!!1'))\n```\n\nSee `test/` for more examples\n\n# methods\n\n```js\nvar concat = require('concat-stream')\n```\n\n## var writable = concat(opts={}, cb)\n\nReturn a `writable` stream that will fire `cb(data)` with all of the data that\nwas written to the stream. Data can be written to `writable` as strings,\nBuffers, arrays of byte integers, and Uint8Arrays. \n\nBy default `concat-stream` will give you back the same data type as the type of the first buffer written to the stream. Use `opts.encoding` to set what format `data` should be returned as, e.g. if you if you don't want to rely on the built-in type checking or for some other reason.\n\n* `string` - get a string\n* `buffer` - get back a Buffer\n* `array` - get an array of byte integers\n* `uint8array`, `u8`, `uint8` - get back a Uint8Array\n* `object`, get back an array of Objects\n\nIf you don't specify an encoding, and the types can't be inferred (e.g. you write things that aren't in the list above), it will try to convert concat them into a `Buffer`.\n\nIf nothing is written to `writable` then `data` will be an empty array `[]`.\n\n# error handling\n\n`concat-stream` does not handle errors for you, so you must handle errors on whatever streams you pipe into `concat-stream`. This is a general rule when programming with node.js streams: always handle errors on each and every stream. Since `concat-stream` is not itself a stream it does not emit errors.\n\nWe recommend using [`end-of-stream`](https://npmjs.org/end-of-stream) or [`pump`](https://npmjs.org/pump) for writing error tolerant stream code.\n\n# license\n\nMIT LICENSE\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "inherits": "^2.0.3",
            "readable-stream": "^2.2.2",
            "typedarray": "^0.0.6"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/concat-stream",
          "error": "[Circular]",
          "extraneous": false
        },
        "debug": {
          "_from": "debug@^2.1.1",
          "_id": "debug@2.6.8",
          "_inBundle": false,
          "_integrity": "sha1-5zFTHKLt4n0YgiJCfaF4IdaP9Pw=",
          "_location": "/debug",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "debug@^2.1.1",
            "name": "debug",
            "escapedName": "debug",
            "rawSpec": "^2.1.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "^2.1.1"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/debug/-/debug-2.6.8.tgz",
          "_shasum": "e731531ca2ede27d188222427da17821d68ff4fc",
          "_spec": "debug@^2.1.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "TJ Holowaychuk",
            "email": "tj@vision-media.ca"
          },
          "browser": "./src/browser.js",
          "bugs": {
            "url": "https://github.com/visionmedia/debug/issues"
          },
          "bundleDependencies": false,
          "component": {
            "scripts": {
              "debug/index.js": "browser.js",
              "debug/debug.js": "debug.js"
            }
          },
          "contributors": [
            {
              "name": "Nathan Rajlich",
              "email": "nathan@tootallnate.net",
              "url": "http://n8.io"
            },
            {
              "name": "Andrew Rhyne",
              "email": "rhyneandrew@gmail.com"
            }
          ],
          "dependencies": {
            "ms": {
              "_from": "ms@2.0.0",
              "_id": "ms@2.0.0",
              "_inBundle": false,
              "_integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",
              "_location": "/ms",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "ms@2.0.0",
                "name": "ms",
                "escapedName": "ms",
                "rawSpec": "2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "2.0.0"
              },
              "_requiredBy": [
                "/debug"
              ],
              "_resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
              "_shasum": "5608aeadfc00be6c2901df5f9861788de0d597c8",
              "_spec": "ms@2.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/debug",
              "bugs": {
                "url": "https://github.com/zeit/ms/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Tiny milisecond conversion utility",
              "devDependencies": {
                "eslint": "3.19.0",
                "expect.js": "0.3.1",
                "husky": "0.13.3",
                "lint-staged": "3.4.1",
                "mocha": "3.4.1"
              },
              "eslintConfig": {
                "extends": "eslint:recommended",
                "env": {
                  "node": true,
                  "es6": true
                }
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/zeit/ms#readme",
              "license": "MIT",
              "lint-staged": {
                "*.js": [
                  "npm run lint",
                  "prettier --single-quote --write",
                  "git add"
                ]
              },
              "main": "./index",
              "name": "ms",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/zeit/ms.git"
              },
              "scripts": {
                "lint": "eslint lib/* bin/*",
                "precommit": "lint-staged",
                "test": "mocha tests.js"
              },
              "version": "2.0.0",
              "readme": "# ms\n\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\n[![Slack Channel](http://zeit-slackin.now.sh/badge.svg)](https://zeit.chat/)\n\nUse this package to easily convert various time formats to milliseconds.\n\n## Examples\n\n```js\nms('2 days')  // 172800000\nms('1d')      // 86400000\nms('10h')     // 36000000\nms('2.5 hrs') // 9000000\nms('2h')      // 7200000\nms('1m')      // 60000\nms('5s')      // 5000\nms('1y')      // 31557600000\nms('100')     // 100\n```\n\n### Convert from milliseconds\n\n```js\nms(60000)             // \"1m\"\nms(2 * 60000)         // \"2m\"\nms(ms('10 hours'))    // \"10h\"\n```\n\n### Time format written-out\n\n```js\nms(60000, { long: true })             // \"1 minute\"\nms(2 * 60000, { long: true })         // \"2 minutes\"\nms(ms('10 hours'), { long: true })    // \"10 hours\"\n```\n\n## Features\n\n- Works both in [node](https://nodejs.org) and in the browser.\n- If a number is supplied to `ms`, a string with a unit is returned.\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`).\n- If you pass a string with a number and a valid unit, the number of equivalent ms is returned.\n\n## Caught a bug?\n\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\n2. Link the package to the global module directory: `npm link`\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, node will now use your clone of ms!\n\nAs always, you can run the tests using: `npm test`\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ms",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "small debugging utility",
          "devDependencies": {
            "browserify": "9.0.3",
            "chai": "^3.5.0",
            "concurrently": "^3.1.0",
            "coveralls": "^2.11.15",
            "eslint": "^3.12.1",
            "istanbul": "^0.4.5",
            "karma": "^1.3.0",
            "karma-chai": "^0.1.0",
            "karma-mocha": "^1.3.0",
            "karma-phantomjs-launcher": "^1.0.2",
            "karma-sinon": "^1.0.5",
            "mocha": "^3.2.0",
            "mocha-lcov-reporter": "^1.2.0",
            "rimraf": "^2.5.4",
            "sinon": "^1.17.6",
            "sinon-chai": "^2.8.0"
          },
          "homepage": "https://github.com/visionmedia/debug#readme",
          "keywords": [
            "debug",
            "log",
            "debugger"
          ],
          "license": "MIT",
          "main": "./src/index.js",
          "name": "debug",
          "repository": {
            "type": "git",
            "url": "git://github.com/visionmedia/debug.git"
          },
          "version": "2.6.8",
          "readme": "# debug\n[![Build Status](https://travis-ci.org/visionmedia/debug.svg?branch=master)](https://travis-ci.org/visionmedia/debug)  [![Coverage Status](https://coveralls.io/repos/github/visionmedia/debug/badge.svg?branch=master)](https://coveralls.io/github/visionmedia/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers) \n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\n\n\n\nA tiny node.js debugging utility modelled after node core's debugging technique.\n\n**Discussion around the V3 API is under way [here](https://github.com/visionmedia/debug/issues/370)**\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\n\nExample _app.js_:\n\n```js\nvar debug = require('debug')('http')\n  , http = require('http')\n  , name = 'My App';\n\n// fake app\n\ndebug('booting %s', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + ' ' + req.url);\n  res.end('hello\\n');\n}).listen(3000, function(){\n  debug('listening');\n});\n\n// fake worker of some kind\n\nrequire('./worker');\n```\n\nExample _worker.js_:\n\n```js\nvar debug = require('debug')('worker');\n\nsetInterval(function(){\n  debug('doing some work');\n}, 1000);\n```\n\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\n\n  ![debug http and worker](http://f.cl.ly/items/18471z1H402O24072r1J/Screenshot.png)\n\n  ![debug worker](http://f.cl.ly/items/1X413v1a3M0d3C2c1E0i/Screenshot.png)\n\n#### Windows note\n\n On Windows the environment variable is set using the `set` command.\n\n ```cmd\n set DEBUG=*,-not_this\n ```\n\n Note that PowerShell uses different syntax to set environment variables.\n\n ```cmd\n $env:DEBUG = \"*,-not_this\"\n  ```\n\nThen, run the program to be debugged as usual.\n\n## Millisecond diff\n\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\n\n  ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)\n\n  When stdout is not a TTY, `Date#toUTCString()` is used, making it more useful for logging the debug information as shown below:\n\n  ![](http://f.cl.ly/items/112H3i0e0o0P0a2Q2r11/Screenshot.png)\n\n## Conventions\n\n  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".\n\n## Wildcards\n\n  The `*` character may be used as a wildcard. Suppose for example your library has debuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\", instead of listing all three with `DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\n  You can also exclude specific debuggers by prefixing them with a \"-\" character.  For example, `DEBUG=*,-connect:*` would include all debuggers except those starting with \"connect:\".\n\n## Environment Variables\n\n  When running through Node.js, you can set a few environment variables that will\n  change the behavior of the debug logging:\n\n| Name      | Purpose                                         |\n|-----------|-------------------------------------------------|\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\n| `DEBUG_DEPTH` | Object inspection depth. |\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\n\n\n  __Note:__ The environment variables beginning with `DEBUG_` end up being\n  converted into an Options object that gets used with `%o`/`%O` formatters.\n  See the Node.js documentation for\n  [`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\n  for the complete list.\n\n## Formatters\n\n\n  Debug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting. Below are the officially supported formatters:\n\n| Formatter | Representation |\n|-----------|----------------|\n| `%O`      | Pretty-print an Object on multiple lines. |\n| `%o`      | Pretty-print an Object all on a single line. |\n| `%s`      | String. |\n| `%d`      | Number (both integer and float). |\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\n\n### Custom formatters\n\n  You can add custom formatters by extending the `debug.formatters` object. For example, if you wanted to add support for rendering a Buffer as hex with `%h`, you could do something like:\n\n```js\nconst createDebug = require('debug')\ncreateDebug.formatters.h = (v) => {\n  return v.toString('hex')\n}\n\n// â¦elsewhere\nconst debug = createDebug('foo')\ndebug('this is hex: %h', new Buffer('hello world'))\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\n```\n\n## Browser support\n  You can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\n  or just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\n  if you don't want to build it yourself.\n\n  Debug's enable state is currently persisted by `localStorage`.\n  Consider the situation shown below where you have `worker:a` and `worker:b`,\n  and wish to debug both. You can enable this using `localStorage.debug`:\n\n```js\nlocalStorage.debug = 'worker:*'\n```\n\nAnd then refresh the page.\n\n```js\na = debug('worker:a');\nb = debug('worker:b');\n\nsetInterval(function(){\n  a('doing some work');\n}, 1000);\n\nsetInterval(function(){\n  b('doing some work');\n}, 1200);\n```\n\n#### Web Inspector Colors\n\n  Colors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\n  option. These are WebKit web inspectors, Firefox ([since version\n  31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\n  and the Firebug plugin for Firefox (any version).\n\n  Colored output looks something like:\n\n  ![](https://cloud.githubusercontent.com/assets/71256/3139768/b98c5fd8-e8ef-11e3-862a-f7253b6f47c6.png)\n\n\n## Output streams\n\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\n\nExample _stdout.js_:\n\n```js\nvar debug = require('debug');\nvar error = debug('app:error');\n\n// by default stderr is used\nerror('goes to stderr!');\n\nvar log = debug('app:log');\n// set this namespace to log via console.log\nlog.log = console.log.bind(console); // don't forget to bind to console!\nlog('goes to stdout');\nerror('still goes to stderr!');\n\n// set all output to go via console.info\n// overrides all per-namespace log settings\ndebug.log = console.info.bind(console);\nerror('now goes to stdout via console.info');\nlog('still goes to stdout, but via console.info now');\n```\n\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n - Andrew Rhyne\n \n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\n\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\n\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2016 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "ms": "2.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/debug",
          "error": "[Circular]",
          "extraneous": false
        },
        "doctrine": {
          "_from": "doctrine@^1.2.2",
          "_id": "doctrine@1.5.0",
          "_inBundle": false,
          "_integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",
          "_location": "/doctrine",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "doctrine@^1.2.2",
            "name": "doctrine",
            "escapedName": "doctrine",
            "rawSpec": "^1.2.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.2.2"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.5.0.tgz",
          "_shasum": "379dce730f6166f76cefa4e6707a159b02c5a6fa",
          "_spec": "doctrine@^1.2.2",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "bugs": {
            "url": "https://github.com/eslint/doctrine/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "esutils": {
              "_from": "esutils@^2.0.2",
              "_id": "esutils@2.0.2",
              "_inBundle": false,
              "_integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
              "_location": "/esutils",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "esutils@^2.0.2",
                "name": "esutils",
                "escapedName": "esutils",
                "rawSpec": "^2.0.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.2"
              },
              "_requiredBy": [
                "/doctrine",
                "/eslint"
              ],
              "_resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
              "_shasum": "0abf4f1caa5bcb1f7a9d8acc6dea4faaa04bac9b",
              "_spec": "esutils@^2.0.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "bugs": {
                "url": "https://github.com/estools/esutils/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "utility box for ECMAScript language tools",
              "devDependencies": {
                "chai": "~1.7.2",
                "coffee-script": "~1.6.3",
                "jshint": "2.6.3",
                "mocha": "~2.2.1",
                "regenerate": "~1.2.1",
                "unicode-7.0.0": "^0.1.5"
              },
              "directories": {
                "lib": "./lib"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "LICENSE.BSD",
                "README.md",
                "lib"
              ],
              "homepage": "https://github.com/estools/esutils",
              "licenses": [
                {
                  "type": "BSD",
                  "url": "http://github.com/estools/esutils/raw/master/LICENSE.BSD"
                }
              ],
              "main": "lib/utils.js",
              "maintainers": [
                {
                  "name": "Yusuke Suzuki",
                  "email": "utatane.tea@gmail.com",
                  "url": "http://github.com/Constellation"
                }
              ],
              "name": "esutils",
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/estools/esutils.git"
              },
              "scripts": {
                "generate-regex": "node tools/generate-identifier-regex.js",
                "lint": "jshint lib/*.js",
                "test": "npm run-script lint && npm run-script unit-test",
                "unit-test": "mocha --compilers coffee:coffee-script -R spec"
              },
              "version": "2.0.2",
              "readme": "### esutils [![Build Status](https://secure.travis-ci.org/estools/esutils.svg)](http://travis-ci.org/estools/esutils)\nesutils ([esutils](http://github.com/estools/esutils)) is\nutility box for ECMAScript language tools.\n\n### API\n\n### ast\n\n#### ast.isExpression(node)\n\nReturns true if `node` is an Expression as defined in ECMA262 edition 5.1 section\n[11](https://es5.github.io/#x11).\n\n#### ast.isStatement(node)\n\nReturns true if `node` is a Statement as defined in ECMA262 edition 5.1 section\n[12](https://es5.github.io/#x12).\n\n#### ast.isIterationStatement(node)\n\nReturns true if `node` is an IterationStatement as defined in ECMA262 edition\n5.1 section [12.6](https://es5.github.io/#x12.6).\n\n#### ast.isSourceElement(node)\n\nReturns true if `node` is a SourceElement as defined in ECMA262 edition 5.1\nsection [14](https://es5.github.io/#x14).\n\n#### ast.trailingStatement(node)\n\nReturns `Statement?` if `node` has trailing `Statement`.\n```js\nif (cond)\n    consequent;\n```\nWhen taking this `IfStatement`, returns `consequent;` statement.\n\n#### ast.isProblematicIfStatement(node)\n\nReturns true if `node` is a problematic IfStatement. If `node` is a problematic `IfStatement`, `node` cannot be represented as an one on one JavaScript code.\n```js\n{\n    type: 'IfStatement',\n    consequent: {\n        type: 'WithStatement',\n        body: {\n            type: 'IfStatement',\n            consequent: {type: 'EmptyStatement'}\n        }\n    },\n    alternate: {type: 'EmptyStatement'}\n}\n```\nThe above node cannot be represented as a JavaScript code, since the top level `else` alternate belongs to an inner `IfStatement`.\n\n\n### code\n\n#### code.isDecimalDigit(code)\n\nReturn true if provided code is decimal digit.\n\n#### code.isHexDigit(code)\n\nReturn true if provided code is hexadecimal digit.\n\n#### code.isOctalDigit(code)\n\nReturn true if provided code is octal digit.\n\n#### code.isWhiteSpace(code)\n\nReturn true if provided code is white space. White space characters are formally defined in ECMA262.\n\n#### code.isLineTerminator(code)\n\nReturn true if provided code is line terminator. Line terminator characters are formally defined in ECMA262.\n\n#### code.isIdentifierStart(code)\n\nReturn true if provided code can be the first character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n#### code.isIdentifierPart(code)\n\nReturn true if provided code can be the trailing character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n### keyword\n\n#### keyword.isKeywordES5(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 5.1. They are formally defined in ECMA262 sections\n[7.6.1.1](http://es5.github.io/#x7.6.1.1) and [7.6.1.2](http://es5.github.io/#x7.6.1.2),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isKeywordES6(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 6. They are formally defined in ECMA262 sections\n[11.6.2.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-keywords) and\n[11.6.2.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-future-reserved-words),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isReservedWordES5(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 5.1.\nThey are formally defined in ECMA262 section [7.6.1](http://es5.github.io/#x7.6.1).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isReservedWordES6(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 6.\nThey are formally defined in ECMA262 section [11.6.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-reserved-words).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isRestrictedWord(id)\n\nReturns `true` if provided identifier string is one of `eval` or `arguments`.\nThey are restricted in strict mode code throughout ECMA262 edition 5.1 and\nin ECMA262 edition 6 section [12.1.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers-static-semantics-early-errors).\n\n#### keyword.isIdentifierName(id)\n\nReturn true if provided identifier string is an IdentifierName as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6).\n\n#### keyword.isIdentifierES5(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6). If the `strict`\nflag is truthy, this function additionally checks whether `id` is an Identifier\nunder strict mode.\n\n#### keyword.isIdentifierES6(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 6 section [12.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis an Identifier under strict mode.\n\n### License\n\nCopyright (C) 2013 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esutils",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "esutils"
            },
            "isarray": {
              "_from": "isarray@~1.0.0",
              "_id": "isarray@1.0.0",
              "_inBundle": false,
              "_integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=",
              "_location": "/isarray",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
              "_shasum": "bb935d48582cba168c06834957a54a3e07124f11",
              "_spec": "isarray@~1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readable-stream",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Array#isArray for older browsers",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/juliangruber/isarray",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "index.js",
              "name": "isarray",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "testling": "[Circular]",
              "version": "1.0.0",
              "readme": "\n# isarray\n\n`Array#isArray` for older browsers.\n\n[![build status](https://secure.travis-ci.org/juliangruber/isarray.svg)](http://travis-ci.org/juliangruber/isarray)\n[![downloads](https://img.shields.io/npm/dm/isarray.svg)](https://www.npmjs.org/package/isarray)\n\n[![browser support](https://ci.testling.com/juliangruber/isarray.png)\n](https://ci.testling.com/juliangruber/isarray)\n\n## Usage\n\n```js\nvar isArray = require('isarray');\n\nconsole.log(isArray([])); // => true\nconsole.log(isArray({})); // => false\n```\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install isarray\n```\n\nThen bundle for the browser with\n[browserify](https://github.com/substack/browserify).\n\nWith [component](http://component.io) do\n\n```bash\n$ component install juliangruber/isarray\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/isarray",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "JSDoc parser",
          "devDependencies": {
            "coveralls": "^2.11.2",
            "dateformat": "^1.0.11",
            "eslint": "^1.10.3",
            "eslint-release": "^0.10.0",
            "istanbul": "^0.4.1",
            "linefix": "^0.1.1",
            "mocha": "^2.3.3",
            "npm-license": "^0.3.1",
            "semver": "^5.0.3",
            "shelljs": "^0.5.3",
            "shelljs-nodecli": "^0.1.1",
            "should": "^5.0.1"
          },
          "directories": {
            "lib": "./lib"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "lib",
            "LICENSE.BSD",
            "LICENSE.closure-compiler",
            "LICENSE.esprima",
            "README.md"
          ],
          "homepage": "https://github.com/eslint/doctrine",
          "licenses": [
            {
              "type": "BSD",
              "url": "http://github.com/eslint/doctrine/raw/master/LICENSE.BSD"
            }
          ],
          "main": "lib/doctrine.js",
          "maintainers": [
            {
              "name": "Nicholas C. Zakas",
              "email": "nicholas+npm@nczconsulting.com",
              "url": "https://www.nczonline.net"
            },
            {
              "name": "Yusuke Suzuki",
              "email": "utatane.tea@gmail.com",
              "url": "https://github.com/Constellation"
            }
          ],
          "name": "doctrine",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/eslint/doctrine.git"
          },
          "scripts": {
            "alpharelease": "eslint-prerelease alpha",
            "betarelease": "eslint-prerelease beta",
            "ci-release": "eslint-ci-release",
            "lint": "eslint lib/",
            "release": "eslint-release",
            "test": "npm run lint && node Makefile.js test"
          },
          "version": "1.5.0",
          "readme": "[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Join the chat at https://gitter.im/eslint/doctrine](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eslint/doctrine?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# Doctrine\n\nDoctrine is a [JSDoc](http://usejsdoc.org) parser that parses documentation comments from JavaScript (you need to pass in the comment, not a whole JavaScript file).\n\n## Installation\n\nYou can install Doctrine using [npm](https://npmjs.com):\n\n```\n$ npm install doctrine --save-dev\n```\n\nDoctrine can also be used in web browsers using [Browserify](http://browserify.org).\n\n## Usage\n\nRequire doctrine inside of your JavaScript:\n\n```js\nvar doctrine = require(\"doctrine\");\n```\n\n### parse()\n\nThe primary method is `parse()`, which accepts two arguments: the JSDoc comment to parse and an optional options object. The available options are:\n\n* `unwrap` - set to `true` to delete the leading `/**`, any `*` that begins a line, and the trailing `*/` from the source text. Default: `false`.\n* `tags` - an array of tags to return. When specified, Doctrine returns only tags in this array. For example, if `tags` is `[\"param\"]`, then only `@param` tags will be returned. Default: `null`.\n* `recoverable` - set to `true` to keep parsing even when syntax errors occur. Default: `false`.\n* `sloppy` - set to `true` to allow optional parameters to be specified in brackets (`@param {string} [foo]`). Default: `false`.\n* `lineNumbers` - set to `true` to add `lineNumber` to each node, specifying the line on which the node is found in the source. Default: `false`.\n\nHere's a simple example:\n\n```js\nvar ast = doctrine.parse(\n    [\n        \"/**\",\n        \" * This function comment is parsed by doctrine\",\n        \" * @param {{ok:String}} userName\",\n        \"*/\"\n    ].join('\\n'), { unwrap: true });\n```\n\nThis example returns the following AST:\n\n    {\n        \"description\": \"This function comment is parsed by doctrine\",\n        \"tags\": [\n            {\n                \"title\": \"param\",\n                \"description\": null,\n                \"type\": {\n                    \"type\": \"RecordType\",\n                    \"fields\": [\n                        {\n                            \"type\": \"FieldType\",\n                            \"key\": \"ok\",\n                            \"value\": {\n                                \"type\": \"NameExpression\",\n                                \"name\": \"String\"\n                            }\n                        }\n                    ]\n                },\n                \"name\": \"userName\"\n            }\n        ]\n    }\n\nSee the [demo page](http://eslint.org/doctrine/demo/) more detail.\n\n## Team\n\nThese folks keep the project moving and are resources for help:\n\n* Nicholas C. Zakas ([@nzakas](https://github.com/nzakas)) - project lead\n* Yusuke Suzuki ([@constellation](https://github.com/constellation)) - reviewer\n\n## Contributing\n\nIssues and pull requests will be triaged and responded to as quickly as possible. We operate under the [ESLint Contributor Guidelines](http://eslint.org/docs/developer-guide/contributing), so please be sure to read them before contributing. If you're not sure where to dig in, check out the [issues](https://github.com/eslint/doctrine/issues).\n\n## Frequently Asked Questions\n\n### Can I pass a whole JavaScript file to Doctrine?\n\nNo. Doctrine can only parse JSDoc comments, so you'll need to pass just the JSDoc comment to Doctrine in order to work.\n\n\n### License\n\n#### doctrine\n\nCopyright (C) 2012 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#### esprima\n\nsome of functions is derived from esprima\n\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\n (twitter: [@ariyahidayat](http://twitter.com/ariyahidayat)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n#### closure-compiler\n\nsome of extensions is derived from closure-compiler\n\nApache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\n\n### Where to ask for help?\n\nJoin our [Chatroom](https://gitter.im/eslint/doctrine)\n\n[npm-image]: https://img.shields.io/npm/v/doctrine.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/doctrine\n[travis-image]: https://img.shields.io/travis/eslint/doctrine/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eslint/doctrine\n[coveralls-image]: https://img.shields.io/coveralls/eslint/doctrine/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/eslint/doctrine?branch=master\n[downloads-image]: http://img.shields.io/npm/dm/doctrine.svg?style=flat-square\n[downloads-url]: https://www.npmjs.com/package/doctrine\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "esutils": "^2.0.2",
            "isarray": "^1.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/doctrine",
          "error": "[Circular]",
          "extraneous": false
        },
        "es6-map": {
          "_from": "es6-map@^0.1.3",
          "_id": "es6-map@0.1.5",
          "_inBundle": false,
          "_integrity": "sha1-kTbgUD3MBqMBaQ8LsU/042TpSfA=",
          "_location": "/es6-map",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "es6-map@^0.1.3",
            "name": "es6-map",
            "escapedName": "es6-map",
            "rawSpec": "^0.1.3",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.1.3"
          },
          "_requiredBy": [
            "/escope",
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/es6-map/-/es6-map-0.1.5.tgz",
          "_shasum": "9136e0503dcc06a301690f0bb14ff4e364e949f0",
          "_spec": "es6-map@^0.1.3",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Mariusz Nowak",
            "email": "medyk@medikoo.com",
            "url": "http://www.medikoo.com/"
          },
          "bugs": {
            "url": "https://github.com/medikoo/es6-map/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "d": {
              "_from": "d@1",
              "_id": "d@1.0.0",
              "_inBundle": false,
              "_integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
              "_location": "/d",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "d@1",
                "name": "d",
                "escapedName": "d",
                "rawSpec": "1",
                "saveSpec": "[Circular]",
                "fetchSpec": "1"
              },
              "_requiredBy": [
                "/es6-iterator",
                "/es6-map",
                "/es6-set",
                "/es6-symbol",
                "/es6-weak-map",
                "/event-emitter"
              ],
              "_resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
              "_shasum": "754bb5bfe55451da69a58b94d45f4c5b0462d58f",
              "_spec": "d@1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
              "author": {
                "name": "Mariusz Nowak",
                "email": "medyk@medikoo.com",
                "url": "http://www.medikoo.com/"
              },
              "bugs": {
                "url": "https://github.com/medikoo/d/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "es5-ext": {
                  "_from": "es5-ext@~0.10.14",
                  "_id": "es5-ext@0.10.26",
                  "_inBundle": false,
                  "_integrity": "sha1-UbISilMbcMT2dkCTpzy+u4IYY3I=",
                  "_location": "/es5-ext",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "es5-ext@~0.10.14",
                    "name": "es5-ext",
                    "escapedName": "es5-ext",
                    "rawSpec": "~0.10.14",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~0.10.14"
                  },
                  "_requiredBy": [
                    "/d",
                    "/es6-iterator",
                    "/es6-map",
                    "/es6-set",
                    "/es6-symbol",
                    "/es6-weak-map",
                    "/event-emitter"
                  ],
                  "_resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.26.tgz",
                  "_shasum": "51b2128a531b70c4f6764093a73cbebb82186372",
                  "_spec": "es5-ext@~0.10.14",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": {
                    "name": "Mariusz Nowak",
                    "email": "medyk@medikoo.com",
                    "url": "http://www.medikoo.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/medikoo/es5-ext/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript extensions and shims",
                  "devDependencies": {
                    "eslint": "^4.2.0",
                    "eslint-config-medikoo-es5": "^1.4.1",
                    "tad": "~0.2.7"
                  },
                  "eslintConfig": {
                    "extends": "medikoo-es5",
                    "root": true,
                    "rules": {
                      "no-extend-native": "off"
                    }
                  },
                  "homepage": "https://github.com/medikoo/es5-ext#readme",
                  "keywords": [
                    "ecmascript",
                    "ecmascript5",
                    "ecmascript6",
                    "es5",
                    "es6",
                    "extensions",
                    "ext",
                    "addons",
                    "extras",
                    "harmony",
                    "javascript",
                    "polyfill",
                    "shim",
                    "util",
                    "utils",
                    "utilities"
                  ],
                  "license": "MIT",
                  "name": "es5-ext",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/medikoo/es5-ext.git"
                  },
                  "scripts": {
                    "lint": "eslint --ignore-path=.gitignore .",
                    "test": "node ./node_modules/tad/bin/tad"
                  },
                  "version": "0.10.26",
                  "readme": "# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, â¦fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([â¦items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([â¦lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.intersection([â¦lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, â¦valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, â¦args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, â¦args)(object, â¦args2)  =def  object\\[name\\]\\(â¦args, â¦args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWhether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([â¦fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(â¦args)  =def  f1(f2(f3(f4(â¦arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([â¦args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(â¦args)(â¦args2)  =def  f(â¦args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(â¦args)  =def !f(â¦args)_\n\n#### fn.partial([â¦args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(â¦args1)(â¦args2)  =def  f(â¦args1, â¦args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([â¦values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, â¦sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, â¦source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([â¦names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, â¦names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([â¦codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, â¦substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://img.shields.io/circleci/project/github/medikoo/es5-ext.svg)](https://circleci.com/gh/medikoo/es5-ext)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "es6-iterator": "2",
                    "es6-symbol": "~3.1"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es5-ext",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es5-ext"
                }
              },
              "deprecated": false,
              "description": "Property descriptor factory",
              "devDependencies": {
                "tad": "^0.2.4",
                "xlint": "^0.2.2",
                "xlint-jslint-medikoo": "^0.1.4"
              },
              "homepage": "https://github.com/medikoo/d#readme",
              "keywords": [
                "descriptor",
                "es",
                "ecmascript",
                "ecma",
                "property",
                "descriptors",
                "meta",
                "properties"
              ],
              "license": "MIT",
              "name": "d",
              "repository": {
                "type": "git",
                "url": "git://github.com/medikoo/d.git"
              },
              "scripts": {
                "lint": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream",
                "lint-console": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch",
                "test": "node node_modules/tad/bin/tad"
              },
              "version": "1.0.0",
              "readme": "# D\n## Property descriptor factory\n\n_Originally derived from [es5-ext](https://github.com/medikoo/es5-ext) package._\n\nDefining properties with descriptors is very verbose:\n\n```javascript\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  withdraw: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  balance: { get: function () {\n      /* ... */\n    }, configurable: true, enumerable: false }\n});\n```\n\nD cuts that to:\n\n```javascript\nvar d = require('d');\n\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: d(function () {\n    /* ... */\n  }),\n  withdraw: d(function () {\n    /* ... */\n  }),\n  balance: d.gs(function () {\n    /* ... */\n  })\n});\n```\n\nBy default, created descriptor follow characteristics of native ES5 properties, and defines values as:\n\n```javascript\n{ configurable: true, enumerable: false, writable: true }\n```\n\nYou can overwrite it by preceding _value_ argument with instruction:\n```javascript\nd('c', value); // { configurable: true, enumerable: false, writable: false }\nd('ce', value); // { configurable: true, enumerable: true, writable: false }\nd('e', value); // { configurable: false, enumerable: true, writable: false }\n\n// Same way for get/set:\nd.gs('e', value); // { configurable: false, enumerable: true }\n```\n\n### Installation\n\n\t$ npm install d\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Other utilities\n\n#### autoBind(obj, props) _(d/auto-bind)_\n\nDefine methods which will be automatically bound to its instances\n\n```javascript\nvar d = require('d');\nvar autoBind = require('d/auto-bind');\n\nvar Foo = function () { this._count = 0; };\nObject.defineProperties(Foo.prototype, autoBind({\n  increment: d(function () { ++this._count; });\n}));\n\nvar foo = new Foo();\n\n// Increment foo counter on each domEl click\ndomEl.addEventListener('click', foo.increment, false);\n```\n\n#### lazy(obj, props) _(d/lazy)_\n\nDefine lazy properties, which will be resolved on first access\n\n```javascript\nvar d = require('d');\nvar lazy = require('d/lazy');\n\nvar Foo = function () {};\nObject.defineProperties(Foo.prototype, lazy({\n  items: d(function () { return []; })\n}));\n\nvar foo = new Foo();\nfoo.items.push(1, 2); // foo.items array created and defined directly on foo\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/d.png)](https://travis-ci.org/medikoo/d)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "es5-ext": "^0.10.9"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/d",
              "error": "[Circular]",
              "extraneous": false
            },
            "es5-ext": {
              "_from": "es5-ext@~0.10.14",
              "_id": "es5-ext@0.10.26",
              "_inBundle": false,
              "_integrity": "sha1-UbISilMbcMT2dkCTpzy+u4IYY3I=",
              "_location": "/es5-ext",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.26.tgz",
              "_shasum": "51b2128a531b70c4f6764093a73cbebb82186372",
              "_spec": "es5-ext@~0.10.14",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "es6-iterator": {
                  "_from": "es6-iterator@~2.0.1",
                  "_id": "es6-iterator@2.0.1",
                  "_inBundle": false,
                  "_integrity": "sha1-jjGcnwRTv1ddN0lAplWSDlnKVRI=",
                  "_location": "/es6-iterator",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "es6-iterator@~2.0.1",
                    "name": "es6-iterator",
                    "escapedName": "es6-iterator",
                    "rawSpec": "~2.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~2.0.1"
                  },
                  "_requiredBy": [
                    "/es5-ext",
                    "/es6-map",
                    "/es6-set",
                    "/es6-weak-map"
                  ],
                  "_resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.1.tgz",
                  "_shasum": "8e319c9f0453bf575d374940a655920e59ca5512",
                  "_spec": "es6-iterator@~2.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": {
                    "name": "Mariusz Nowak",
                    "email": "medyk@medikoo.com",
                    "url": "http://www.medikoo.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/medikoo/es6-iterator/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Iterator abstraction based on ES6 specification",
                  "devDependencies": {
                    "event-emitter": "^0.3.4",
                    "tad": "^0.2.7",
                    "xlint": "^0.2.2",
                    "xlint-jslint-medikoo": "^0.1.4"
                  },
                  "homepage": "https://github.com/medikoo/es6-iterator#readme",
                  "keywords": [
                    "iterator",
                    "array",
                    "list",
                    "set",
                    "map",
                    "generator"
                  ],
                  "license": "MIT",
                  "name": "es6-iterator",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/medikoo/es6-iterator.git"
                  },
                  "scripts": {
                    "lint": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream",
                    "lint-console": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch",
                    "test": "node ./node_modules/tad/bin/tad"
                  },
                  "version": "2.0.1",
                  "readme": "# es6-iterator\n## ECMAScript 6 Iterator interface\n\n### Installation\n\n\t$ npm install es6-iterator\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## API\n\n### Constructors\n\n#### Iterator(list) _(es6-iterator)_\n\nAbstract Iterator interface. Meant for extensions and not to be used on its own.\n\nAccepts any _list_ object (technically object with numeric _length_ property).\n\n_Mind it doesn't iterate strings properly, for that use dedicated [StringIterator](#string-iterator)_\n\n```javascript\nvar Iterator = require('es6-iterator')\nvar iterator = new Iterator([1, 2, 3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n\n#### ArrayIterator(arrayLike[, kind]) _(es6-iterator/array)_\n\nDedicated for arrays and array-likes. Supports three iteration kinds:\n* __value__ _(default)_ - Iterates values\n* __key__ - Iterates indexes\n* __key+value__ - Iterates keys and indexes, each iteration value is in _[key, value]_ form.\n\n\n```javascript\nvar ArrayIterator = require('es6-iterator/array')\nvar iterator = new ArrayIterator([1, 2, 3], 'key+value');\n\niterator.next(); // { value: [0, 1], done: false }\niterator.next(); // { value: [1, 2], done: false }\niterator.next(); // { value: [2, 3], done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\nMay also be used for _arguments_ objects:\n\n```javascript\n(function () {\n  var iterator = new ArrayIterator(arguments);\n\n  iterator.next(); // { value: 1, done: false }\n  iterator.next(); // { value: 2, done: false }\n  iterator.next(); // { value: 3, done: false }\n  iterator.next(); // { value: undefined, done: true }\n}(1, 2, 3));\n```\n\n#### StringIterator(str) _(es6-iterator/string)_\n\nAssures proper iteration over unicode symbols.  \nSee: http://mathiasbynens.be/notes/javascript-unicode\n\n```javascript\nvar StringIterator = require('es6-iterator/string');\nvar iterator = new StringIterator('fðoðoð');\n\niterator.next(); // { value: 'f', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n### Function utilities\n\n#### forOf(iterable, callback[, thisArg]) _(es6-iterator/for-of)_\n\nPolyfill for ECMAScript 6 [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) statement.\n\n```\nvar forOf = require('es6-iterator/for-of');\nvar result = [];\n\nforOf('ððð', function (monkey) { result.push(monkey); });\nconsole.log(result); // ['ð', 'ð', 'ð'];\n```\n\nOptionally you can break iteration at any point:\n\n```javascript\nvar result = [];\n\nforOf([1,2,3,4]', function (val, doBreak) {\n  result.push(monkey);\n  if (val >= 3) doBreak();\n});\nconsole.log(result); // [1, 2, 3];\n```\n\n#### get(obj) _(es6-iterator/get)_\n\nReturn iterator for any iterable object.\n\n```javascript\nvar getIterator = require('es6-iterator/get');\nvar iterator = get([1,2,3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n#### isIterable(obj) _(es6-iterator/is-iterable)_\n\nWhether _obj_ is iterable\n\n```javascript\nvar isIterable = require('es6-iterator/is-iterable');\n\nisIterable(null); // false\nisIterable(true); // false\nisIterable('str'); // true\nisIterable(['a', 'r', 'r']); // true\nisIterable(new ArrayIterator([])); // true\n```\n\n#### validIterable(obj) _(es6-iterator/valid-iterable)_\n\nIf _obj_ is an iterable it is returned. Otherwise _TypeError_ is thrown.\n\n### Method extensions\n\n#### iterator.chain(iterator1[, â¦iteratorn]) _(es6-iterator/#/chain)_\n\nChain multiple iterators into one.\n\n### Tests [![Build Status](https://travis-ci.org/medikoo/es6-iterator.png)](https://travis-ci.org/medikoo/es6-iterator)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "d": "1",
                    "es5-ext": "^0.10.14",
                    "es6-symbol": "^3.1"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-iterator",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es6-iterator"
                },
                "es6-symbol": {
                  "_from": "es6-symbol@~3.1.1",
                  "_id": "es6-symbol@3.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",
                  "_location": "/es6-symbol",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "es6-symbol@~3.1.1",
                    "name": "es6-symbol",
                    "escapedName": "es6-symbol",
                    "rawSpec": "~3.1.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~3.1.1"
                  },
                  "_requiredBy": [
                    "/es5-ext",
                    "/es6-iterator",
                    "/es6-map",
                    "/es6-set",
                    "/es6-weak-map"
                  ],
                  "_resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",
                  "_shasum": "bf00ef4fdab6ba1b46ecb7b629b4c7ed5715cc77",
                  "_spec": "es6-symbol@~3.1.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": {
                    "name": "Mariusz Nowak",
                    "email": "medyk@medikoo.com",
                    "url": "http://www.medikoo.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/medikoo/es6-symbol/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript 6 Symbol polyfill",
                  "devDependencies": {
                    "tad": "~0.2.7",
                    "xlint": "~0.2.2",
                    "xlint-jslint-medikoo": "~0.1.4"
                  },
                  "homepage": "https://github.com/medikoo/es6-symbol#readme",
                  "keywords": [
                    "symbol",
                    "private",
                    "property",
                    "es6",
                    "ecmascript",
                    "harmony",
                    "ponyfill",
                    "polyfill"
                  ],
                  "license": "MIT",
                  "name": "es6-symbol",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/medikoo/es6-symbol.git"
                  },
                  "scripts": {
                    "lint": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream",
                    "lint-console": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch",
                    "test": "node ./node_modules/tad/bin/tad"
                  },
                  "version": "3.1.1",
                  "readme": "# es6-symbol\n## ECMAScript 6 Symbol polyfill\n\nFor more information about symbols see following links\n- [Symbols in ECMAScript 6 by Axel Rauschmayer](http://www.2ality.com/2014/12/es6-symbols.html)\n- [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n- [Specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-constructor)\n\n### Limitations\n\nUnderneath it uses real string property names which can easily be retrieved, however accidental collision with other property names is unlikely.\n\n### Usage\n\nIf you'd like to use native version when it exists and fallback to [ponyfill](https://ponyfill.com) if it doesn't, use *es6-symbol* as following:\n\n```javascript\nvar Symbol = require('es6-symbol');\n```\n\nIf you want to make sure your environment implements `Symbol` globally, do:\n\n```javascript\nrequire('es6-symbol/implement');\n```\n\nIf you strictly want to use polyfill even if native `Symbol` exists (hard to find a good reason for that), do:\n\n```javascript\nvar Symbol = require('es6-symbol/polyfill');\n```\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Symbol = require('es6-symbol');\n\nvar symbol = Symbol('My custom symbol');\nvar x = {};\n\nx[symbol] = 'foo';\nconsole.log(x[symbol]); 'foo'\n\n// Detect iterable:\nvar iterator, result;\nif (possiblyIterable[Symbol.iterator]) {\n  iterator = possiblyIterable[Symbol.iterator]();\n  result = iterator.next();\n  while(!result.done) {\n    console.log(result.value);\n    result = iterator.next();\n  }\n}\n```\n\n### Installation\n#### NPM\n\nIn your project path:\n\n\t$ npm install es6-symbol\n\n##### Browser\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-symbol.png)](https://travis-ci.org/medikoo/es6-symbol)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "d": "1",
                    "es5-ext": "~0.10.14"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-symbol",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es6-symbol"
                }
              },
              "deprecated": false,
              "description": "ECMAScript extensions and shims",
              "devDependencies": "[Circular]",
              "eslintConfig": "[Circular]",
              "homepage": "https://github.com/medikoo/es5-ext#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "es5-ext",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.10.26",
              "readme": "# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, â¦fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([â¦items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([â¦lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.intersection([â¦lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, â¦valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, â¦args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, â¦args)(object, â¦args2)  =def  object\\[name\\]\\(â¦args, â¦args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWhether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([â¦fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(â¦args)  =def  f1(f2(f3(f4(â¦arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([â¦args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(â¦args)(â¦args2)  =def  f(â¦args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(â¦args)  =def !f(â¦args)_\n\n#### fn.partial([â¦args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(â¦args1)(â¦args2)  =def  f(â¦args1, â¦args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([â¦values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, â¦sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, â¦source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([â¦names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, â¦names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([â¦codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, â¦substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://img.shields.io/circleci/project/github/medikoo/es5-ext.svg)](https://circleci.com/gh/medikoo/es5-ext)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es5-ext",
              "error": "[Circular]",
              "extraneous": false
            },
            "es6-iterator": {
              "_from": "es6-iterator@~2.0.1",
              "_id": "es6-iterator@2.0.1",
              "_inBundle": false,
              "_integrity": "sha1-jjGcnwRTv1ddN0lAplWSDlnKVRI=",
              "_location": "/es6-iterator",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.1.tgz",
              "_shasum": "8e319c9f0453bf575d374940a655920e59ca5512",
              "_spec": "es6-iterator@~2.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "d": {
                  "_from": "d@1",
                  "_id": "d@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
                  "_location": "/d",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
                  "_shasum": "754bb5bfe55451da69a58b94d45f4c5b0462d58f",
                  "_spec": "d@1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Property descriptor factory",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/d#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "d",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.0",
                  "readme": "# D\n## Property descriptor factory\n\n_Originally derived from [es5-ext](https://github.com/medikoo/es5-ext) package._\n\nDefining properties with descriptors is very verbose:\n\n```javascript\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  withdraw: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  balance: { get: function () {\n      /* ... */\n    }, configurable: true, enumerable: false }\n});\n```\n\nD cuts that to:\n\n```javascript\nvar d = require('d');\n\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: d(function () {\n    /* ... */\n  }),\n  withdraw: d(function () {\n    /* ... */\n  }),\n  balance: d.gs(function () {\n    /* ... */\n  })\n});\n```\n\nBy default, created descriptor follow characteristics of native ES5 properties, and defines values as:\n\n```javascript\n{ configurable: true, enumerable: false, writable: true }\n```\n\nYou can overwrite it by preceding _value_ argument with instruction:\n```javascript\nd('c', value); // { configurable: true, enumerable: false, writable: false }\nd('ce', value); // { configurable: true, enumerable: true, writable: false }\nd('e', value); // { configurable: false, enumerable: true, writable: false }\n\n// Same way for get/set:\nd.gs('e', value); // { configurable: false, enumerable: true }\n```\n\n### Installation\n\n\t$ npm install d\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Other utilities\n\n#### autoBind(obj, props) _(d/auto-bind)_\n\nDefine methods which will be automatically bound to its instances\n\n```javascript\nvar d = require('d');\nvar autoBind = require('d/auto-bind');\n\nvar Foo = function () { this._count = 0; };\nObject.defineProperties(Foo.prototype, autoBind({\n  increment: d(function () { ++this._count; });\n}));\n\nvar foo = new Foo();\n\n// Increment foo counter on each domEl click\ndomEl.addEventListener('click', foo.increment, false);\n```\n\n#### lazy(obj, props) _(d/lazy)_\n\nDefine lazy properties, which will be resolved on first access\n\n```javascript\nvar d = require('d');\nvar lazy = require('d/lazy');\n\nvar Foo = function () {};\nObject.defineProperties(Foo.prototype, lazy({\n  items: d(function () { return []; })\n}));\n\nvar foo = new Foo();\nfoo.items.push(1, 2); // foo.items array created and defined directly on foo\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/d.png)](https://travis-ci.org/medikoo/d)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/d",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "d"
                },
                "es5-ext": {
                  "_from": "es5-ext@~0.10.14",
                  "_id": "es5-ext@0.10.26",
                  "_inBundle": false,
                  "_integrity": "sha1-UbISilMbcMT2dkCTpzy+u4IYY3I=",
                  "_location": "/es5-ext",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.26.tgz",
                  "_shasum": "51b2128a531b70c4f6764093a73cbebb82186372",
                  "_spec": "es5-ext@~0.10.14",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript extensions and shims",
                  "devDependencies": "[Circular]",
                  "eslintConfig": "[Circular]",
                  "homepage": "https://github.com/medikoo/es5-ext#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es5-ext",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "0.10.26",
                  "readme": "# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, â¦fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([â¦items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([â¦lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.intersection([â¦lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, â¦valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, â¦args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, â¦args)(object, â¦args2)  =def  object\\[name\\]\\(â¦args, â¦args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWhether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([â¦fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(â¦args)  =def  f1(f2(f3(f4(â¦arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([â¦args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(â¦args)(â¦args2)  =def  f(â¦args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(â¦args)  =def !f(â¦args)_\n\n#### fn.partial([â¦args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(â¦args1)(â¦args2)  =def  f(â¦args1, â¦args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([â¦values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, â¦sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, â¦source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([â¦names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, â¦names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([â¦codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, â¦substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://img.shields.io/circleci/project/github/medikoo/es5-ext.svg)](https://circleci.com/gh/medikoo/es5-ext)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es5-ext",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es5-ext"
                },
                "es6-symbol": {
                  "_from": "es6-symbol@~3.1.1",
                  "_id": "es6-symbol@3.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",
                  "_location": "/es6-symbol",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",
                  "_shasum": "bf00ef4fdab6ba1b46ecb7b629b4c7ed5715cc77",
                  "_spec": "es6-symbol@~3.1.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript 6 Symbol polyfill",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/es6-symbol#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es6-symbol",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "3.1.1",
                  "readme": "# es6-symbol\n## ECMAScript 6 Symbol polyfill\n\nFor more information about symbols see following links\n- [Symbols in ECMAScript 6 by Axel Rauschmayer](http://www.2ality.com/2014/12/es6-symbols.html)\n- [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n- [Specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-constructor)\n\n### Limitations\n\nUnderneath it uses real string property names which can easily be retrieved, however accidental collision with other property names is unlikely.\n\n### Usage\n\nIf you'd like to use native version when it exists and fallback to [ponyfill](https://ponyfill.com) if it doesn't, use *es6-symbol* as following:\n\n```javascript\nvar Symbol = require('es6-symbol');\n```\n\nIf you want to make sure your environment implements `Symbol` globally, do:\n\n```javascript\nrequire('es6-symbol/implement');\n```\n\nIf you strictly want to use polyfill even if native `Symbol` exists (hard to find a good reason for that), do:\n\n```javascript\nvar Symbol = require('es6-symbol/polyfill');\n```\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Symbol = require('es6-symbol');\n\nvar symbol = Symbol('My custom symbol');\nvar x = {};\n\nx[symbol] = 'foo';\nconsole.log(x[symbol]); 'foo'\n\n// Detect iterable:\nvar iterator, result;\nif (possiblyIterable[Symbol.iterator]) {\n  iterator = possiblyIterable[Symbol.iterator]();\n  result = iterator.next();\n  while(!result.done) {\n    console.log(result.value);\n    result = iterator.next();\n  }\n}\n```\n\n### Installation\n#### NPM\n\nIn your project path:\n\n\t$ npm install es6-symbol\n\n##### Browser\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-symbol.png)](https://travis-ci.org/medikoo/es6-symbol)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-symbol",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es6-symbol"
                }
              },
              "deprecated": false,
              "description": "Iterator abstraction based on ES6 specification",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/medikoo/es6-iterator#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "es6-iterator",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "2.0.1",
              "readme": "# es6-iterator\n## ECMAScript 6 Iterator interface\n\n### Installation\n\n\t$ npm install es6-iterator\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## API\n\n### Constructors\n\n#### Iterator(list) _(es6-iterator)_\n\nAbstract Iterator interface. Meant for extensions and not to be used on its own.\n\nAccepts any _list_ object (technically object with numeric _length_ property).\n\n_Mind it doesn't iterate strings properly, for that use dedicated [StringIterator](#string-iterator)_\n\n```javascript\nvar Iterator = require('es6-iterator')\nvar iterator = new Iterator([1, 2, 3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n\n#### ArrayIterator(arrayLike[, kind]) _(es6-iterator/array)_\n\nDedicated for arrays and array-likes. Supports three iteration kinds:\n* __value__ _(default)_ - Iterates values\n* __key__ - Iterates indexes\n* __key+value__ - Iterates keys and indexes, each iteration value is in _[key, value]_ form.\n\n\n```javascript\nvar ArrayIterator = require('es6-iterator/array')\nvar iterator = new ArrayIterator([1, 2, 3], 'key+value');\n\niterator.next(); // { value: [0, 1], done: false }\niterator.next(); // { value: [1, 2], done: false }\niterator.next(); // { value: [2, 3], done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\nMay also be used for _arguments_ objects:\n\n```javascript\n(function () {\n  var iterator = new ArrayIterator(arguments);\n\n  iterator.next(); // { value: 1, done: false }\n  iterator.next(); // { value: 2, done: false }\n  iterator.next(); // { value: 3, done: false }\n  iterator.next(); // { value: undefined, done: true }\n}(1, 2, 3));\n```\n\n#### StringIterator(str) _(es6-iterator/string)_\n\nAssures proper iteration over unicode symbols.  \nSee: http://mathiasbynens.be/notes/javascript-unicode\n\n```javascript\nvar StringIterator = require('es6-iterator/string');\nvar iterator = new StringIterator('fðoðoð');\n\niterator.next(); // { value: 'f', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n### Function utilities\n\n#### forOf(iterable, callback[, thisArg]) _(es6-iterator/for-of)_\n\nPolyfill for ECMAScript 6 [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) statement.\n\n```\nvar forOf = require('es6-iterator/for-of');\nvar result = [];\n\nforOf('ððð', function (monkey) { result.push(monkey); });\nconsole.log(result); // ['ð', 'ð', 'ð'];\n```\n\nOptionally you can break iteration at any point:\n\n```javascript\nvar result = [];\n\nforOf([1,2,3,4]', function (val, doBreak) {\n  result.push(monkey);\n  if (val >= 3) doBreak();\n});\nconsole.log(result); // [1, 2, 3];\n```\n\n#### get(obj) _(es6-iterator/get)_\n\nReturn iterator for any iterable object.\n\n```javascript\nvar getIterator = require('es6-iterator/get');\nvar iterator = get([1,2,3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n#### isIterable(obj) _(es6-iterator/is-iterable)_\n\nWhether _obj_ is iterable\n\n```javascript\nvar isIterable = require('es6-iterator/is-iterable');\n\nisIterable(null); // false\nisIterable(true); // false\nisIterable('str'); // true\nisIterable(['a', 'r', 'r']); // true\nisIterable(new ArrayIterator([])); // true\n```\n\n#### validIterable(obj) _(es6-iterator/valid-iterable)_\n\nIf _obj_ is an iterable it is returned. Otherwise _TypeError_ is thrown.\n\n### Method extensions\n\n#### iterator.chain(iterator1[, â¦iteratorn]) _(es6-iterator/#/chain)_\n\nChain multiple iterators into one.\n\n### Tests [![Build Status](https://travis-ci.org/medikoo/es6-iterator.png)](https://travis-ci.org/medikoo/es6-iterator)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-iterator",
              "error": "[Circular]",
              "extraneous": false
            },
            "es6-set": {
              "_from": "es6-set@~0.1.5",
              "_id": "es6-set@0.1.5",
              "_inBundle": false,
              "_integrity": "sha1-0rPsXU2ADO2BjbU40ol02wpzzLE=",
              "_location": "/es6-set",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "es6-set@~0.1.5",
                "name": "es6-set",
                "escapedName": "es6-set",
                "rawSpec": "~0.1.5",
                "saveSpec": "[Circular]",
                "fetchSpec": "~0.1.5"
              },
              "_requiredBy": [
                "/es6-map"
              ],
              "_resolved": "https://registry.npmjs.org/es6-set/-/es6-set-0.1.5.tgz",
              "_shasum": "d2b3ec5d4d800ced818db538d28974db0a73ccb1",
              "_spec": "es6-set@~0.1.5",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
              "author": {
                "name": "Mariusz Nowak",
                "email": "medyk@medikoo.com",
                "url": "http://www.medikoo.com/"
              },
              "bugs": {
                "url": "https://github.com/medikoo/es6-set/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "d": {
                  "_from": "d@1",
                  "_id": "d@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
                  "_location": "/d",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
                  "_shasum": "754bb5bfe55451da69a58b94d45f4c5b0462d58f",
                  "_spec": "d@1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Property descriptor factory",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/d#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "d",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.0",
                  "readme": "# D\n## Property descriptor factory\n\n_Originally derived from [es5-ext](https://github.com/medikoo/es5-ext) package._\n\nDefining properties with descriptors is very verbose:\n\n```javascript\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  withdraw: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  balance: { get: function () {\n      /* ... */\n    }, configurable: true, enumerable: false }\n});\n```\n\nD cuts that to:\n\n```javascript\nvar d = require('d');\n\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: d(function () {\n    /* ... */\n  }),\n  withdraw: d(function () {\n    /* ... */\n  }),\n  balance: d.gs(function () {\n    /* ... */\n  })\n});\n```\n\nBy default, created descriptor follow characteristics of native ES5 properties, and defines values as:\n\n```javascript\n{ configurable: true, enumerable: false, writable: true }\n```\n\nYou can overwrite it by preceding _value_ argument with instruction:\n```javascript\nd('c', value); // { configurable: true, enumerable: false, writable: false }\nd('ce', value); // { configurable: true, enumerable: true, writable: false }\nd('e', value); // { configurable: false, enumerable: true, writable: false }\n\n// Same way for get/set:\nd.gs('e', value); // { configurable: false, enumerable: true }\n```\n\n### Installation\n\n\t$ npm install d\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Other utilities\n\n#### autoBind(obj, props) _(d/auto-bind)_\n\nDefine methods which will be automatically bound to its instances\n\n```javascript\nvar d = require('d');\nvar autoBind = require('d/auto-bind');\n\nvar Foo = function () { this._count = 0; };\nObject.defineProperties(Foo.prototype, autoBind({\n  increment: d(function () { ++this._count; });\n}));\n\nvar foo = new Foo();\n\n// Increment foo counter on each domEl click\ndomEl.addEventListener('click', foo.increment, false);\n```\n\n#### lazy(obj, props) _(d/lazy)_\n\nDefine lazy properties, which will be resolved on first access\n\n```javascript\nvar d = require('d');\nvar lazy = require('d/lazy');\n\nvar Foo = function () {};\nObject.defineProperties(Foo.prototype, lazy({\n  items: d(function () { return []; })\n}));\n\nvar foo = new Foo();\nfoo.items.push(1, 2); // foo.items array created and defined directly on foo\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/d.png)](https://travis-ci.org/medikoo/d)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/d",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "d"
                },
                "es5-ext": {
                  "_from": "es5-ext@~0.10.14",
                  "_id": "es5-ext@0.10.26",
                  "_inBundle": false,
                  "_integrity": "sha1-UbISilMbcMT2dkCTpzy+u4IYY3I=",
                  "_location": "/es5-ext",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.26.tgz",
                  "_shasum": "51b2128a531b70c4f6764093a73cbebb82186372",
                  "_spec": "es5-ext@~0.10.14",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript extensions and shims",
                  "devDependencies": "[Circular]",
                  "eslintConfig": "[Circular]",
                  "homepage": "https://github.com/medikoo/es5-ext#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es5-ext",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "0.10.26",
                  "readme": "# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, â¦fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([â¦items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([â¦lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.intersection([â¦lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, â¦valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, â¦args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, â¦args)(object, â¦args2)  =def  object\\[name\\]\\(â¦args, â¦args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWhether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([â¦fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(â¦args)  =def  f1(f2(f3(f4(â¦arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([â¦args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(â¦args)(â¦args2)  =def  f(â¦args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(â¦args)  =def !f(â¦args)_\n\n#### fn.partial([â¦args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(â¦args1)(â¦args2)  =def  f(â¦args1, â¦args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([â¦values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, â¦sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, â¦source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([â¦names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, â¦names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([â¦codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, â¦substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://img.shields.io/circleci/project/github/medikoo/es5-ext.svg)](https://circleci.com/gh/medikoo/es5-ext)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es5-ext",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es5-ext"
                },
                "es6-iterator": {
                  "_from": "es6-iterator@~2.0.1",
                  "_id": "es6-iterator@2.0.1",
                  "_inBundle": false,
                  "_integrity": "sha1-jjGcnwRTv1ddN0lAplWSDlnKVRI=",
                  "_location": "/es6-iterator",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.1.tgz",
                  "_shasum": "8e319c9f0453bf575d374940a655920e59ca5512",
                  "_spec": "es6-iterator@~2.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Iterator abstraction based on ES6 specification",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/es6-iterator#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es6-iterator",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "2.0.1",
                  "readme": "# es6-iterator\n## ECMAScript 6 Iterator interface\n\n### Installation\n\n\t$ npm install es6-iterator\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## API\n\n### Constructors\n\n#### Iterator(list) _(es6-iterator)_\n\nAbstract Iterator interface. Meant for extensions and not to be used on its own.\n\nAccepts any _list_ object (technically object with numeric _length_ property).\n\n_Mind it doesn't iterate strings properly, for that use dedicated [StringIterator](#string-iterator)_\n\n```javascript\nvar Iterator = require('es6-iterator')\nvar iterator = new Iterator([1, 2, 3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n\n#### ArrayIterator(arrayLike[, kind]) _(es6-iterator/array)_\n\nDedicated for arrays and array-likes. Supports three iteration kinds:\n* __value__ _(default)_ - Iterates values\n* __key__ - Iterates indexes\n* __key+value__ - Iterates keys and indexes, each iteration value is in _[key, value]_ form.\n\n\n```javascript\nvar ArrayIterator = require('es6-iterator/array')\nvar iterator = new ArrayIterator([1, 2, 3], 'key+value');\n\niterator.next(); // { value: [0, 1], done: false }\niterator.next(); // { value: [1, 2], done: false }\niterator.next(); // { value: [2, 3], done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\nMay also be used for _arguments_ objects:\n\n```javascript\n(function () {\n  var iterator = new ArrayIterator(arguments);\n\n  iterator.next(); // { value: 1, done: false }\n  iterator.next(); // { value: 2, done: false }\n  iterator.next(); // { value: 3, done: false }\n  iterator.next(); // { value: undefined, done: true }\n}(1, 2, 3));\n```\n\n#### StringIterator(str) _(es6-iterator/string)_\n\nAssures proper iteration over unicode symbols.  \nSee: http://mathiasbynens.be/notes/javascript-unicode\n\n```javascript\nvar StringIterator = require('es6-iterator/string');\nvar iterator = new StringIterator('fðoðoð');\n\niterator.next(); // { value: 'f', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n### Function utilities\n\n#### forOf(iterable, callback[, thisArg]) _(es6-iterator/for-of)_\n\nPolyfill for ECMAScript 6 [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) statement.\n\n```\nvar forOf = require('es6-iterator/for-of');\nvar result = [];\n\nforOf('ððð', function (monkey) { result.push(monkey); });\nconsole.log(result); // ['ð', 'ð', 'ð'];\n```\n\nOptionally you can break iteration at any point:\n\n```javascript\nvar result = [];\n\nforOf([1,2,3,4]', function (val, doBreak) {\n  result.push(monkey);\n  if (val >= 3) doBreak();\n});\nconsole.log(result); // [1, 2, 3];\n```\n\n#### get(obj) _(es6-iterator/get)_\n\nReturn iterator for any iterable object.\n\n```javascript\nvar getIterator = require('es6-iterator/get');\nvar iterator = get([1,2,3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n#### isIterable(obj) _(es6-iterator/is-iterable)_\n\nWhether _obj_ is iterable\n\n```javascript\nvar isIterable = require('es6-iterator/is-iterable');\n\nisIterable(null); // false\nisIterable(true); // false\nisIterable('str'); // true\nisIterable(['a', 'r', 'r']); // true\nisIterable(new ArrayIterator([])); // true\n```\n\n#### validIterable(obj) _(es6-iterator/valid-iterable)_\n\nIf _obj_ is an iterable it is returned. Otherwise _TypeError_ is thrown.\n\n### Method extensions\n\n#### iterator.chain(iterator1[, â¦iteratorn]) _(es6-iterator/#/chain)_\n\nChain multiple iterators into one.\n\n### Tests [![Build Status](https://travis-ci.org/medikoo/es6-iterator.png)](https://travis-ci.org/medikoo/es6-iterator)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-iterator",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es6-iterator"
                },
                "es6-symbol": {
                  "_from": "es6-symbol@~3.1.1",
                  "_id": "es6-symbol@3.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",
                  "_location": "/es6-symbol",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",
                  "_shasum": "bf00ef4fdab6ba1b46ecb7b629b4c7ed5715cc77",
                  "_spec": "es6-symbol@~3.1.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript 6 Symbol polyfill",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/es6-symbol#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es6-symbol",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "3.1.1",
                  "readme": "# es6-symbol\n## ECMAScript 6 Symbol polyfill\n\nFor more information about symbols see following links\n- [Symbols in ECMAScript 6 by Axel Rauschmayer](http://www.2ality.com/2014/12/es6-symbols.html)\n- [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n- [Specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-constructor)\n\n### Limitations\n\nUnderneath it uses real string property names which can easily be retrieved, however accidental collision with other property names is unlikely.\n\n### Usage\n\nIf you'd like to use native version when it exists and fallback to [ponyfill](https://ponyfill.com) if it doesn't, use *es6-symbol* as following:\n\n```javascript\nvar Symbol = require('es6-symbol');\n```\n\nIf you want to make sure your environment implements `Symbol` globally, do:\n\n```javascript\nrequire('es6-symbol/implement');\n```\n\nIf you strictly want to use polyfill even if native `Symbol` exists (hard to find a good reason for that), do:\n\n```javascript\nvar Symbol = require('es6-symbol/polyfill');\n```\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Symbol = require('es6-symbol');\n\nvar symbol = Symbol('My custom symbol');\nvar x = {};\n\nx[symbol] = 'foo';\nconsole.log(x[symbol]); 'foo'\n\n// Detect iterable:\nvar iterator, result;\nif (possiblyIterable[Symbol.iterator]) {\n  iterator = possiblyIterable[Symbol.iterator]();\n  result = iterator.next();\n  while(!result.done) {\n    console.log(result.value);\n    result = iterator.next();\n  }\n}\n```\n\n### Installation\n#### NPM\n\nIn your project path:\n\n\t$ npm install es6-symbol\n\n##### Browser\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-symbol.png)](https://travis-ci.org/medikoo/es6-symbol)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-symbol",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es6-symbol"
                },
                "event-emitter": {
                  "_from": "event-emitter@~0.3.5",
                  "_id": "event-emitter@0.3.5",
                  "_inBundle": false,
                  "_integrity": "sha1-34xp7vFkeSPHFXuc6DhAYQsCzDk=",
                  "_location": "/event-emitter",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "event-emitter@~0.3.5",
                    "name": "event-emitter",
                    "escapedName": "event-emitter",
                    "rawSpec": "~0.3.5",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~0.3.5"
                  },
                  "_requiredBy": [
                    "/es6-map",
                    "/es6-set"
                  ],
                  "_resolved": "https://registry.npmjs.org/event-emitter/-/event-emitter-0.3.5.tgz",
                  "_shasum": "df8c69eef1647923c7157b9ce83840610b02cc39",
                  "_spec": "event-emitter@~0.3.5",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": {
                    "name": "Mariusz Nowak",
                    "email": "medyk@medikoo.com",
                    "url": "http://www.medikoo.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/medikoo/event-emitter/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Environment agnostic event emitter",
                  "devDependencies": {
                    "tad": "~0.2.7",
                    "xlint": "~0.2.2",
                    "xlint-jslint-medikoo": "~0.1.4"
                  },
                  "homepage": "https://github.com/medikoo/event-emitter#readme",
                  "keywords": [
                    "event",
                    "events",
                    "trigger",
                    "observer",
                    "listener",
                    "emitter",
                    "pubsub"
                  ],
                  "license": "MIT",
                  "name": "event-emitter",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/medikoo/event-emitter.git"
                  },
                  "scripts": {
                    "lint": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream",
                    "lint-console": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch",
                    "test": "node ./node_modules/tad/bin/tad"
                  },
                  "version": "0.3.5",
                  "readme": "# event-emitter\n## Environment agnostic event emitter\n\n### Installation\n\n\t$ npm install event-emitter\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n```javascript\nvar ee = require('event-emitter');\n\nvar MyClass = function () { /* .. */ };\nee(MyClass.prototype); // All instances of MyClass will expose event-emitter interface\n\nvar emitter = new MyClass(), listener;\n\nemitter.on('test', listener = function (args) {\n  // â¦ react to 'test' event\n});\n\nemitter.once('test', function (args) {\n  // â¦ react to first 'test' event (invoked only once!)\n});\n\nemitter.emit('test', arg1, arg2/*â¦args*/); // Two above listeners invoked\nemitter.emit('test', arg1, arg2/*â¦args*/); // Only first listener invoked\n\nemitter.off('test', listener);              // Removed first listener\nemitter.emit('test', arg1, arg2/*â¦args*/); // No listeners invoked\n```\n### Additional utilities\n\n#### allOff(obj) _(event-emitter/all-off)_\n\nRemoves all listeners from given event emitter object\n\n#### hasListeners(obj[, name]) _(event-emitter/has-listeners)_\n\nWhether object has some listeners attached to the object.\nWhen `name` is provided, it checks listeners for specific event name\n\n```javascript\nvar emitter = ee();\nvar hasListeners = require('event-emitter/has-listeners');\nvar listener = function () {};\n\nhasListeners(emitter); // false\n\nemitter.on('foo', listener);\nhasListeners(emitter); // true\nhasListeners(emitter, 'foo'); // true\nhasListeners(emitter, 'bar'); // false\n\nemitter.off('foo', listener);\nhasListeners(emitter, 'foo'); // false\n```\n\n#### pipe(source, target[, emitMethodName]) _(event-emitter/pipe)_\n\nPipes all events from _source_ emitter onto _target_ emitter (all events from _source_ emitter will be emitted also on _target_ emitter, but not other way).  \nReturns _pipe_ object which exposes `pipe.close` function. Invoke it to close configured _pipe_.  \nIt works internally by redefinition of `emit` method, if in your interface this method is referenced differently, provide its name (or symbol) with third argument.\n\n#### unify(emitter1, emitter2) _(event-emitter/unify)_\n\nUnifies event handling for two objects. Events emitted on _emitter1_ would be also emitted on _emitter2_, and other way back.  \nNon reversible.\n\n```javascript\nvar eeUnify = require('event-emitter/unify');\n\nvar emitter1 = ee(), listener1, listener3;\nvar emitter2 = ee(), listener2, listener4;\n\nemitter1.on('test', listener1 = function () { });\nemitter2.on('test', listener2 = function () { });\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n\nvar unify = eeUnify(emitter1, emitter2);\n\nemitter1.emit('test'); // Invoked listener1 and listener2\nemitter2.emit('test'); // Invoked listener1 and listener2\n\nemitter1.on('test', listener3 = function () { });\nemitter2.on('test', listener4 = function () { });\n\nemitter1.emit('test'); // Invoked listener1, listener2, listener3 and listener4\nemitter2.emit('test'); // Invoked listener1, listener2, listener3 and listener4\n```\n\n### Tests [![Build Status](https://travis-ci.org/medikoo/event-emitter.png)](https://travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "d": "1",
                    "es5-ext": "~0.10.14"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/event-emitter",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "event-emitter"
                }
              },
              "deprecated": false,
              "description": "ECMAScript6 Set polyfill",
              "devDependencies": {
                "tad": "~0.2.7",
                "xlint": "~0.2.2",
                "xlint-jslint-medikoo": "~0.1.4"
              },
              "homepage": "https://github.com/medikoo/es6-set#readme",
              "keywords": [
                "set",
                "collection",
                "es6",
                "harmony",
                "list",
                "hash"
              ],
              "license": "MIT",
              "name": "es6-set",
              "repository": {
                "type": "git",
                "url": "git://github.com/medikoo/es6-set.git"
              },
              "scripts": {
                "lint": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream",
                "lint-console": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch",
                "test": "node ./node_modules/tad/bin/tad"
              },
              "version": "0.1.5",
              "readme": "# es6-set\n## Set collection as specified in ECMAScript6\n\n__Warning:  \nv0.1 version does not ensure O(1) algorithm complexity (but O(n)). This shortcoming will be addressed in v1.0__\n\n### Usage\n\nIf you want to make sure your environment implements `Set`, do:\n\n```javascript\nrequire('es6-set/implement');\n```\n\nIf you'd like to use native version when it exists and fallback to polyfill if it doesn't, but without implementing `Set` on global scope, do:\n\n```javascript\nvar Set = require('es6-set');\n```\n\nIf you strictly want to use polyfill even if native `Set` exists, do:\n\n```javascript\nvar Set = require('es6-set/polyfill');\n```\n\n### Installation\n\n\t$ npm install es6-set\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-set-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Set = require('es6-set');\n\nvar set = new Set(['raz', 'dwa', {}]);\n\nset.size;          // 3\nset.has('raz');    // true\nset.has('foo');    // false\nset.add('foo');    // set\nset.size           // 4\nset.has('foo');    // true\nset.has('dwa');    // true\nset.delete('dwa'); // true\nset.size;          // 3\n\nset.forEach(function (value) {\n // 'raz', {}, 'foo' iterated\n});\n\n// FF nightly only:\nfor (value of set) {\n // 'raz', {}, 'foo' iterated\n}\n\nvar iterator = set.values();\n\niterator.next(); // { done: false, value: 'raz' }\niterator.next(); // { done: false, value: {} }\niterator.next(); // { done: false, value: 'foo' }\niterator.next(); // { done: true, value: undefined }\n\nset.clear(); // undefined\nset.size; // 0\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-set.png)](https://travis-ci.org/medikoo/es6-set)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "d": "1",
                "es5-ext": "~0.10.14",
                "es6-iterator": "~2.0.1",
                "es6-symbol": "3.1.1",
                "event-emitter": "~0.3.5"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-set",
              "error": "[Circular]",
              "extraneous": false
            },
            "es6-symbol": {
              "_from": "es6-symbol@~3.1.1",
              "_id": "es6-symbol@3.1.1",
              "_inBundle": false,
              "_integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",
              "_location": "/es6-symbol",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",
              "_shasum": "bf00ef4fdab6ba1b46ecb7b629b4c7ed5715cc77",
              "_spec": "es6-symbol@~3.1.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "d": {
                  "_from": "d@1",
                  "_id": "d@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
                  "_location": "/d",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
                  "_shasum": "754bb5bfe55451da69a58b94d45f4c5b0462d58f",
                  "_spec": "d@1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Property descriptor factory",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/d#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "d",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.0",
                  "readme": "# D\n## Property descriptor factory\n\n_Originally derived from [es5-ext](https://github.com/medikoo/es5-ext) package._\n\nDefining properties with descriptors is very verbose:\n\n```javascript\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  withdraw: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  balance: { get: function () {\n      /* ... */\n    }, configurable: true, enumerable: false }\n});\n```\n\nD cuts that to:\n\n```javascript\nvar d = require('d');\n\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: d(function () {\n    /* ... */\n  }),\n  withdraw: d(function () {\n    /* ... */\n  }),\n  balance: d.gs(function () {\n    /* ... */\n  })\n});\n```\n\nBy default, created descriptor follow characteristics of native ES5 properties, and defines values as:\n\n```javascript\n{ configurable: true, enumerable: false, writable: true }\n```\n\nYou can overwrite it by preceding _value_ argument with instruction:\n```javascript\nd('c', value); // { configurable: true, enumerable: false, writable: false }\nd('ce', value); // { configurable: true, enumerable: true, writable: false }\nd('e', value); // { configurable: false, enumerable: true, writable: false }\n\n// Same way for get/set:\nd.gs('e', value); // { configurable: false, enumerable: true }\n```\n\n### Installation\n\n\t$ npm install d\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Other utilities\n\n#### autoBind(obj, props) _(d/auto-bind)_\n\nDefine methods which will be automatically bound to its instances\n\n```javascript\nvar d = require('d');\nvar autoBind = require('d/auto-bind');\n\nvar Foo = function () { this._count = 0; };\nObject.defineProperties(Foo.prototype, autoBind({\n  increment: d(function () { ++this._count; });\n}));\n\nvar foo = new Foo();\n\n// Increment foo counter on each domEl click\ndomEl.addEventListener('click', foo.increment, false);\n```\n\n#### lazy(obj, props) _(d/lazy)_\n\nDefine lazy properties, which will be resolved on first access\n\n```javascript\nvar d = require('d');\nvar lazy = require('d/lazy');\n\nvar Foo = function () {};\nObject.defineProperties(Foo.prototype, lazy({\n  items: d(function () { return []; })\n}));\n\nvar foo = new Foo();\nfoo.items.push(1, 2); // foo.items array created and defined directly on foo\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/d.png)](https://travis-ci.org/medikoo/d)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/d",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "d"
                },
                "es5-ext": {
                  "_from": "es5-ext@~0.10.14",
                  "_id": "es5-ext@0.10.26",
                  "_inBundle": false,
                  "_integrity": "sha1-UbISilMbcMT2dkCTpzy+u4IYY3I=",
                  "_location": "/es5-ext",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.26.tgz",
                  "_shasum": "51b2128a531b70c4f6764093a73cbebb82186372",
                  "_spec": "es5-ext@~0.10.14",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript extensions and shims",
                  "devDependencies": "[Circular]",
                  "eslintConfig": "[Circular]",
                  "homepage": "https://github.com/medikoo/es5-ext#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es5-ext",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "0.10.26",
                  "readme": "# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, â¦fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([â¦items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([â¦lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.intersection([â¦lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, â¦valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, â¦args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, â¦args)(object, â¦args2)  =def  object\\[name\\]\\(â¦args, â¦args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWhether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([â¦fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(â¦args)  =def  f1(f2(f3(f4(â¦arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([â¦args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(â¦args)(â¦args2)  =def  f(â¦args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(â¦args)  =def !f(â¦args)_\n\n#### fn.partial([â¦args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(â¦args1)(â¦args2)  =def  f(â¦args1, â¦args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([â¦values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, â¦sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, â¦source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([â¦names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, â¦names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([â¦codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, â¦substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://img.shields.io/circleci/project/github/medikoo/es5-ext.svg)](https://circleci.com/gh/medikoo/es5-ext)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es5-ext",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es5-ext"
                }
              },
              "deprecated": false,
              "description": "ECMAScript 6 Symbol polyfill",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/medikoo/es6-symbol#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "es6-symbol",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "3.1.1",
              "readme": "# es6-symbol\n## ECMAScript 6 Symbol polyfill\n\nFor more information about symbols see following links\n- [Symbols in ECMAScript 6 by Axel Rauschmayer](http://www.2ality.com/2014/12/es6-symbols.html)\n- [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n- [Specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-constructor)\n\n### Limitations\n\nUnderneath it uses real string property names which can easily be retrieved, however accidental collision with other property names is unlikely.\n\n### Usage\n\nIf you'd like to use native version when it exists and fallback to [ponyfill](https://ponyfill.com) if it doesn't, use *es6-symbol* as following:\n\n```javascript\nvar Symbol = require('es6-symbol');\n```\n\nIf you want to make sure your environment implements `Symbol` globally, do:\n\n```javascript\nrequire('es6-symbol/implement');\n```\n\nIf you strictly want to use polyfill even if native `Symbol` exists (hard to find a good reason for that), do:\n\n```javascript\nvar Symbol = require('es6-symbol/polyfill');\n```\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Symbol = require('es6-symbol');\n\nvar symbol = Symbol('My custom symbol');\nvar x = {};\n\nx[symbol] = 'foo';\nconsole.log(x[symbol]); 'foo'\n\n// Detect iterable:\nvar iterator, result;\nif (possiblyIterable[Symbol.iterator]) {\n  iterator = possiblyIterable[Symbol.iterator]();\n  result = iterator.next();\n  while(!result.done) {\n    console.log(result.value);\n    result = iterator.next();\n  }\n}\n```\n\n### Installation\n#### NPM\n\nIn your project path:\n\n\t$ npm install es6-symbol\n\n##### Browser\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-symbol.png)](https://travis-ci.org/medikoo/es6-symbol)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-symbol",
              "error": "[Circular]",
              "extraneous": false
            },
            "event-emitter": {
              "_from": "event-emitter@~0.3.5",
              "_id": "event-emitter@0.3.5",
              "_inBundle": false,
              "_integrity": "sha1-34xp7vFkeSPHFXuc6DhAYQsCzDk=",
              "_location": "/event-emitter",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/event-emitter/-/event-emitter-0.3.5.tgz",
              "_shasum": "df8c69eef1647923c7157b9ce83840610b02cc39",
              "_spec": "event-emitter@~0.3.5",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "d": {
                  "_from": "d@1",
                  "_id": "d@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
                  "_location": "/d",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
                  "_shasum": "754bb5bfe55451da69a58b94d45f4c5b0462d58f",
                  "_spec": "d@1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Property descriptor factory",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/d#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "d",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.0",
                  "readme": "# D\n## Property descriptor factory\n\n_Originally derived from [es5-ext](https://github.com/medikoo/es5-ext) package._\n\nDefining properties with descriptors is very verbose:\n\n```javascript\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  withdraw: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  balance: { get: function () {\n      /* ... */\n    }, configurable: true, enumerable: false }\n});\n```\n\nD cuts that to:\n\n```javascript\nvar d = require('d');\n\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: d(function () {\n    /* ... */\n  }),\n  withdraw: d(function () {\n    /* ... */\n  }),\n  balance: d.gs(function () {\n    /* ... */\n  })\n});\n```\n\nBy default, created descriptor follow characteristics of native ES5 properties, and defines values as:\n\n```javascript\n{ configurable: true, enumerable: false, writable: true }\n```\n\nYou can overwrite it by preceding _value_ argument with instruction:\n```javascript\nd('c', value); // { configurable: true, enumerable: false, writable: false }\nd('ce', value); // { configurable: true, enumerable: true, writable: false }\nd('e', value); // { configurable: false, enumerable: true, writable: false }\n\n// Same way for get/set:\nd.gs('e', value); // { configurable: false, enumerable: true }\n```\n\n### Installation\n\n\t$ npm install d\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Other utilities\n\n#### autoBind(obj, props) _(d/auto-bind)_\n\nDefine methods which will be automatically bound to its instances\n\n```javascript\nvar d = require('d');\nvar autoBind = require('d/auto-bind');\n\nvar Foo = function () { this._count = 0; };\nObject.defineProperties(Foo.prototype, autoBind({\n  increment: d(function () { ++this._count; });\n}));\n\nvar foo = new Foo();\n\n// Increment foo counter on each domEl click\ndomEl.addEventListener('click', foo.increment, false);\n```\n\n#### lazy(obj, props) _(d/lazy)_\n\nDefine lazy properties, which will be resolved on first access\n\n```javascript\nvar d = require('d');\nvar lazy = require('d/lazy');\n\nvar Foo = function () {};\nObject.defineProperties(Foo.prototype, lazy({\n  items: d(function () { return []; })\n}));\n\nvar foo = new Foo();\nfoo.items.push(1, 2); // foo.items array created and defined directly on foo\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/d.png)](https://travis-ci.org/medikoo/d)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/d",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "d"
                },
                "es5-ext": {
                  "_from": "es5-ext@~0.10.14",
                  "_id": "es5-ext@0.10.26",
                  "_inBundle": false,
                  "_integrity": "sha1-UbISilMbcMT2dkCTpzy+u4IYY3I=",
                  "_location": "/es5-ext",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.26.tgz",
                  "_shasum": "51b2128a531b70c4f6764093a73cbebb82186372",
                  "_spec": "es5-ext@~0.10.14",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript extensions and shims",
                  "devDependencies": "[Circular]",
                  "eslintConfig": "[Circular]",
                  "homepage": "https://github.com/medikoo/es5-ext#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es5-ext",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "0.10.26",
                  "readme": "# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, â¦fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([â¦items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([â¦lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.intersection([â¦lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, â¦valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, â¦args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, â¦args)(object, â¦args2)  =def  object\\[name\\]\\(â¦args, â¦args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWhether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([â¦fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(â¦args)  =def  f1(f2(f3(f4(â¦arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([â¦args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(â¦args)(â¦args2)  =def  f(â¦args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(â¦args)  =def !f(â¦args)_\n\n#### fn.partial([â¦args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(â¦args1)(â¦args2)  =def  f(â¦args1, â¦args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([â¦values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, â¦sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, â¦source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([â¦names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, â¦names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([â¦codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, â¦substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://img.shields.io/circleci/project/github/medikoo/es5-ext.svg)](https://circleci.com/gh/medikoo/es5-ext)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es5-ext",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es5-ext"
                }
              },
              "deprecated": false,
              "description": "Environment agnostic event emitter",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/medikoo/event-emitter#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "event-emitter",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.3.5",
              "readme": "# event-emitter\n## Environment agnostic event emitter\n\n### Installation\n\n\t$ npm install event-emitter\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n```javascript\nvar ee = require('event-emitter');\n\nvar MyClass = function () { /* .. */ };\nee(MyClass.prototype); // All instances of MyClass will expose event-emitter interface\n\nvar emitter = new MyClass(), listener;\n\nemitter.on('test', listener = function (args) {\n  // â¦ react to 'test' event\n});\n\nemitter.once('test', function (args) {\n  // â¦ react to first 'test' event (invoked only once!)\n});\n\nemitter.emit('test', arg1, arg2/*â¦args*/); // Two above listeners invoked\nemitter.emit('test', arg1, arg2/*â¦args*/); // Only first listener invoked\n\nemitter.off('test', listener);              // Removed first listener\nemitter.emit('test', arg1, arg2/*â¦args*/); // No listeners invoked\n```\n### Additional utilities\n\n#### allOff(obj) _(event-emitter/all-off)_\n\nRemoves all listeners from given event emitter object\n\n#### hasListeners(obj[, name]) _(event-emitter/has-listeners)_\n\nWhether object has some listeners attached to the object.\nWhen `name` is provided, it checks listeners for specific event name\n\n```javascript\nvar emitter = ee();\nvar hasListeners = require('event-emitter/has-listeners');\nvar listener = function () {};\n\nhasListeners(emitter); // false\n\nemitter.on('foo', listener);\nhasListeners(emitter); // true\nhasListeners(emitter, 'foo'); // true\nhasListeners(emitter, 'bar'); // false\n\nemitter.off('foo', listener);\nhasListeners(emitter, 'foo'); // false\n```\n\n#### pipe(source, target[, emitMethodName]) _(event-emitter/pipe)_\n\nPipes all events from _source_ emitter onto _target_ emitter (all events from _source_ emitter will be emitted also on _target_ emitter, but not other way).  \nReturns _pipe_ object which exposes `pipe.close` function. Invoke it to close configured _pipe_.  \nIt works internally by redefinition of `emit` method, if in your interface this method is referenced differently, provide its name (or symbol) with third argument.\n\n#### unify(emitter1, emitter2) _(event-emitter/unify)_\n\nUnifies event handling for two objects. Events emitted on _emitter1_ would be also emitted on _emitter2_, and other way back.  \nNon reversible.\n\n```javascript\nvar eeUnify = require('event-emitter/unify');\n\nvar emitter1 = ee(), listener1, listener3;\nvar emitter2 = ee(), listener2, listener4;\n\nemitter1.on('test', listener1 = function () { });\nemitter2.on('test', listener2 = function () { });\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n\nvar unify = eeUnify(emitter1, emitter2);\n\nemitter1.emit('test'); // Invoked listener1 and listener2\nemitter2.emit('test'); // Invoked listener1 and listener2\n\nemitter1.on('test', listener3 = function () { });\nemitter2.on('test', listener4 = function () { });\n\nemitter1.emit('test'); // Invoked listener1, listener2, listener3 and listener4\nemitter2.emit('test'); // Invoked listener1, listener2, listener3 and listener4\n```\n\n### Tests [![Build Status](https://travis-ci.org/medikoo/event-emitter.png)](https://travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/event-emitter",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "ECMAScript6 Map polyfill",
          "devDependencies": {
            "tad": "~0.2.7",
            "xlint": "~0.2.2",
            "xlint-jslint-medikoo": "~0.1.4"
          },
          "homepage": "https://github.com/medikoo/es6-map#readme",
          "keywords": [
            "collection",
            "es6",
            "shim",
            "harmony",
            "list",
            "hash",
            "map",
            "polyfill",
            "ponyfill",
            "ecmascript"
          ],
          "license": "MIT",
          "name": "es6-map",
          "repository": {
            "type": "git",
            "url": "git://github.com/medikoo/es6-map.git"
          },
          "scripts": {
            "lint": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream",
            "lint-console": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch",
            "test": "node ./node_modules/tad/bin/tad"
          },
          "version": "0.1.5",
          "readme": "# es6-map\n## Map collection as specified in ECMAScript6\n\n__Warning:  \nv0.1 version does not ensure O(1) algorithm complexity (but O(n)). This shortcoming will be addressed in v1.0__\n\n\n### Usage\n\nItâs safest to use *es6-map* as a [ponyfill](https://ponyfill.com) â a polyfill which doesnât touch global objects:\n\n```javascript\nvar Map = require('es6-map');\n```\n\nIf you want to make sure your environment implements `Map` globally, do:\n\n```javascript\nrequire('es6-map/implement');\n```\n\nIf you strictly want to use the polyfill even if the native `Map` exists, do:\n\n```javascript\nvar Map = require('es6-map/polyfill');\n```\n\n### Installation\n\n\t$ npm install es6-map\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Map = require('es6-map');\n\nvar x = {}, y = {}, map = new Map([['raz', 'one'], ['dwa', 'two'], [x, y]]);\n\nmap.size;                 // 3\nmap.get('raz');           // 'one'\nmap.get(x);               // y\nmap.has('raz');           // true\nmap.has(x);               // true\nmap.has('foo');           // false\nmap.set('trzy', 'three'); // map\nmap.size                  // 4\nmap.get('trzy');          // 'three'\nmap.has('trzy');          // true\nmap.has('dwa');           // true\nmap.delete('dwa');        // true\nmap.size;                 // 3\n\nmap.forEach(function (value, key) {\n  // { 'raz', 'one' }, { x, y }, { 'trzy', 'three' } iterated\n});\n\n// FF nightly only:\nfor (value of map) {\n // ['raz', 'one'], [x, y], ['trzy', 'three'] iterated\n}\n\nvar iterator = map.values();\n\niterator.next(); // { done: false, value: 'one' }\niterator.next(); // { done: false, value: y }\niterator.next(); // { done: false, value: 'three' }\niterator.next(); // { done: true, value: undefined }\n\nmap.clear(); // undefined\nmap.size; // 0\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-map.png)](https://travis-ci.org/medikoo/es6-map)\n\n\t$ npm test\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "d": "1",
            "es5-ext": "~0.10.14",
            "es6-iterator": "~2.0.1",
            "es6-set": "~0.1.5",
            "es6-symbol": "~3.1.1",
            "event-emitter": "~0.3.5"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
          "error": "[Circular]",
          "extraneous": false
        },
        "escope": {
          "_from": "escope@^3.6.0",
          "_id": "escope@3.6.0",
          "_inBundle": false,
          "_integrity": "sha1-4Bl16BJ4GhY6ba392AOY3GTIicM=",
          "_location": "/escope",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "escope@^3.6.0",
            "name": "escope",
            "escapedName": "escope",
            "rawSpec": "^3.6.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^3.6.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/escope/-/escope-3.6.0.tgz",
          "_shasum": "e01975e812781a163a6dadfdd80398dc64c889c3",
          "_spec": "escope@^3.6.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "bugs": {
            "url": "https://github.com/estools/escope/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "es6-map": {
              "_from": "es6-map@^0.1.3",
              "_id": "es6-map@0.1.5",
              "_inBundle": false,
              "_integrity": "sha1-kTbgUD3MBqMBaQ8LsU/042TpSfA=",
              "_location": "/es6-map",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/es6-map/-/es6-map-0.1.5.tgz",
              "_shasum": "9136e0503dcc06a301690f0bb14ff4e364e949f0",
              "_spec": "es6-map@^0.1.3",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "ECMAScript6 Map polyfill",
              "devDependencies": "[Circular]",
              "homepage": "https://github.com/medikoo/es6-map#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "es6-map",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.1.5",
              "readme": "# es6-map\n## Map collection as specified in ECMAScript6\n\n__Warning:  \nv0.1 version does not ensure O(1) algorithm complexity (but O(n)). This shortcoming will be addressed in v1.0__\n\n\n### Usage\n\nItâs safest to use *es6-map* as a [ponyfill](https://ponyfill.com) â a polyfill which doesnât touch global objects:\n\n```javascript\nvar Map = require('es6-map');\n```\n\nIf you want to make sure your environment implements `Map` globally, do:\n\n```javascript\nrequire('es6-map/implement');\n```\n\nIf you strictly want to use the polyfill even if the native `Map` exists, do:\n\n```javascript\nvar Map = require('es6-map/polyfill');\n```\n\n### Installation\n\n\t$ npm install es6-map\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Map = require('es6-map');\n\nvar x = {}, y = {}, map = new Map([['raz', 'one'], ['dwa', 'two'], [x, y]]);\n\nmap.size;                 // 3\nmap.get('raz');           // 'one'\nmap.get(x);               // y\nmap.has('raz');           // true\nmap.has(x);               // true\nmap.has('foo');           // false\nmap.set('trzy', 'three'); // map\nmap.size                  // 4\nmap.get('trzy');          // 'three'\nmap.has('trzy');          // true\nmap.has('dwa');           // true\nmap.delete('dwa');        // true\nmap.size;                 // 3\n\nmap.forEach(function (value, key) {\n  // { 'raz', 'one' }, { x, y }, { 'trzy', 'three' } iterated\n});\n\n// FF nightly only:\nfor (value of map) {\n // ['raz', 'one'], [x, y], ['trzy', 'three'] iterated\n}\n\nvar iterator = map.values();\n\niterator.next(); // { done: false, value: 'one' }\niterator.next(); // { done: false, value: y }\niterator.next(); // { done: false, value: 'three' }\niterator.next(); // { done: true, value: undefined }\n\nmap.clear(); // undefined\nmap.size; // 0\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-map.png)](https://travis-ci.org/medikoo/es6-map)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "es6-map"
            },
            "es6-weak-map": {
              "_from": "es6-weak-map@^2.0.1",
              "_id": "es6-weak-map@2.0.2",
              "_inBundle": false,
              "_integrity": "sha1-XjqzIlH/0VOKH45f+hNXdy+S2W8=",
              "_location": "/es6-weak-map",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "es6-weak-map@^2.0.1",
                "name": "es6-weak-map",
                "escapedName": "es6-weak-map",
                "rawSpec": "^2.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.1"
              },
              "_requiredBy": [
                "/escope"
              ],
              "_resolved": "https://registry.npmjs.org/es6-weak-map/-/es6-weak-map-2.0.2.tgz",
              "_shasum": "5e3ab32251ffd1538a1f8e5ffa1357772f92d96f",
              "_spec": "es6-weak-map@^2.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/escope",
              "author": {
                "name": "Mariusz Nowak",
                "email": "medyk@medikoo.com",
                "url": "http://www.medikoo.com/"
              },
              "bugs": {
                "url": "https://github.com/medikoo/es6-weak-map/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "d": {
                  "_from": "d@1",
                  "_id": "d@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",
                  "_location": "/d",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",
                  "_shasum": "754bb5bfe55451da69a58b94d45f4c5b0462d58f",
                  "_spec": "d@1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Property descriptor factory",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/d#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "d",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.0",
                  "readme": "# D\n## Property descriptor factory\n\n_Originally derived from [es5-ext](https://github.com/medikoo/es5-ext) package._\n\nDefining properties with descriptors is very verbose:\n\n```javascript\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  withdraw: { value: function () {\n      /* ... */\n    }, configurable: true, enumerable: false, writable: true },\n  balance: { get: function () {\n      /* ... */\n    }, configurable: true, enumerable: false }\n});\n```\n\nD cuts that to:\n\n```javascript\nvar d = require('d');\n\nvar Account = function () {};\nObject.defineProperties(Account.prototype, {\n  deposit: d(function () {\n    /* ... */\n  }),\n  withdraw: d(function () {\n    /* ... */\n  }),\n  balance: d.gs(function () {\n    /* ... */\n  })\n});\n```\n\nBy default, created descriptor follow characteristics of native ES5 properties, and defines values as:\n\n```javascript\n{ configurable: true, enumerable: false, writable: true }\n```\n\nYou can overwrite it by preceding _value_ argument with instruction:\n```javascript\nd('c', value); // { configurable: true, enumerable: false, writable: false }\nd('ce', value); // { configurable: true, enumerable: true, writable: false }\nd('e', value); // { configurable: false, enumerable: true, writable: false }\n\n// Same way for get/set:\nd.gs('e', value); // { configurable: false, enumerable: true }\n```\n\n### Installation\n\n\t$ npm install d\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Other utilities\n\n#### autoBind(obj, props) _(d/auto-bind)_\n\nDefine methods which will be automatically bound to its instances\n\n```javascript\nvar d = require('d');\nvar autoBind = require('d/auto-bind');\n\nvar Foo = function () { this._count = 0; };\nObject.defineProperties(Foo.prototype, autoBind({\n  increment: d(function () { ++this._count; });\n}));\n\nvar foo = new Foo();\n\n// Increment foo counter on each domEl click\ndomEl.addEventListener('click', foo.increment, false);\n```\n\n#### lazy(obj, props) _(d/lazy)_\n\nDefine lazy properties, which will be resolved on first access\n\n```javascript\nvar d = require('d');\nvar lazy = require('d/lazy');\n\nvar Foo = function () {};\nObject.defineProperties(Foo.prototype, lazy({\n  items: d(function () { return []; })\n}));\n\nvar foo = new Foo();\nfoo.items.push(1, 2); // foo.items array created and defined directly on foo\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/d.png)](https://travis-ci.org/medikoo/d)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/d",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "d"
                },
                "es5-ext": {
                  "_from": "es5-ext@~0.10.14",
                  "_id": "es5-ext@0.10.26",
                  "_inBundle": false,
                  "_integrity": "sha1-UbISilMbcMT2dkCTpzy+u4IYY3I=",
                  "_location": "/es5-ext",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.26.tgz",
                  "_shasum": "51b2128a531b70c4f6764093a73cbebb82186372",
                  "_spec": "es5-ext@~0.10.14",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript extensions and shims",
                  "devDependencies": "[Circular]",
                  "eslintConfig": "[Circular]",
                  "homepage": "https://github.com/medikoo/es5-ext#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es5-ext",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "0.10.26",
                  "readme": "# es5-ext\n## ECMAScript 5 extensions\n### (with respect to ECMAScript 6 standard)\n\nShims for upcoming ES6 standard and other goodies implemented strictly with ECMAScript conventions in mind.\n\nIt's designed to be used in compliant ECMAScript 5 or ECMAScript 6 environments. Older environments are not supported, although most of the features should work with correct ECMAScript 5 shim on board.\n\nWhen used in ECMAScript 6 environment, native implementation (if valid) takes precedence over shims.\n\n### Installation\n\n\t$ npm install es5-ext\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\n#### ECMAScript 6 features\n\nYou can force ES6 features to be implemented in your environment, e.g. following will assign `from` function to `Array` (only if it's not implemented already).\n\n```javascript\nrequire('es5-ext/array/from/implement');\nArray.from('foo'); // ['f', 'o', 'o']\n```\n\nYou can also access shims directly, without fixing native objects. Following will return native `Array.from` if it's available and fallback to shim if it's not.\n\n```javascript\nvar aFrom = require('es5-ext/array/from');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\nIf you want to use shim unconditionally (even if native implementation exists) do:\n\n```javascript\nvar aFrom = require('es5-ext/array/from/shim');\naFrom('foo'); // ['f', 'o', 'o']\n```\n\n##### List of ES6 shims\n\nIt's about properties introduced with ES6 and those that have been updated in new spec.\n\n- `Array.from` -> `require('es5-ext/array/from')`\n- `Array.of` -> `require('es5-ext/array/of')`\n- `Array.prototype.concat` -> `require('es5-ext/array/#/concat')`\n- `Array.prototype.copyWithin` -> `require('es5-ext/array/#/copy-within')`\n- `Array.prototype.entries` -> `require('es5-ext/array/#/entries')`\n- `Array.prototype.fill` -> `require('es5-ext/array/#/fill')`\n- `Array.prototype.filter` -> `require('es5-ext/array/#/filter')`\n- `Array.prototype.find` -> `require('es5-ext/array/#/find')`\n- `Array.prototype.findIndex` -> `require('es5-ext/array/#/find-index')`\n- `Array.prototype.keys` -> `require('es5-ext/array/#/keys')`\n- `Array.prototype.map` -> `require('es5-ext/array/#/map')`\n- `Array.prototype.slice` -> `require('es5-ext/array/#/slice')`\n- `Array.prototype.splice` -> `require('es5-ext/array/#/splice')`\n- `Array.prototype.values` -> `require('es5-ext/array/#/values')`\n- `Array.prototype[@@iterator]` -> `require('es5-ext/array/#/@@iterator')`\n- `Math.acosh` -> `require('es5-ext/math/acosh')`\n- `Math.asinh` -> `require('es5-ext/math/asinh')`\n- `Math.atanh` -> `require('es5-ext/math/atanh')`\n- `Math.cbrt` -> `require('es5-ext/math/cbrt')`\n- `Math.clz32` -> `require('es5-ext/math/clz32')`\n- `Math.cosh` -> `require('es5-ext/math/cosh')`\n- `Math.exmp1` -> `require('es5-ext/math/expm1')`\n- `Math.fround` -> `require('es5-ext/math/fround')`\n- `Math.hypot` -> `require('es5-ext/math/hypot')`\n- `Math.imul` -> `require('es5-ext/math/imul')`\n- `Math.log1p` -> `require('es5-ext/math/log1p')`\n- `Math.log2` -> `require('es5-ext/math/log2')`\n- `Math.log10` -> `require('es5-ext/math/log10')`\n- `Math.sign` -> `require('es5-ext/math/sign')`\n- `Math.signh` -> `require('es5-ext/math/signh')`\n- `Math.tanh` -> `require('es5-ext/math/tanh')`\n- `Math.trunc` -> `require('es5-ext/math/trunc')`\n- `Number.EPSILON` -> `require('es5-ext/number/epsilon')`\n- `Number.MAX_SAFE_INTEGER` -> `require('es5-ext/number/max-safe-integer')`\n- `Number.MIN_SAFE_INTEGER` -> `require('es5-ext/number/min-safe-integer')`\n- `Number.isFinite` -> `require('es5-ext/number/is-finite')`\n- `Number.isInteger` -> `require('es5-ext/number/is-integer')`\n- `Number.isNaN` -> `require('es5-ext/number/is-nan')`\n- `Number.isSafeInteger` -> `require('es5-ext/number/is-safe-integer')`\n- `Object.assign` -> `require('es5-ext/object/assign')`\n- `Object.keys` -> `require('es5-ext/object/keys')`\n- `Object.setPrototypeOf` -> `require('es5-ext/object/set-prototype-of')`\n- `RegExp.prototype.match` -> `require('es5-ext/reg-exp/#/match')`\n- `RegExp.prototype.replace` -> `require('es5-ext/reg-exp/#/replace')`\n- `RegExp.prototype.search` -> `require('es5-ext/reg-exp/#/search')`\n- `RegExp.prototype.split` -> `require('es5-ext/reg-exp/#/split')`\n- `RegExp.prototype.sticky` -> Implement with `require('es5-ext/reg-exp/#/sticky/implement')`, use as function with `require('es5-ext/reg-exp/#/is-sticky')`\n- `RegExp.prototype.unicode` -> Implement with `require('es5-ext/reg-exp/#/unicode/implement')`, use as function with `require('es5-ext/reg-exp/#/is-unicode')`\n- `String.fromCodePoint` -> `require('es5-ext/string/from-code-point')`\n- `String.raw` -> `require('es5-ext/string/raw')`\n- `String.prototype.codePointAt` -> `require('es5-ext/string/#/code-point-at')`\n- `String.prototype.contains` -> `require('es5-ext/string/#/contains')`\n- `String.prototype.endsWith` -> `require('es5-ext/string/#/ends-with')`\n- `String.prototype.normalize` -> `require('es5-ext/string/#/normalize')`\n- `String.prototype.repeat` -> `require('es5-ext/string/#/repeat')`\n- `String.prototype.startsWith` -> `require('es5-ext/string/#/starts-with')`\n- `String.prototype[@@iterator]` -> `require('es5-ext/string/#/@@iterator')`\n\n#### Non ECMAScript standard features\n\n__es5-ext__ provides also other utils, and implements them as if they were proposed for a standard. It mostly offers methods (not functions) which can directly be assigned to native prototypes:\n\n```javascript\nObject.defineProperty(Function.prototype, 'partial', { value: require('es5-ext/function/#/partial'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(Array.prototype, 'flatten', { value: require('es5-ext/array/#/flatten'),\n  configurable: true, enumerable: false, writable: true });\nObject.defineProperty(String.prototype, 'capitalize', { value: require('es5-ext/string/#/capitalize'),\n  configurable: true, enumerable: false, writable: true });\n```\n\nSee [es5-extend](https://github.com/wookieb/es5-extend#es5-extend), a great utility that automatically will extend natives for you. \n\n__Important:__ Remember to __not__ extend natives in scope of generic reusable packages (e.g. ones you intend to publish to npm). Extending natives is fine __only__ if you're the _owner_ of the global scope, so e.g. in final project you lead development of.\n\nWhen you're in situation when native extensions are not good idea, then you should use methods indirectly:\n\n\n```javascript\nvar flatten = require('es5-ext/array/#/flatten');\n\nflatten.call([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nfor better convenience you can turn methods into functions:\n\n\n```javascript\nvar call = Function.prototype.call\nvar flatten = call.bind(require('es5-ext/array/#/flatten'));\n\nflatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nYou can configure custom toolkit (like [underscorejs](http://underscorejs.org/)), and use it throughout your application\n\n```javascript\nvar util = {};\nutil.partial = call.bind(require('es5-ext/function/#/partial'));\nutil.flatten = call.bind(require('es5-ext/array/#/flatten'));\nutil.startsWith = call.bind(require('es5-ext/string/#/starts-with'));\n\nutil.flatten([1, [2, [3, 4]]]); // [1, 2, 3, 4]\n```\n\nAs with native ones most methods are generic and can be run on any type of object.\n\n## API\n\n### Global extensions\n\n#### global _(es5-ext/global)_\n\nObject that represents global scope\n\n### Array Constructor extensions\n\n#### from(arrayLike[, mapFn[, thisArg]]) _(es5-ext/array/from)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from).  \nReturns array representation of _iterable_ or _arrayLike_. If _arrayLike_ is an instance of array, its copy is returned.\n\n#### generate([length[, â¦fill]]) _(es5-ext/array/generate)_\n\nGenerate an array of pre-given _length_ built of repeated arguments.\n\n#### isPlainArray(x) _(es5-ext/array/is-plain-array)_\n\nReturns true if object is plain array (not instance of one of the Array's extensions).\n\n#### of([â¦items]) _(es5-ext/array/of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.of).  \nCreate an array from given arguments.\n\n#### toArray(obj) _(es5-ext/array/to-array)_\n\nReturns array representation of `obj`. If `obj` is already an array, `obj` is returned back.\n\n#### validArray(obj) _(es5-ext/array/valid-array)_\n\nReturns `obj` if it's an array, otherwise throws `TypeError`\n\n### Array Prototype extensions\n\n#### arr.binarySearch(compareFn) _(es5-ext/array/#/binary-search)_\n\nIn __sorted__ list search for index of item for which _compareFn_ returns value closest to _0_.  \nIt's variant of binary search algorithm\n\n#### arr.clear() _(es5-ext/array/#/clear)_\n\nClears the array\n\n#### arr.compact() _(es5-ext/array/#/compact)_\n\nReturns a copy of the context with all non-values (`null` or `undefined`) removed.\n\n#### arr.concat() _(es5-ext/array/#/concat)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.concat).  \nES6's version of `concat`. Supports `isConcatSpreadable` symbol, and returns array of same type as the context.\n\n#### arr.contains(searchElement[, position]) _(es5-ext/array/#/contains)_\n\nWhether list contains the given value.\n\n#### arr.copyWithin(target, start[, end]) _(es5-ext/array/#/copy-within)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.copywithin).  \n\n#### arr.diff(other) _(es5-ext/array/#/diff)_\n\nReturns the array of elements that are present in context list but not present in other list.\n\n#### arr.eIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-index-of)_\n\n_egal_ version of `indexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.eLastIndexOf(searchElement[, fromIndex]) _(es5-ext/array/#/e-last-index-of)_\n\n_egal_ version of `lastIndexOf` method. [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) logic is used for comparision\n\n#### arr.entries() _(es5-ext/array/#/entries)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.entries).  \nReturns iterator object, which traverses the array. Each value is represented with an array, where first value is an index and second is corresponding to index value.\n\n#### arr.exclusion([â¦lists]]) _(es5-ext/array/#/exclusion)_\n\nReturns the array of elements that are found only in one of the lists (either context list or list provided in arguments).\n\n#### arr.fill(value[, start, end]) _(es5-ext/array/#/fill)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.fill).  \n\n#### arr.filter(callback[, thisArg]) _(es5-ext/array/#/filter)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.filter).  \nES6's version of `filter`, returns array of same type as the context.\n\n#### arr.find(predicate[, thisArg]) _(es5-ext/array/#/find)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.find).  \nReturn first element for which given function returns true\n\n#### arr.findIndex(predicate[, thisArg]) _(es5-ext/array/#/find-index)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.findindex).  \nReturn first index for which given function returns true\n\n#### arr.first() _(es5-ext/array/#/first)_\n\nReturns value for first defined index\n\n#### arr.firstIndex() _(es5-ext/array/#/first-index)_\n\nReturns first declared index of the array\n\n#### arr.flatten() _(es5-ext/array/#/flatten)_\n\nReturns flattened version of the array\n\n#### arr.forEachRight(cb[, thisArg]) _(es5-ext/array/#/for-each-right)_\n\n`forEach` starting from last element\n\n#### arr.group(cb[, thisArg]) _(es5-ext/array/#/group)_\n\nGroup list elements by value returned by _cb_ function\n\n#### arr.indexesOf(searchElement[, fromIndex]) _(es5-ext/array/#/indexes-of)_\n\nReturns array of all indexes of given value\n\n#### arr.intersection([â¦lists]) _(es5-ext/array/#/intersection)_\n\nComputes the array of values that are the intersection of all lists (context list and lists given in arguments)\n\n#### arr.isCopy(other) _(es5-ext/array/#/is-copy)_\n\nReturns true if both context and _other_ lists have same content\n\n#### arr.isUniq() _(es5-ext/array/#/is-uniq)_\n\nReturns true if all values in array are unique\n\n#### arr.keys() _(es5-ext/array/#/keys)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.keys).  \nReturns iterator object, which traverses all array indexes.\n\n#### arr.last() _(es5-ext/array/#/last)_\n\nReturns value of last defined index\n\n#### arr.lastIndex() _(es5-ext/array/#/last)_\n\nReturns last defined index of the array\n\n#### arr.map(callback[, thisArg]) _(es5-ext/array/#/map)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.map).  \nES6's version of `map`, returns array of same type as the context.\n\n#### arr.remove(value[, â¦valuen]) _(es5-ext/array/#/remove)_\n\nRemove values from the array\n\n#### arr.separate(sep) _(es5-ext/array/#/separate)_\n\nReturns array with items separated with `sep` value\n\n#### arr.slice(callback[, thisArg]) _(es5-ext/array/#/slice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.slice).  \nES6's version of `slice`, returns array of same type as the context.\n\n#### arr.someRight(cb[, thisArg]) _(es5-ext/array/#/someRight)_\n\n`some` starting from last element\n\n#### arr.splice(callback[, thisArg]) _(es5-ext/array/#/splice)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.splice).  \nES6's version of `splice`, returns array of same type as the context.\n\n#### arr.uniq() _(es5-ext/array/#/uniq)_\n\nReturns duplicate-free version of the array\n\n#### arr.values() _(es5-ext/array/#/values)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype.values).  \nReturns iterator object which traverses all array values.\n\n#### arr[@@iterator] _(es5-ext/array/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.prototype-@@iterator).  \nReturns iterator object which traverses all array values.\n\n### Boolean Constructor extensions\n\n#### isBoolean(x) _(es5-ext/boolean/is-boolean)_\n\nWhether value is boolean\n\n### Date Constructor extensions\n\n#### isDate(x) _(es5-ext/date/is-date)_\n\nWhether value is date instance\n\n#### validDate(x) _(es5-ext/date/valid-date)_\n\nIf given object is not date throw TypeError in other case return it.\n\n### Date Prototype extensions\n\n#### date.copy(date) _(es5-ext/date/#/copy)_\n\nReturns a copy of the date object\n\n#### date.daysInMonth() _(es5-ext/date/#/days-in-month)_\n\nReturns number of days of date's month\n\n#### date.floorDay() _(es5-ext/date/#/floor-day)_\n\nSets the date time to 00:00:00.000\n\n#### date.floorMonth() _(es5-ext/date/#/floor-month)_\n\nSets date day to 1 and date time to 00:00:00.000\n\n#### date.floorYear() _(es5-ext/date/#/floor-year)_\n\nSets date month to 0, day to 1 and date time to 00:00:00.000\n\n#### date.format(pattern) _(es5-ext/date/#/format)_\n\nFormats date up to given string. Supported patterns:\n\n* `%Y` - Year with century, 1999, 2003\n* `%y` - Year without century, 99, 03\n* `%m` - Month, 01..12\n* `%d` - Day of the month 01..31\n* `%H` - Hour (24-hour clock), 00..23\n* `%M` - Minute, 00..59\n* `%S` - Second, 00..59\n* `%L` - Milliseconds, 000..999\n\n### Error Constructor extensions\n\n#### custom(message/*, code, ext*/) _(es5-ext/error/custom)_\n\nCreates custom error object, optinally extended with `code` and other extension properties (provided with `ext` object)  \n\n#### isError(x) _(es5-ext/error/is-error)_\n\nWhether value is an error (instance of `Error`).  \n\n#### validError(x) _(es5-ext/error/valid-error)_\n\nIf given object is not error throw TypeError in other case return it.\n\n### Error Prototype extensions\n\n#### err.throw() _(es5-ext/error/#/throw)_\n\nThrows error\n\n### Function Constructor extensions\n\nSome of the functions were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### constant(x) _(es5-ext/function/constant)_\n\nReturns a constant function that returns pregiven argument\n\n_k(x)(y)  =def  x_\n\n#### identity(x) _(es5-ext/function/identity)_\n\nIdentity function. Returns first argument\n\n_i(x)  =def  x_\n\n#### invoke(name[, â¦args]) _(es5-ext/function/invoke)_\n\nReturns a function that takes an object as an argument, and applies object's\n_name_ method to arguments.  \n_name_ can be name of the method or method itself.\n\n_invoke(name, â¦args)(object, â¦args2)  =def  object\\[name\\]\\(â¦args, â¦args2\\)_\n\n#### isArguments(x) _(es5-ext/function/is-arguments)_\n\nWhether value is arguments object\n\n#### isFunction(arg) _(es5-ext/function/is-function)_\n\nWhether value is instance of function\n\n#### noop() _(es5-ext/function/noop)_\n\nNo operation function\n\n#### pluck(name) _(es5-ext/function/pluck)_\n\nReturns a function that takes an object, and returns the value of its _name_\nproperty\n\n_pluck(name)(obj)  =def  obj[name]_\n\n#### validFunction(arg) _(es5-ext/function/valid-function)_\n\nIf given object is not function throw TypeError in other case return it.\n\n### Function Prototype extensions\n\nSome of the methods were inspired by [Functional JavaScript](http://osteele.com/sources/javascript/functional/) project by Olivier Steele\n\n#### fn.compose([â¦fns]) _(es5-ext/function/#/compose)_\n\nApplies the functions in reverse argument-list order.\n\n_f1.compose(f2, f3, f4)(â¦args)  =def  f1(f2(f3(f4(â¦arg))))_\n\n#### fn.copy() _(es5-ext/function/#/copy)_\n\nProduces copy of given function\n\n#### fn.curry([n]) _(es5-ext/function/#/curry)_\n\nInvoking the function returned by this function only _n_ arguments are passed to the underlying function. If the underlying function is not saturated, the result is a function that passes all its arguments to the underlying function.  \nIf _n_ is not provided then it defaults to context function length\n\n_f.curry(4)(arg1, arg2)(arg3)(arg4)  =def  f(arg1, args2, arg3, arg4)_\n\n#### fn.lock([â¦args]) _(es5-ext/function/#/lock)_\n\nReturns a function that applies the underlying function to _args_, and ignores its own arguments.\n\n_f.lock(â¦args)(â¦args2)  =def  f(â¦args)_\n\n_Named after it's counterpart in Google Closure_\n\n#### fn.not() _(es5-ext/function/#/not)_\n\nReturns a function that returns boolean negation of value returned by underlying function.\n\n_f.not()(â¦args)  =def !f(â¦args)_\n\n#### fn.partial([â¦args]) _(es5-ext/function/#/partial)_\n\nReturns a function that when called will behave like context function called with initially passed arguments. If more arguments are suplilied, they are appended to initial args.\n\n_f.partial(â¦args1)(â¦args2)  =def  f(â¦args1, â¦args2)_\n\n#### fn.spread() _(es5-ext/function/#/spread)_\n\nReturns a function that applies underlying function with first list argument\n\n_f.match()(args)  =def  f.apply(null, args)_\n\n#### fn.toStringTokens() _(es5-ext/function/#/to-string-tokens)_\n\nSerializes function into two (arguments and body) string tokens. Result is plain object with `args` and `body` properties.\n\n### Math extensions\n\n#### acosh(x) _(es5-ext/math/acosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.acosh).  \n\n#### asinh(x) _(es5-ext/math/asinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.asinh).  \n\n#### atanh(x) _(es5-ext/math/atanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.atanh).  \n\n#### cbrt(x) _(es5-ext/math/cbrt)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cbrt).  \n\n#### clz32(x) _(es5-ext/math/clz32)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.clz32).  \n\n#### cosh(x) _(es5-ext/math/cosh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.cosh).  \n\n#### expm1(x) _(es5-ext/math/expm1)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.expm1).  \n\n#### fround(x) _(es5-ext/math/fround)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.fround).  \n\n#### hypot([â¦values]) _(es5-ext/math/hypot)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.hypot).  \n\n#### imul(x, y) _(es5-ext/math/imul)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.imul).  \n\n#### log1p(x) _(es5-ext/math/log1p)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log1p).  \n\n#### log2(x) _(es5-ext/math/log2)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log2).  \n\n#### log10(x) _(es5-ext/math/log10)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.log10).  \n\n#### sign(x) _(es5-ext/math/sign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign).  \n\n#### sinh(x) _(es5-ext/math/sinh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sinh).  \n\n#### tanh(x) _(es5-ext/math/tanh)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.tanh).  \n\n#### trunc(x) _(es5-ext/math/trunc)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.trunc).  \n\n### Number Constructor extensions\n\n#### EPSILON _(es5-ext/number/epsilon)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.epsilon).  \n\nThe difference between 1 and the smallest value greater than 1 that is representable as a Number value, which is approximately 2.2204460492503130808472633361816 x 10-16.\n\n#### isFinite(x) _(es5-ext/number/is-finite)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite).  \nWhether value is finite. Differs from global isNaN that it doesn't do type coercion.\n\n#### isInteger(x) _(es5-ext/number/is-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger).  \nWhether value is integer.\n\n#### isNaN(x) _(es5-ext/number/is-nan)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isnan).  \nWhether value is NaN. Differs from global isNaN that it doesn't do type coercion.\n\n#### isNumber(x) _(es5-ext/number/is-number)_\n\nWhether given value is number\n\n#### isSafeInteger(x) _(es5-ext/number/is-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.issafeinteger).  \n\n#### MAX_SAFE_INTEGER _(es5-ext/number/max-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.maxsafeinteger).  \nThe value of Number.MAX_SAFE_INTEGER is 9007199254740991.\n\n#### MIN_SAFE_INTEGER _(es5-ext/number/min-safe-integer)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.minsafeinteger).  \nThe value of Number.MIN_SAFE_INTEGER is -9007199254740991 (253-1).\n\n#### toInteger(x) _(es5-ext/number/to-integer)_\n\nConverts value to integer\n\n#### toPosInteger(x) _(es5-ext/number/to-pos-integer)_\n\nConverts value to positive integer. If provided value is less than 0, then 0 is returned\n\n#### toUint32(x) _(es5-ext/number/to-uint32)_\n\nConverts value to unsigned 32 bit integer. This type is used for array lengths.\nSee: http://www.2ality.com/2012/02/js-integers.html\n\n### Number Prototype extensions\n\n#### num.pad(length[, precision]) _(es5-ext/number/#/pad)_\n\nPad given number with zeros. Returns string\n\n### Object Constructor extensions\n\n#### assign(target, source[, â¦sourcen]) _(es5-ext/object/assign)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).  \nExtend _target_ by enumerable own properties of other objects. If properties are already set on target object, they will be overwritten.\n\n#### clear(obj) _(es5-ext/object/clear)_\n\nRemove all enumerable own properties of the object\n\n#### compact(obj) _(es5-ext/object/compact)_\n\nReturns copy of the object with all enumerable properties that have no falsy values\n\n#### compare(obj1, obj2) _(es5-ext/object/compare)_\n\nUniversal cross-type compare function. To be used for e.g. array sort.\n\n#### copy(obj) _(es5-ext/object/copy)_\n\nReturns copy of the object with all enumerable properties.\n\n#### copyDeep(obj) _(es5-ext/object/copy-deep)_\n\nReturns deep copy of the object with all enumerable properties.\n\n#### count(obj) _(es5-ext/object/count)_\n\nCounts number of enumerable own properties on object\n\n#### create(obj[, properties]) _(es5-ext/object/create)_\n\n`Object.create` alternative that provides workaround for [V8 issue](http://code.google.com/p/v8/issues/detail?id=2804).\n\nWhen `null` is provided as a prototype, it's substituted with specially prepared object that derives from Object.prototype but has all Object.prototype properties shadowed with undefined.\n\nIt's quirky solution that allows us to have plain objects with no truthy properties but with turnable prototype.\n\nUse only for objects that you plan to switch prototypes of and be aware of limitations of this workaround.\n\n#### eq(x, y) _(es5-ext/object/eq)_\n\nWhether two values are equal, using [_SameValueZero_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### every(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/every)_\n\nAnalogous to Array.prototype.every. Returns true if every key-value pair in this object satisfies the provided testing function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### filter(obj, cb[, thisArg]) _(es5-ext/object/filter)_\n\nAnalogous to Array.prototype.filter. Returns new object with properites for which _cb_ function returned truthy value.\n\n#### firstKey(obj) _(es5-ext/object/first-key)_\n\nReturns first enumerable key of the object, as keys are unordered by specification, it can be any key of an object.\n\n#### flatten(obj) _(es5-ext/object/flatten)_\n\nReturns new object, with flatten properties of input object\n\n_flatten({ a: { b: 1 }, c: { d: 1 } })  =def  { b: 1, d: 1 }_\n\n#### forEach(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/for-each)_\n\nAnalogous to Array.prototype.forEach. Calls a function for each key-value pair found in object\nOptionally _compareFn_ can be provided which assures that properties are iterated in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### getPropertyNames() _(es5-ext/object/get-property-names)_\n\nGet all (not just own) property names of the object\n\n#### is(x, y) _(es5-ext/object/is)_\n\nWhether two values are equal, using [_SameValue_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero) algorithm.\n\n#### isArrayLike(x) _(es5-ext/object/is-array-like)_\n\nWhether object is array-like object\n\n#### isCopy(x, y) _(es5-ext/object/is-copy)_\n\nTwo values are considered a copy of same value when all of their own enumerable properties have same values.\n\n#### isCopyDeep(x, y) _(es5-ext/object/is-copy-deep)_\n\nDeep comparision of objects\n\n#### isEmpty(obj) _(es5-ext/object/is-empty)_\n\nTrue if object doesn't have any own enumerable property\n\n#### isObject(arg) _(es5-ext/object/is-object)_\n\nWhether value is not primitive\n\n#### isPlainObject(arg) _(es5-ext/object/is-plain-object)_\n\nWhether object is plain object, its protototype should be Object.prototype and it cannot be host object.\n\n#### keyOf(obj, searchValue) _(es5-ext/object/key-of)_\n\nSearch object for value\n\n#### keys(obj) _(es5-ext/object/keys)_\n\n[_Updated with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys).  \nES6's version of `keys`, doesn't throw on primitive input\n\n#### map(obj, cb[, thisArg]) _(es5-ext/object/map)_\n\nAnalogous to Array.prototype.map. Creates a new object with properties which values are results of calling a provided function on every key-value pair in this object.\n\n#### mapKeys(obj, cb[, thisArg]) _(es5-ext/object/map-keys)_\n\nCreate new object with same values, but remapped keys\n\n#### mixin(target, source) _(es5-ext/object/mixin)_\n\nExtend _target_ by all own properties of other objects. Properties found in both objects will be overwritten (unless they're not configurable and cannot be overwritten).\n_It was for a moment part of ECMAScript 6 draft._\n\n#### mixinPrototypes(target, â¦source]) _(es5-ext/object/mixin-prototypes)_\n\nExtends _target_, with all source and source's prototype properties.\nUseful as an alternative for `setPrototypeOf` in environments in which it cannot be shimmed (no `__proto__` support).\n\n#### normalizeOptions(options) _(es5-ext/object/normalize-options)_\n\nNormalizes options object into flat plain object.  \n\nUseful for functions in which we either need to keep options object for future reference or need to modify it for internal use.\n\n- It never returns input `options` object back (always a copy is created)\n- `options` can be undefined in such case empty plain object is returned.\n- Copies all enumerable properties found down prototype chain.\n\n#### primitiveSet([â¦names]) _(es5-ext/object/primitive-set)_\n\nCreates `null` prototype based plain object, and sets on it all property names provided in arguments to true.\n\n#### safeTraverse(obj[, â¦names]) _(es5-ext/object/safe-traverse)_\n\nSafe navigation of object properties. See http://wiki.ecmascript.org/doku.php?id=strawman:existential_operator\n\n#### serialize(value) _(es5-ext/object/serialize)_\n\nSerialize value into string. Differs from [JSON.stringify](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that it serializes also dates, functions and regular expresssions.\n\n#### setPrototypeOf(object, proto) _(es5-ext/object/set-prototype-of)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.setprototypeof).  \nIf native version is not provided, it depends on existence of `__proto__` functionality, if it's missing, `null` instead of function is exposed.\n\n#### some(obj, cb[, thisArg[, compareFn]]) _(es5-ext/object/some)_\n\nAnalogous to Array.prototype.some Returns true if any key-value pair satisfies the provided\ntesting function.  \nOptionally _compareFn_ can be provided which assures that keys are tested in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### toArray(obj[, cb[, thisArg[, compareFn]]]) _(es5-ext/object/to-array)_\n\nCreates an array of results of calling a provided function on every key-value pair in this object.  \nOptionally _compareFn_ can be provided which assures that results are added in given order. If provided _compareFn_ is equal to `true`, then order is alphabetical (by key).\n\n#### unserialize(str) _(es5-ext/object/unserialize)_\n\nUserializes value previously serialized with [serialize](#serializevalue-es5-extobjectserialize)\n\n#### validCallable(x) _(es5-ext/object/valid-callable)_\n\nIf given object is not callable throw TypeError in other case return it.\n\n#### validObject(x) _(es5-ext/object/valid-object)_\n\nThrows error if given value is not an object, otherwise it is returned.\n\n#### validValue(x) _(es5-ext/object/valid-value)_\n\nThrows error if given value is `null` or `undefined`, otherwise returns value.\n\n### RegExp Constructor extensions\n\n#### escape(str) _(es5-ext/reg-exp/escape)_\n\nEscapes string to be used in regular expression\n\n#### isRegExp(x) _(es5-ext/reg-exp/is-reg-exp)_\n\nWhether object is regular expression\n\n#### validRegExp(x) _(es5-ext/reg-exp/valid-reg-exp)_\n\nIf object is regular expression it is returned, otherwise TypeError is thrown.\n\n### RegExp Prototype extensions\n\n#### re.isSticky(x) _(es5-ext/reg-exp/#/is-sticky)_\n\nWhether regular expression has `sticky` flag.\n\nIt's to be used as counterpart to [regExp.sticky](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.sticky) if it's not implemented.\n\n#### re.isUnicode(x) _(es5-ext/reg-exp/#/is-unicode)_\n\nWhether regular expression has `unicode` flag.\n\nIt's to be used as counterpart to [regExp.unicode](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-get-regexp.prototype.unicode) if it's not implemented.\n\n#### re.match(string) _(es5-ext/reg-exp/#/match)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.match).  \n\n#### re.replace(string, replaceValue) _(es5-ext/reg-exp/#/replace)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.replace).  \n\n#### re.search(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.search).  \n\n#### re.split(string) _(es5-ext/reg-exp/#/search)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.split).  \n\n#### re.sticky _(es5-ext/reg-exp/#/sticky/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.sticky).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n#### re.unicode _(es5-ext/reg-exp/#/unicode/implement)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-regexp.prototype.unicode).  \nIt's a getter, so only `implement` and `is-implemented` modules are provided.\n\n### String Constructor extensions\n\n#### formatMethod(fMap) _(es5-ext/string/format-method)_\n\nCreates format method. It's used e.g. to create `Date.prototype.format` method\n\n#### fromCodePoint([â¦codePoints]) _(es5-ext/string/from-code-point)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.fromcodepoint)\n\n#### isString(x) _(es5-ext/string/is-string)_\n\nWhether object is string\n\n#### randomUniq() _(es5-ext/string/random-uniq)_\n\nReturns randomly generated id, with guarantee of local uniqueness (no same id will be returned twice)\n\n#### raw(callSite[, â¦substitutions]) _(es5-ext/string/raw)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.raw)\n\n### String Prototype extensions\n\n#### str.at(pos) _(es5-ext/string/#/at)_\n\n_Proposed for ECMAScript 6/7 standard, but not (yet) in a draft_\n\nReturns a string at given position in Unicode-safe manner.\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.at).\n\n#### str.camelToHyphen() _(es5-ext/string/#/camel-to-hyphen)_\n\nConvert camelCase string to hyphen separated, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from js property convention into filename convention.\n\n#### str.capitalize() _(es5-ext/string/#/capitalize)_\n\nCapitalize first character of a string\n\n#### str.caseInsensitiveCompare(str) _(es5-ext/string/#/case-insensitive-compare)_\n\nCase insensitive compare\n\n#### str.codePointAt(pos) _(es5-ext/string/#/code-point-at)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.codepointat)\n\nBased on [implementation by Mathias Bynens](https://github.com/mathiasbynens/String.prototype.codePointAt).\n\n#### str.contains(searchString[, position]) _(es5-ext/string/#/contains)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.contains)\n\nWhether string contains given string.\n\n#### str.endsWith(searchString[, endPosition]) _(es5-ext/string/#/ends-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.endswith).  \nWhether strings ends with given string\n\n#### str.hyphenToCamel() _(es5-ext/string/#/hyphen-to-camel)_\n\nConvert hyphen separated string to camelCase, e.g. one-two-three -> oneTwoThree.\nUseful when converting names from filename convention to js property name convention.\n\n#### str.indent(str[, count]) _(es5-ext/string/#/indent)_\n\nIndents each line with provided _str_ (if _count_ given then _str_ is repeated _count_ times).\n\n#### str.last() _(es5-ext/string/#/last)_\n\nReturn last character\n\n#### str.normalize([form]) _(es5-ext/string/#/normalize)_\n\n[_Introduced with ECMAScript 6_](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize).  \nReturns the Unicode Normalization Form of a given string.  \nBased on Matsuza's version. Code used for integrated shim can be found at [github.com/walling/unorm](https://github.com/walling/unorm/blob/master/lib/unorm.js)\n\n#### str.pad(fill[, length]) _(es5-ext/string/#/pad)_\n\nPad string with _fill_.\nIf _length_ si given than _fill_ is reapated _length_ times.\nIf _length_ is negative then pad is applied from right.\n\n#### str.repeat(n) _(es5-ext/string/#/repeat)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat).  \nRepeat given string _n_ times\n\n#### str.plainReplace(search, replace) _(es5-ext/string/#/plain-replace)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces just first occurrence of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.plainReplaceAll(search, replace) _(es5-ext/string/#/plain-replace-all)_\n\nSimple `replace` version. Doesn't support regular expressions. Replaces all occurrences of search string. Doesn't support insert patterns, therefore it is safe to replace text with text obtained programmatically (there's no need for additional _$_ characters escape in such case).\n\n#### str.startsWith(searchString[, position]) _(es5-ext/string/#/starts-with)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.startswith).  \nWhether strings starts with given string\n\n#### str[@@iterator] _(es5-ext/string/#/@@iterator)_\n\n[_Introduced with ECMAScript 6_](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator).  \nReturns iterator object which traverses all string characters (with respect to unicode symbols)\n\n### Tests [![Build Status](https://img.shields.io/circleci/project/github/medikoo/es5-ext.svg)](https://circleci.com/gh/medikoo/es5-ext)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es5-ext",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es5-ext"
                },
                "es6-iterator": {
                  "_from": "es6-iterator@~2.0.1",
                  "_id": "es6-iterator@2.0.1",
                  "_inBundle": false,
                  "_integrity": "sha1-jjGcnwRTv1ddN0lAplWSDlnKVRI=",
                  "_location": "/es6-iterator",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.1.tgz",
                  "_shasum": "8e319c9f0453bf575d374940a655920e59ca5512",
                  "_spec": "es6-iterator@~2.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Iterator abstraction based on ES6 specification",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/es6-iterator#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es6-iterator",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "2.0.1",
                  "readme": "# es6-iterator\n## ECMAScript 6 Iterator interface\n\n### Installation\n\n\t$ npm install es6-iterator\n\t\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## API\n\n### Constructors\n\n#### Iterator(list) _(es6-iterator)_\n\nAbstract Iterator interface. Meant for extensions and not to be used on its own.\n\nAccepts any _list_ object (technically object with numeric _length_ property).\n\n_Mind it doesn't iterate strings properly, for that use dedicated [StringIterator](#string-iterator)_\n\n```javascript\nvar Iterator = require('es6-iterator')\nvar iterator = new Iterator([1, 2, 3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n\n#### ArrayIterator(arrayLike[, kind]) _(es6-iterator/array)_\n\nDedicated for arrays and array-likes. Supports three iteration kinds:\n* __value__ _(default)_ - Iterates values\n* __key__ - Iterates indexes\n* __key+value__ - Iterates keys and indexes, each iteration value is in _[key, value]_ form.\n\n\n```javascript\nvar ArrayIterator = require('es6-iterator/array')\nvar iterator = new ArrayIterator([1, 2, 3], 'key+value');\n\niterator.next(); // { value: [0, 1], done: false }\niterator.next(); // { value: [1, 2], done: false }\niterator.next(); // { value: [2, 3], done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\nMay also be used for _arguments_ objects:\n\n```javascript\n(function () {\n  var iterator = new ArrayIterator(arguments);\n\n  iterator.next(); // { value: 1, done: false }\n  iterator.next(); // { value: 2, done: false }\n  iterator.next(); // { value: 3, done: false }\n  iterator.next(); // { value: undefined, done: true }\n}(1, 2, 3));\n```\n\n#### StringIterator(str) _(es6-iterator/string)_\n\nAssures proper iteration over unicode symbols.  \nSee: http://mathiasbynens.be/notes/javascript-unicode\n\n```javascript\nvar StringIterator = require('es6-iterator/string');\nvar iterator = new StringIterator('fðoðoð');\n\niterator.next(); // { value: 'f', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: 'o', done: false }\niterator.next(); // { value: 'ð', done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n### Function utilities\n\n#### forOf(iterable, callback[, thisArg]) _(es6-iterator/for-of)_\n\nPolyfill for ECMAScript 6 [`for...of`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of) statement.\n\n```\nvar forOf = require('es6-iterator/for-of');\nvar result = [];\n\nforOf('ððð', function (monkey) { result.push(monkey); });\nconsole.log(result); // ['ð', 'ð', 'ð'];\n```\n\nOptionally you can break iteration at any point:\n\n```javascript\nvar result = [];\n\nforOf([1,2,3,4]', function (val, doBreak) {\n  result.push(monkey);\n  if (val >= 3) doBreak();\n});\nconsole.log(result); // [1, 2, 3];\n```\n\n#### get(obj) _(es6-iterator/get)_\n\nReturn iterator for any iterable object.\n\n```javascript\nvar getIterator = require('es6-iterator/get');\nvar iterator = get([1,2,3]);\n\niterator.next(); // { value: 1, done: false }\niterator.next(); // { value: 2, done: false }\niterator.next(); // { value: 3, done: false }\niterator.next(); // { value: undefined, done: true }\n```\n\n#### isIterable(obj) _(es6-iterator/is-iterable)_\n\nWhether _obj_ is iterable\n\n```javascript\nvar isIterable = require('es6-iterator/is-iterable');\n\nisIterable(null); // false\nisIterable(true); // false\nisIterable('str'); // true\nisIterable(['a', 'r', 'r']); // true\nisIterable(new ArrayIterator([])); // true\n```\n\n#### validIterable(obj) _(es6-iterator/valid-iterable)_\n\nIf _obj_ is an iterable it is returned. Otherwise _TypeError_ is thrown.\n\n### Method extensions\n\n#### iterator.chain(iterator1[, â¦iteratorn]) _(es6-iterator/#/chain)_\n\nChain multiple iterators into one.\n\n### Tests [![Build Status](https://travis-ci.org/medikoo/es6-iterator.png)](https://travis-ci.org/medikoo/es6-iterator)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-iterator",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es6-iterator"
                },
                "es6-symbol": {
                  "_from": "es6-symbol@~3.1.1",
                  "_id": "es6-symbol@3.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",
                  "_location": "/es6-symbol",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",
                  "_shasum": "bf00ef4fdab6ba1b46ecb7b629b4c7ed5715cc77",
                  "_spec": "es6-symbol@~3.1.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-map",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "ECMAScript 6 Symbol polyfill",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/medikoo/es6-symbol#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "es6-symbol",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "3.1.1",
                  "readme": "# es6-symbol\n## ECMAScript 6 Symbol polyfill\n\nFor more information about symbols see following links\n- [Symbols in ECMAScript 6 by Axel Rauschmayer](http://www.2ality.com/2014/12/es6-symbols.html)\n- [MDN Documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol)\n- [Specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-constructor)\n\n### Limitations\n\nUnderneath it uses real string property names which can easily be retrieved, however accidental collision with other property names is unlikely.\n\n### Usage\n\nIf you'd like to use native version when it exists and fallback to [ponyfill](https://ponyfill.com) if it doesn't, use *es6-symbol* as following:\n\n```javascript\nvar Symbol = require('es6-symbol');\n```\n\nIf you want to make sure your environment implements `Symbol` globally, do:\n\n```javascript\nrequire('es6-symbol/implement');\n```\n\nIf you strictly want to use polyfill even if native `Symbol` exists (hard to find a good reason for that), do:\n\n```javascript\nvar Symbol = require('es6-symbol/polyfill');\n```\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-symbol-objects). Still if you want quick look, follow examples:\n\n```javascript\nvar Symbol = require('es6-symbol');\n\nvar symbol = Symbol('My custom symbol');\nvar x = {};\n\nx[symbol] = 'foo';\nconsole.log(x[symbol]); 'foo'\n\n// Detect iterable:\nvar iterator, result;\nif (possiblyIterable[Symbol.iterator]) {\n  iterator = possiblyIterable[Symbol.iterator]();\n  result = iterator.next();\n  while(!result.done) {\n    console.log(result.value);\n    result = iterator.next();\n  }\n}\n```\n\n### Installation\n#### NPM\n\nIn your project path:\n\n\t$ npm install es6-symbol\n\n##### Browser\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-symbol.png)](https://travis-ci.org/medikoo/es6-symbol)\n\n\t$ npm test\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-symbol",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "es6-symbol"
                }
              },
              "deprecated": false,
              "description": "ECMAScript6 WeakMap polyfill",
              "devDependencies": {
                "tad": "^0.2.7",
                "xlint": "^0.2.2",
                "xlint-jslint-medikoo": "^0.1.4"
              },
              "homepage": "https://github.com/medikoo/es6-weak-map#readme",
              "keywords": [
                "map",
                "weakmap",
                "collection",
                "es6",
                "harmony",
                "list",
                "hash",
                "gc",
                "ponyfill"
              ],
              "license": "MIT",
              "name": "es6-weak-map",
              "repository": {
                "type": "git",
                "url": "git://github.com/medikoo/es6-weak-map.git"
              },
              "scripts": {
                "lint": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --no-cache --no-stream",
                "lint-console": "node node_modules/xlint/bin/xlint --linter=node_modules/xlint-jslint-medikoo/index.js --watch",
                "test": "node ./node_modules/tad/bin/tad"
              },
              "version": "2.0.2",
              "readme": "# es6-weak-map\n## WeakMap collection as specified in ECMAScript6\n\n_Roughly inspired by Mark Miller's and Kris Kowal's [WeakMap implementation](https://github.com/drses/weak-map)_.\n\nDifferences are:\n- Assumes compliant ES5 environment (no weird ES3 workarounds or hacks)\n- Well modularized CJS style\n- Based on one solution.\n\n### Limitations\n\n- Will fail on non extensible objects provided as keys\n\n### Installation\n\n\t$ npm install es6-weak-map\n\nTo port it to Browser or any other (non CJS) environment, use your favorite CJS bundler. No favorite yet? Try: [Browserify](http://browserify.org/), [Webmake](https://github.com/medikoo/modules-webmake) or [Webpack](http://webpack.github.io/)\n\n### Usage\n\nIf you want to make sure your environment implements `WeakMap`, do:\n\n```javascript\nrequire('es6-weak-map/implement');\n```\n\nIf you'd like to use native version when it exists and fallback to polyfill if it doesn't, but without implementing `WeakMap` on global scope, do:\n\n```javascript\nvar WeakMap = require('es6-weak-map');\n```\n\nIf you strictly want to use polyfill even if native `WeakMap` exists, do:\n\n```javascript\nvar WeakMap = require('es6-weak-map/polyfill');\n```\n\n#### API\n\nBest is to refer to [specification](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-weakmap-objects). Still if you want quick look, follow example:\n\n```javascript\nvar WeakMap = require('es6-weak-map');\n\nvar map = new WeakMap();\nvar obj = {};\n\nmap.set(obj, 'foo'); // map\nmap.get(obj);        // 'foo'\nmap.has(obj);        // true\nmap.delete(obj);     // true\nmap.get(obj);        // undefined\nmap.has(obj);        // false\nmap.set(obj, 'bar'); // map\nmap.has(obj);        // false\n```\n\n## Tests [![Build Status](https://travis-ci.org/medikoo/es6-weak-map.svg)](https://travis-ci.org/medikoo/es6-weak-map)\n\n\t$ npm test\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "d": "1",
                "es5-ext": "^0.10.14",
                "es6-iterator": "^2.0.1",
                "es6-symbol": "^3.1.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/es6-weak-map",
              "error": "[Circular]",
              "extraneous": false
            },
            "esrecurse": {
              "_from": "esrecurse@^4.1.0",
              "_id": "esrecurse@4.2.0",
              "_inBundle": false,
              "_integrity": "sha1-+pVo2Y04I/mkHZHpAtyrnqblsWM=",
              "_location": "/esrecurse",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "esrecurse@^4.1.0",
                "name": "esrecurse",
                "escapedName": "esrecurse",
                "rawSpec": "^4.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^4.1.0"
              },
              "_requiredBy": [
                "/escope"
              ],
              "_resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.0.tgz",
              "_shasum": "fa9568d98d3823f9a41d91e902dcab9ea6e5b163",
              "_spec": "esrecurse@^4.1.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/escope",
              "babel": {
                "presets": [
                  "es2015"
                ]
              },
              "bugs": {
                "url": "https://github.com/estools/esrecurse/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "estraverse": {
                  "_from": "estraverse@^4.2.0",
                  "_id": "estraverse@4.2.0",
                  "_inBundle": false,
                  "_integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
                  "_location": "/estraverse",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "estraverse@^4.2.0",
                    "name": "estraverse",
                    "escapedName": "estraverse",
                    "rawSpec": "^4.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^4.2.0"
                  },
                  "_requiredBy": [
                    "/escope",
                    "/eslint",
                    "/esrecurse"
                  ],
                  "_resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
                  "_shasum": "0dee3fed31fcd469618ce7342099fc1afa0bdb13",
                  "_spec": "estraverse@^4.2.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
                  "bugs": {
                    "url": "https://github.com/estools/estraverse/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "ECMAScript JS AST traversal functions",
                  "devDependencies": {
                    "babel-preset-es2015": "^6.3.13",
                    "babel-register": "^6.3.13",
                    "chai": "^2.1.1",
                    "espree": "^1.11.0",
                    "gulp": "^3.8.10",
                    "gulp-bump": "^0.2.2",
                    "gulp-filter": "^2.0.0",
                    "gulp-git": "^1.0.1",
                    "gulp-tag-version": "^1.2.1",
                    "jshint": "^2.5.6",
                    "mocha": "^2.1.0"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "homepage": "https://github.com/estools/estraverse",
                  "license": "BSD-2-Clause",
                  "main": "estraverse.js",
                  "maintainers": [
                    {
                      "name": "Yusuke Suzuki",
                      "email": "utatane.tea@gmail.com",
                      "url": "http://github.com/Constellation"
                    }
                  ],
                  "name": "estraverse",
                  "repository": {
                    "type": "git",
                    "url": "git+ssh://git@github.com/estools/estraverse.git"
                  },
                  "scripts": {
                    "lint": "jshint estraverse.js",
                    "test": "npm run-script lint && npm run-script unit-test",
                    "unit-test": "mocha --compilers js:babel-register"
                  },
                  "version": "4.2.0",
                  "readme": "ERROR: No README data found!",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/estraverse",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "estraverse"
                },
                "object-assign": {
                  "_from": "object-assign@^4.0.1",
                  "_id": "object-assign@4.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
                  "_location": "/object-assign",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "object-assign@^4.0.1",
                    "name": "object-assign",
                    "escapedName": "object-assign",
                    "rawSpec": "^4.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^4.0.1"
                  },
                  "_requiredBy": [
                    "/del",
                    "/esrecurse",
                    "/figures",
                    "/file-entry-cache",
                    "/globby"
                  ],
                  "_resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                  "_shasum": "2109adc7965887cfc05cbbd442cac8bfbb360863",
                  "_spec": "object-assign@^4.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esrecurse",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/object-assign/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "ES2015 `Object.assign()` ponyfill",
                  "devDependencies": {
                    "ava": "^0.16.0",
                    "lodash": "^4.16.4",
                    "matcha": "^0.7.0",
                    "xo": "^0.16.0"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/object-assign#readme",
                  "keywords": [
                    "object",
                    "assign",
                    "extend",
                    "properties",
                    "es2015",
                    "ecmascript",
                    "harmony",
                    "ponyfill",
                    "prollyfill",
                    "polyfill",
                    "shim",
                    "browser"
                  ],
                  "license": "MIT",
                  "name": "object-assign",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/object-assign.git"
                  },
                  "scripts": {
                    "bench": "matcha bench.js",
                    "test": "xo && ava"
                  },
                  "version": "4.1.1",
                  "readme": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) [ponyfill](https://ponyfill.com)\n\n\n## Use the built-in\n\nNode.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\nsupport `Object.assign()` :tada:. If you target only those environments, then by all\nmeans, use `Object.assign()` instead of this package.\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/object-assign",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "object-assign"
                }
              },
              "deprecated": false,
              "description": "ECMAScript AST recursive visitor",
              "devDependencies": {
                "babel-cli": "^6.24.1",
                "babel-eslint": "^7.2.3",
                "babel-preset-es2015": "^6.24.1",
                "babel-register": "^6.24.1",
                "chai": "^4.0.2",
                "esprima": "^4.0.0",
                "gulp": "^3.9.0",
                "gulp-bump": "^2.7.0",
                "gulp-eslint": "^4.0.0",
                "gulp-filter": "^5.0.0",
                "gulp-git": "^2.4.1",
                "gulp-mocha": "^4.3.1",
                "gulp-tag-version": "^1.2.1",
                "jsdoc": "^3.3.0-alpha10",
                "minimist": "^1.1.0"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "homepage": "https://github.com/estools/esrecurse",
              "license": "BSD-2-Clause",
              "main": "esrecurse.js",
              "maintainers": [
                {
                  "name": "Yusuke Suzuki",
                  "email": "utatane.tea@gmail.com",
                  "url": "https://github.com/Constellation"
                }
              ],
              "name": "esrecurse",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/estools/esrecurse.git"
              },
              "scripts": {
                "lint": "gulp lint",
                "test": "gulp travis",
                "unit-test": "gulp test"
              },
              "version": "4.2.0",
              "readme": "### Esrecurse [![Build Status](https://travis-ci.org/estools/esrecurse.svg?branch=master)](https://travis-ci.org/estools/esrecurse)\n\nEsrecurse ([esrecurse](https://github.com/estools/esrecurse)) is\n[ECMAScript](https://www.ecma-international.org/publications/standards/Ecma-262.htm)\nrecursive traversing functionality.\n\n### Example Usage\n\nThe following code will output all variables declared at the root of a file.\n\n```javascript\nesrecurse.visit(ast, {\n    XXXStatement: function (node) {\n        this.visit(node.left);\n        // do something...\n        this.visit(node.right);\n    }\n});\n```\n\nWe can use `Visitor` instance.\n\n```javascript\nvar visitor = new esrecurse.Visitor({\n    XXXStatement: function (node) {\n        this.visit(node.left);\n        // do something...\n        this.visit(node.right);\n    }\n});\n\nvisitor.visit(ast);\n```\n\nWe can inherit `Visitor` instance easily.\n\n```javascript\nclass Derived extends esrecurse.Visitor {\n    constructor()\n    {\n        super(null);\n    }\n\n    XXXStatement(node) {\n    }\n}\n\n```javascript\nfunction DerivedVisitor() {\n    esrecurse.Visitor.call(/* this for constructor */  this  /* visitor object automatically becomes this. */);\n}\nutil.inherits(DerivedVisitor, esrecurse.Visitor);\nDerivedVisitor.prototype.XXXStatement = function (node) {\n    this.visit(node.left);\n    // do something...\n    this.visit(node.right);\n};\n```\n\nAnd you can invoke default visiting operation inside custom visit operation.\n\n```javascript\nfunction DerivedVisitor() {\n    esrecurse.Visitor.call(/* this for constructor */  this  /* visitor object automatically becomes this. */);\n}\nutil.inherits(DerivedVisitor, esrecurse.Visitor);\nDerivedVisitor.prototype.XXXStatement = function (node) {\n    // do something...\n    this.visitChildren(node);\n};\n```\n\nThe `childVisitorKeys` option does customize the behavoir of `this.visitChildren(node)`.\nWe can use user-defined node types.\n\n```javascript\n// This tree contains a user-defined `TestExpression` node.\nvar tree = {\n    type: 'TestExpression',\n\n    // This 'argument' is the property containing the other **node**.\n    argument: {\n        type: 'Literal',\n        value: 20\n    },\n\n    // This 'extended' is the property not containing the other **node**.\n    extended: true\n};\nesrecurse.visit(\n    ast,\n    {\n        Literal: function (node) {\n            // do something...\n        }\n    },\n    {\n        // Extending the existing traversing rules.\n        childVisitorKeys: {\n            // TargetNodeName: [ 'keys', 'containing', 'the', 'other', '**node**' ]\n            TestExpression: ['argument']\n        }\n    }\n);\n```\n\nWe can use the `fallback` option as well.\nIf the `fallback` option is `\"iteration\"`, `esrecurse` would visit all enumerable properties of unknown nodes.\nPlease note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. `node.parent`).\n\n```javascript\nesrecurse.visit(\n    ast,\n    {\n        Literal: function (node) {\n            // do something...\n        }\n    },\n    {\n        fallback: 'iteration'\n    }\n);\n```\n\nIf the `fallback` option is a function, `esrecurse` calls this function to determine the enumerable properties of unknown nodes.\nPlease note circular references cause the stack overflow. AST might have circular references in additional properties for some purpose (e.g. `node.parent`).\n\n```javascript\nesrecurse.visit(\n    ast,\n    {\n        Literal: function (node) {\n            // do something...\n        }\n    },\n    {\n        fallback: function (node) {\n            return Object.keys(node).filter(function(key) {\n                return key !== 'argument'\n            });\n        }\n    }\n);\n```\n\n### License\n\nCopyright (C) 2014 [Yusuke Suzuki](https://github.com/Constellation)\n (twitter: [@Constellation](https://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "estraverse": "^4.1.0",
                "object-assign": "^4.0.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esrecurse",
              "error": "[Circular]",
              "extraneous": false
            },
            "estraverse": {
              "_from": "estraverse@^4.2.0",
              "_id": "estraverse@4.2.0",
              "_inBundle": false,
              "_integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
              "_location": "/estraverse",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
              "_shasum": "0dee3fed31fcd469618ce7342099fc1afa0bdb13",
              "_spec": "estraverse@^4.2.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "deprecated": false,
              "description": "ECMAScript JS AST traversal functions",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "homepage": "https://github.com/estools/estraverse",
              "license": "BSD-2-Clause",
              "main": "estraverse.js",
              "maintainers": "[Circular]",
              "name": "estraverse",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "4.2.0",
              "readme": "ERROR: No README data found!",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/estraverse",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "estraverse"
            }
          },
          "deprecated": false,
          "description": "ECMAScript scope analyzer",
          "devDependencies": {
            "babel": "^6.3.26",
            "babel-preset-es2015": "^6.3.13",
            "babel-register": "^6.3.13",
            "browserify": "^13.0.0",
            "chai": "^3.4.1",
            "espree": "^3.1.1",
            "esprima": "^2.7.1",
            "gulp": "^3.9.0",
            "gulp-babel": "^6.1.1",
            "gulp-bump": "^1.0.0",
            "gulp-eslint": "^1.1.1",
            "gulp-espower": "^1.0.2",
            "gulp-filter": "^3.0.1",
            "gulp-git": "^1.6.1",
            "gulp-mocha": "^2.2.0",
            "gulp-plumber": "^1.0.1",
            "gulp-sourcemaps": "^1.6.0",
            "gulp-tag-version": "^1.3.0",
            "jsdoc": "^3.4.0",
            "lazypipe": "^1.0.1",
            "vinyl-source-stream": "^1.1.0"
          },
          "engines": {
            "node": ">=0.4.0"
          },
          "homepage": "http://github.com/estools/escope",
          "license": "BSD-2-Clause",
          "main": "lib/index.js",
          "maintainers": [
            {
              "name": "Yusuke Suzuki",
              "email": "utatane.tea@gmail.com",
              "url": "http://github.com/Constellation"
            }
          ],
          "name": "escope",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/estools/escope.git"
          },
          "scripts": {
            "jsdoc": "jsdoc src/*.js README.md",
            "lint": "gulp lint",
            "test": "gulp travis",
            "unit-test": "gulp test"
          },
          "version": "3.6.0",
          "readme": "Escope ([escope](http://github.com/estools/escope)) is\n[ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\nscope analyzer extracted from [esmangle project](http://github.com/estools/esmangle).\n\n[![Build Status](https://travis-ci.org/estools/escope.png?branch=master)](https://travis-ci.org/estools/escope)\n\n### Example\n\n```js\nvar escope = require('escope');\nvar esprima = require('esprima');\nvar estraverse = require('estraverse');\n\nvar ast = esprima.parse(code);\nvar scopeManager = escope.analyze(ast);\n\nvar currentScope = scopeManager.acquire(ast);   // global scope\n\nestraverse.traverse(ast, {\n    enter: function(node, parent) {\n        // do stuff\n        \n        if (/Function/.test(node.type)) {\n            currentScope = scopeManager.acquire(node);  // get current function scope\n        }\n    },\n    leave: function(node, parent) {\n        if (/Function/.test(node.type)) {\n            currentScope = currentScope.upper;  // set to parent scope\n        }\n        \n        // do stuff\n    }\n});\n```\n\n### Document\n\nGenerated JSDoc is [here](http://estools.github.io/escope/).\n\n### Demos and Tools\n\nDemonstration is [here](http://mazurov.github.io/escope-demo/) by [Sasha Mazurov](https://github.com/mazurov) (twitter: [@mazurov](http://twitter.com/mazurov)). [issue](https://github.com/estools/escope/issues/14)\n\n![Demo](https://f.cloud.github.com/assets/75759/462920/7aa6dd40-b4f5-11e2-9f07-9f4e8d0415f9.gif)\n\n\nAnd there are tools constructed on Escope.\n\n- [Esmangle](https://github.com/estools/esmangle) is a minifier / mangler / optimizer.\n- [Eslevels](https://github.com/mazurov/eslevels) is a scope levels analyzer and [SublimeText plugin for scope context coloring](https://github.com/mazurov/sublime-levels) is constructed on it.\n- [Esgoggles](https://github.com/keeyipchan/esgoggles) is JavaScript code browser.\n\n\n### License\n\nCopyright (C) 2012-2013 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "es6-map": "^0.1.3",
            "es6-weak-map": "^2.0.1",
            "esrecurse": "^4.1.0",
            "estraverse": "^4.1.1"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/escope",
          "error": "[Circular]",
          "extraneous": false
        },
        "espree": {
          "_from": "espree@^3.1.6",
          "_id": "espree@3.4.3",
          "_inBundle": false,
          "_integrity": "sha1-KRC1zNSc6JPC//+qtP2LOjG4I3Q=",
          "_location": "/espree",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "espree@^3.1.6",
            "name": "espree",
            "escapedName": "espree",
            "rawSpec": "^3.1.6",
            "saveSpec": "[Circular]",
            "fetchSpec": "^3.1.6"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/espree/-/espree-3.4.3.tgz",
          "_shasum": "2910b5ccd49ce893c2ffffaab4fd8b3a31b82374",
          "_spec": "espree@^3.1.6",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Nicholas C. Zakas",
            "email": "nicholas+npm@nczconsulting.com"
          },
          "bugs": {
            "url": "http://github.com/eslint/espree.git"
          },
          "bundleDependencies": false,
          "dependencies": {
            "acorn": {
              "_from": "acorn@^5.0.1",
              "_id": "acorn@5.1.1",
              "_inBundle": false,
              "_integrity": "sha512-vOk6uEMctu0vQrvuSqFdJyqj1Q0S5VTDL79qtjo+DhRr+1mmaD+tluFSCZqhvi/JUhXSzoZN2BhtstaPEeE8cw==",
              "_location": "/acorn",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "acorn@^5.0.1",
                "name": "acorn",
                "escapedName": "acorn",
                "rawSpec": "^5.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^5.0.1"
              },
              "_requiredBy": [
                "/espree"
              ],
              "_resolved": "https://registry.npmjs.org/acorn/-/acorn-5.1.1.tgz",
              "_shasum": "53fe161111f912ab999ee887a90a0bc52822fd75",
              "_spec": "acorn@^5.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/espree",
              "bin": {
                "acorn": "./bin/acorn"
              },
              "bugs": {
                "url": "https://github.com/ternjs/acorn/issues"
              },
              "bundleDependencies": false,
              "contributors": [
                {
                  "name": "List of Acorn contributors. Updated before every release."
                },
                {
                  "name": "Adrian Rakovsky"
                },
                {
                  "name": "Alistair Braidwood"
                },
                {
                  "name": "Amila Welihinda"
                },
                {
                  "name": "Andres Suarez"
                },
                {
                  "name": "Angelo"
                },
                {
                  "name": "Aparajita Fishman"
                },
                {
                  "name": "Arian Stolwijk"
                },
                {
                  "name": "Artem Govorov"
                },
                {
                  "name": "Bradley Heinz"
                },
                {
                  "name": "Brandon Mills"
                },
                {
                  "name": "Charles Hughes"
                },
                {
                  "name": "Conrad Irwin"
                },
                {
                  "name": "Daniel Tschinder"
                },
                {
                  "name": "David Bonnet"
                },
                {
                  "name": "Domenico Matteo"
                },
                {
                  "name": "ehmicky"
                },
                {
                  "name": "Forbes Lindesay"
                },
                {
                  "name": "Gilad Peleg"
                },
                {
                  "name": "impinball"
                },
                {
                  "name": "Ingvar Stepanyan"
                },
                {
                  "name": "Jackson Ray Hamilton"
                },
                {
                  "name": "Jesse McCarthy"
                },
                {
                  "name": "Jiaxing Wang"
                },
                {
                  "name": "Joel Kemp"
                },
                {
                  "name": "Johannes Herr"
                },
                {
                  "name": "John-David Dalton"
                },
                {
                  "name": "Jordan Klassen"
                },
                {
                  "name": "JÃ¼rg Lehni"
                },
                {
                  "name": "Kai Cataldo"
                },
                {
                  "name": "keeyipchan"
                },
                {
                  "name": "Keheliya Gallaba"
                },
                {
                  "name": "Kevin Irish"
                },
                {
                  "name": "Kevin Kwok"
                },
                {
                  "name": "krator"
                },
                {
                  "name": "Marek"
                },
                {
                  "name": "Marijn Haverbeke"
                },
                {
                  "name": "Martin Carlberg"
                },
                {
                  "name": "Mat Garcia"
                },
                {
                  "name": "Mathias Bynens"
                },
                {
                  "name": "Mathieu 'p01' Henri"
                },
                {
                  "name": "Matthew Bastien"
                },
                {
                  "name": "Max Schaefer"
                },
                {
                  "name": "Max Zerzouri"
                },
                {
                  "name": "Mihai Bazon"
                },
                {
                  "name": "Mike Rennie"
                },
                {
                  "name": "naoh"
                },
                {
                  "name": "Nicholas C. Zakas"
                },
                {
                  "name": "Nick Fitzgerald"
                },
                {
                  "name": "Olivier Thomann"
                },
                {
                  "name": "Oskar SchÃ¶ldstrÃ¶m"
                },
                {
                  "name": "Paul Harper"
                },
                {
                  "name": "Peter Rust"
                },
                {
                  "name": "PlNG"
                },
                {
                  "name": "Prayag Verma"
                },
                {
                  "name": "ReadmeCritic"
                },
                {
                  "name": "r-e-d"
                },
                {
                  "name": "Richard Gibson"
                },
                {
                  "name": "Rich Harris"
                },
                {
                  "name": "Sebastian McKenzie"
                },
                {
                  "name": "Simen Bekkhus"
                },
                {
                  "name": "Teddy Katz"
                },
                {
                  "name": "Timothy Gu"
                },
                {
                  "name": "Toru Nagashima"
                },
                {
                  "name": "Victor Homyakov"
                },
                {
                  "name": "Wexpo Lyu"
                },
                {
                  "name": "zsjforcn"
                }
              ],
              "deprecated": false,
              "description": "ECMAScript parser",
              "devDependencies": {
                "eslint": "^3.18.0",
                "eslint-config-standard": "^7.1.0",
                "eslint-plugin-import": "^2.2.0",
                "eslint-plugin-promise": "^3.5.0",
                "eslint-plugin-standard": "^2.1.1",
                "rollup": "^0.43.0",
                "rollup-plugin-buble": "^0.15.0",
                "unicode-9.0.0": "^0.7.0"
              },
              "engines": {
                "node": ">=0.4.0"
              },
              "homepage": "https://github.com/ternjs/acorn",
              "license": "MIT",
              "main": "dist/acorn.js",
              "maintainers": [
                {
                  "name": "Marijn Haverbeke",
                  "email": "marijnh@gmail.com",
                  "url": "http://marijnhaverbeke.nl"
                },
                {
                  "name": "Ingvar Stepanyan",
                  "email": "me@rreverser.com",
                  "url": "http://rreverser.com/"
                }
              ],
              "module": "dist/acorn.es.js",
              "name": "acorn",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/ternjs/acorn.git"
              },
              "scripts": {
                "build": "npm run build:main && npm run build:walk && npm run build:loose && npm run build:bin",
                "build:bin": "rollup -c rollup/config.bin.js",
                "build:loose": "rollup -c rollup/config.loose.js && rollup -c rollup/config.loose_es.js",
                "build:main": "rollup -c rollup/config.main.js",
                "build:walk": "rollup -c rollup/config.walk.js",
                "lint": "eslint src/",
                "prepare": "npm test",
                "pretest": "npm run build:main && npm run build:loose",
                "test": "node test/run.js && node test/lint.js"
              },
              "version": "5.1.1",
              "readme": "# Acorn\n\n[![Build Status](https://travis-ci.org/ternjs/acorn.svg?branch=master)](https://travis-ci.org/ternjs/acorn)\n[![NPM version](https://img.shields.io/npm/v/acorn.svg)](https://www.npmjs.com/package/acorn)\n[![CDNJS](https://img.shields.io/cdnjs/v/acorn.svg)](https://cdnjs.com/libraries/acorn)  \n[Author funding status: ![maintainer happiness](https://marijnhaverbeke.nl/fund/status_s.png?force)](https://marijnhaverbeke.nl/fund/)\n\nA tiny, fast JavaScript parser, written completely in JavaScript.\n\n## Community\n\nAcorn is open source software released under an\n[MIT license](https://github.com/ternjs/acorn/blob/master/LICENSE).\n\nYou are welcome to\n[report bugs](https://github.com/ternjs/acorn/issues) or create pull\nrequests on [github](https://github.com/ternjs/acorn). For questions\nand discussion, please use the\n[Tern discussion forum](https://discuss.ternjs.net).\n\n## Installation\n\nThe easiest way to install acorn is with [`npm`][npm].\n\n[npm]: https://www.npmjs.com/\n\n```sh\nnpm install acorn\n```\n\nAlternately, download the source.\n\n```sh\ngit clone https://github.com/ternjs/acorn.git\n```\n\n## Components\n\nWhen run in a CommonJS (node.js) or AMD environment, exported values\nappear in the interfaces exposed by the individual files, as usual.\nWhen loaded in the browser (Acorn works in any JS-enabled browser more\nrecent than IE5) without any kind of module management, a single\nglobal object `acorn` will be defined, and all the exported properties\nwill be added to that.\n\n### Main parser\n\nThis is implemented in `dist/acorn.js`, and is what you get when you\n`require(\"acorn\")` in node.js.\n\n**parse**`(input, options)` is used to parse a JavaScript program.\nThe `input` parameter is a string, `options` can be undefined or an\nobject setting some of the options listed below. The return value will\nbe an abstract syntax tree object as specified by the\n[ESTree spec][estree].\n\nWhen  encountering   a  syntax   error,  the   parser  will   raise  a\n`SyntaxError` object with a meaningful  message. The error object will\nhave a `pos` property that indicates the character offset at which the\nerror occurred,  and a `loc`  object that contains a  `{line, column}`\nobject referring to that same position.\n\n[estree]: https://github.com/estree/estree\n\n- **ecmaVersion**: Indicates the ECMAScript version to parse. Must be\n  either 3, 5, 6 (2015), 7 (2016), 8 (2017), or 9 (2018, partial\n  support). This influences support for strict mode, the set of\n  reserved words, and support for new syntax features. Default is 7.\n\n  **NOTE**: Only 'stage 4' (finalized) ECMAScript features are being\n  implemented by Acorn.\n\n- **sourceType**: Indicate the mode the code should be parsed in. Can be\n  either `\"script\"` or `\"module\"`. This influences global strict mode\n  and parsing of `import` and `export` declarations.\n\n- **onInsertedSemicolon**: If given a callback, that callback will be\n  called whenever a missing semicolon is inserted by the parser. The\n  callback will be given the character offset of the point where the\n  semicolon is inserted as argument, and if `locations` is on, also a\n  `{line, column}` object representing this position.\n\n- **onTrailingComma**: Like `onInsertedSemicolon`, but for trailing\n  commas.\n\n- **allowReserved**: If `false`, using a reserved word will generate\n  an error. Defaults to `true` for `ecmaVersion` 3, `false` for higher\n  versions. When given the value `\"never\"`, reserved words and\n  keywords can also not be used as property names (as in Internet\n  Explorer's old parser).\n\n- **allowReturnOutsideFunction**: By default, a return statement at\n  the top level raises an error. Set this to `true` to accept such\n  code.\n\n- **allowImportExportEverywhere**: By default, `import` and `export`\n  declarations can only appear at a program's top level. Setting this\n  option to `true` allows them anywhere where a statement is allowed.\n\n- **allowHashBang**: When this is enabled (off by default), if the\n  code starts with the characters `#!` (as in a shellscript), the\n  first line will be treated as a comment.\n\n- **locations**: When `true`, each node has a `loc` object attached\n  with `start` and `end` subobjects, each of which contains the\n  one-based line and zero-based column numbers in `{line, column}`\n  form. Default is `false`.\n\n- **onToken**: If a function is passed for this option, each found\n  token will be passed in same format as tokens returned from\n  `tokenizer().getToken()`.\n\n  If array is passed, each found token is pushed to it.\n\n  Note that you are not allowed to call the parser from the\n  callbackâthat will corrupt its internal state.\n\n- **onComment**: If a function is passed for this option, whenever a\n  comment is encountered the function will be called with the\n  following parameters:\n\n  - `block`: `true` if the comment is a block comment, false if it\n    is a line comment.\n  - `text`: The content of the comment.\n  - `start`: Character offset of the start of the comment.\n  - `end`: Character offset of the end of the comment.\n\n  When the `locations` options is on, the `{line, column}` locations\n  of the commentâs start and end are passed as two additional\n  parameters.\n\n  If array is passed for this option, each found comment is pushed\n  to it as object in Esprima format:\n\n  ```javascript\n  {\n    \"type\": \"Line\" | \"Block\",\n    \"value\": \"comment text\",\n    \"start\": Number,\n    \"end\": Number,\n    // If `locations` option is on:\n    \"loc\": {\n      \"start\": {line: Number, column: Number}\n      \"end\": {line: Number, column: Number}\n    },\n    // If `ranges` option is on:\n    \"range\": [Number, Number]\n  }\n  ```\n\n  Note that you are not allowed to call the parser from the\n  callbackâthat will corrupt its internal state.\n\n- **ranges**: Nodes have their start and end characters offsets\n  recorded in `start` and `end` properties (directly on the node,\n  rather than the `loc` object, which holds line/column data. To also\n  add a [semi-standardized][range] `range` property holding a\n  `[start, end]` array with the same numbers, set the `ranges` option\n  to `true`.\n\n- **program**: It is possible to parse multiple files into a single\n  AST by passing the tree produced by parsing the first file as the\n  `program` option in subsequent parses. This will add the toplevel\n  forms of the parsed file to the \"Program\" (top) node of an existing\n  parse tree.\n\n- **sourceFile**: When the `locations` option is `true`, you can pass\n  this option to add a `source` attribute in every nodeâs `loc`\n  object. Note that the contents of this option are not examined or\n  processed in any way; you are free to use whatever format you\n  choose.\n\n- **directSourceFile**: Like `sourceFile`, but a `sourceFile` property\n  will be added (regardless of the `location` option) directly to the\n  nodes, rather than the `loc` object.\n\n- **preserveParens**: If this option is `true`, parenthesized expressions\n  are represented by (non-standard) `ParenthesizedExpression` nodes\n  that have a single `expression` property containing the expression\n  inside parentheses.\n\n[range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n\n**parseExpressionAt**`(input, offset, options)` will parse a single\nexpression in a string, and return its AST. It will not complain if\nthere is more of the string left after the expression.\n\n**getLineInfo**`(input, offset)` can be used to get a `{line,\ncolumn}` object for a given program string and character offset.\n\n**tokenizer**`(input, options)` returns an object with a `getToken`\nmethod that can be called repeatedly to get the next token, a `{start,\nend, type, value}` object (with added `loc` property when the\n`locations` option is enabled and `range` property when the `ranges`\noption is enabled). When the token's type is `tokTypes.eof`, you\nshould stop calling the method, since it will keep returning that same\ntoken forever.\n\nIn ES6 environment, returned result can be used as any other\nprotocol-compliant iterable:\n\n```javascript\nfor (let token of acorn.tokenizer(str)) {\n  // iterate over the tokens\n}\n\n// transform code to array of tokens:\nvar tokens = [...acorn.tokenizer(str)];\n```\n\n**tokTypes** holds an object mapping names to the token type objects\nthat end up in the `type` properties of tokens.\n\n#### Note on using with [Escodegen][escodegen]\n\nEscodegen supports generating comments from AST, attached in\nEsprima-specific format. In order to simulate same format in\nAcorn, consider following example:\n\n```javascript\nvar comments = [], tokens = [];\n\nvar ast = acorn.parse('var x = 42; // answer', {\n\t// collect ranges for each node\n\tranges: true,\n\t// collect comments in Esprima's format\n\tonComment: comments,\n\t// collect token ranges\n\tonToken: tokens\n});\n\n// attach comments using collected information\nescodegen.attachComments(ast, comments, tokens);\n\n// generate code\nconsole.log(escodegen.generate(ast, {comment: true}));\n// > 'var x = 42;    // answer'\n```\n\n[escodegen]: https://github.com/estools/escodegen\n\n### dist/acorn_loose.js ###\n\nThis file implements an error-tolerant parser. It exposes a single\nfunction. The loose parser is accessible in node.js via `require(\"acorn/dist/acorn_loose\")`.\n\n**parse_dammit**`(input, options)` takes the same arguments and\nreturns the same syntax tree as the `parse` function in `acorn.js`,\nbut never raises an error, and will do its best to parse syntactically\ninvalid code in as meaningful a way as it can. It'll insert identifier\nnodes with name `\"â\"` as placeholders in places where it can't make\nsense of the input. Depends on `acorn.js`, because it uses the same\ntokenizer.\n\n### dist/walk.js ###\n\nImplements an abstract syntax tree walker. Will store its interface in\n`acorn.walk` when loaded without a module system.\n\n**simple**`(node, visitors, base, state)` does a 'simple' walk over\na tree. `node` should be the AST node to walk, and `visitors` an\nobject with properties whose names correspond to node types in the\n[ESTree spec][estree]. The properties should contain functions\nthat will be called with the node object and, if applicable the state\nat that point. The last two arguments are optional. `base` is a walker\nalgorithm, and `state` is a start state. The default walker will\nsimply visit all statements and expressions and not produce a\nmeaningful state. (An example of a use of state is to track scope at\neach point in the tree.)\n\n```js\nconst acorn = require(\"acorn\")\nconst walk = require(\"acorn/dist/walk\")\n\nwalk.simple(acorn.parse(\"let x = 10\"), {\n  Literal(node) {\n    console.log(`Found a literal: ${node.value}`)\n  }\n})\n```\n\n**ancestor**`(node, visitors, base, state)` does a 'simple' walk over\na tree, building up an array of ancestor nodes (including the current node)\nand passing the array to the callbacks as a third parameter.\n\n```js\nconst acorn = require(\"acorn\")\nconst walk = require(\"acorn/dist/walk\")\n\nwalk.ancestor(acorn.parse(\"foo('hi')\"), {\n  Literal(_, ancestors) {\n    console.log(\"This literal's ancestors are:\",\n                ancestors.map(n => n.type))\n  }\n})\n```\n\n**recursive**`(node, state, functions, base)` does a 'recursive'\nwalk, where the walker functions are responsible for continuing the\nwalk on the child nodes of their target node. `state` is the start\nstate, and `functions` should contain an object that maps node types\nto walker functions. Such functions are called with `(node, state, c)`\narguments, and can cause the walk to continue on a sub-node by calling\nthe `c` argument on it with `(node, state)` arguments. The optional\n`base` argument provides the fallback walker functions for node types\nthat aren't handled in the `functions` object. If not given, the\ndefault walkers will be used.\n\n**make**`(functions, base)` builds a new walker object by using the\nwalker functions in `functions` and filling in the missing ones by\ntaking defaults from `base`.\n\n**full**`(node, callback, base, state)` does a 'full'\nwalk over a tree, calling the callback with the arguments (node, state, type)\nfor each node\n\n**fullAncestor**`(node, callback, base, state)` does a 'full' walk over\na tree, building up an array of ancestor nodes (including the current node)\nand passing the array to the callbacks as a third parameter.\n\n```js\nconst acorn = require(\"acorn\")\nconst walk = require(\"acorn/dist/walk\")\n\nwalk.full(acorn.parse(\"1 + 1\"), node => {\n  console.log(`There's a ${node.type} node at ${node.ch}`)\n})\n```\n\n**findNodeAt**`(node, start, end, test, base, state)` tries to\nlocate a node in a tree at the given start and/or end offsets, which\nsatisfies the predicate `test`. `start` and `end` can be either `null`\n(as wildcard) or a number. `test` may be a string (indicating a node\ntype) or a function that takes `(nodeType, node)` arguments and\nreturns a boolean indicating whether this node is interesting. `base`\nand `state` are optional, and can be used to specify a custom walker.\nNodes are tested from inner to outer, so if two nodes match the\nboundaries, the inner one will be preferred.\n\n**findNodeAround**`(node, pos, test, base, state)` is a lot like\n`findNodeAt`, but will match any node that exists 'around' (spanning)\nthe given position.\n\n**findNodeAfter**`(node, pos, test, base, state)` is similar to\n`findNodeAround`, but will match all nodes *after* the given position\n(testing outer nodes before inner nodes).\n\n## Command line interface\n\nThe `bin/acorn` utility can be used to parse a file from the command\nline. It accepts as arguments its input file and the following\noptions:\n\n- `--ecma3|--ecma5|--ecma6|--ecma7`: Sets the ECMAScript version to parse. Default is\n  version 5.\n\n- `--module`: Sets the parsing mode to `\"module\"`. Is set to `\"script\"` otherwise.\n\n- `--locations`: Attaches a \"loc\" object to each node with \"start\" and\n  \"end\" subobjects, each of which contains the one-based line and\n  zero-based column numbers in `{line, column}` form.\n\n- `--allow-hash-bang`: If the code starts with the characters #! (as in a shellscript), the first line will be treated as a comment.\n\n- `--compact`: No whitespace is used in the AST output.\n\n- `--silent`: Do not output the AST, just return the exit status.\n\n- `--help`: Print the usage information and quit.\n\nThe utility spits out the syntax tree as JSON data.\n\n## Build system\n\nAcorn is written in ECMAScript 6, as a set of small modules, in the\nproject's `src` directory, and compiled down to bigger ECMAScript 3\nfiles in `dist` using [Browserify](http://browserify.org) and\n[Babel](http://babeljs.io/). If you are already using Babel, you can\nconsider including the modules directly.\n\nThe command-line test runner (`npm test`) uses the ES6 modules. The\nbrowser-based test page (`test/index.html`) uses the compiled modules.\nThe `bin/build-acorn.js` script builds the latter from the former.\n\nIf you are working on Acorn, you'll probably want to try the code out\ndirectly, without an intermediate build step. In your scripts, you can\nregister the Babel require shim like this:\n\n    require(\"babel-core/register\")\n\nThat will allow you to directly `require` the ES6 modules.\n\n## Plugins\n\nAcorn is designed support allow plugins which, within reasonable\nbounds, redefine the way the parser works. Plugins can add new token\ntypes and new tokenizer contexts (if necessary), and extend methods in\nthe parser object. This is not a clean, elegant APIâusing it requires\nan understanding of Acorn's internals, and plugins are likely to break\nwhenever those internals are significantly changed. But still, it is\n_possible_, in this way, to create parsers for JavaScript dialects\nwithout forking all of Acorn. And in principle it is even possible to\ncombine such plugins, so that if you have, for example, a plugin for\nparsing types and a plugin for parsing JSX-style XML literals, you\ncould load them both and parse code with both JSX tags and types.\n\nA plugin should register itself by adding a property to\n`acorn.plugins`, which holds a function. Calling `acorn.parse`, a\n`plugins` option can be passed, holding an object mapping plugin names\nto configuration values (or just `true` for plugins that don't take\noptions). After the parser object has been created, the initialization\nfunctions for the chosen plugins are called with `(parser,\nconfigValue)` arguments. They are expected to use the `parser.extend`\nmethod to extend parser methods. For example, the `readToken` method\ncould be extended like this:\n\n```javascript\nparser.extend(\"readToken\", function(nextMethod) {\n  return function(code) {\n    console.log(\"Reading a token!\")\n    return nextMethod.call(this, code)\n  }\n})\n```\n\nThe `nextMethod` argument passed to `extend`'s second argument is the\nprevious value of this method, and should usually be called through to\nwhenever the extended method does not handle the call itself.\n\nSimilarly, the loose parser allows plugins to register themselves via\n`acorn.pluginsLoose`.  The extension mechanism is the same as for the\nnormal parser:\n\n```javascript\nlooseParser.extend(\"readToken\", function(nextMethod) {\n  return function() {\n    console.log(\"Reading a token in the loose parser!\")\n    return nextMethod.call(this)\n  }\n})\n```\n\n### Existing plugins\n\n - [`acorn-jsx`](https://github.com/RReverser/acorn-jsx): Parse [Facebook JSX syntax extensions](https://github.com/facebook/jsx)\n - [`acorn-es7-plugin`](https://github.com/MatAtBread/acorn-es7-plugin/): Parse [async/await syntax proposal](https://github.com/tc39/ecmascript-asyncawait)\n - [`acorn-object-spread`](https://github.com/UXtemple/acorn-object-spread): Parse [object spread syntax proposal](https://github.com/sebmarkbage/ecmascript-rest-spread)\n - [`acorn-es7`](https://www.npmjs.com/package/acorn-es7): Parse [decorator syntax proposal](https://github.com/wycats/javascript-decorators)\n - [`acorn-objj`](https://www.npmjs.com/package/acorn-objj): [Objective-J](http://www.cappuccino-project.org/learn/objective-j.html) language parser built as Acorn plugin\n - [`acorn-object-rest-spread`](https://github.com/victor-homyakov/acorn-object-rest-spread) Parse [Object Rest/Spread Properties proposal](https://github.com/tc39/proposal-object-rest-spread), works with latest Acorn version (5.0.3)\n - [`acorn-static-class-property-initializer`](https://github.com/victor-homyakov/acorn-static-class-property-initializer) Partial support for static class properties from [ES Class Fields & Static Properties Proposal](https://github.com/tc39/proposal-class-public-fields) to support static property initializers in [React components written as ES6+ classes](https://babeljs.io/blog/2015/06/07/react-on-es6-plus)\n \n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/acorn",
              "error": "[Circular]",
              "extraneous": false
            },
            "acorn-jsx": {
              "_from": "acorn-jsx@^3.0.0",
              "_id": "acorn-jsx@3.0.1",
              "_inBundle": false,
              "_integrity": "sha1-r9+UiPsezvyDSPb7IvRk4ypYs2s=",
              "_location": "/acorn-jsx",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "acorn-jsx@^3.0.0",
                "name": "acorn-jsx",
                "escapedName": "acorn-jsx",
                "rawSpec": "^3.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^3.0.0"
              },
              "_requiredBy": [
                "/espree"
              ],
              "_resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-3.0.1.tgz",
              "_shasum": "afdf9488fb1ecefc8348f6fb22f464e32a58b36b",
              "_spec": "acorn-jsx@^3.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/espree",
              "bugs": {
                "url": "https://github.com/RReverser/acorn-jsx/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "acorn": {
                  "_from": "acorn@^3.0.4",
                  "_id": "acorn@3.3.0",
                  "_inBundle": false,
                  "_integrity": "sha1-ReN/s56No/JbruP/U2niu18iAXo=",
                  "_location": "/acorn-jsx/acorn",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "acorn@^3.0.4",
                    "name": "acorn",
                    "escapedName": "acorn",
                    "rawSpec": "^3.0.4",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^3.0.4"
                  },
                  "_requiredBy": [
                    "/acorn-jsx"
                  ],
                  "_resolved": "https://registry.npmjs.org/acorn/-/acorn-3.3.0.tgz",
                  "_shasum": "45e37fb39e8da3f25baee3ff5369e2bb5f22017a",
                  "_spec": "acorn@^3.0.4",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/acorn-jsx",
                  "bin": {
                    "acorn": "./bin/acorn"
                  },
                  "bugs": {
                    "url": "https://github.com/ternjs/acorn/issues"
                  },
                  "bundleDependencies": false,
                  "contributors": [
                    {
                      "name": "List of Acorn contributors. Updated before every release."
                    },
                    {
                      "name": "Adrian Rakovsky"
                    },
                    {
                      "name": "Alistair Braidwood"
                    },
                    {
                      "name": "Amila Welihinda"
                    },
                    {
                      "name": "Andres Suarez"
                    },
                    {
                      "name": "Angelo"
                    },
                    {
                      "name": "Aparajita Fishman"
                    },
                    {
                      "name": "Arian Stolwijk"
                    },
                    {
                      "name": "Artem Govorov"
                    },
                    {
                      "name": "Brandon Mills"
                    },
                    {
                      "name": "Charles Hughes"
                    },
                    {
                      "name": "Conrad Irwin"
                    },
                    {
                      "name": "Daniel Tschinder"
                    },
                    {
                      "name": "David Bonnet"
                    },
                    {
                      "name": "Domenico Matteo"
                    },
                    {
                      "name": "ForbesLindesay"
                    },
                    {
                      "name": "Forbes Lindesay"
                    },
                    {
                      "name": "Gilad Peleg"
                    },
                    {
                      "name": "impinball"
                    },
                    {
                      "name": "Ingvar Stepanyan"
                    },
                    {
                      "name": "Jackson Ray Hamilton"
                    },
                    {
                      "name": "Jesse McCarthy"
                    },
                    {
                      "name": "Jiaxing Wang"
                    },
                    {
                      "name": "Joel Kemp"
                    },
                    {
                      "name": "Johannes Herr"
                    },
                    {
                      "name": "Jordan Klassen"
                    },
                    {
                      "name": "JÃ¼rg Lehni"
                    },
                    {
                      "name": "keeyipchan"
                    },
                    {
                      "name": "Keheliya Gallaba"
                    },
                    {
                      "name": "Kevin Irish"
                    },
                    {
                      "name": "Kevin Kwok"
                    },
                    {
                      "name": "krator"
                    },
                    {
                      "name": "Marijn Haverbeke"
                    },
                    {
                      "name": "Martin Carlberg"
                    },
                    {
                      "name": "Mathias Bynens"
                    },
                    {
                      "name": "Mathieu 'p01' Henri"
                    },
                    {
                      "name": "Matthew Bastien"
                    },
                    {
                      "name": "Max Schaefer"
                    },
                    {
                      "name": "Max Zerzouri"
                    },
                    {
                      "name": "Mihai Bazon"
                    },
                    {
                      "name": "Mike Rennie"
                    },
                    {
                      "name": "Nicholas C. Zakas"
                    },
                    {
                      "name": "Nick Fitzgerald"
                    },
                    {
                      "name": "Olivier Thomann"
                    },
                    {
                      "name": "Oskar SchÃ¶ldstrÃ¶m"
                    },
                    {
                      "name": "Paul Harper"
                    },
                    {
                      "name": "Peter Rust"
                    },
                    {
                      "name": "PlNG"
                    },
                    {
                      "name": "Prayag Verma"
                    },
                    {
                      "name": "ReadmeCritic"
                    },
                    {
                      "name": "r-e-d"
                    },
                    {
                      "name": "Richard Gibson"
                    },
                    {
                      "name": "Rich Harris"
                    },
                    {
                      "name": "Rich-Harris"
                    },
                    {
                      "name": "Sebastian McKenzie"
                    },
                    {
                      "name": "Timothy Gu"
                    },
                    {
                      "name": "Toru Nagashima"
                    },
                    {
                      "name": "zsjforcn"
                    }
                  ],
                  "deprecated": false,
                  "description": "ECMAScript parser",
                  "devDependencies": {
                    "rollup": "^0.34.1",
                    "rollup-plugin-buble": "^0.11.0",
                    "unicode-9.0.0": "^0.7.0"
                  },
                  "engines": {
                    "node": ">=0.4.0"
                  },
                  "homepage": "https://github.com/ternjs/acorn",
                  "jsnext:main": "dist/acorn.es.js",
                  "license": "MIT",
                  "main": "dist/acorn.js",
                  "maintainers": [
                    {
                      "name": "Marijn Haverbeke",
                      "email": "marijnh@gmail.com",
                      "url": "http://marijnhaverbeke.nl"
                    },
                    {
                      "name": "Ingvar Stepanyan",
                      "email": "me@rreverser.com",
                      "url": "http://rreverser.com/"
                    }
                  ],
                  "name": "acorn",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/ternjs/acorn.git"
                  },
                  "scripts": {
                    "build": "npm run build:main && npm run build:walk && npm run build:loose && npm run build:bin",
                    "build:bin": "rollup -c rollup/config.bin.js",
                    "build:loose": "rollup -c rollup/config.loose.js",
                    "build:main": "rollup -c rollup/config.main.js",
                    "build:walk": "rollup -c rollup/config.walk.js",
                    "prepublish": "npm test",
                    "pretest": "npm run build",
                    "test": "node test/run.js"
                  },
                  "version": "3.3.0",
                  "readme": "# Acorn\n\n[![Build Status](https://travis-ci.org/ternjs/acorn.svg?branch=master)](https://travis-ci.org/ternjs/acorn)\n[![NPM version](https://img.shields.io/npm/v/acorn.svg)](https://www.npmjs.com/package/acorn)  \n[Author funding status: ![maintainer happiness](https://marijnhaverbeke.nl/fund/status_s.png?force)](https://marijnhaverbeke.nl/fund/)\n\nA tiny, fast JavaScript parser, written completely in JavaScript.\n\n## Community\n\nAcorn is open source software released under an\n[MIT license](https://github.com/ternjs/acorn/blob/master/LICENSE).\n\nYou are welcome to\n[report bugs](https://github.com/ternjs/acorn/issues) or create pull\nrequests on [github](https://github.com/ternjs/acorn). For questions\nand discussion, please use the\n[Tern discussion forum](https://discuss.ternjs.net).\n\n## Installation\n\nThe easiest way to install acorn is with [`npm`][npm].\n\n[npm]: https://www.npmjs.com/\n\n```sh\nnpm install acorn\n```\n\nAlternately, download the source.\n\n```sh\ngit clone https://github.com/ternjs/acorn.git\n```\n\n## Components\n\nWhen run in a CommonJS (node.js) or AMD environment, exported values\nappear in the interfaces exposed by the individual files, as usual.\nWhen loaded in the browser (Acorn works in any JS-enabled browser more\nrecent than IE5) without any kind of module management, a single\nglobal object `acorn` will be defined, and all the exported properties\nwill be added to that.\n\n### Main parser\n\nThis is implemented in `dist/acorn.js`, and is what you get when you\n`require(\"acorn\")` in node.js.\n\n**parse**`(input, options)` is used to parse a JavaScript program.\nThe `input` parameter is a string, `options` can be undefined or an\nobject setting some of the options listed below. The return value will\nbe an abstract syntax tree object as specified by the\n[ESTree spec][estree].\n\nWhen  encountering   a  syntax   error,  the   parser  will   raise  a\n`SyntaxError` object with a meaningful  message. The error object will\nhave a `pos` property that indicates the character offset at which the\nerror occurred,  and a `loc`  object that contains a  `{line, column}`\nobject referring to that same position.\n\n[estree]: https://github.com/estree/estree\n\n- **ecmaVersion**: Indicates the ECMAScript version to parse. Must be\n  either 3, 5, 6, or 7. This influences support for strict mode, the set\n  of reserved words, and support for new syntax features. Default is 6.\n\n  **NOTE**: Only 'stage 4' (finalized) ECMAScript 7 features are being\n  implemented by Acorn. That means that most of the draft standard is\n  not yet being parsed.\n\n- **sourceType**: Indicate the mode the code should be parsed in. Can be\n  either `\"script\"` or `\"module\"`.\n\n- **onInsertedSemicolon**: If given a callback, that callback will be\n  called whenever a missing semicolon is inserted by the parser. The\n  callback will be given the character offset of the point where the\n  semicolon is inserted as argument, and if `locations` is on, also a\n  `{line, column}` object representing this position.\n\n- **onTrailingComma**: Like `onInsertedSemicolon`, but for trailing\n  commas.\n\n- **allowReserved**: If `false`, using a reserved word will generate\n  an error. Defaults to `true` for `ecmaVersion` 3, `false` for higher\n  versions. When given the value `\"never\"`, reserved words and\n  keywords can also not be used as property names (as in Internet\n  Explorer's old parser).\n\n- **allowReturnOutsideFunction**: By default, a return statement at\n  the top level raises an error. Set this to `true` to accept such\n  code.\n\n- **allowImportExportEverywhere**: By default, `import` and `export`\n  declarations can only appear at a program's top level. Setting this\n  option to `true` allows them anywhere where a statement is allowed.\n\n- **allowHashBang**: When this is enabled (off by default), if the\n  code starts with the characters `#!` (as in a shellscript), the\n  first line will be treated as a comment.\n\n- **locations**: When `true`, each node has a `loc` object attached\n  with `start` and `end` subobjects, each of which contains the\n  one-based line and zero-based column numbers in `{line, column}`\n  form. Default is `false`.\n\n- **onToken**: If a function is passed for this option, each found\n  token will be passed in same format as tokens returned from\n  `tokenizer().getToken()`.\n\n  If array is passed, each found token is pushed to it.\n\n  Note that you are not allowed to call the parser from the\n  callbackâthat will corrupt its internal state.\n\n- **onComment**: If a function is passed for this option, whenever a\n  comment is encountered the function will be called with the\n  following parameters:\n\n  - `block`: `true` if the comment is a block comment, false if it\n    is a line comment.\n  - `text`: The content of the comment.\n  - `start`: Character offset of the start of the comment.\n  - `end`: Character offset of the end of the comment.\n\n  When the `locations` options is on, the `{line, column}` locations\n  of the commentâs start and end are passed as two additional\n  parameters.\n\n  If array is passed for this option, each found comment is pushed\n  to it as object in Esprima format:\n\n  ```javascript\n  {\n    \"type\": \"Line\" | \"Block\",\n    \"value\": \"comment text\",\n    \"start\": Number,\n    \"end\": Number,\n    // If `locations` option is on:\n    \"loc\": {\n      \"start\": {line: Number, column: Number}\n      \"end\": {line: Number, column: Number}\n    },\n    // If `ranges` option is on:\n    \"range\": [Number, Number]\n  }\n  ```\n\n  Note that you are not allowed to call the parser from the\n  callbackâthat will corrupt its internal state.\n\n- **ranges**: Nodes have their start and end characters offsets\n  recorded in `start` and `end` properties (directly on the node,\n  rather than the `loc` object, which holds line/column data. To also\n  add a [semi-standardized][range] `range` property holding a\n  `[start, end]` array with the same numbers, set the `ranges` option\n  to `true`.\n\n- **program**: It is possible to parse multiple files into a single\n  AST by passing the tree produced by parsing the first file as the\n  `program` option in subsequent parses. This will add the toplevel\n  forms of the parsed file to the \"Program\" (top) node of an existing\n  parse tree.\n\n- **sourceFile**: When the `locations` option is `true`, you can pass\n  this option to add a `source` attribute in every nodeâs `loc`\n  object. Note that the contents of this option are not examined or\n  processed in any way; you are free to use whatever format you\n  choose.\n\n- **directSourceFile**: Like `sourceFile`, but a `sourceFile` property\n  will be added (regardless of the `location` option) directly to the\n  nodes, rather than the `loc` object.\n\n- **preserveParens**: If this option is `true`, parenthesized expressions\n  are represented by (non-standard) `ParenthesizedExpression` nodes\n  that have a single `expression` property containing the expression\n  inside parentheses.\n\n[range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n\n**parseExpressionAt**`(input, offset, options)` will parse a single\nexpression in a string, and return its AST. It will not complain if\nthere is more of the string left after the expression.\n\n**getLineInfo**`(input, offset)` can be used to get a `{line,\ncolumn}` object for a given program string and character offset.\n\n**tokenizer**`(input, options)` returns an object with a `getToken`\nmethod that can be called repeatedly to get the next token, a `{start,\nend, type, value}` object (with added `loc` property when the\n`locations` option is enabled and `range` property when the `ranges`\noption is enabled). When the token's type is `tokTypes.eof`, you\nshould stop calling the method, since it will keep returning that same\ntoken forever.\n\nIn ES6 environment, returned result can be used as any other\nprotocol-compliant iterable:\n\n```javascript\nfor (let token of acorn.tokenizer(str)) {\n  // iterate over the tokens\n}\n\n// transform code to array of tokens:\nvar tokens = [...acorn.tokenizer(str)];\n```\n\n**tokTypes** holds an object mapping names to the token type objects\nthat end up in the `type` properties of tokens.\n\n#### Note on using with [Escodegen][escodegen]\n\nEscodegen supports generating comments from AST, attached in\nEsprima-specific format. In order to simulate same format in\nAcorn, consider following example:\n\n```javascript\nvar comments = [], tokens = [];\n\nvar ast = acorn.parse('var x = 42; // answer', {\n\t// collect ranges for each node\n\tranges: true,\n\t// collect comments in Esprima's format\n\tonComment: comments,\n\t// collect token ranges\n\tonToken: tokens\n});\n\n// attach comments using collected information\nescodegen.attachComments(ast, comments, tokens);\n\n// generate code\nconsole.log(escodegen.generate(ast, {comment: true}));\n// > 'var x = 42;    // answer'\n```\n\n[escodegen]: https://github.com/estools/escodegen\n\n### dist/acorn_loose.js ###\n\nThis file implements an error-tolerant parser. It exposes a single\nfunction. The loose parser is accessible in node.js via `require(\"acorn/dist/acorn_loose\")`.\n\n**parse_dammit**`(input, options)` takes the same arguments and\nreturns the same syntax tree as the `parse` function in `acorn.js`,\nbut never raises an error, and will do its best to parse syntactically\ninvalid code in as meaningful a way as it can. It'll insert identifier\nnodes with name `\"â\"` as placeholders in places where it can't make\nsense of the input. Depends on `acorn.js`, because it uses the same\ntokenizer.\n\n### dist/walk.js ###\n\nImplements an abstract syntax tree walker. Will store its interface in\n`acorn.walk` when loaded without a module system.\n\n**simple**`(node, visitors, base, state)` does a 'simple' walk over\na tree. `node` should be the AST node to walk, and `visitors` an\nobject with properties whose names correspond to node types in the\n[ESTree spec][estree]. The properties should contain functions\nthat will be called with the node object and, if applicable the state\nat that point. The last two arguments are optional. `base` is a walker\nalgorithm, and `state` is a start state. The default walker will\nsimply visit all statements and expressions and not produce a\nmeaningful state. (An example of a use of state is to track scope at\neach point in the tree.)\n\n**ancestor**`(node, visitors, base, state)` does a 'simple' walk over\na tree, building up an array of ancestor nodes (including the current node)\nand passing the array to the callbacks as a third parameter.\n\n**recursive**`(node, state, functions, base)` does a 'recursive'\nwalk, where the walker functions are responsible for continuing the\nwalk on the child nodes of their target node. `state` is the start\nstate, and `functions` should contain an object that maps node types\nto walker functions. Such functions are called with `(node, state, c)`\narguments, and can cause the walk to continue on a sub-node by calling\nthe `c` argument on it with `(node, state)` arguments. The optional\n`base` argument provides the fallback walker functions for node types\nthat aren't handled in the `functions` object. If not given, the\ndefault walkers will be used.\n\n**make**`(functions, base)` builds a new walker object by using the\nwalker functions in `functions` and filling in the missing ones by\ntaking defaults from `base`.\n\n**findNodeAt**`(node, start, end, test, base, state)` tries to\nlocate a node in a tree at the given start and/or end offsets, which\nsatisfies the predicate `test`. `start` and `end` can be either `null`\n(as wildcard) or a number. `test` may be a string (indicating a node\ntype) or a function that takes `(nodeType, node)` arguments and\nreturns a boolean indicating whether this node is interesting. `base`\nand `state` are optional, and can be used to specify a custom walker.\nNodes are tested from inner to outer, so if two nodes match the\nboundaries, the inner one will be preferred.\n\n**findNodeAround**`(node, pos, test, base, state)` is a lot like\n`findNodeAt`, but will match any node that exists 'around' (spanning)\nthe given position.\n\n**findNodeAfter**`(node, pos, test, base, state)` is similar to\n`findNodeAround`, but will match all nodes *after* the given position\n(testing outer nodes before inner nodes).\n\n## Command line interface\n\nThe `bin/acorn` utility can be used to parse a file from the command\nline. It accepts as arguments its input file and the following\noptions:\n\n- `--ecma3|--ecma5|--ecma6|--ecma7`: Sets the ECMAScript version to parse. Default is\n  version 5.\n\n- `--module`: Sets the parsing mode to `\"module\"`. Is set to `\"script\"` otherwise.\n\n- `--locations`: Attaches a \"loc\" object to each node with \"start\" and\n  \"end\" subobjects, each of which contains the one-based line and\n  zero-based column numbers in `{line, column}` form.\n\n- `--allow-hash-bang`: If the code starts with the characters #! (as in a shellscript), the first line will be treated as a comment.\n\n- `--compact`: No whitespace is used in the AST output.\n\n- `--silent`: Do not output the AST, just return the exit status.\n\n- `--help`: Print the usage information and quit.\n\nThe utility spits out the syntax tree as JSON data.\n\n## Build system\n\nAcorn is written in ECMAScript 6, as a set of small modules, in the\nproject's `src` directory, and compiled down to bigger ECMAScript 3\nfiles in `dist` using [Browserify](http://browserify.org) and\n[Babel](http://babeljs.io/). If you are already using Babel, you can\nconsider including the modules directly.\n\nThe command-line test runner (`npm test`) uses the ES6 modules. The\nbrowser-based test page (`test/index.html`) uses the compiled modules.\nThe `bin/build-acorn.js` script builds the latter from the former.\n\nIf you are working on Acorn, you'll probably want to try the code out\ndirectly, without an intermediate build step. In your scripts, you can\nregister the Babel require shim like this:\n\n    require(\"babel-core/register\")\n\nThat will allow you to directly `require` the ES6 modules.\n\n## Plugins\n\nAcorn is designed support allow plugins which, within reasonable\nbounds, redefine the way the parser works. Plugins can add new token\ntypes and new tokenizer contexts (if necessary), and extend methods in\nthe parser object. This is not a clean, elegant APIâusing it requires\nan understanding of Acorn's internals, and plugins are likely to break\nwhenever those internals are significantly changed. But still, it is\n_possible_, in this way, to create parsers for JavaScript dialects\nwithout forking all of Acorn. And in principle it is even possible to\ncombine such plugins, so that if you have, for example, a plugin for\nparsing types and a plugin for parsing JSX-style XML literals, you\ncould load them both and parse code with both JSX tags and types.\n\nA plugin should register itself by adding a property to\n`acorn.plugins`, which holds a function. Calling `acorn.parse`, a\n`plugins` option can be passed, holding an object mapping plugin names\nto configuration values (or just `true` for plugins that don't take\noptions). After the parser object has been created, the initialization\nfunctions for the chosen plugins are called with `(parser,\nconfigValue)` arguments. They are expected to use the `parser.extend`\nmethod to extend parser methods. For example, the `readToken` method\ncould be extended like this:\n\n```javascript\nparser.extend(\"readToken\", function(nextMethod) {\n  return function(code) {\n    console.log(\"Reading a token!\")\n    return nextMethod.call(this, code)\n  }\n})\n```\n\nThe `nextMethod` argument passed to `extend`'s second argument is the\nprevious value of this method, and should usually be called through to\nwhenever the extended method does not handle the call itself.\n\nSimilarly, the loose parser allows plugins to register themselves via\n`acorn.pluginsLoose`.  The extension mechanism is the same as for the\nnormal parser:\n\n```javascript\nlooseParser.extend(\"readToken\", function(nextMethod) {\n  return function() {\n    console.log(\"Reading a token in the loose parser!\")\n    return nextMethod.call(this)\n  }\n})\n```\n\n### Existing plugins\n\n - [`acorn-jsx`](https://github.com/RReverser/acorn-jsx): Parse [Facebook JSX syntax extensions](https://github.com/facebook/jsx)\n - [`acorn-es7-plugin`](https://github.com/MatAtBread/acorn-es7-plugin/): Parse [async/await syntax proposal](https://github.com/tc39/ecmascript-asyncawait)\n - [`acorn-object-spread`](https://github.com/UXtemple/acorn-object-spread): Parse [object spread syntax proposal](https://github.com/sebmarkbage/ecmascript-rest-spread)\n - [`acorn-es7`](https://www.npmjs.com/package/acorn-es7): Parse [decorator syntax proposal](https://github.com/wycats/javascript-decorators)\n - [`acorn-objj`](https://www.npmjs.com/package/acorn-objj): [Objective-J](http://www.cappuccino-project.org/learn/objective-j.html) language parser built as Acorn plugin\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/acorn-jsx/node_modules/acorn",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Alternative, faster React.js JSX parser",
              "devDependencies": {
                "chai": "^3.0.0",
                "mocha": "^2.2.5"
              },
              "homepage": "https://github.com/RReverser/acorn-jsx",
              "license": "MIT",
              "maintainers": [
                {
                  "name": "Ingvar Stepanyan",
                  "email": "me@rreverser.com",
                  "url": "http://rreverser.com/"
                }
              ],
              "name": "acorn-jsx",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/RReverser/acorn-jsx.git"
              },
              "scripts": {
                "test": "node test/run.js"
              },
              "version": "3.0.1",
              "readme": "# Acorn-JSX\n\n[![Build Status](https://travis-ci.org/RReverser/acorn-jsx.svg?branch=master)](https://travis-ci.org/RReverser/acorn-jsx)\n[![NPM version](https://img.shields.io/npm/v/acorn-jsx.svg)](https://www.npmjs.org/package/acorn-jsx)\n\nThis is plugin for [Acorn](http://marijnhaverbeke.nl/acorn/) - a tiny, fast JavaScript parser, written completely in JavaScript.\n\nIt was created as an experimental alternative, faster [React.js JSX](http://facebook.github.io/react/docs/jsx-in-depth.html) parser.\n\nAccording to [benchmarks](https://github.com/RReverser/acorn-jsx/blob/master/test/bench.html), Acorn-JSX is 2x faster than official [Esprima-based parser](https://github.com/facebook/esprima) when location tracking is turned on in both (call it \"source maps enabled mode\"). At the same time, it consumes all the ES6+JSX syntax that can be consumed by Esprima-FB (this is proved by [official tests](https://github.com/RReverser/acorn-jsx/blob/master/test/tests-jsx.js)).\n\n**UPDATE [14-Apr-2015]**: Facebook implementation started [deprecation process](https://github.com/facebook/esprima/issues/111) in favor of Acorn + Acorn-JSX + Babel for parsing and transpiling JSX syntax.\n\n## Transpiler\n\nPlease note that this tool only parses source code to JSX AST, which is useful for various language tools and services. If you want to transpile your code to regular ES5-compliant JavaScript with source map, check out the [babel transpiler](https://babeljs.io/) which uses `acorn-jsx` under the hood.\n\n## Usage\n\nYou can use module directly in order to get Acorn instance with plugin installed:\n\n```javascript\nvar acorn = require('acorn-jsx');\n```\n\nOr you can use `inject.js` for injecting plugin into your own version of Acorn like following:\n\n```javascript\nvar acorn = require('acorn-jsx/inject')(require('./custom-acorn'));\n```\n\nThen, use `plugins` option whenever you need to support JSX while parsing:\n\n```javascript\nvar ast = acorn.parse(code, {\n  plugins: { jsx: true }\n});\n```\n\nNote that official spec doesn't support mix of XML namespaces and object-style access in tag names (#27) like in `<namespace:Object.Property />`, so it was deprecated in `acorn-jsx@3.0`. If you still want to opt-in to support of such constructions, you can pass the following option:\n\n```javascript\nvar ast = acorn.parse(code, {\n  plugins: {\n    jsx: { allowNamespacedObjects: true }\n  }\n});\n```\n\nAlso, since most apps use pure React transformer, a new option was introduced that allows to prohibit namespaces completely:\n\n```javascript\nvar ast = acorn.parse(code, {\n  plugins: {\n    jsx: { allowNamespaces: false }\n  }\n});\n```\n\nNote that by default `allowNamespaces` is enabled for spec compliancy.\n\n## License\n\nThis plugin is issued under the [MIT license](./LICENSE).\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "acorn": "^3.0.4"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/acorn-jsx",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "An Esprima-compatible JavaScript parser built on Acorn",
          "devDependencies": {
            "browserify": "^7.0.0",
            "chai": "^1.10.0",
            "eslint": "^2.13.1",
            "eslint-config-eslint": "^3.0.0",
            "eslint-release": "^0.10.0",
            "esprima": "latest",
            "esprima-fb": "^8001.2001.0-dev-harmony-fb",
            "istanbul": "~0.2.6",
            "json-diff": "~0.3.1",
            "leche": "^1.0.1",
            "mocha": "^2.0.1",
            "regenerate": "~0.5.4",
            "shelljs": "^0.3.0",
            "shelljs-nodecli": "^0.1.1",
            "unicode-6.3.0": "~0.1.0"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "lib",
            "espree.js"
          ],
          "homepage": "https://github.com/eslint/espree",
          "keywords": [
            "ast",
            "ecmascript",
            "javascript",
            "parser",
            "syntax",
            "acorn"
          ],
          "license": "BSD-2-Clause",
          "main": "espree.js",
          "name": "espree",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/eslint/espree.git"
          },
          "scripts": {
            "alpharelease": "eslint-prelease alpha",
            "betarelease": "eslint-prelease beta",
            "browserify": "node Makefile.js browserify",
            "ci-release": "eslint-ci-release",
            "generate-regex": "node tools/generate-identifier-regex.js",
            "gh-release": "eslint-gh-release",
            "lint": "node Makefile.js lint",
            "release": "eslint-release",
            "test": "npm run-script lint && node Makefile.js test"
          },
          "version": "3.4.3",
          "readme": "[![npm version](https://img.shields.io/npm/v/espree.svg)](https://www.npmjs.com/package/espree)\n[![Build Status](https://travis-ci.org/eslint/espree.svg?branch=master)](https://travis-ci.org/eslint/espree)\n[![npm downloads](https://img.shields.io/npm/dm/espree.svg)](https://www.npmjs.com/package/espree)\n[![Bountysource](https://www.bountysource.com/badge/tracker?tracker_id=9348450)](https://www.bountysource.com/trackers/9348450-eslint?utm_source=9348450&utm_medium=shield&utm_campaign=TRACKER_BADGE)\n\n# Espree\n\nEspree started out as a fork of [Esprima](http://esprima.org) v1.2.2, the last stable published released of Esprima before work on ECMAScript 6 began. Espree is now built on top of [Acorn](https://github.com/ternjs/acorn), which has a modular architecture that allows extension of core functionality. The goal of Espree is to produce output that is similar to Esprima with a similar API so that it can be used in place of Esprima.\n\n## Usage\n\nInstall:\n\n```\nnpm i espree --save\n```\n\nAnd in your Node.js code:\n\n```javascript\nvar espree = require(\"espree\");\n\nvar ast = espree.parse(code);\n```\n\nThere is a second argument to `parse()` that allows you to specify various options:\n\n```javascript\nvar espree = require(\"espree\");\n\nvar ast = espree.parse(code, {\n\n    // attach range information to each node\n    range: true,\n\n    // attach line/column location information to each node\n    loc: true,\n\n    // create a top-level comments array containing all comments\n    comment: true,\n\n    // attach comments to the closest relevant node as leadingComments and\n    // trailingComments\n    attachComment: true,\n\n    // create a top-level tokens array containing all tokens\n    tokens: true,\n\n    // set to 3, 5 (default), 6, 7, or 8 to specify the version of ECMAScript syntax you want to use. \n    // You can also set to 2015 (same as 6), 2016 (same as 7), or 2017 (same as 8) to use the year-based naming.\n    ecmaVersion: 5,\n\n    // specify which type of script you're parsing (script or module, default is script)\n    sourceType: \"script\",\n\n    // specify additional language features\n    ecmaFeatures: {\n\n        // enable JSX parsing\n        jsx: true,\n\n        // enable return in global scope\n        globalReturn: true,\n\n        // enable implied strict mode (if ecmaVersion >= 5)\n        impliedStrict: true,\n\n        // allow experimental object rest/spread\n        experimentalObjectRestSpread: true\n    }\n});\n```\n\n## Esprima Compatibility Going Forward\n\nThe primary goal is to produce the exact same AST structure and tokens as Esprima, and that takes precedence over anything else. (The AST structure being the [ESTree](https://github.com/estree/estree) API with JSX extensions.) Separate from that, Espree may deviate from what Esprima outputs in terms of where and how comments are attached, as well as what additional information is available on AST nodes. That is to say, Espree may add more things to the AST nodes than Esprima does but the overall AST structure produced will be the same.\n\nEspree may also deviate from Esprima in the interface it exposes.\n\n## Contributing\n\nIssues and pull requests will be triaged and responded to as quickly as possible. We operate under the [ESLint Contributor Guidelines](http://eslint.org/docs/developer-guide/contributing), so please be sure to read them before contributing. If you're not sure where to dig in, check out the [issues](https://github.com/eslint/espree/issues).\n\nEspree is licensed under a permissive BSD 2-clause license.\n\n## Build Commands\n\n* `npm test` - run all linting and tests\n* `npm run lint` - run all linting\n* `npm run browserify` - creates a version of Espree that is usable in a browser\n\n## Differences from Espree 2.x\n\n* The `tokenize()` method does not use `ecmaFeatures`. Any string will be tokenized completely based on ECMAScript 6 semantics.\n* Trailing whitespace no longer is counted as part of a node.\n* `let` and `const` declarations are no longer parsed by default. You must opt-in using `ecmaFeatures.blockBindings`.\n* The `esparse` and `esvalidate` binary scripts have been removed.\n* There is no `tolerant` option. We will investigate adding this back in the future.\n\n## Known Incompatibilities\n\nIn an effort to help those wanting to transition from other parsers to Espree, the following is a list of noteworthy incompatibilities with other parsers. These are known differences that we do not intend to change.\n\n### Esprima 1.2.2\n\n* Esprima counts trailing whitespace as part of each AST node while Espree does not. In Espree, the end of a node is where the last token occurs.\n* Espree does not parse `let` and `const` declarations by default.\n* Error messages returned for parsing errors are different.\n* There are two addition properties on every node and token: `start` and `end`. These represent the same data as `range` and are used internally by Acorn.\n\n### Esprima 2.x\n\n* Esprima 2.x uses a different comment attachment algorithm that results in some comments being added in different places than Espree. The algorithm Espree uses is the same one used in Esprima 1.2.2.\n\n## Frequently Asked Questions\n\n### Why another parser\n\n[ESLint](http://eslint.org) had been relying on Esprima as its parser from the beginning. While that was fine when the JavaScript language was evolving slowly, the pace of development increased dramatically and Esprima had fallen behind. ESLint, like many other tools reliant on Esprima, has been stuck in using new JavaScript language features until Esprima updates, and that caused our users frustration.\n\nWe decided the only way for us to move forward was to create our own parser, bringing us inline with JSHint and JSLint, and allowing us to keep implementing new features as we need them. We chose to fork Esprima instead of starting from scratch in order to move as quickly as possible with a compatible API.\n\nWith Espree 2.0.0, we are no longer a fork of Esprima but rather a translation layer between Acorn and Esprima syntax. This allows us to put work back into a community-supported parser (Acorn) that is continuing to grow and evolve while maintaining an Esprima-compatible parser for those utilities still built on Esprima.\n\n### Have you tried working with Esprima?\n\nYes. Since the start of ESLint, we've regularly filed bugs and feature requests with Esprima and will continue to do so. However, there are some different philosophies around how the projects work that need to be worked through. The initial goal was to have Espree track Esprima and eventually merge the two back together, but we ultimately decided that building on top of Acorn was a better choice due to Acorn's plugin support.\n\n### Why don't you just use Acorn?\n\nAcorn is a great JavaScript parser that produces an AST that is compatible with Esprima. Unfortunately, ESLint relies on more than just the AST to do its job. It relies on Esprima's tokens and comment attachment features to get a complete picture of the source code. We investigated switching to Acorn, but the inconsistencies between Esprima and Acorn created too much work for a project like ESLint.\n\nWe are building on top of Acorn, however, so that we can contribute back and help make Acorn even better.\n\n### What ECMAScript 6 features do you support?\n\nAll of them.\n\n### What ECMAScript 7/2016 features do you support?\n\nThere is only one ECMAScript 7 syntax change: the exponentiation operator. Espree supports this.\n\n### What ECMAScript 2017 features do you support?\n\nBecause ECMAScript 2017 is still under development, we are implementing features as they are finalized. Currently, Espree supports:\n\n* `async` functions\n* Trailing commas in function declarations and calls (including arrow functions and concise methods)\n\n### How do you determine which experimental features to support?\n\nIn general, we do not support experimental JavaScript features. We may make exceptions from time to time depending on the maturity of the features.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "acorn": "^5.0.1",
            "acorn-jsx": "^3.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/espree",
          "error": "[Circular]",
          "extraneous": false
        },
        "estraverse": {
          "_from": "estraverse@^4.2.0",
          "_id": "estraverse@4.2.0",
          "_inBundle": false,
          "_integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM=",
          "_location": "/estraverse",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",
          "_shasum": "0dee3fed31fcd469618ce7342099fc1afa0bdb13",
          "_spec": "estraverse@^4.2.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "deprecated": false,
          "description": "ECMAScript JS AST traversal functions",
          "devDependencies": "[Circular]",
          "engines": "[Circular]",
          "homepage": "https://github.com/estools/estraverse",
          "license": "BSD-2-Clause",
          "main": "estraverse.js",
          "maintainers": "[Circular]",
          "name": "estraverse",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "4.2.0",
          "readme": "ERROR: No README data found!",
          "dependencies": {},
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/estraverse",
          "error": "[Circular]",
          "extraneous": false
        },
        "esutils": {
          "_from": "esutils@^2.0.2",
          "_id": "esutils@2.0.2",
          "_inBundle": false,
          "_integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs=",
          "_location": "/esutils",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",
          "_shasum": "0abf4f1caa5bcb1f7a9d8acc6dea4faaa04bac9b",
          "_spec": "esutils@^2.0.2",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "deprecated": false,
          "description": "utility box for ECMAScript language tools",
          "devDependencies": "[Circular]",
          "directories": "[Circular]",
          "engines": "[Circular]",
          "files": "[Circular]",
          "homepage": "https://github.com/estools/esutils",
          "licenses": "[Circular]",
          "main": "lib/utils.js",
          "maintainers": "[Circular]",
          "name": "esutils",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "2.0.2",
          "readme": "### esutils [![Build Status](https://secure.travis-ci.org/estools/esutils.svg)](http://travis-ci.org/estools/esutils)\nesutils ([esutils](http://github.com/estools/esutils)) is\nutility box for ECMAScript language tools.\n\n### API\n\n### ast\n\n#### ast.isExpression(node)\n\nReturns true if `node` is an Expression as defined in ECMA262 edition 5.1 section\n[11](https://es5.github.io/#x11).\n\n#### ast.isStatement(node)\n\nReturns true if `node` is a Statement as defined in ECMA262 edition 5.1 section\n[12](https://es5.github.io/#x12).\n\n#### ast.isIterationStatement(node)\n\nReturns true if `node` is an IterationStatement as defined in ECMA262 edition\n5.1 section [12.6](https://es5.github.io/#x12.6).\n\n#### ast.isSourceElement(node)\n\nReturns true if `node` is a SourceElement as defined in ECMA262 edition 5.1\nsection [14](https://es5.github.io/#x14).\n\n#### ast.trailingStatement(node)\n\nReturns `Statement?` if `node` has trailing `Statement`.\n```js\nif (cond)\n    consequent;\n```\nWhen taking this `IfStatement`, returns `consequent;` statement.\n\n#### ast.isProblematicIfStatement(node)\n\nReturns true if `node` is a problematic IfStatement. If `node` is a problematic `IfStatement`, `node` cannot be represented as an one on one JavaScript code.\n```js\n{\n    type: 'IfStatement',\n    consequent: {\n        type: 'WithStatement',\n        body: {\n            type: 'IfStatement',\n            consequent: {type: 'EmptyStatement'}\n        }\n    },\n    alternate: {type: 'EmptyStatement'}\n}\n```\nThe above node cannot be represented as a JavaScript code, since the top level `else` alternate belongs to an inner `IfStatement`.\n\n\n### code\n\n#### code.isDecimalDigit(code)\n\nReturn true if provided code is decimal digit.\n\n#### code.isHexDigit(code)\n\nReturn true if provided code is hexadecimal digit.\n\n#### code.isOctalDigit(code)\n\nReturn true if provided code is octal digit.\n\n#### code.isWhiteSpace(code)\n\nReturn true if provided code is white space. White space characters are formally defined in ECMA262.\n\n#### code.isLineTerminator(code)\n\nReturn true if provided code is line terminator. Line terminator characters are formally defined in ECMA262.\n\n#### code.isIdentifierStart(code)\n\nReturn true if provided code can be the first character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n#### code.isIdentifierPart(code)\n\nReturn true if provided code can be the trailing character of ECMA262 Identifier. They are formally defined in ECMA262.\n\n### keyword\n\n#### keyword.isKeywordES5(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 5.1. They are formally defined in ECMA262 sections\n[7.6.1.1](http://es5.github.io/#x7.6.1.1) and [7.6.1.2](http://es5.github.io/#x7.6.1.2),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isKeywordES6(id, strict)\n\nReturns `true` if provided identifier string is a Keyword or Future Reserved Word\nin ECMA262 edition 6. They are formally defined in ECMA262 sections\n[11.6.2.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-keywords) and\n[11.6.2.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-future-reserved-words),\nrespectively. If the `strict` flag is truthy, this function additionally checks whether\n`id` is a Keyword or Future Reserved Word under strict mode.\n\n#### keyword.isReservedWordES5(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 5.1.\nThey are formally defined in ECMA262 section [7.6.1](http://es5.github.io/#x7.6.1).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isReservedWordES6(id, strict)\n\nReturns `true` if provided identifier string is a Reserved Word in ECMA262 edition 6.\nThey are formally defined in ECMA262 section [11.6.2](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-reserved-words).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis a Reserved Word under strict mode.\n\n#### keyword.isRestrictedWord(id)\n\nReturns `true` if provided identifier string is one of `eval` or `arguments`.\nThey are restricted in strict mode code throughout ECMA262 edition 5.1 and\nin ECMA262 edition 6 section [12.1.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers-static-semantics-early-errors).\n\n#### keyword.isIdentifierName(id)\n\nReturn true if provided identifier string is an IdentifierName as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6).\n\n#### keyword.isIdentifierES5(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 5.1 section [7.6](https://es5.github.io/#x7.6). If the `strict`\nflag is truthy, this function additionally checks whether `id` is an Identifier\nunder strict mode.\n\n#### keyword.isIdentifierES6(id, strict)\n\nReturn true if provided identifier string is an Identifier as specified in\nECMA262 edition 6 section [12.1](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-identifiers).\nIf the `strict` flag is truthy, this function additionally checks whether `id`\nis an Identifier under strict mode.\n\n### License\n\nCopyright (C) 2013 [Yusuke Suzuki](http://github.com/Constellation)\n (twitter: [@Constellation](http://twitter.com/Constellation)) and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
          "readmeFilename": "README.md",
          "dependencies": {},
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esutils",
          "error": "[Circular]",
          "extraneous": false
        },
        "file-entry-cache": {
          "_from": "file-entry-cache@^1.1.1",
          "_id": "file-entry-cache@1.3.1",
          "_inBundle": false,
          "_integrity": "sha1-RMYepgeuS+nBQC9B9EJwy/4zT/g=",
          "_location": "/file-entry-cache",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "file-entry-cache@^1.1.1",
            "name": "file-entry-cache",
            "escapedName": "file-entry-cache",
            "rawSpec": "^1.1.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.1.1"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-1.3.1.tgz",
          "_shasum": "44c61ea607ae4be9c1402f41f44270cbfe334ff8",
          "_spec": "file-entry-cache@^1.1.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Roy Riojas",
            "url": "http://royriojas.com"
          },
          "bugs": {
            "url": "https://github.com/royriojas/file-entry-cache/issues"
          },
          "bundleDependencies": false,
          "changelogx": {
            "ignoreRegExp": [
              "BLD: Release",
              "DOC: Generate Changelog",
              "Generated Changelog"
            ],
            "issueIDRegExp": "#(\\d+)",
            "commitURL": "https://github.com/royriojas/file-entry-cache/commit/{0}",
            "authorURL": "https://github.com/{0}",
            "issueIDURL": "https://github.com/royriojas/file-entry-cache/issues/{0}",
            "projectName": "file-entry-cache"
          },
          "dependencies": {
            "flat-cache": {
              "_from": "flat-cache@^1.2.1",
              "_id": "flat-cache@1.2.2",
              "_inBundle": false,
              "_integrity": "sha1-+oZxTnLCHbiGAXYezy9VXRq8a5Y=",
              "_location": "/flat-cache",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "flat-cache@^1.2.1",
                "name": "flat-cache",
                "escapedName": "flat-cache",
                "rawSpec": "^1.2.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.2.1"
              },
              "_requiredBy": [
                "/file-entry-cache"
              ],
              "_resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-1.2.2.tgz",
              "_shasum": "fa86714e72c21db88601761ecf2f555d1abc6b96",
              "_spec": "flat-cache@^1.2.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/file-entry-cache",
              "author": {
                "name": "Roy Riojas",
                "url": "http://royriojas.com"
              },
              "bugs": {
                "url": "https://github.com/royriojas/flat-cache/issues"
              },
              "bundleDependencies": false,
              "changelogx": {
                "ignoreRegExp": [
                  "BLD: Release",
                  "DOC: Generate Changelog",
                  "Generated Changelog"
                ],
                "issueIDRegExp": "#(\\d+)",
                "commitURL": "https://github.com/royriojas/flat-cache/commit/{0}",
                "authorURL": "https://github.com/{0}",
                "issueIDURL": "https://github.com/royriojas/flat-cache/issues/{0}",
                "projectName": "flat-cache"
              },
              "dependencies": {
                "circular-json": {
                  "_from": "circular-json@^0.3.1",
                  "_id": "circular-json@0.3.3",
                  "_inBundle": false,
                  "_integrity": "sha512-UZK3NBx2Mca+b5LsG7bY183pHWt5Y1xts4P3Pz7ENTwGVnJOUWbRb3ocjvX7hx9tq/yTAdclXm9sZ38gNuem4A==",
                  "_location": "/circular-json",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "circular-json@^0.3.1",
                    "name": "circular-json",
                    "escapedName": "circular-json",
                    "rawSpec": "^0.3.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^0.3.1"
                  },
                  "_requiredBy": [
                    "/flat-cache"
                  ],
                  "_resolved": "https://registry.npmjs.org/circular-json/-/circular-json-0.3.3.tgz",
                  "_shasum": "815c99ea84f6809529d2f45791bdf82711352d66",
                  "_spec": "circular-json@^0.3.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/flat-cache",
                  "author": {
                    "name": "Andrea Giammarchi",
                    "url": "http://webreflection.blogspot.com/"
                  },
                  "bugs": {
                    "url": "https://github.com/WebReflection/circular-json/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "JSON does not handle circular references. This version does",
                  "devDependencies": {
                    "coveralls": "^2.13.0",
                    "istanbul": "^0.4.5",
                    "tiny-cdn": "^0.7.0",
                    "tressa": "^0.3.1"
                  },
                  "generator": "https://github.com/WebReflection/gitstrap",
                  "homepage": "https://github.com/WebReflection/circular-json",
                  "keywords": [
                    "JSON",
                    "circular",
                    "reference",
                    "recursive",
                    "recursion",
                    "parse",
                    "stringify"
                  ],
                  "license": "MIT",
                  "main": "./build/circular-json.node.js",
                  "name": "circular-json",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/WebReflection/circular-json.git"
                  },
                  "scripts": {
                    "coveralls": "cat ./coverage/lcov.info | coveralls",
                    "test": "istanbul cover test/circular-json.js",
                    "web": "$(sleep 2 && open http://0.0.0.0:7151/) & tiny-cdn run ./"
                  },
                  "version": "0.3.3",
                  "readme": "CircularJSON\n============\n\n![Downloads](https://img.shields.io/npm/dm/circular-json.svg) [![Build Status](https://travis-ci.org/WebReflection/circular-json.svg?branch=master)](https://travis-ci.org/WebReflection/circular-json) [![Coverage Status](https://coveralls.io/repos/github/WebReflection/circular-json/badge.svg?branch=master)](https://coveralls.io/github/WebReflection/circular-json?branch=master) [![donate](https://img.shields.io/badge/$-donate-ff69b4.svg?maxAge=2592000&style=flat)](https://github.com/WebReflection/donate)\n\nSerializes and deserializes otherwise valid JSON objects containing circular references into and from a specialized JSON format.\n\n- - -\n\n### A Working Solution To A Common Problem\nA usage example:\n\n```JavaScript\nvar object = {};\nobject.arr = [\n  object, object\n];\nobject.arr.push(object.arr);\nobject.obj = object;\n\nvar serialized = CircularJSON.stringify(object);\n// '{\"arr\":[\"~\",\"~\",\"~arr\"],\"obj\":\"~\"}'\n// NOTE: CircularJSON DOES NOT parse JS\n// it handles receiver and reviver callbacks\n\nvar unserialized = CircularJSON.parse(serialized);\n// { arr: [ [Circular], [Circular] ],\n// obj: [Circular] }\n\nunserialized.obj === unserialized;\nunserialized.arr[0] === unserialized;\nunserialized.arr.pop() === unserialized.arr;\n```\n\nA quick summary:\n\n  * uses `~` as a special prefix symbol to denote which parent the reference belongs to (i.e. `~root~child1~child2`)\n  * reasonably fast in both serialization and deserialization\n  * compact serialization for easier and slimmer transportation across environments\n  * [tested and covered](test/circular-json.js) over nasty structures too\n  * compatible with all JavaScript engines\n  \nNode Installation & Usage\n============\n\n```bash\nnpm install --save circular-json\n```\n\n```javascript\n'use strict';\n\nvar\n  CircularJSON = require('circular-json'),\n  obj = { foo: 'bar' },\n  str\n;\n  \nobj.self = obj;\nstr = CircularJSON.stringify(obj);\n```\n\nThere are no dependencies.\n\nBrowser Installation & Usage\n================\n\n* Global: <build/circular-json.js>\n* AMD: <build/circular-json.amd.js>\n* CommonJS: <build/circular-json.node.js>\n\n(generated via [gitstrap](https://github.com/WebReflection/gitstrap))\n\n```html\n<script src=\"build/circular-json.js\"></script>\n```\n\n```javascript\n'use strict';\n\nvar CircularJSON = window.CircularJSON\n  , obj = { foo: 'bar' }\n  , str\n  ;\n  \nobj.self = obj;\nstr = CircularJSON.stringify(obj);\n```\n\nNOTE: Platforms without native JSON (i.e. MSIE <= 8) requires `json3.js` or similar.\n\nIt is also *a bad idea* to `CircularJSON.parse(JSON.stringify(object))` because of those manipulation used in `CircularJSON.stringify()` able to make parsing safe and secure.\n\nAs summary: `CircularJSON.parse(CircularJSON.stringify(object))` is the way to go, same is for `JSON.parse(JSON.stringify(object))`.\n\nAPI\n===\n\nIt's the same as native JSON, except the fourth parameter `placeholder`, which circular references to be replaced with `\"[Circular]\"` (i.e. for logging).\n\n* CircularJSON.stringify(object, replacer, spacer, placeholder)\n* CircularJSON.parse(string, reviver)\n\nBear in mind `JSON.parse(CircularJSON.stringify(object))` will work but not produce the expected output.\n\nSimilar Libraries\n=======\n\n### Why Not the [@izs](https://twitter.com/izs) One\nThe module [json-stringify-safe](https://github.com/isaacs/json-stringify-safe) seems to be for `console.log()`  but it's completely pointless for `JSON.parse()`, being latter one unable to retrieve back the initial structure. Here an example:\n\n```JavaScript\n// a logged object with circular references\n{\n  \"circularRef\": \"[Circular]\",\n  \"list\": [\n    \"[Circular]\",\n    \"[Circular]\"\n  ]\n}\n// what do we do with above output ?\n```\n\nJust type this in your `node` console: `var o = {}; o.a = o; console.log(o);`. The output will be `{ a: [Circular] }` ... good, but that ain't really solving the problem.\n\nHowever, if that's all you need, the function used to create that kind of output is probably faster than `CircularJSON` and surely fits in less lines of code.\n\n\n### Why Not {{put random name}} Solution\nSo here the thing: circular references can be wrong but, if there is a need for them, any attempt to ignore them or remove them can be considered just a failure.\n\nNot because the method is bad or it's not working, simply because the circular info, the one we needed and used in the first place, is lost!\n\nIn this case, `CircularJSON` does even more than just solve circular and recursions: it maps all same objects so that less memory is used as well on deserialization as less bandwidth too!\nIt's able to redefine those references back later on so the way we store is the way we retrieve and in a reasonably performant way, also trusting the snappy and native `JSON` methods to iterate.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/circular-json",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "del": {
                  "_from": "del@^2.0.2",
                  "_id": "del@2.2.2",
                  "_inBundle": false,
                  "_integrity": "sha1-wSyYHQZ4RshLyvhiz/kw2Qf/0ag=",
                  "_location": "/del",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "del@^2.0.2",
                    "name": "del",
                    "escapedName": "del",
                    "rawSpec": "^2.0.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^2.0.2"
                  },
                  "_requiredBy": [
                    "/flat-cache"
                  ],
                  "_resolved": "https://registry.npmjs.org/del/-/del-2.2.2.tgz",
                  "_shasum": "c12c981d067846c84bcaf862cff930d907ffd1a8",
                  "_spec": "del@^2.0.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/flat-cache",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/del/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "globby": {
                      "_from": "globby@^5.0.0",
                      "_id": "globby@5.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-69hGZ8oNuzMLmbz8aOrCvFQ3Dg0=",
                      "_location": "/globby",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "globby@^5.0.0",
                        "name": "globby",
                        "escapedName": "globby",
                        "rawSpec": "^5.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^5.0.0"
                      },
                      "_requiredBy": [
                        "/del"
                      ],
                      "_resolved": "https://registry.npmjs.org/globby/-/globby-5.0.0.tgz",
                      "_shasum": "ebd84667ca0dbb330b99bcfc68eac2bc54370e0d",
                      "_spec": "globby@^5.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/globby/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {
                        "array-union": {
                          "_from": "array-union@^1.0.1",
                          "_id": "array-union@1.0.2",
                          "_inBundle": false,
                          "_integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",
                          "_location": "/array-union",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "array-union@^1.0.1",
                            "name": "array-union",
                            "escapedName": "array-union",
                            "rawSpec": "^1.0.1",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^1.0.1"
                          },
                          "_requiredBy": [
                            "/globby"
                          ],
                          "_resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",
                          "_shasum": "9a34410e4f4e3da23dea375be5be70f24778ec39",
                          "_spec": "array-union@^1.0.1",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/globby",
                          "author": {
                            "name": "Sindre Sorhus",
                            "email": "sindresorhus@gmail.com",
                            "url": "sindresorhus.com"
                          },
                          "bugs": {
                            "url": "https://github.com/sindresorhus/array-union/issues"
                          },
                          "bundleDependencies": false,
                          "dependencies": {
                            "array-uniq": {
                              "_from": "array-uniq@^1.0.1",
                              "_id": "array-uniq@1.0.3",
                              "_inBundle": false,
                              "_integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=",
                              "_location": "/array-uniq",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "range",
                                "registry": true,
                                "raw": "array-uniq@^1.0.1",
                                "name": "array-uniq",
                                "escapedName": "array-uniq",
                                "rawSpec": "^1.0.1",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "^1.0.1"
                              },
                              "_requiredBy": [
                                "/array-union"
                              ],
                              "_resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",
                              "_shasum": "af6ac877a25cc7f74e058894753858dfdb24fdb6",
                              "_spec": "array-uniq@^1.0.1",
                              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/array-union",
                              "author": {
                                "name": "Sindre Sorhus",
                                "email": "sindresorhus@gmail.com",
                                "url": "sindresorhus.com"
                              },
                              "bugs": {
                                "url": "https://github.com/sindresorhus/array-uniq/issues"
                              },
                              "bundleDependencies": false,
                              "deprecated": false,
                              "description": "Create an array without duplicates",
                              "devDependencies": {
                                "ava": "*",
                                "es6-set": "^0.1.0",
                                "require-uncached": "^1.0.2",
                                "xo": "*"
                              },
                              "engines": {
                                "node": ">=0.10.0"
                              },
                              "files": [
                                "index.js"
                              ],
                              "homepage": "https://github.com/sindresorhus/array-uniq#readme",
                              "keywords": [
                                "array",
                                "arr",
                                "set",
                                "uniq",
                                "unique",
                                "es6",
                                "duplicate",
                                "remove"
                              ],
                              "license": "MIT",
                              "name": "array-uniq",
                              "repository": {
                                "type": "git",
                                "url": "git+https://github.com/sindresorhus/array-uniq.git"
                              },
                              "scripts": {
                                "test": "xo && ava"
                              },
                              "version": "1.0.3",
                              "readme": "# array-uniq [![Build Status](https://travis-ci.org/sindresorhus/array-uniq.svg?branch=master)](https://travis-ci.org/sindresorhus/array-uniq)\n\n> Create an array without duplicates\n\nIt's already pretty fast, but will be much faster when [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) becomes available in V8 (especially with large arrays).\n\n\n## Install\n\n```\n$ npm install --save array-uniq\n```\n\n\n## Usage\n\n```js\nconst arrayUniq = require('array-uniq');\n\narrayUniq([1, 1, 2, 3, 3]);\n//=> [1, 2, 3]\n\narrayUniq(['foo', 'foo', 'bar', 'foo']);\n//=> ['foo', 'bar']\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                              "readmeFilename": "readme.md",
                              "dependencies": {},
                              "optionalDependencies": {},
                              "_dependencies": {},
                              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/array-uniq",
                              "error": "[Circular]",
                              "extraneous": false
                            }
                          },
                          "deprecated": false,
                          "description": "Create an array of unique values, in order, from the input arrays",
                          "devDependencies": {
                            "ava": "*",
                            "xo": "*"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/sindresorhus/array-union#readme",
                          "keywords": [
                            "array",
                            "arr",
                            "set",
                            "uniq",
                            "unique",
                            "duplicate",
                            "remove",
                            "union",
                            "combine",
                            "merge"
                          ],
                          "license": "MIT",
                          "name": "array-union",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/sindresorhus/array-union.git"
                          },
                          "scripts": {
                            "test": "xo && ava"
                          },
                          "version": "1.0.2",
                          "readme": "# array-union [![Build Status](https://travis-ci.org/sindresorhus/array-union.svg?branch=master)](https://travis-ci.org/sindresorhus/array-union)\n\n> Create an array of unique values, in order, from the input arrays\n\n\n## Install\n\n```\n$ npm install --save array-union\n```\n\n\n## Usage\n\n```js\nconst arrayUnion = require('array-union');\n\narrayUnion([1, 1, 2, 3], [2, 3]);\n//=> [1, 2, 3]\n\narrayUnion(['foo', 'foo', 'bar'], ['foo']);\n//=> ['foo', 'bar']\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "array-uniq": "^1.0.1"
                          },
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/array-union",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "arrify": {
                          "_from": "arrify@^1.0.0",
                          "_id": "arrify@1.0.1",
                          "_inBundle": false,
                          "_integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=",
                          "_location": "/arrify",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "arrify@^1.0.0",
                            "name": "arrify",
                            "escapedName": "arrify",
                            "rawSpec": "^1.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^1.0.0"
                          },
                          "_requiredBy": [
                            "/globby"
                          ],
                          "_resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",
                          "_shasum": "898508da2226f380df904728456849c1501a4b0d",
                          "_spec": "arrify@^1.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/globby",
                          "author": {
                            "name": "Sindre Sorhus",
                            "email": "sindresorhus@gmail.com",
                            "url": "sindresorhus.com"
                          },
                          "bugs": {
                            "url": "https://github.com/sindresorhus/arrify/issues"
                          },
                          "bundleDependencies": false,
                          "deprecated": false,
                          "description": "Convert a value to an array",
                          "devDependencies": {
                            "ava": "*",
                            "xo": "*"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/sindresorhus/arrify#readme",
                          "keywords": [
                            "array",
                            "arr",
                            "arrify",
                            "arrayify",
                            "convert",
                            "value"
                          ],
                          "license": "MIT",
                          "name": "arrify",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/sindresorhus/arrify.git"
                          },
                          "scripts": {
                            "test": "xo && ava"
                          },
                          "version": "1.0.1",
                          "readme": "# arrify [![Build Status](https://travis-ci.org/sindresorhus/arrify.svg?branch=master)](https://travis-ci.org/sindresorhus/arrify)\n\n> Convert a value to an array\n\n\n## Install\n\n```\n$ npm install --save arrify\n```\n\n\n## Usage\n\n```js\nconst arrify = require('arrify');\n\narrify('unicorn');\n//=> ['unicorn']\n\narrify(['unicorn']);\n//=> ['unicorn']\n\narrify(null);\n//=> []\n\narrify(undefined);\n//=> []\n```\n\n*Supplying `null` or `undefined` results in an empty array.*\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/arrify",
                          "error": "[Circular]",
                          "extraneous": false
                        },
                        "glob": {
                          "_from": "glob@^7.0.3",
                          "_id": "glob@7.1.2",
                          "_inBundle": false,
                          "_integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
                          "_location": "/glob",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "glob@^7.0.3",
                            "name": "glob",
                            "escapedName": "glob",
                            "rawSpec": "^7.0.3",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^7.0.3"
                          },
                          "_requiredBy": [
                            "/eslint",
                            "/globby",
                            "/rimraf"
                          ],
                          "_resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
                          "_shasum": "c19c9df9a028702d678612384a6552404c636d15",
                          "_spec": "glob@^7.0.3",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
                          "author": {
                            "name": "Isaac Z. Schlueter",
                            "email": "i@izs.me",
                            "url": "http://blog.izs.me/"
                          },
                          "bugs": {
                            "url": "https://github.com/isaacs/node-glob/issues"
                          },
                          "bundleDependencies": false,
                          "dependencies": {},
                          "deprecated": false,
                          "description": "a little globber",
                          "devDependencies": {
                            "mkdirp": "0",
                            "rimraf": "^2.2.8",
                            "tap": "^7.1.2",
                            "tick": "0.0.6"
                          },
                          "engines": {
                            "node": "*"
                          },
                          "files": [
                            "glob.js",
                            "sync.js",
                            "common.js"
                          ],
                          "homepage": "https://github.com/isaacs/node-glob#readme",
                          "license": "ISC",
                          "main": "glob.js",
                          "name": "glob",
                          "repository": {
                            "type": "git",
                            "url": "git://github.com/isaacs/node-glob.git"
                          },
                          "scripts": {
                            "bench": "bash benchmark.sh",
                            "benchclean": "node benchclean.js",
                            "prepublish": "npm run benchclean",
                            "prof": "bash prof.sh && cat profile.txt",
                            "profclean": "rm -f v8.log profile.txt",
                            "test": "tap test/*.js --cov",
                            "test-regen": "npm run profclean && TEST_REGEN=1 node test/00-setup.js"
                          },
                          "version": "7.1.2",
                          "readme": "# Glob\n\nMatch files using the patterns the shell uses, like stars and stuff.\n\n[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch=master)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg=true)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github)](https://coveralls.io/github/isaacs/node-glob?branch=master)\n\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\nlibrary to do its matching.\n\n![](oh-my-glob.gif)\n\n## Usage\n\nInstall with npm\n\n```\nnpm i glob\n```\n\n```javascript\nvar glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n```\n\n## Glob Primer\n\n\"Globs\" are the patterns you type when you do stuff like `ls *.js` on\nthe command line, or put `build/*` in a `.gitignore` file.\n\nBefore parsing the path part patterns, braced sections are expanded\ninto a set.  Braced sections start with `{` and end with `}`, with any\nnumber of comma-delimited sections within.  Braced sections may contain\nslash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.\n\nThe following characters have special magic meaning when used in a\npath portion:\n\n* `*` Matches 0 or more characters in a single path portion\n* `?` Matches 1 character\n* `[...]` Matches a range of characters, similar to a RegExp range.\n  If the first character of the range is `!` or `^` then it matches\n  any character not in the range.\n* `!(pattern|pattern|pattern)` Matches anything that does not match\n  any of the patterns provided.\n* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the\n  patterns provided.\n* `+(pattern|pattern|pattern)` Matches one or more occurrences of the\n  patterns provided.\n* `*(a|b|c)` Matches zero or more occurrences of the patterns provided\n* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns\n  provided\n* `**` If a \"globstar\" is alone in a path portion, then it matches\n  zero or more directories and subdirectories searching for matches.\n  It does not crawl symlinked directories.\n\n### Dots\n\nIf a file or directory path portion has a `.` as the first character,\nthen it will not match any glob pattern unless that pattern's\ncorresponding path part also has a `.` as its first character.\n\nFor example, the pattern `a/.*/c` would match the file at `a/.b/c`.\nHowever the pattern `a/*/c` would not, because `*` does not start with\na dot character.\n\nYou can make glob treat dots as normal characters by setting\n`dot:true` in the options.\n\n### Basename Matching\n\nIf you set `matchBase:true` in the options, and the pattern has no\nslashes in it, then it will seek for any file anywhere in the tree\nwith a matching basename.  For example, `*.js` would match\n`test/simple/basic.js`.\n\n### Empty Sets\n\nIf no matching files are found, then an empty array is returned.  This\ndiffers from the shell, where the pattern itself is returned.  For\nexample:\n\n    $ echo a*s*d*f\n    a*s*d*f\n\nTo get the bash-style behavior, set the `nonull:true` in the options.\n\n### See Also:\n\n* `man sh`\n* `man bash` (Search for \"Pattern Matching\")\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob.hasMagic(pattern, [options])\n\nReturns `true` if there are any special characters in the pattern, and\n`false` otherwise.\n\nNote that the options affect the results.  If `noext:true` is set in\nthe options object, then `+(a|b)` will not be considered a magic\npattern.  If the pattern has a brace expansion, like `a/{b/c,x/y}`\nthen that is considered magical, unless `nobrace:true` is set in the\noptions.\n\n## glob(pattern, [options], cb)\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* `cb` `{Function}`\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options])\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* return: `{Array<String>}` filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instantiating the `glob.Glob` class.\n\n```javascript\nvar Glob = require(\"glob\").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt's an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` `{String}` pattern to search for\n* `options` `{Object}`\n* `cb` `{Function}` Called when an error occurs, or matches are found\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `aborted` Boolean which is set to true when calling `abort()`.  There\n  is no way at this time to continue a glob search after aborting, but\n  you can re-use the statCache to avoid having to duplicate syscalls.\n* `cache` Convenience object.  Each field has the following possible\n  values:\n  * `false` - Path does not exist\n  * `true` - Path exists\n  * `'FILE'` - Path exists, and is not a directory\n  * `'DIR'` - Path exists, and is a directory\n  * `[file, entries, ...]` - Path exists, is a directory, and the\n    array value is the results of `fs.readdir`\n* `statCache` Cache of `fs.stat` results, to prevent statting the same\n  path multiple times.\n* `symlinks` A record of which paths are symbolic links, which is\n  relevant in resolving `**` patterns.\n* `realpathCache` An optional object which is passed to `fs.realpath`\n  to minimize unnecessary syscalls.  It is stored on the instantiated\n  Glob object, and may be re-used.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n  matches found.  If the `nonull` option is set, and no match was found,\n  then the `matches` list contains the original pattern.  The matches\n  are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the specific\n  thing that matched. It is not deduplicated or resolved to a realpath.\n* `error` Emitted when an unexpected error is encountered, or whenever\n  any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `pause` Temporarily stop the search\n* `resume` Resume the search\n* `abort` Stop the search forever\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior.  Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the Glob object, as well.\n\nIf you are running many `glob` operations, you can pass a Glob object\nas the `options` argument to a subsequent operation to shortcut some\n`stat` and `readdir` calls.  At the very least, you may pass in shared\n`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that\nparallel glob operations will be sped up by sharing information about\nthe filesystem.\n\n* `cwd` The current working directory in which to search.  Defaults\n  to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n  onto.  Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix\n  systems, and `C:\\` or some such on Windows.)\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\n  Note that an explicit dot in a portion of the pattern will always\n  match dot files.\n* `nomount` By default, a pattern starting with a forward-slash will be\n  \"mounted\" onto the root setting, so that a valid filesystem path is\n  returned.  Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches.  Note that this\n  requires additional stat calls.\n* `nosort` Don't sort the results.\n* `stat` Set to true to stat *all* results.  This reduces performance\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\n  to be an untrustworthy indicator of file existence.\n* `silent` When an unusual error is encountered when attempting to\n  read a directory, a warning will be printed to stderr.  Set the\n  `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered when attempting to\n  read a directory, the process will just continue on in search of\n  other matches.  Set the `strict` option to raise an error in these\n  cases.\n* `cache` See `cache` property above.  Pass in a previously generated\n  cache object to save some fs calls.\n* `statCache` A cache of results of filesystem information, to prevent\n  unnecessary stat calls.  While it should not normally be necessary\n  to set this, you may pass the statCache from one glob() call to the\n  options object of another, if you know that the filesystem will not\n  change between calls.  (See \"Race Conditions\" below.)\n* `symlinks` A cache of known symbolic links.  You may pass in a\n  previously generated `symlinks` object to save `lstat` calls when\n  resolving `**` matches.\n* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.\n* `nounique` In some cases, brace-expanded patterns can result in the\n  same file showing up multiple times in the result set.  By default,\n  this implementation prevents duplicates in the result set.  Set this\n  flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n  containing the pattern itself.  This is the default in glob(3).\n* `debug` Set to enable debug logging in minimatch and glob.\n* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.\n* `noglobstar` Do not match `**` against multiple filenames.  (Ie,\n  treat it as a normal `*` instead.)\n* `noext` Do not match `+(a|b)` \"extglob\" patterns.\n* `nocase` Perform a case-insensitive match.  Note: on\n  case-insensitive filesystems, non-magic patterns will match by\n  default, since `stat` and `readdir` will not raise errors.\n* `matchBase` Perform a basename-only match if the pattern does not\n  contain any slash characters.  That is, `*.js` would be treated as\n  equivalent to `**/*.js`, matching all js files in all directories.\n* `nodir` Do not match directories, only files.  (Note: to match\n  *only* directories, simply put a `/` at the end of the pattern.)\n* `ignore` Add a pattern or an array of glob patterns to exclude matches.\n  Note: `ignore` patterns are *always* in `dot:true` mode, regardless\n  of any other settings.\n* `follow` Follow symlinked directories when expanding `**` patterns.\n  Note that this can result in a lot of duplicate references in the\n  presence of cyclic links.\n* `realpath` Set to true to call `fs.realpath` on all of the results.\n  In the case of a symlink that cannot be resolved, the full absolute\n  path to the matched entry is returned (though it will usually be a\n  broken symlink)\n* `absolute` Set to true to always receive absolute paths for matched\n  files.  Unlike `realpath`, this also affects the values returned in\n  the `match` event.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.3, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nNote that symlinked directories are not crawled as part of a `**`,\nthough their contents may match against subsequent portions of the\npattern.  This prevents infinite loops and duplicates and the like.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n### Comments and Negation\n\nPreviously, this module let you mark a pattern as a \"comment\" if it\nstarted with a `#` character, or a \"negated\" pattern if it started\nwith a `!` character.\n\nThese options were deprecated in version 5, and removed in version 6.\n\nTo specify things that should not match, use the `ignore` option.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation.  You must use\nforward-slashes **only** in glob expressions.  Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`.  On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead.  However, this also makes it even more susceptible to races,\nespecially if the cache or statCache objects are reused between glob\ncalls.\n\nUsers are thus advised not to use a glob result as a guarantee of\nfilesystem state in the face of rapid changes.  For the vast majority\nof operations, this is never a problem.\n\n## Contributing\n\nAny change to behavior (including bugfixes) must come with a test.\n\nPatches that fail tests or reduce performance will be rejected.\n\n```\n# to run tests\nnpm test\n\n# to re-generate test fixtures\nnpm run test-regen\n\n# to benchmark against bash/zsh\nnpm run bench\n\n# to profile javascript\nnpm run prof\n```\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "fs.realpath": "^1.0.0",
                            "inflight": "^1.0.4",
                            "inherits": "2",
                            "minimatch": "^3.0.4",
                            "once": "^1.3.0",
                            "path-is-absolute": "^1.0.0"
                          },
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "glob"
                        },
                        "object-assign": {
                          "_from": "object-assign@^4.0.1",
                          "_id": "object-assign@4.1.1",
                          "_inBundle": false,
                          "_integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
                          "_location": "/object-assign",
                          "_phantomChildren": "[Circular]",
                          "_requested": "[Circular]",
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                          "_shasum": "2109adc7965887cfc05cbbd442cac8bfbb360863",
                          "_spec": "object-assign@^4.0.1",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esrecurse",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "bundleDependencies": false,
                          "deprecated": false,
                          "description": "ES2015 `Object.assign()` ponyfill",
                          "devDependencies": "[Circular]",
                          "engines": "[Circular]",
                          "files": "[Circular]",
                          "homepage": "https://github.com/sindresorhus/object-assign#readme",
                          "keywords": "[Circular]",
                          "license": "MIT",
                          "name": "object-assign",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "4.1.1",
                          "readme": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) [ponyfill](https://ponyfill.com)\n\n\n## Use the built-in\n\nNode.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\nsupport `Object.assign()` :tada:. If you target only those environments, then by all\nmeans, use `Object.assign()` instead of this package.\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "dependencies": {},
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/object-assign",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "object-assign"
                        },
                        "pify": {
                          "_from": "pify@^2.0.0",
                          "_id": "pify@2.3.0",
                          "_inBundle": false,
                          "_integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
                          "_location": "/pify",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "pify@^2.0.0",
                            "name": "pify",
                            "escapedName": "pify",
                            "rawSpec": "^2.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^2.0.0"
                          },
                          "_requiredBy": [
                            "/del",
                            "/globby"
                          ],
                          "_resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
                          "_shasum": "ed141a6ac043a849ea588498e7dca8b15330e90c",
                          "_spec": "pify@^2.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                          "author": {
                            "name": "Sindre Sorhus",
                            "email": "sindresorhus@gmail.com",
                            "url": "sindresorhus.com"
                          },
                          "bugs": {
                            "url": "https://github.com/sindresorhus/pify/issues"
                          },
                          "bundleDependencies": false,
                          "deprecated": false,
                          "description": "Promisify a callback-style function",
                          "devDependencies": {
                            "ava": "*",
                            "pinkie-promise": "^1.0.0",
                            "v8-natives": "0.0.2",
                            "xo": "*"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/sindresorhus/pify#readme",
                          "keywords": [
                            "promise",
                            "promises",
                            "promisify",
                            "denodify",
                            "denodeify",
                            "callback",
                            "cb",
                            "node",
                            "then",
                            "thenify",
                            "convert",
                            "transform",
                            "wrap",
                            "wrapper",
                            "bind",
                            "to",
                            "async",
                            "es2015"
                          ],
                          "license": "MIT",
                          "name": "pify",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/sindresorhus/pify.git"
                          },
                          "scripts": {
                            "optimization-test": "node --allow-natives-syntax optimization-test.js",
                            "test": "xo && ava && npm run optimization-test"
                          },
                          "version": "2.3.0",
                          "readme": "# pify [![Build Status](https://travis-ci.org/sindresorhus/pify.svg?branch=master)](https://travis-ci.org/sindresorhus/pify)\n\n> Promisify a callback-style function\n\n\n## Install\n\n```\n$ npm install --save pify\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst pify = require('pify');\n\n// promisify a single function\n\npify(fs.readFile)('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n\n// or promisify all methods in a module\n\npify(fs).readFile('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n```\n\n\n## API\n\n### pify(input, [promiseModule], [options])\n\nReturns a promise wrapped version of the supplied function or module.\n\n#### input\n\nType: `function`, `object`\n\nCallback-style function or module whose methods you want to promisify.\n\n#### promiseModule\n\nType: `function`\n\nCustom promise module to use instead of the native one.\n\nCheck out [`pinkie-promise`](https://github.com/floatdrop/pinkie-promise) if you need a tiny promise polyfill.\n\n#### options\n\n##### multiArgs\n\nType: `boolean`  \nDefault: `false`\n\nBy default, the promisified function will only return the second argument from the callback, which works fine for most APIs. This option can be useful for modules like `request` that return multiple arguments. Turning this on will make it return an array of all arguments from the callback, excluding the error argument, instead of just the second argument.\n\n```js\nconst request = require('request');\nconst pify = require('pify');\n\npify(request, {multiArgs: true})('https://sindresorhus.com').then(result => {\n\tconst [httpResponse, body] = result;\n});\n```\n\n##### include\n\nType: `array` of (`string`|`regex`)\n\nMethods in a module to promisify. Remaining methods will be left untouched.\n\n##### exclude\n\nType: `array` of (`string`|`regex`)  \nDefault: `[/.+Sync$/]`\n\nMethods in a module **not** to promisify. Methods with names ending with `'Sync'` are excluded by default.\n\n##### excludeMain\n\nType: `boolean`  \nDefault: `false`\n\nBy default, if given module is a function itself, this function will be promisified. Turn this option on if you want to promisify only methods of the module.\n\n```js\nconst pify = require('pify');\n\nfunction fn() {\n\treturn true;\n}\n\nfn.method = (data, callback) => {\n\tsetImmediate(() => {\n\t\tcallback(data, null);\n\t});\n};\n\n// promisify methods but not fn()\nconst promiseFn = pify(fn, {excludeMain: true});\n\nif (promiseFn()) {\n\tpromiseFn.method('hi').then(data => {\n\t\tconsole.log(data);\n\t});\n}\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/pify",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "pify"
                        },
                        "pinkie-promise": {
                          "_from": "pinkie-promise@^2.0.0",
                          "_id": "pinkie-promise@2.0.1",
                          "_inBundle": false,
                          "_integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
                          "_location": "/pinkie-promise",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "pinkie-promise@^2.0.0",
                            "name": "pinkie-promise",
                            "escapedName": "pinkie-promise",
                            "rawSpec": "^2.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^2.0.0"
                          },
                          "_requiredBy": [
                            "/del",
                            "/globby"
                          ],
                          "_resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
                          "_shasum": "2135d6dfa7a358c069ac9b178776288228450ffa",
                          "_spec": "pinkie-promise@^2.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                          "author": {
                            "name": "Vsevolod Strukchinsky",
                            "email": "floatdrop@gmail.com",
                            "url": "github.com/floatdrop"
                          },
                          "bugs": {
                            "url": "https://github.com/floatdrop/pinkie-promise/issues"
                          },
                          "bundleDependencies": false,
                          "dependencies": {},
                          "deprecated": false,
                          "description": "ES2015 Promise ponyfill",
                          "devDependencies": {
                            "mocha": "*"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/floatdrop/pinkie-promise#readme",
                          "keywords": [
                            "promise",
                            "promises",
                            "es2015",
                            "es6",
                            "polyfill",
                            "ponyfill"
                          ],
                          "license": "MIT",
                          "name": "pinkie-promise",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/floatdrop/pinkie-promise.git"
                          },
                          "scripts": {
                            "test": "mocha"
                          },
                          "version": "2.0.1",
                          "readme": "# pinkie-promise [![Build Status](https://travis-ci.org/floatdrop/pinkie-promise.svg?branch=master)](https://travis-ci.org/floatdrop/pinkie-promise)\n\n> [ES2015 Promise](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects) ponyfill\n\nModule exports global Promise object (if available) or [`pinkie`](http://github.com/floatdrop/pinkie) Promise polyfill.\n\n## Install\n\n```\n$ npm install --save pinkie-promise\n```\n\n## Usage\n\n```js\nvar Promise = require('pinkie-promise');\n\nnew Promise(function (resolve) { resolve('unicorns'); });\n//=> Promise { 'unicorns' }\n```\n\n## Related\n\n- [pify](https://github.com/sindresorhus/pify) - Promisify a callback-style function\n\n## License\n\nMIT Â© [Vsevolod Strukchinsky](http://github.com/floatdrop)\n",
                          "readmeFilename": "readme.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "pinkie": "^2.0.0"
                          },
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/pinkie-promise",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "pinkie-promise"
                        }
                      },
                      "deprecated": false,
                      "description": "Extends `glob` with support for multiple patterns and exposes a Promise API",
                      "devDependencies": {
                        "ava": "*",
                        "glob-stream": "github:wearefractal/glob-stream#master",
                        "globby": "github:sindresorhus/globby#master",
                        "matcha": "^0.7.0",
                        "rimraf": "^2.2.8",
                        "xo": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/globby#readme",
                      "keywords": [
                        "all",
                        "array",
                        "directories",
                        "dirs",
                        "expand",
                        "files",
                        "filesystem",
                        "filter",
                        "find",
                        "fnmatch",
                        "folders",
                        "fs",
                        "glob",
                        "globbing",
                        "globs",
                        "gulpfriendly",
                        "match",
                        "matcher",
                        "minimatch",
                        "multi",
                        "multiple",
                        "paths",
                        "pattern",
                        "patterns",
                        "traverse",
                        "util",
                        "utility",
                        "wildcard",
                        "wildcards",
                        "promise"
                      ],
                      "license": "MIT",
                      "name": "globby",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/globby.git"
                      },
                      "scripts": {
                        "bench": "npm update globby glob-stream && matcha bench.js",
                        "test": "xo && ava"
                      },
                      "version": "5.0.0",
                      "readme": "# globby [![Build Status](https://travis-ci.org/sindresorhus/globby.svg?branch=master)](https://travis-ci.org/sindresorhus/globby)\n\n> Extends [glob](https://github.com/isaacs/node-glob) with support for multiple patterns and exposes a Promise API\n\n\n## Install\n\n```\n$ npm install --save globby\n```\n\n\n## Usage\n\n```\nâââ unicorn\nâââ cake\nâââ rainbow\n```\n\n```js\nconst globby = require('globby');\n\nglobby(['*', '!cake']).then(paths => {\n\tconsole.log(paths);\n\t//=> ['unicorn', 'rainbow']\n});\n```\n\n\n## API\n\n### globby(patterns, [options])\n\nReturns a Promise for an array of matching paths.\n\n### globby.sync(patterns, [options])\n\nReturns an array of matching paths.\n\n### globby.generateGlobTasks(patterns, [options])\n\nReturns an array of objects in the format `{ pattern: string, opts: Object }`, which can be passed as arguments to [`node-glob`](https://github.com/isaacs/node-glob). This is useful for other globbing-related packages.\n\nNote that you should avoid running the same tasks multiple times as they contain a file system cache. Instead, create a new tasks list to ensure that file system changes are taken in consideration.\n\n#### patterns\n\nType: `string`, `Array`\n\nSee supported `minimatch` [patterns](https://github.com/isaacs/minimatch#usage).\n\n#### options\n\nType: `Object`\n\nSee the `node-glob` [options](https://github.com/isaacs/node-glob#options).\n\n\n## Globbing patterns\n\nJust a quick overview.\n\n- `*` matches any number of characters, but not `/`\n- `?` matches a single character, but not `/`\n- `**` matches any number of characters, including `/`, as long as it's the only thing in a path part\n- `{}` allows for a comma-separated list of \"or\" expressions\n- `!` at the beginning of a pattern will negate the match\n\n[Various patterns and expected matches.](https://github.com/sindresorhus/multimatch/blob/master/test.js)\n\n\n## Related\n\n- [multimatch](https://github.com/sindresorhus/multimatch) - Match against a list instead of the filesystem\n- [glob-stream](https://github.com/wearefractal/glob-stream) - Streaming alternative\n- [matcher](https://github.com/sindresorhus/matcher) - Simple wildcard matching\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "array-union": "^1.0.1",
                        "arrify": "^1.0.0",
                        "glob": "^7.0.3",
                        "object-assign": "^4.0.1",
                        "pify": "^2.0.0",
                        "pinkie-promise": "^2.0.0"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/globby",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "is-path-cwd": {
                      "_from": "is-path-cwd@^1.0.0",
                      "_id": "is-path-cwd@1.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0=",
                      "_location": "/is-path-cwd",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "is-path-cwd@^1.0.0",
                        "name": "is-path-cwd",
                        "escapedName": "is-path-cwd",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/del"
                      ],
                      "_resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz",
                      "_shasum": "d225ec23132e89edd38fda767472e62e65f1106d",
                      "_spec": "is-path-cwd@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "http://sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/is-path-cwd/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Check if a path is CWD",
                      "devDependencies": {
                        "mocha": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/is-path-cwd#readme",
                      "keywords": [
                        "path",
                        "cwd",
                        "pwd",
                        "check",
                        "filepath",
                        "file",
                        "folder"
                      ],
                      "license": "MIT",
                      "name": "is-path-cwd",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/is-path-cwd.git"
                      },
                      "scripts": {
                        "test": "mocha"
                      },
                      "version": "1.0.0",
                      "readme": "# is-path-cwd [![Build Status](https://travis-ci.org/sindresorhus/is-path-cwd.svg?branch=master)](https://travis-ci.org/sindresorhus/is-path-cwd)\n\n> Check if a path is [CWD](http://en.wikipedia.org/wiki/Working_directory)\n\n\n## Install\n\n```sh\n$ npm install --save is-path-cwd\n```\n\n\n## Usage\n\n```js\nvar isPathCwd = require('is-path-cwd');\n\nisPathCwd(process.cwd());\n//=> true\n\nisPathCwd('unicorn');\n//=> false\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-path-cwd",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "is-path-in-cwd": {
                      "_from": "is-path-in-cwd@^1.0.0",
                      "_id": "is-path-in-cwd@1.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-ZHdYK4IU1gI0YJRWcAO+ip6sBNw=",
                      "_location": "/is-path-in-cwd",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "is-path-in-cwd@^1.0.0",
                        "name": "is-path-in-cwd",
                        "escapedName": "is-path-in-cwd",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/del"
                      ],
                      "_resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.0.tgz",
                      "_shasum": "6477582b8214d602346094567003be8a9eac04dc",
                      "_spec": "is-path-in-cwd@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "http://sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/is-path-in-cwd/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {
                        "is-path-inside": {
                          "_from": "is-path-inside@^1.0.0",
                          "_id": "is-path-inside@1.0.0",
                          "_inBundle": false,
                          "_integrity": "sha1-/AbloWg/vaE95mev9xe7wQpI838=",
                          "_location": "/is-path-inside",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "is-path-inside@^1.0.0",
                            "name": "is-path-inside",
                            "escapedName": "is-path-inside",
                            "rawSpec": "^1.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^1.0.0"
                          },
                          "_requiredBy": [
                            "/is-path-in-cwd"
                          ],
                          "_resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.0.tgz",
                          "_shasum": "fc06e5a1683fbda13de667aff717bbc10a48f37f",
                          "_spec": "is-path-inside@^1.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-path-in-cwd",
                          "author": {
                            "name": "Sindre Sorhus",
                            "email": "sindresorhus@gmail.com",
                            "url": "http://sindresorhus.com"
                          },
                          "bugs": {
                            "url": "https://github.com/sindresorhus/is-path-inside/issues"
                          },
                          "bundleDependencies": false,
                          "dependencies": {
                            "path-is-inside": {
                              "_from": "path-is-inside@^1.0.1",
                              "_id": "path-is-inside@1.0.2",
                              "_inBundle": false,
                              "_integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
                              "_location": "/path-is-inside",
                              "_phantomChildren": {},
                              "_requested": {
                                "type": "range",
                                "registry": true,
                                "raw": "path-is-inside@^1.0.1",
                                "name": "path-is-inside",
                                "escapedName": "path-is-inside",
                                "rawSpec": "^1.0.1",
                                "saveSpec": "[Circular]",
                                "fetchSpec": "^1.0.1"
                              },
                              "_requiredBy": [
                                "/eslint",
                                "/is-path-inside"
                              ],
                              "_resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
                              "_shasum": "365417dede44430d1c11af61027facf074bdfc53",
                              "_spec": "path-is-inside@^1.0.1",
                              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
                              "author": {
                                "name": "Domenic Denicola",
                                "email": "d@domenic.me",
                                "url": "https://domenic.me"
                              },
                              "bugs": {
                                "url": "https://github.com/domenic/path-is-inside/issues"
                              },
                              "bundleDependencies": false,
                              "deprecated": false,
                              "description": "Tests whether one path is inside another path",
                              "devDependencies": {
                                "jshint": "~2.3.0",
                                "mocha": "~1.15.1"
                              },
                              "files": [
                                "lib"
                              ],
                              "homepage": "https://github.com/domenic/path-is-inside#readme",
                              "keywords": [
                                "path",
                                "directory",
                                "folder",
                                "inside",
                                "relative"
                              ],
                              "license": "(WTFPL OR MIT)",
                              "main": "lib/path-is-inside.js",
                              "name": "path-is-inside",
                              "repository": {
                                "type": "git",
                                "url": "git+https://github.com/domenic/path-is-inside.git"
                              },
                              "scripts": {
                                "lint": "jshint lib",
                                "test": "mocha"
                              },
                              "version": "1.0.2",
                              "readme": "ERROR: No README data found!",
                              "dependencies": {},
                              "optionalDependencies": {},
                              "_dependencies": {},
                              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/path-is-inside",
                              "error": "[Circular]",
                              "extraneous": false,
                              "_deduped": "path-is-inside"
                            }
                          },
                          "deprecated": false,
                          "description": "Check if a path is inside another path",
                          "devDependencies": {
                            "mocha": "*"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/sindresorhus/is-path-inside#readme",
                          "keywords": [
                            "path",
                            "inside",
                            "folder",
                            "directory",
                            "dir",
                            "file",
                            "resolve"
                          ],
                          "license": "MIT",
                          "name": "is-path-inside",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/sindresorhus/is-path-inside.git"
                          },
                          "scripts": {
                            "test": "mocha"
                          },
                          "version": "1.0.0",
                          "readme": "# is-path-inside [![Build Status](https://travis-ci.org/sindresorhus/is-path-inside.svg?branch=master)](https://travis-ci.org/sindresorhus/is-path-inside)\n\n> Check if a path is inside another path\n\n\n## Install\n\n```sh\n$ npm install --save is-path-inside\n```\n\n\n## Usage\n\n```js\nvar isPathInside = require('is-path-inside');\n\nisPathInside('a/b', 'a/b/c');\n//=> true\n\nisPathInside('x/y', 'a/b/c');\n//=> false\n\nisPathInside('a/b/c', 'a/b/c');\n//=> false\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                          "readmeFilename": "readme.md",
                          "optionalDependencies": {},
                          "_dependencies": {
                            "path-is-inside": "^1.0.1"
                          },
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-path-inside",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "deprecated": false,
                      "description": "Check if a path is in the current working directory",
                      "devDependencies": {
                        "mocha": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/is-path-in-cwd#readme",
                      "keywords": [
                        "path",
                        "cwd",
                        "pwd",
                        "check",
                        "filepath",
                        "file",
                        "folder",
                        "in",
                        "inside"
                      ],
                      "license": "MIT",
                      "name": "is-path-in-cwd",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/is-path-in-cwd.git"
                      },
                      "scripts": {
                        "test": "mocha"
                      },
                      "version": "1.0.0",
                      "readme": "# is-path-in-cwd [![Build Status](https://travis-ci.org/sindresorhus/is-path-in-cwd.svg?branch=master)](https://travis-ci.org/sindresorhus/is-path-in-cwd)\n\n> Check if a path is in the [current working directory](http://en.wikipedia.org/wiki/Working_directory)\n\n\n## Install\n\n```sh\n$ npm install --save is-path-in-cwd\n```\n\n\n## Usage\n\n```js\nvar isPathInCwd = require('is-path-in-cwd');\n\nisPathInCwd('unicorn');\n//=> true\n\nisPathInCwd('../rainbow');\n//=> false\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "is-path-inside": "^1.0.0"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-path-in-cwd",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "object-assign": {
                      "_from": "object-assign@^4.0.1",
                      "_id": "object-assign@4.1.1",
                      "_inBundle": false,
                      "_integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
                      "_location": "/object-assign",
                      "_phantomChildren": "[Circular]",
                      "_requested": "[Circular]",
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                      "_shasum": "2109adc7965887cfc05cbbd442cac8bfbb360863",
                      "_spec": "object-assign@^4.0.1",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esrecurse",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "ES2015 `Object.assign()` ponyfill",
                      "devDependencies": "[Circular]",
                      "engines": "[Circular]",
                      "files": "[Circular]",
                      "homepage": "https://github.com/sindresorhus/object-assign#readme",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "name": "object-assign",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "4.1.1",
                      "readme": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) [ponyfill](https://ponyfill.com)\n\n\n## Use the built-in\n\nNode.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\nsupport `Object.assign()` :tada:. If you target only those environments, then by all\nmeans, use `Object.assign()` instead of this package.\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/object-assign",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "object-assign"
                    },
                    "pify": {
                      "_from": "pify@^2.0.0",
                      "_id": "pify@2.3.0",
                      "_inBundle": false,
                      "_integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw=",
                      "_location": "/pify",
                      "_phantomChildren": "[Circular]",
                      "_requested": "[Circular]",
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
                      "_shasum": "ed141a6ac043a849ea588498e7dca8b15330e90c",
                      "_spec": "pify@^2.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Promisify a callback-style function",
                      "devDependencies": "[Circular]",
                      "engines": "[Circular]",
                      "files": "[Circular]",
                      "homepage": "https://github.com/sindresorhus/pify#readme",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "name": "pify",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "2.3.0",
                      "readme": "# pify [![Build Status](https://travis-ci.org/sindresorhus/pify.svg?branch=master)](https://travis-ci.org/sindresorhus/pify)\n\n> Promisify a callback-style function\n\n\n## Install\n\n```\n$ npm install --save pify\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst pify = require('pify');\n\n// promisify a single function\n\npify(fs.readFile)('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n\n// or promisify all methods in a module\n\npify(fs).readFile('package.json', 'utf8').then(data => {\n\tconsole.log(JSON.parse(data).name);\n\t//=> 'pify'\n});\n```\n\n\n## API\n\n### pify(input, [promiseModule], [options])\n\nReturns a promise wrapped version of the supplied function or module.\n\n#### input\n\nType: `function`, `object`\n\nCallback-style function or module whose methods you want to promisify.\n\n#### promiseModule\n\nType: `function`\n\nCustom promise module to use instead of the native one.\n\nCheck out [`pinkie-promise`](https://github.com/floatdrop/pinkie-promise) if you need a tiny promise polyfill.\n\n#### options\n\n##### multiArgs\n\nType: `boolean`  \nDefault: `false`\n\nBy default, the promisified function will only return the second argument from the callback, which works fine for most APIs. This option can be useful for modules like `request` that return multiple arguments. Turning this on will make it return an array of all arguments from the callback, excluding the error argument, instead of just the second argument.\n\n```js\nconst request = require('request');\nconst pify = require('pify');\n\npify(request, {multiArgs: true})('https://sindresorhus.com').then(result => {\n\tconst [httpResponse, body] = result;\n});\n```\n\n##### include\n\nType: `array` of (`string`|`regex`)\n\nMethods in a module to promisify. Remaining methods will be left untouched.\n\n##### exclude\n\nType: `array` of (`string`|`regex`)  \nDefault: `[/.+Sync$/]`\n\nMethods in a module **not** to promisify. Methods with names ending with `'Sync'` are excluded by default.\n\n##### excludeMain\n\nType: `boolean`  \nDefault: `false`\n\nBy default, if given module is a function itself, this function will be promisified. Turn this option on if you want to promisify only methods of the module.\n\n```js\nconst pify = require('pify');\n\nfunction fn() {\n\treturn true;\n}\n\nfn.method = (data, callback) => {\n\tsetImmediate(() => {\n\t\tcallback(data, null);\n\t});\n};\n\n// promisify methods but not fn()\nconst promiseFn = pify(fn, {excludeMain: true});\n\nif (promiseFn()) {\n\tpromiseFn.method('hi').then(data => {\n\t\tconsole.log(data);\n\t});\n}\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/pify",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "pinkie-promise": {
                      "_from": "pinkie-promise@^2.0.0",
                      "_id": "pinkie-promise@2.0.1",
                      "_inBundle": false,
                      "_integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",
                      "_location": "/pinkie-promise",
                      "_phantomChildren": "[Circular]",
                      "_requested": "[Circular]",
                      "_requiredBy": "[Circular]",
                      "_resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",
                      "_shasum": "2135d6dfa7a358c069ac9b178776288228450ffa",
                      "_spec": "pinkie-promise@^2.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                      "author": "[Circular]",
                      "bugs": "[Circular]",
                      "bundleDependencies": false,
                      "dependencies": {
                        "pinkie": {
                          "_from": "pinkie@^2.0.0",
                          "_id": "pinkie@2.0.4",
                          "_inBundle": false,
                          "_integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA=",
                          "_location": "/pinkie",
                          "_phantomChildren": {},
                          "_requested": {
                            "type": "range",
                            "registry": true,
                            "raw": "pinkie@^2.0.0",
                            "name": "pinkie",
                            "escapedName": "pinkie",
                            "rawSpec": "^2.0.0",
                            "saveSpec": "[Circular]",
                            "fetchSpec": "^2.0.0"
                          },
                          "_requiredBy": [
                            "/pinkie-promise"
                          ],
                          "_resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",
                          "_shasum": "72556b80cfa0d48a974e80e77248e80ed4f7f870",
                          "_spec": "pinkie@^2.0.0",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/pinkie-promise",
                          "author": {
                            "name": "Vsevolod Strukchinsky",
                            "email": "floatdrop@gmail.com",
                            "url": "github.com/floatdrop"
                          },
                          "bugs": {
                            "url": "https://github.com/floatdrop/pinkie/issues"
                          },
                          "bundleDependencies": false,
                          "deprecated": false,
                          "description": "Itty bitty little widdle twinkie pinkie ES2015 Promise implementation",
                          "devDependencies": {
                            "core-assert": "^0.1.1",
                            "coveralls": "^2.11.4",
                            "mocha": "*",
                            "nyc": "^3.2.2",
                            "promises-aplus-tests": "*",
                            "xo": "^0.10.1"
                          },
                          "engines": {
                            "node": ">=0.10.0"
                          },
                          "files": [
                            "index.js"
                          ],
                          "homepage": "https://github.com/floatdrop/pinkie#readme",
                          "keywords": [
                            "promise",
                            "promises",
                            "es2015",
                            "es6"
                          ],
                          "license": "MIT",
                          "name": "pinkie",
                          "repository": {
                            "type": "git",
                            "url": "git+https://github.com/floatdrop/pinkie.git"
                          },
                          "scripts": {
                            "coverage": "nyc report --reporter=text-lcov | coveralls",
                            "test": "xo && nyc mocha"
                          },
                          "version": "2.0.4",
                          "readme": "<h1 align=\"center\">\n\t<br>\n\t<img width=\"256\" src=\"media/logo.png\" alt=\"pinkie\">\n\t<br>\n\t<br>\n</h1>\n\n> Itty bitty little widdle twinkie pinkie [ES2015 Promise](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects) implementation\n\n[![Build Status](https://travis-ci.org/floatdrop/pinkie.svg?branch=master)](https://travis-ci.org/floatdrop/pinkie)  [![Coverage Status](https://coveralls.io/repos/floatdrop/pinkie/badge.svg?branch=master&service=github)](https://coveralls.io/github/floatdrop/pinkie?branch=master)\n\nThere are [tons of Promise implementations](https://github.com/promises-aplus/promises-spec/blob/master/implementations.md#standalone) out there, but all of them focus on browser compatibility and are often bloated with functionality.\n\nThis module is an exact Promise specification polyfill (like [native-promise-only](https://github.com/getify/native-promise-only)), but in Node.js land (it should be browserify-able though).\n\n\n## Install\n\n```\n$ npm install --save pinkie\n```\n\n\n## Usage\n\n```js\nvar fs = require('fs');\nvar Promise = require('pinkie');\n\nnew Promise(function (resolve, reject) {\n\tfs.readFile('foo.json', 'utf8', function (err, data) {\n\t\tif (err) {\n\t\t\treject(err);\n\t\t\treturn;\n\t\t}\n\n\t\tresolve(data);\n\t});\n});\n//=> Promise\n```\n\n\n### API\n\n`pinkie` exports bare [ES2015 Promise](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects) implementation and polyfills [Node.js rejection events](https://nodejs.org/api/process.html#process_event_unhandledrejection). In case you forgot:\n\n#### new Promise(executor)\n\nReturns new instance of `Promise`.\n\n##### executor\n\n*Required*  \nType: `function`\n\nFunction with two arguments `resolve` and `reject`. The first argument fulfills the promise, the second argument rejects it.\n\n#### pinkie.all(promises)\n\nReturns a promise that resolves when all of the promises in the `promises` Array argument have resolved.\n\n#### pinkie.race(promises)\n\nReturns a promise that resolves or rejects as soon as one of the promises in the `promises` Array resolves or rejects, with the value or reason from that promise.\n\n#### pinkie.reject(reason)\n\nReturns a Promise object that is rejected with the given `reason`.\n\n#### pinkie.resolve(value)\n\nReturns a Promise object that is resolved with the given `value`. If the `value` is a thenable (i.e. has a then method), the returned promise will \"follow\" that thenable, adopting its eventual state; otherwise the returned promise will be fulfilled with the `value`.\n\n\n## Related\n\n- [pinkie-promise](https://github.com/floatdrop/pinkie-promise) - Returns the native Promise or this module\n\n\n## License\n\nMIT Â© [Vsevolod Strukchinsky](http://github.com/floatdrop)\n",
                          "readmeFilename": "readme.md",
                          "dependencies": {},
                          "optionalDependencies": {},
                          "_dependencies": {},
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/pinkie",
                          "error": "[Circular]",
                          "extraneous": false
                        }
                      },
                      "deprecated": false,
                      "description": "ES2015 Promise ponyfill",
                      "devDependencies": "[Circular]",
                      "engines": "[Circular]",
                      "files": "[Circular]",
                      "homepage": "https://github.com/floatdrop/pinkie-promise#readme",
                      "keywords": "[Circular]",
                      "license": "MIT",
                      "name": "pinkie-promise",
                      "repository": "[Circular]",
                      "scripts": "[Circular]",
                      "version": "2.0.1",
                      "readme": "# pinkie-promise [![Build Status](https://travis-ci.org/floatdrop/pinkie-promise.svg?branch=master)](https://travis-ci.org/floatdrop/pinkie-promise)\n\n> [ES2015 Promise](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise-objects) ponyfill\n\nModule exports global Promise object (if available) or [`pinkie`](http://github.com/floatdrop/pinkie) Promise polyfill.\n\n## Install\n\n```\n$ npm install --save pinkie-promise\n```\n\n## Usage\n\n```js\nvar Promise = require('pinkie-promise');\n\nnew Promise(function (resolve) { resolve('unicorns'); });\n//=> Promise { 'unicorns' }\n```\n\n## Related\n\n- [pify](https://github.com/sindresorhus/pify) - Promisify a callback-style function\n\n## License\n\nMIT Â© [Vsevolod Strukchinsky](http://github.com/floatdrop)\n",
                      "readmeFilename": "readme.md",
                      "optionalDependencies": "[Circular]",
                      "_dependencies": "[Circular]",
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/pinkie-promise",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "rimraf": {
                      "_from": "rimraf@^2.2.8",
                      "_id": "rimraf@2.6.1",
                      "_inBundle": false,
                      "_integrity": "sha1-wjOOxkPfeht/5cVPqG9XQopV8z0=",
                      "_location": "/rimraf",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "rimraf@^2.2.8",
                        "name": "rimraf",
                        "escapedName": "rimraf",
                        "rawSpec": "^2.2.8",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^2.2.8"
                      },
                      "_requiredBy": [
                        "/del"
                      ],
                      "_resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.1.tgz",
                      "_shasum": "c2338ec643df7a1b7fe5c54fa86f57428a55f33d",
                      "_spec": "rimraf@^2.2.8",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                      "author": {
                        "name": "Isaac Z. Schlueter",
                        "email": "i@izs.me",
                        "url": "http://blog.izs.me/"
                      },
                      "bin": {
                        "rimraf": "./bin.js"
                      },
                      "bugs": {
                        "url": "https://github.com/isaacs/rimraf/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {
                        "glob": {
                          "_from": "glob@^7.0.3",
                          "_id": "glob@7.1.2",
                          "_inBundle": false,
                          "_integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
                          "_location": "/glob",
                          "_phantomChildren": "[Circular]",
                          "_requested": "[Circular]",
                          "_requiredBy": "[Circular]",
                          "_resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
                          "_shasum": "c19c9df9a028702d678612384a6552404c636d15",
                          "_spec": "glob@^7.0.3",
                          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
                          "author": "[Circular]",
                          "bugs": "[Circular]",
                          "bundleDependencies": false,
                          "dependencies": {},
                          "deprecated": false,
                          "description": "a little globber",
                          "devDependencies": "[Circular]",
                          "engines": "[Circular]",
                          "files": "[Circular]",
                          "homepage": "https://github.com/isaacs/node-glob#readme",
                          "license": "ISC",
                          "main": "glob.js",
                          "name": "glob",
                          "repository": "[Circular]",
                          "scripts": "[Circular]",
                          "version": "7.1.2",
                          "readme": "# Glob\n\nMatch files using the patterns the shell uses, like stars and stuff.\n\n[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch=master)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg=true)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github)](https://coveralls.io/github/isaacs/node-glob?branch=master)\n\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\nlibrary to do its matching.\n\n![](oh-my-glob.gif)\n\n## Usage\n\nInstall with npm\n\n```\nnpm i glob\n```\n\n```javascript\nvar glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n```\n\n## Glob Primer\n\n\"Globs\" are the patterns you type when you do stuff like `ls *.js` on\nthe command line, or put `build/*` in a `.gitignore` file.\n\nBefore parsing the path part patterns, braced sections are expanded\ninto a set.  Braced sections start with `{` and end with `}`, with any\nnumber of comma-delimited sections within.  Braced sections may contain\nslash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.\n\nThe following characters have special magic meaning when used in a\npath portion:\n\n* `*` Matches 0 or more characters in a single path portion\n* `?` Matches 1 character\n* `[...]` Matches a range of characters, similar to a RegExp range.\n  If the first character of the range is `!` or `^` then it matches\n  any character not in the range.\n* `!(pattern|pattern|pattern)` Matches anything that does not match\n  any of the patterns provided.\n* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the\n  patterns provided.\n* `+(pattern|pattern|pattern)` Matches one or more occurrences of the\n  patterns provided.\n* `*(a|b|c)` Matches zero or more occurrences of the patterns provided\n* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns\n  provided\n* `**` If a \"globstar\" is alone in a path portion, then it matches\n  zero or more directories and subdirectories searching for matches.\n  It does not crawl symlinked directories.\n\n### Dots\n\nIf a file or directory path portion has a `.` as the first character,\nthen it will not match any glob pattern unless that pattern's\ncorresponding path part also has a `.` as its first character.\n\nFor example, the pattern `a/.*/c` would match the file at `a/.b/c`.\nHowever the pattern `a/*/c` would not, because `*` does not start with\na dot character.\n\nYou can make glob treat dots as normal characters by setting\n`dot:true` in the options.\n\n### Basename Matching\n\nIf you set `matchBase:true` in the options, and the pattern has no\nslashes in it, then it will seek for any file anywhere in the tree\nwith a matching basename.  For example, `*.js` would match\n`test/simple/basic.js`.\n\n### Empty Sets\n\nIf no matching files are found, then an empty array is returned.  This\ndiffers from the shell, where the pattern itself is returned.  For\nexample:\n\n    $ echo a*s*d*f\n    a*s*d*f\n\nTo get the bash-style behavior, set the `nonull:true` in the options.\n\n### See Also:\n\n* `man sh`\n* `man bash` (Search for \"Pattern Matching\")\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob.hasMagic(pattern, [options])\n\nReturns `true` if there are any special characters in the pattern, and\n`false` otherwise.\n\nNote that the options affect the results.  If `noext:true` is set in\nthe options object, then `+(a|b)` will not be considered a magic\npattern.  If the pattern has a brace expansion, like `a/{b/c,x/y}`\nthen that is considered magical, unless `nobrace:true` is set in the\noptions.\n\n## glob(pattern, [options], cb)\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* `cb` `{Function}`\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options])\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* return: `{Array<String>}` filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instantiating the `glob.Glob` class.\n\n```javascript\nvar Glob = require(\"glob\").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt's an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` `{String}` pattern to search for\n* `options` `{Object}`\n* `cb` `{Function}` Called when an error occurs, or matches are found\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `aborted` Boolean which is set to true when calling `abort()`.  There\n  is no way at this time to continue a glob search after aborting, but\n  you can re-use the statCache to avoid having to duplicate syscalls.\n* `cache` Convenience object.  Each field has the following possible\n  values:\n  * `false` - Path does not exist\n  * `true` - Path exists\n  * `'FILE'` - Path exists, and is not a directory\n  * `'DIR'` - Path exists, and is a directory\n  * `[file, entries, ...]` - Path exists, is a directory, and the\n    array value is the results of `fs.readdir`\n* `statCache` Cache of `fs.stat` results, to prevent statting the same\n  path multiple times.\n* `symlinks` A record of which paths are symbolic links, which is\n  relevant in resolving `**` patterns.\n* `realpathCache` An optional object which is passed to `fs.realpath`\n  to minimize unnecessary syscalls.  It is stored on the instantiated\n  Glob object, and may be re-used.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n  matches found.  If the `nonull` option is set, and no match was found,\n  then the `matches` list contains the original pattern.  The matches\n  are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the specific\n  thing that matched. It is not deduplicated or resolved to a realpath.\n* `error` Emitted when an unexpected error is encountered, or whenever\n  any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `pause` Temporarily stop the search\n* `resume` Resume the search\n* `abort` Stop the search forever\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior.  Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the Glob object, as well.\n\nIf you are running many `glob` operations, you can pass a Glob object\nas the `options` argument to a subsequent operation to shortcut some\n`stat` and `readdir` calls.  At the very least, you may pass in shared\n`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that\nparallel glob operations will be sped up by sharing information about\nthe filesystem.\n\n* `cwd` The current working directory in which to search.  Defaults\n  to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n  onto.  Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix\n  systems, and `C:\\` or some such on Windows.)\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\n  Note that an explicit dot in a portion of the pattern will always\n  match dot files.\n* `nomount` By default, a pattern starting with a forward-slash will be\n  \"mounted\" onto the root setting, so that a valid filesystem path is\n  returned.  Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches.  Note that this\n  requires additional stat calls.\n* `nosort` Don't sort the results.\n* `stat` Set to true to stat *all* results.  This reduces performance\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\n  to be an untrustworthy indicator of file existence.\n* `silent` When an unusual error is encountered when attempting to\n  read a directory, a warning will be printed to stderr.  Set the\n  `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered when attempting to\n  read a directory, the process will just continue on in search of\n  other matches.  Set the `strict` option to raise an error in these\n  cases.\n* `cache` See `cache` property above.  Pass in a previously generated\n  cache object to save some fs calls.\n* `statCache` A cache of results of filesystem information, to prevent\n  unnecessary stat calls.  While it should not normally be necessary\n  to set this, you may pass the statCache from one glob() call to the\n  options object of another, if you know that the filesystem will not\n  change between calls.  (See \"Race Conditions\" below.)\n* `symlinks` A cache of known symbolic links.  You may pass in a\n  previously generated `symlinks` object to save `lstat` calls when\n  resolving `**` matches.\n* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.\n* `nounique` In some cases, brace-expanded patterns can result in the\n  same file showing up multiple times in the result set.  By default,\n  this implementation prevents duplicates in the result set.  Set this\n  flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n  containing the pattern itself.  This is the default in glob(3).\n* `debug` Set to enable debug logging in minimatch and glob.\n* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.\n* `noglobstar` Do not match `**` against multiple filenames.  (Ie,\n  treat it as a normal `*` instead.)\n* `noext` Do not match `+(a|b)` \"extglob\" patterns.\n* `nocase` Perform a case-insensitive match.  Note: on\n  case-insensitive filesystems, non-magic patterns will match by\n  default, since `stat` and `readdir` will not raise errors.\n* `matchBase` Perform a basename-only match if the pattern does not\n  contain any slash characters.  That is, `*.js` would be treated as\n  equivalent to `**/*.js`, matching all js files in all directories.\n* `nodir` Do not match directories, only files.  (Note: to match\n  *only* directories, simply put a `/` at the end of the pattern.)\n* `ignore` Add a pattern or an array of glob patterns to exclude matches.\n  Note: `ignore` patterns are *always* in `dot:true` mode, regardless\n  of any other settings.\n* `follow` Follow symlinked directories when expanding `**` patterns.\n  Note that this can result in a lot of duplicate references in the\n  presence of cyclic links.\n* `realpath` Set to true to call `fs.realpath` on all of the results.\n  In the case of a symlink that cannot be resolved, the full absolute\n  path to the matched entry is returned (though it will usually be a\n  broken symlink)\n* `absolute` Set to true to always receive absolute paths for matched\n  files.  Unlike `realpath`, this also affects the values returned in\n  the `match` event.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.3, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nNote that symlinked directories are not crawled as part of a `**`,\nthough their contents may match against subsequent portions of the\npattern.  This prevents infinite loops and duplicates and the like.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n### Comments and Negation\n\nPreviously, this module let you mark a pattern as a \"comment\" if it\nstarted with a `#` character, or a \"negated\" pattern if it started\nwith a `!` character.\n\nThese options were deprecated in version 5, and removed in version 6.\n\nTo specify things that should not match, use the `ignore` option.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation.  You must use\nforward-slashes **only** in glob expressions.  Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`.  On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead.  However, this also makes it even more susceptible to races,\nespecially if the cache or statCache objects are reused between glob\ncalls.\n\nUsers are thus advised not to use a glob result as a guarantee of\nfilesystem state in the face of rapid changes.  For the vast majority\nof operations, this is never a problem.\n\n## Contributing\n\nAny change to behavior (including bugfixes) must come with a test.\n\nPatches that fail tests or reduce performance will be rejected.\n\n```\n# to run tests\nnpm test\n\n# to re-generate test fixtures\nnpm run test-regen\n\n# to benchmark against bash/zsh\nnpm run bench\n\n# to profile javascript\nnpm run prof\n```\n",
                          "readmeFilename": "README.md",
                          "optionalDependencies": "[Circular]",
                          "_dependencies": "[Circular]",
                          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
                          "error": "[Circular]",
                          "extraneous": false,
                          "_deduped": "glob"
                        }
                      },
                      "deprecated": false,
                      "description": "A deep deletion module for node (like `rm -rf`)",
                      "devDependencies": {
                        "mkdirp": "^0.5.1",
                        "tap": "^10.1.2"
                      },
                      "files": [
                        "LICENSE",
                        "README.md",
                        "bin.js",
                        "rimraf.js"
                      ],
                      "homepage": "https://github.com/isaacs/rimraf#readme",
                      "license": "ISC",
                      "main": "rimraf.js",
                      "name": "rimraf",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/isaacs/rimraf.git"
                      },
                      "scripts": {
                        "test": "tap test/*.js"
                      },
                      "version": "2.6.1",
                      "readme": "[![Build Status](https://travis-ci.org/isaacs/rimraf.svg?branch=master)](https://travis-ci.org/isaacs/rimraf) [![Dependency Status](https://david-dm.org/isaacs/rimraf.svg)](https://david-dm.org/isaacs/rimraf) [![devDependency Status](https://david-dm.org/isaacs/rimraf/dev-status.svg)](https://david-dm.org/isaacs/rimraf#info=devDependencies)\n\nThe [UNIX command](http://en.wikipedia.org/wiki/Rm_(Unix)) `rm -rf` for node.\n\nInstall with `npm install rimraf`, or just drop rimraf.js somewhere.\n\n## API\n\n`rimraf(f, [opts], callback)`\n\nThe first parameter will be interpreted as a globbing pattern for files. If you\nwant to disable globbing you can do so with `opts.disableGlob` (defaults to\n`false`). This might be handy, for instance, if you have filenames that contain\nglobbing wildcard characters.\n\nThe callback will be called with an error if there is one.  Certain\nerrors are handled for you:\n\n* Windows: `EBUSY` and `ENOTEMPTY` - rimraf will back off a maximum of\n  `opts.maxBusyTries` times before giving up, adding 100ms of wait\n  between each attempt.  The default `maxBusyTries` is 3.\n* `ENOENT` - If the file doesn't exist, rimraf will return\n  successfully, since your desired outcome is already the case.\n* `EMFILE` - Since `readdir` requires opening a file descriptor, it's\n  possible to hit `EMFILE` if too many file descriptors are in use.\n  In the sync case, there's nothing to be done for this.  But in the\n  async case, rimraf will gradually back off with timeouts up to\n  `opts.emfileWait` ms, which defaults to 1000.\n\n## options\n\n* unlink, chmod, stat, lstat, rmdir, readdir,\n  unlinkSync, chmodSync, statSync, lstatSync, rmdirSync, readdirSync\n\n    In order to use a custom file system library, you can override\n    specific fs functions on the options object.\n\n    If any of these functions are present on the options object, then\n    the supplied function will be used instead of the default fs\n    method.\n\n    Sync methods are only relevant for `rimraf.sync()`, of course.\n\n    For example:\n\n    ```javascript\n    var myCustomFS = require('some-custom-fs')\n\n    rimraf('some-thing', myCustomFS, callback)\n    ```\n\n* maxBusyTries\n\n    If an `EBUSY`, `ENOTEMPTY`, or `EPERM` error code is encountered\n    on Windows systems, then rimraf will retry with a linear backoff\n    wait of 100ms longer on each try.  The default maxBusyTries is 3.\n\n    Only relevant for async usage.\n\n* emfileWait\n\n    If an `EMFILE` error is encountered, then rimraf will retry\n    repeatedly with a linear backoff of 1ms longer on each try, until\n    the timeout counter hits this max.  The default limit is 1000.\n\n    If you repeatedly encounter `EMFILE` errors, then consider using\n    [graceful-fs](http://npm.im/graceful-fs) in your program.\n\n    Only relevant for async usage.\n\n* glob\n\n    Set to `false` to disable [glob](http://npm.im/glob) pattern\n    matching.\n\n    Set to an object to pass options to the glob module.  The default\n    glob options are `{ nosort: true, silent: true }`.\n\n    Glob version 6 is used in this module.\n\n    Relevant for both sync and async usage.\n\n* disableGlob\n\n    Set to any non-falsey value to disable globbing entirely.\n    (Equivalent to setting `glob: false`.)\n\n## rimraf.sync\n\nIt can remove stuff synchronously, too.  But that's not so good.  Use\nthe async API.  It's better.\n\n## CLI\n\nIf installed with `npm install rimraf -g` it can be used as a global\ncommand `rimraf <path> [<path> ...]` which is useful for cross platform support.\n\n## mkdirp\n\nIf you need to create a directory recursively, check out\n[mkdirp](https://github.com/substack/node-mkdirp).\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "glob": "^7.0.5"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/rimraf",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Delete files and folders",
                  "devDependencies": {
                    "ava": "*",
                    "fs-extra": "^0.30.0",
                    "path-exists": "^2.0.0",
                    "tempfile": "^1.1.1",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/del#readme",
                  "keywords": [
                    "delete",
                    "del",
                    "remove",
                    "destroy",
                    "trash",
                    "unlink",
                    "clean",
                    "cleaning",
                    "cleanup",
                    "rm",
                    "rmrf",
                    "rimraf",
                    "rmdir",
                    "glob",
                    "gulpfriendly",
                    "file",
                    "files",
                    "folder",
                    "dir",
                    "directory",
                    "fs",
                    "filesystem"
                  ],
                  "license": "MIT",
                  "name": "del",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/del.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "2.2.2",
                  "readme": "# del [![Build Status](https://travis-ci.org/sindresorhus/del.svg?branch=master)](https://travis-ci.org/sindresorhus/del)\n\n> Delete files and folders using [globs](https://github.com/isaacs/minimatch#usage)\n\nPretty much [rimraf](https://github.com/isaacs/rimraf) with a Promise API and support for multiple files and globbing. It also protects you against deleting the current working directory and above.\n\n---\n\n<p align=\"center\"><b>ð¥ Want to strengthen your core JavaScript skills and master ES6?</b><br>I would personally recommend this awesome <a href=\"https://ES6.io/friend/AWESOME\">ES6 course</a> by Wes Bos.</p>\n\n---\n\n\n## Install\n\n```\n$ npm install --save del\n```\n\n\n## Usage\n\n```js\nconst del = require('del');\n\ndel(['tmp/*.js', '!tmp/unicorn.js']).then(paths => {\n\tconsole.log('Deleted files and folders:\\n', paths.join('\\n'));\n});\n```\n\n\n## Beware\n\nThe glob pattern `**` matches all children and *the parent*.\n\nSo this won't work:\n\n```js\ndel.sync(['public/assets/**', '!public/assets/goat.png']);\n```\n\nYou have to explicitly ignore the parent directories too:\n\n```js\ndel.sync(['public/assets/**', '!public/assets', '!public/assets/goat.png']);\n```\n\nSuggestions on how to improve this welcome!\n\n\n## API\n\n### del(patterns, [options])\n\nReturns a promise for an array of deleted paths.\n\n### del.sync(patterns, [options])\n\nReturns an array of deleted paths.\n\n#### patterns\n\nType: `string`, `array`\n\nSee supported minimatch [patterns](https://github.com/isaacs/minimatch#usage).\n\n- [Pattern examples with expected matches](https://github.com/sindresorhus/multimatch/blob/master/test.js)\n- [Quick globbing pattern overview](https://github.com/sindresorhus/multimatch#globbing-patterns)\n\n#### options\n\nType: `object`\n\nSee the `node-glob` [options](https://github.com/isaacs/node-glob#options).\n\n##### force\n\nType: `boolean`  \nDefault: `false`\n\nAllow deleting the current working directory and outside.\n\n##### dryRun\n\nType: `boolean`  \nDefault: `false`\n\nSee what would be deleted.\n\n```js\nconst del = require('del');\n\ndel(['tmp/*.js'], {dryRun: true}).then(paths => {\n\tconsole.log('Files and folders that would be deleted:\\n', paths.join('\\n'));\n});\n```\n\n\n## CLI\n\nSee [del-cli](https://github.com/sindresorhus/del-cli) for a CLI for this module and [trash-cli](https://github.com/sindresorhus/trash-cli) for a safe version that is suitable for running by hand.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "globby": "^5.0.0",
                    "is-path-cwd": "^1.0.0",
                    "is-path-in-cwd": "^1.0.0",
                    "object-assign": "^4.0.1",
                    "pify": "^2.0.0",
                    "pinkie-promise": "^2.0.0",
                    "rimraf": "^2.2.8"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/del",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "graceful-fs": {
                  "_from": "graceful-fs@^4.1.2",
                  "_id": "graceful-fs@4.1.11",
                  "_inBundle": false,
                  "_integrity": "sha1-Dovf5NHduIVNZOBOp8AOKgJuVlg=",
                  "_location": "/graceful-fs",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "graceful-fs@^4.1.2",
                    "name": "graceful-fs",
                    "escapedName": "graceful-fs",
                    "rawSpec": "^4.1.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^4.1.2"
                  },
                  "_requiredBy": [
                    "/flat-cache"
                  ],
                  "_resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.11.tgz",
                  "_shasum": "0e8bdfe4d1ddb8854d64e04ea7c00e2a026e5658",
                  "_spec": "graceful-fs@^4.1.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/flat-cache",
                  "bugs": {
                    "url": "https://github.com/isaacs/node-graceful-fs/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "A drop-in replacement for fs, making various improvements.",
                  "devDependencies": {
                    "mkdirp": "^0.5.0",
                    "rimraf": "^2.2.8",
                    "tap": "^5.4.2"
                  },
                  "directories": {
                    "test": "test"
                  },
                  "engines": {
                    "node": ">=0.4.0"
                  },
                  "files": [
                    "fs.js",
                    "graceful-fs.js",
                    "legacy-streams.js",
                    "polyfills.js"
                  ],
                  "homepage": "https://github.com/isaacs/node-graceful-fs#readme",
                  "keywords": [
                    "fs",
                    "module",
                    "reading",
                    "retry",
                    "retries",
                    "queue",
                    "error",
                    "errors",
                    "handling",
                    "EMFILE",
                    "EAGAIN",
                    "EINVAL",
                    "EPERM",
                    "EACCESS"
                  ],
                  "license": "ISC",
                  "main": "graceful-fs.js",
                  "name": "graceful-fs",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/isaacs/node-graceful-fs.git"
                  },
                  "scripts": {
                    "test": "node test.js | tap -"
                  },
                  "version": "4.1.11",
                  "readme": "# graceful-fs\n\ngraceful-fs functions as a drop-in replacement for the fs module,\nmaking various improvements.\n\nThe improvements are meant to normalize behavior across different\nplatforms and environments, and to make filesystem access more\nresilient to errors.\n\n## Improvements over [fs module](https://nodejs.org/api/fs.html)\n\n* Queues up `open` and `readdir` calls, and retries them once\n  something closes if there is an EMFILE error from too many file\n  descriptors.\n* fixes `lchmod` for Node versions prior to 0.6.2.\n* implements `fs.lutimes` if possible. Otherwise it becomes a noop.\n* ignores `EINVAL` and `EPERM` errors in `chown`, `fchown` or\n  `lchown` if the user isn't root.\n* makes `lchmod` and `lchown` become noops, if not available.\n* retries reading a file if `read` results in EAGAIN error.\n\nOn Windows, it retries renaming a file for up to one second if `EACCESS`\nor `EPERM` error occurs, likely because antivirus software has locked\nthe directory.\n\n## USAGE\n\n```javascript\n// use just like fs\nvar fs = require('graceful-fs')\n\n// now go and do stuff with it...\nfs.readFileSync('some-file-or-whatever')\n```\n\n## Global Patching\n\nIf you want to patch the global fs module (or any other fs-like\nmodule) you can do this:\n\n```javascript\n// Make sure to read the caveat below.\nvar realFs = require('fs')\nvar gracefulFs = require('graceful-fs')\ngracefulFs.gracefulify(realFs)\n```\n\nThis should only ever be done at the top-level application layer, in\norder to delay on EMFILE errors from any fs-using dependencies.  You\nshould **not** do this in a library, because it can cause unexpected\ndelays in other parts of the program.\n\n## Changes\n\nThis module is fairly stable at this point, and used by a lot of\nthings.  That being said, because it implements a subtle behavior\nchange in a core part of the node API, even modest changes can be\nextremely breaking, and the versioning is thus biased towards\nbumping the major when in doubt.\n\nThe main change between major versions has been switching between\nproviding a fully-patched `fs` module vs monkey-patching the node core\nbuiltin, and the approach by which a non-monkey-patched `fs` was\ncreated.\n\nThe goal is to trade `EMFILE` errors for slower fs operations.  So, if\nyou try to open a zillion files, rather than crashing, `open`\noperations will be queued up and wait for something else to `close`.\n\nThere are advantages to each approach.  Monkey-patching the fs means\nthat no `EMFILE` errors can possibly occur anywhere in your\napplication, because everything is using the same core `fs` module,\nwhich is patched.  However, it can also obviously cause undesirable\nside-effects, especially if the module is loaded multiple times.\n\nImplementing a separate-but-identical patched `fs` module is more\nsurgical (and doesn't run the risk of patching multiple times), but\nalso imposes the challenge of keeping in sync with the core module.\n\nThe current approach loads the `fs` module, and then creates a\nlookalike object that has all the same methods, except a few that are\npatched.  It is safe to use in all versions of Node from 0.8 through\n7.0.\n\n### v4\n\n* Do not monkey-patch the fs module.  This module may now be used as a\n  drop-in dep, and users can opt into monkey-patching the fs builtin\n  if their app requires it.\n\n### v3\n\n* Monkey-patch fs, because the eval approach no longer works on recent\n  node.\n* fixed possible type-error throw if rename fails on windows\n* verify that we *never* get EMFILE errors\n* Ignore ENOSYS from chmod/chown\n* clarify that graceful-fs must be used as a drop-in\n\n### v2.1.0\n\n* Use eval rather than monkey-patching fs.\n* readdir: Always sort the results\n* win32: requeue a file if error has an OK status\n\n### v2.0\n\n* A return to monkey patching\n* wrap process.cwd\n\n### v1.1\n\n* wrap readFile\n* Wrap fs.writeFile.\n* readdir protection\n* Don't clobber the fs builtin\n* Handle fs.read EAGAIN errors by trying again\n* Expose the curOpen counter\n* No-op lchown/lchmod if not implemented\n* fs.rename patch only for win32\n* Patch fs.rename to handle AV software on Windows\n* Close #4 Chown should not fail on einval or eperm if non-root\n* Fix isaacs/fstream#1 Only wrap fs one time\n* Fix #3 Start at 1024 max files, then back off on EMFILE\n* lutimes that doens't blow up on Linux\n* A full on-rewrite using a queue instead of just swallowing the EMFILE error\n* Wrap Read/Write streams as well\n\n### 1.0\n\n* Update engines for node 0.6\n* Be lstat-graceful on Windows\n* first\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/graceful-fs",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "write": {
                  "_from": "write@^0.2.1",
                  "_id": "write@0.2.1",
                  "_inBundle": false,
                  "_integrity": "sha1-X8A4KOJkzqP+kUVUdvejxWbLB1c=",
                  "_location": "/write",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "write@^0.2.1",
                    "name": "write",
                    "escapedName": "write",
                    "rawSpec": "^0.2.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^0.2.1"
                  },
                  "_requiredBy": [
                    "/flat-cache"
                  ],
                  "_resolved": "https://registry.npmjs.org/write/-/write-0.2.1.tgz",
                  "_shasum": "5fc03828e264cea3fe91455476f7a3c566cb0757",
                  "_spec": "write@^0.2.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/flat-cache",
                  "author": {
                    "name": "Jon Schlinkert",
                    "url": "https://github.com/jonschlinkert"
                  },
                  "bugs": {
                    "url": "https://github.com/jonschlinkert/write/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "mkdirp": {
                      "_from": "mkdirp@^0.5.0",
                      "_id": "mkdirp@0.5.1",
                      "_inBundle": false,
                      "_integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
                      "_location": "/mkdirp",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "mkdirp@^0.5.0",
                        "name": "mkdirp",
                        "escapedName": "mkdirp",
                        "rawSpec": "^0.5.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^0.5.0"
                      },
                      "_requiredBy": [
                        "/eslint",
                        "/write"
                      ],
                      "_resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
                      "_shasum": "30057438eac6cf7f8c4767f38648d6697d75c903",
                      "_spec": "mkdirp@^0.5.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
                      "author": {
                        "name": "James Halliday",
                        "email": "mail@substack.net",
                        "url": "http://substack.net"
                      },
                      "bin": {
                        "mkdirp": "bin/cmd.js"
                      },
                      "bugs": {
                        "url": "https://github.com/substack/node-mkdirp/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {},
                      "deprecated": false,
                      "description": "Recursively mkdir, like `mkdir -p`",
                      "devDependencies": {
                        "mock-fs": "2 >=2.7.0",
                        "tap": "1"
                      },
                      "homepage": "https://github.com/substack/node-mkdirp#readme",
                      "keywords": [
                        "mkdir",
                        "directory"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "mkdirp",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/substack/node-mkdirp.git"
                      },
                      "scripts": {
                        "test": "tap test/*.js"
                      },
                      "version": "0.5.1",
                      "readme": "# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require('mkdirp');\n    \nmkdirp('/tmp/foo/bar/baz', function (err) {\n    if (err) console.error(err)\n    else console.log('pow!')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require('mkdirp');\n```\n\n## mkdirp(dir, opts, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `opts.mode`. If `opts` is a non-object, it will be treated as\nthe `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdir(path, mode, cb)` and\n`opts.fs.stat(path, cb)`.\n\n## mkdirp.sync(dir, opts)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `opts.mode`. If `opts` is a non-object, it will be\ntreated as the `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdirSync(path, mode)` and\n`opts.fs.statSync(path)`.\n\n# usage\n\nThis package also ships with a `mkdirp` command.\n\n```\nusage: mkdirp [DIR1,DIR2..] {OPTIONS}\n\n  Create each supplied directory including any necessary parent directories that\n  don't yet exist.\n  \n  If the directory already exists, do nothing.\n\nOPTIONS are:\n\n  -m, --mode   If a directory needs to be created, set the mode as an octal\n               permission string.\n\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\nto get the library, or\n\n```\nnpm install -g mkdirp\n```\n\nto get the command.\n\n# license\n\nMIT\n",
                      "readmeFilename": "readme.markdown",
                      "optionalDependencies": {},
                      "_dependencies": {
                        "minimist": "0.0.8"
                      },
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/mkdirp",
                      "error": "[Circular]",
                      "extraneous": false,
                      "_deduped": "mkdirp"
                    }
                  },
                  "deprecated": false,
                  "description": "Write files to disk, creating intermediate directories if they don't exist.",
                  "devDependencies": {
                    "async": "^1.4.0",
                    "delete": "^0.2.1",
                    "mocha": "^2.2.5",
                    "should": "^7.0.2"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/jonschlinkert/write",
                  "keywords": [
                    "file",
                    "filepath",
                    "files",
                    "filesystem",
                    "folder",
                    "fs",
                    "fs.writeFile",
                    "fs.writeFileSync",
                    "path",
                    "write"
                  ],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "write",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/jonschlinkert/write.git"
                  },
                  "scripts": {
                    "test": "mocha"
                  },
                  "version": "0.2.1",
                  "readme": "# write [![NPM version](https://badge.fury.io/js/write.svg)](http://badge.fury.io/js/write)  [![Build Status](https://travis-ci.org/jonschlinkert/write.svg)](https://travis-ci.org/jonschlinkert/write)\n\n> Write files to disk, creating intermediate directories if they don't exist.\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i write --save\n```\n\n## API docs\n\n### [writeFile](index.js#L32)\n\nAsynchronously write a file to disk. Creates any intermediate directories if they don't already exist.\n\n**Params**\n\n* `dest` **{String}**: Destination file path\n* `str` **{String}**: String to write to disk.\n* `callback` **{Function}**\n\n**Example**\n\n```js\nvar writeFile = require('write');\nwriteFile('foo.txt', 'This is content to write.', function(err) {\n  if (err) console.log(err);\n});\n```\n\n### [.writeFile.sync](index.js#L64)\n\nSynchronously write files to disk. Creates any intermediate directories if they don't already exist.\n\n**Params**\n\n* `dest` **{String}**: Destination file path\n* `str` **{String}**: String to write to disk.\n\n**Example**\n\n```js\nvar writeFile = require('write');\nwriteFile.sync('foo.txt', 'This is content to write.');\n```\n\n### [.writeFile.stream](index.js#L87)\n\nUses `fs.createWriteStream`, but also creates any intermediate directories if they don't already exist.\n\n**Params**\n\n* `dest` **{String}**: Destination file path\n* `returns` **{Stream}**: Returns a write stream.\n\n**Example**\n\n```js\nvar write = require('write');\nwrite.stream('foo.txt');\n```\n\n## Related\n\n* [delete](https://github.com/jonschlinkert/delete): Delete files and folders and any intermediate directories if they exist (sync and async).\n* [read-yaml](https://github.com/jonschlinkert/read-yaml): Very thin wrapper around js-yaml for directly reading in YAML files.\n* [read-json](https://github.com/azer/read-json): Reads and parses a JSON file.\n* [read-data](https://github.com/jonschlinkert/read-data): Read JSON or YAML files.\n* [write-yaml](https://github.com/jonschlinkert/write-yaml): Write YAML. Converts JSON to YAML writes it to the specified file.\n* [write-json](https://github.com/jonschlinkert/write-json): Write a JSON to file disk, also creates directories in the dest path if theyâ¦ [more](https://github.com/jonschlinkert/write-json)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/write/issues/new)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright Â© 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on July 29, 2015._\n\n<!-- deps:mocha -->",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "mkdirp": "^0.5.1"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/write",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "A stupidly simple key/value storage using files to persist some data",
              "devDependencies": {
                "chai": "^3.2.0",
                "changelogx": "^1.0.18",
                "esbeautifier": "^6.1.8",
                "eslinter": "^3.2.1",
                "glob-expand": "^0.1.0",
                "istanbul": "^0.3.19",
                "mocha": "^2.3.2",
                "precommit": "^1.1.5",
                "prepush": "^3.1.4",
                "proxyquire": "^1.7.2",
                "sinon": "^1.16.1",
                "sinon-chai": "^2.8.0",
                "watch-run": "^1.2.2"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "cache.js",
                "utils.js"
              ],
              "homepage": "https://github.com/royriojas/flat-cache#readme",
              "keywords": [
                "json cache",
                "simple cache",
                "file cache",
                "key par",
                "key value",
                "cache"
              ],
              "license": "MIT",
              "main": "cache.js",
              "name": "flat-cache",
              "precommit": [
                "npm run verify --silent"
              ],
              "prepush": [
                "npm run verify --silent"
              ],
              "repository": {
                "type": "git",
                "url": "git+https://github.com/royriojas/flat-cache.git"
              },
              "scripts": {
                "autofix": "npm run beautify && npm run eslint-fix",
                "beautify": "esbeautifier 'cache.js' 'test/specs/**/*.js'",
                "beautify-check": "npm run beautify -- -k",
                "bump-major": "npm run pre-v && npm version major -m 'BLD: Release v%s' && npm run post-v",
                "bump-minor": "npm run pre-v && npm version minor -m 'BLD: Release v%s' && npm run post-v",
                "bump-patch": "npm run pre-v && npm version patch -m 'BLD: Release v%s' && npm run post-v",
                "changelog": "changelogx -f markdown -o ./changelog.md",
                "check": "npm run beautify-check && npm run eslint",
                "cover": "istanbul cover test/runner.js html text-summary",
                "do-changelog": "npm run changelog && git add ./changelog.md && git commit -m 'DOC: Generate changelog' --no-verify",
                "eslint": "eslinter 'cache.js' 'utils.js' 'specs/**/*.js'",
                "eslint-fix": "npm run eslint -- --fix",
                "install-hooks": "prepush install && changelogx install-hook && precommit install",
                "post-v": "npm run do-changelog && git push --no-verify && git push --tags --no-verify",
                "pre-v": "npm run verify",
                "test": "npm run verify --silent",
                "test:cache": "mocha -R spec test/specs",
                "verify": "npm run check && npm run test:cache",
                "watch": "watch-run -i -p 'test/specs/**/*.js' istanbul cover test/runner.js html text-summary"
              },
              "version": "1.2.2",
              "readme": "# flat-cache\n> A stupidly simple key/value storage using files to persist the data\n\n[![NPM Version](http://img.shields.io/npm/v/flat-cache.svg?style=flat)](https://npmjs.org/package/flat-cache)\n[![Build Status](http://img.shields.io/travis/royriojas/flat-cache.svg?style=flat)](https://travis-ci.org/royriojas/flat-cache)\n\n## install\n\n```bash\nnpm i --save flat-cache\n```\n\n## Usage\n\n```js\nvar flatCache = require('flat-cache')\n// loads the cache, if one does not exists for the given\n// Id a new one will be prepared to be created\nvar cache = flatCache.load('cacheId');\n\n// sets a key on the cache\ncache.setKey('key', { foo: 'var' });\n\n// get a key from the cache\ncache.getKey('key') // { foo: 'var' }\n\n// remove a key\ncache.removeKey('key'); // removes a key from the cache\n\n// save it to disk\ncache.save(); // very important, if you don't save no changes will be persisted.\n// cache.save( true /* noPrune */) // can be used to prevent the removal of non visited keys\n\n// loads the cache from a given directory, if one does\n// not exists for the given Id a new one will be prepared to be created\nvar cache = flatCache.load('cacheId', path.resolve('./path/to/folder'));\n\n// The following methods are useful to clear the cache\n// delete a given cache\nflatCache.clearCacheById('cacheId') // removes the cacheId document if one exists.\n\n// delete all cache\nflatCache.clearAll(); // remove the cache directory\n```\n\n## Motivation for this module\n\nI needed a super simple and dumb **in-memory cache** with optional disk persistance in order to make\na script that will beutify files with `esformatter` only execute on the files that were changed since the last run.\nTo make that possible we need to store the `fileSize` and `modificationTime` of the files. So a simple `key/value`\nstorage was needed and Bam! this module was born.\n\n## Important notes\n- If no directory is especified when the `load` method is called, a folder named `.cache` will be created\n  inside the module directory when `cache.save` is called. If you're committing your `node_modules` to any vcs, you\n  might want to ignore the default `.cache` folder, or specify a custom directory.\n- The values set on the keys of the cache should be `stringify-able` ones, meaning no circular references\n- All the changes to the cache state are done to memory\n- I could have used a timer or `Object.observe` to deliver the changes to disk, but I wanted to keep this module\n  intentionally dumb and simple\n- Non visited keys are removed when `cache.save()` is called. If this is not desired, you can pass `true` to the save call\n  like: `cache.save( true /* noPrune */ )`.\n\n## License\n\nMIT\n\n## Changelog\n\n[changelog](./changelog.md)\n\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "circular-json": "^0.3.1",
                "del": "^2.0.2",
                "graceful-fs": "^4.1.2",
                "write": "^0.2.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/flat-cache",
              "error": "[Circular]",
              "extraneous": false
            },
            "object-assign": {
              "_from": "object-assign@^4.0.1",
              "_id": "object-assign@4.1.1",
              "_inBundle": false,
              "_integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
              "_location": "/object-assign",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
              "_shasum": "2109adc7965887cfc05cbbd442cac8bfbb360863",
              "_spec": "object-assign@^4.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esrecurse",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "deprecated": false,
              "description": "ES2015 `Object.assign()` ponyfill",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/sindresorhus/object-assign#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "name": "object-assign",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "4.1.1",
              "readme": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) [ponyfill](https://ponyfill.com)\n\n\n## Use the built-in\n\nNode.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\nsupport `Object.assign()` :tada:. If you target only those environments, then by all\nmeans, use `Object.assign()` instead of this package.\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/object-assign",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Super simple cache for file metadata, useful for process that work o a given series of files and that only need to repeat the job on the changed ones since the previous run of the process",
          "devDependencies": {
            "chai": "^3.2.0",
            "changelogx": "^1.0.18",
            "commander": "^2.6.0",
            "del": "^2.0.2",
            "esbeautifier": "^4.2.11",
            "eslinter": "^2.3.3",
            "glob-expand": "^0.1.0",
            "istanbul": "^0.3.6",
            "mocha": "^2.1.0",
            "precommit": "^1.1.5",
            "prepush": "^3.1.4",
            "proxyquire": "^1.3.1",
            "sinon": "^1.12.2",
            "sinon-chai": "^2.7.0",
            "watch-run": "^1.2.1",
            "write": "^0.3.1"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "cache.js"
          ],
          "homepage": "https://github.com/royriojas/file-entry-cache#readme",
          "keywords": [
            "file cache",
            "task cache files",
            "file cache",
            "key par",
            "key value",
            "cache"
          ],
          "license": "MIT",
          "main": "cache.js",
          "name": "file-entry-cache",
          "precommit": [
            "npm run verify"
          ],
          "prepush": [
            "npm run verify"
          ],
          "repository": {
            "type": "git",
            "url": "git+https://github.com/royriojas/file-entry-cache.git"
          },
          "scripts": {
            "beautify": "esbeautifier 'cache.js' 'test/**/*.js'",
            "beautify-check": "npm run beautify -- -k",
            "bump-major": "npm run pre-v && npm version major -m 'BLD: Release v%s' && npm run post-v",
            "bump-minor": "npm run pre-v && npm version minor -m 'BLD: Release v%s' && npm run post-v",
            "bump-patch": "npm run pre-v && npm version patch -m 'BLD: Release v%s' && npm run post-v",
            "changelog": "changelogx -f markdown -o ./changelog.md",
            "cover": "istanbul cover test/runner.js html text-summary",
            "do-changelog": "npm run changelog && git add ./changelog.md && git commit -m 'DOC: Generate changelog' --no-verify",
            "eslint": "eslinter 'cache.js' 'specs/**/*.js'",
            "install-hooks": "prepush install && changelogx install-hook && precommit install",
            "lint": "npm run beautify && npm run eslint",
            "post-v": "npm run do-changelog && git push --no-verify && git push --tags --no-verify",
            "pre-v": "npm run test",
            "test": "npm run verify && mocha -R spec test/specs",
            "verify": "npm run beautify-check && npm run eslint",
            "watch": "watch-run -i -p 'test/specs/**/*.js' istanbul cover test/runner.js html text-summary"
          },
          "version": "1.3.1",
          "readme": "# file-entry-cache\n> Super simple cache for file metadata, useful for process that work o a given series of files\n> and that only need to repeat the job on the changed ones since the previous run of the process â Edit\n\n[![NPM Version](http://img.shields.io/npm/v/file-entry-cache.svg?style=flat)](https://npmjs.org/package/file-entry-cache)\n[![Build Status](http://img.shields.io/travis/royriojas/file-entry-cache.svg?style=flat)](https://travis-ci.org/royriojas/file-entry-cache)\n\n## install\n\n```bash\nnpm i --save file-entry-cache\n```\n\n## Usage\n\n```js\n// loads the cache, if one does not exists for the given\n// Id a new one will be prepared to be created\nvar fileEntryCache = require('file-entry-cache');\n\nvar cache = fileEntryCache.create('testCache');\n\nvar files = expand('../fixtures/*.txt');\n\n// the first time this method is called, will return all the files\nvar oFiles = cache.getUpdatedFiles(files);\n\n// this will persist this to disk checking each file stats and\n// updating the meta attributes `size` and `mtime`.\n// custom fields could also be added to the meta object and will be persisted\n// in order to retrieve them later\ncache.reconcile();\n\n// use this if you want the non visited file entries to be kept in the cache\n// for more than one execution\n//\n// cache.reconcile( true /* noPrune */)\n\n// on a second run\nvar cache2 = fileEntryCache.create('testCache');\n\n// will return now only the files that were modified or none\n// if no files were modified previous to the execution of this function\nvar oFiles = cache.getUpdatedFiles(files);\n\n// if you want to prevent a file from being considered non modified\n// something useful if a file failed some sort of validation\n// you can then remove the entry from the cache doing\ncache.removeEntry('path/to/file'); // path to file should be the same path of the file received on `getUpdatedFiles`\n// that will effectively make the file to appear again as modified until the validation is passed. In that\n// case you should not remove it from the cache\n\n// if you need all the files, so you can determine what to do with the changed ones\n// you can call\nvar oFiles = cache.normalizeEntries(files);\n\n// oFiles will be an array of objects like the following\nentry = {\n  key: 'some/name/file', the path to the file\n  changed: true, // if the file was changed since previous run\n  meta: {\n    size: 3242, // the size of the file\n    mtime: 231231231, // the modification time of the file\n    data: {} // some extra field stored for this file (useful to save the result of a transformation on the file\n  }\n}\n\n```\n\n## Motivation for this module\n\nI needed a super simple and dumb **in-memory cache** with optional disk persistence (write-back cache) in order to make\na script that will beautify files with `esformatter` to execute only on the files that were changed since the last run.\n\nIn doing so the process of beautifying files was reduced from several seconds to a small fraction of a second.\n\nThis module uses [flat-cache](https://www.npmjs.com/package/flat-cache) a super simple `key/value` cache storage with\noptional file persistance.\n\nThe main idea is to read the files when the task begins, apply the transforms required, and if the process succeed,\nthen store the new state of the files. The next time this module request for `getChangedFiles` will return only\nthe files that were modified. Making the process to end faster.\n\nThis module could also be used by processes that modify the files applying a transform, in that case the result of the\ntransform could be stored in the `meta` field, of the entries. Anything added to the meta field will be persisted.\nThose processes won't need to call `getChangedFiles` they will instead call `normalizeEntries` that will return the\nentries with a `changed` field that can be used to determine if the file was changed or not. If it was not changed\nthe transformed stored data could be used instead of actually applying the transformation, saving time in case of only\na few files changed.\n\nIn the worst case scenario all the files will be processed. In the best case scenario only a few of them will be processed.\n\n## Important notes\n- The values set on the meta attribute of the entries should be `stringify-able` ones if possible, flat-cache uses `circular-json` to try to persist circular structures, but this should be considered experimental. The best results are always obtained with non circular values\n- All the changes to the cache state are done to memory first and only persisted after reconcile.\n- By default non visited entries are removed from the cache. This is done to prevent the file from growing too much. If this is not an issue and\n  you prefer to do a manual pruning of the cache files, you can pass `true` to the `reconcile` call. Like this:\n\n  ```javascript\n  cache.reconcile( true /* noPrune */ );\n  ```\n\n## License\n\nMIT\n\n\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "flat-cache": "^1.2.1",
            "object-assign": "^4.0.1"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/file-entry-cache",
          "error": "[Circular]",
          "extraneous": false
        },
        "glob": {
          "_from": "glob@^7.0.3",
          "_id": "glob@7.1.2",
          "_inBundle": false,
          "_integrity": "sha512-MJTUg1kjuLeQCJ+ccE4Vpa6kKVXkPYJ2mOCQyUuKLcLQsdrMCpBPUi8qVE6+YuaJkozeA9NusTAw3hLr8Xe5EQ==",
          "_location": "/glob",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/glob/-/glob-7.1.2.tgz",
          "_shasum": "c19c9df9a028702d678612384a6552404c636d15",
          "_spec": "glob@^7.0.3",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "dependencies": {
            "fs.realpath": {
              "_from": "fs.realpath@^1.0.0",
              "_id": "fs.realpath@1.0.0",
              "_inBundle": false,
              "_integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8=",
              "_location": "/fs.realpath",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "fs.realpath@^1.0.0",
                "name": "fs.realpath",
                "escapedName": "fs.realpath",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/glob"
              ],
              "_resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
              "_shasum": "1504ad2523158caa40db4a2787cb01411994ea4f",
              "_spec": "fs.realpath@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
              "author": {
                "name": "Isaac Z. Schlueter",
                "email": "i@izs.me",
                "url": "http://blog.izs.me/"
              },
              "bugs": {
                "url": "https://github.com/isaacs/fs.realpath/issues"
              },
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Use node's fs.realpath, but fall back to the JS implementation if the native one fails",
              "devDependencies": {},
              "files": [
                "old.js",
                "index.js"
              ],
              "homepage": "https://github.com/isaacs/fs.realpath#readme",
              "keywords": [
                "realpath",
                "fs",
                "polyfill"
              ],
              "license": "ISC",
              "main": "index.js",
              "name": "fs.realpath",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/isaacs/fs.realpath.git"
              },
              "scripts": {
                "test": "tap test/*.js --cov"
              },
              "version": "1.0.0",
              "readme": "# fs.realpath\n\nA backwards-compatible fs.realpath for Node v6 and above\n\nIn Node v6, the JavaScript implementation of fs.realpath was replaced\nwith a faster (but less resilient) native implementation.  That raises\nnew and platform-specific errors and cannot handle long or excessively\nsymlink-looping paths.\n\nThis module handles those cases by detecting the new errors and\nfalling back to the JavaScript implementation.  On versions of Node\nprior to v6, it has no effect.\n\n## USAGE\n\n```js\nvar rp = require('fs.realpath')\n\n// async version\nrp.realpath(someLongAndLoopingPath, function (er, real) {\n  // the ELOOP was handled, but it was a bit slower\n})\n\n// sync version\nvar real = rp.realpathSync(someLongAndLoopingPath)\n\n// monkeypatch at your own risk!\n// This replaces the fs.realpath/fs.realpathSync builtins\nrp.monkeypatch()\n\n// un-do the monkeypatching\nrp.unmonkeypatch()\n```\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/fs.realpath",
              "error": "[Circular]",
              "extraneous": false
            },
            "inflight": {
              "_from": "inflight@^1.0.4",
              "_id": "inflight@1.0.6",
              "_inBundle": false,
              "_integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",
              "_location": "/inflight",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "inflight@^1.0.4",
                "name": "inflight",
                "escapedName": "inflight",
                "rawSpec": "^1.0.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.4"
              },
              "_requiredBy": [
                "/glob"
              ],
              "_resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
              "_shasum": "49bd6331d7d02d0c09bc910a1075ba8165b56df9",
              "_spec": "inflight@^1.0.4",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
              "author": {
                "name": "Isaac Z. Schlueter",
                "email": "i@izs.me",
                "url": "http://blog.izs.me/"
              },
              "bugs": {
                "url": "https://github.com/isaacs/inflight/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "once": {
                  "_from": "once@^1.3.0",
                  "_id": "once@1.4.0",
                  "_inBundle": false,
                  "_integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
                  "_location": "/once",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "once@^1.3.0",
                    "name": "once",
                    "escapedName": "once",
                    "rawSpec": "^1.3.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.3.0"
                  },
                  "_requiredBy": [
                    "/glob",
                    "/inflight",
                    "/run-async"
                  ],
                  "_resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
                  "_shasum": "583b1aa775961d4b113ac17d9c50baef9dd76bd1",
                  "_spec": "once@^1.3.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
                  "author": {
                    "name": "Isaac Z. Schlueter",
                    "email": "i@izs.me",
                    "url": "http://blog.izs.me/"
                  },
                  "bugs": {
                    "url": "https://github.com/isaacs/once/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Run a function exactly one time",
                  "devDependencies": {
                    "tap": "^7.0.1"
                  },
                  "directories": {
                    "test": "test"
                  },
                  "files": [
                    "once.js"
                  ],
                  "homepage": "https://github.com/isaacs/once#readme",
                  "keywords": [
                    "once",
                    "function",
                    "one",
                    "single"
                  ],
                  "license": "ISC",
                  "main": "once.js",
                  "name": "once",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/isaacs/once.git"
                  },
                  "scripts": {
                    "test": "tap test/*.js"
                  },
                  "version": "1.4.0",
                  "readme": "# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n\n## `once.strict(func)`\n\nThrow an error if the function is called twice.\n\nSome functions are expected to be called only once. Using `once` for them would\npotentially hide logical errors.\n\nIn the example below, the `greet` function has to call the callback only once:\n\n```javascript\nfunction greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "wrappy": "1"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/once",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "once"
                },
                "wrappy": {
                  "_from": "wrappy@1",
                  "_id": "wrappy@1.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
                  "_location": "/wrappy",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "wrappy@1",
                    "name": "wrappy",
                    "escapedName": "wrappy",
                    "rawSpec": "1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "1"
                  },
                  "_requiredBy": [
                    "/inflight",
                    "/once"
                  ],
                  "_resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
                  "_shasum": "b5243d8f3ec1aa35f1364605bc0d1036e30ab69f",
                  "_spec": "wrappy@1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inflight",
                  "author": {
                    "name": "Isaac Z. Schlueter",
                    "email": "i@izs.me",
                    "url": "http://blog.izs.me/"
                  },
                  "bugs": {
                    "url": "https://github.com/npm/wrappy/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Callback wrapping utility",
                  "devDependencies": {
                    "tap": "^2.3.1"
                  },
                  "directories": {
                    "test": "test"
                  },
                  "files": [
                    "wrappy.js"
                  ],
                  "homepage": "https://github.com/npm/wrappy",
                  "license": "ISC",
                  "main": "wrappy.js",
                  "name": "wrappy",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/npm/wrappy.git"
                  },
                  "scripts": {
                    "test": "tap --coverage test/*.js"
                  },
                  "version": "1.0.2",
                  "readme": "# wrappy\n\nCallback wrapping utility\n\n## USAGE\n\n```javascript\nvar wrappy = require(\"wrappy\")\n\n// var wrapper = wrappy(wrapperFunction)\n\n// make sure a cb is called only once\n// See also: http://npm.im/once for this specific use case\nvar once = wrappy(function (cb) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return cb.apply(this, arguments)\n  }\n})\n\nfunction printBoo () {\n  console.log('boo')\n}\n// has some rando property\nprintBoo.iAmBooPrinter = true\n\nvar onlyPrintOnce = once(printBoo)\n\nonlyPrintOnce() // prints 'boo'\nonlyPrintOnce() // does nothing\n\n// random property is retained!\nassert.equal(onlyPrintOnce.iAmBooPrinter, true)\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/wrappy",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Add callbacks to requests in flight to avoid async duplication",
              "devDependencies": {
                "tap": "^7.1.2"
              },
              "files": [
                "inflight.js"
              ],
              "homepage": "https://github.com/isaacs/inflight",
              "license": "ISC",
              "main": "inflight.js",
              "name": "inflight",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/npm/inflight.git"
              },
              "scripts": {
                "test": "tap test.js --100"
              },
              "version": "1.0.6",
              "readme": "# inflight\n\nAdd callbacks to requests in flight to avoid async duplication\n\n## USAGE\n\n```javascript\nvar inflight = require('inflight')\n\n// some request that does some stuff\nfunction req(key, callback) {\n  // key is any random string.  like a url or filename or whatever.\n  //\n  // will return either a falsey value, indicating that the\n  // request for this key is already in flight, or a new callback\n  // which when called will call all callbacks passed to inflightk\n  // with the same key\n  callback = inflight(key, callback)\n\n  // If we got a falsey value back, then there's already a req going\n  if (!callback) return\n\n  // this is where you'd fetch the url or whatever\n  // callback is also once()-ified, so it can safely be assigned\n  // to multiple events etc.  First call wins.\n  setTimeout(function() {\n    callback(null, key)\n  }, 100)\n}\n\n// only assigns a single setTimeout\n// when it dings, all cbs get called\nreq('foo', cb1)\nreq('foo', cb2)\nreq('foo', cb3)\nreq('foo', cb4)\n```\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "once": "^1.3.0",
                "wrappy": "1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inflight",
              "error": "[Circular]",
              "extraneous": false
            },
            "inherits": {
              "_from": "inherits@^2.0.3",
              "_id": "inherits@2.0.3",
              "_inBundle": false,
              "_integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
              "_location": "/inherits",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",
              "_shasum": "633c2c83e3da42a502f52466022480f4208261de",
              "_spec": "inherits@^2.0.3",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/concat-stream",
              "browser": "./inherits_browser.js",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Browser-friendly inheritance fully compatible with standard node.js inherits()",
              "devDependencies": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/isaacs/inherits#readme",
              "keywords": "[Circular]",
              "license": "ISC",
              "main": "./inherits.js",
              "name": "inherits",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "2.0.3",
              "readme": "Browser-friendly inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor).\n\nThis package exports standard `inherits` from node.js `util` module in\nnode environment, but also provides alternative browser-friendly\nimplementation through [browser\nfield](https://gist.github.com/shtylman/4339901). Alternative\nimplementation is a literal copy of standard one located in standalone\nmodule to avoid requiring of `util`. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nWhile keeping you sure you are using standard `inherits`\nimplementation in node.js environment, it allows bundlers such as\n[browserify](https://github.com/substack/node-browserify) to not\ninclude full `util` package to your client code if all you need is\njust `inherits` function. It worth, because browser shim for `util`\npackage is large and `inherits` is often the single function you need\nfrom it.\n\nIt's recommended to use this package instead of\n`require('util').inherits` for any code that has chances to be used\nnot only in node.js but in browser too.\n\n## usage\n\n```js\nvar inherits = require('inherits');\n// then use exactly as the standard one\n```\n\n## note on version ~1.0\n\nVersion ~1.0 had completely different motivation and is not compatible\nneither with 2.0 nor with standard node.js `inherits`.\n\nIf you are using version ~1.0 and planning to switch to ~2.0, be\ncareful:\n\n* new version uses `super_` instead of `super` for referencing\n  superclass\n* new version overwrites current prototype while old one preserves any\n  existing fields on it\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inherits",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "inherits"
            },
            "minimatch": {
              "_from": "minimatch@^3.0.4",
              "_id": "minimatch@3.0.4",
              "_inBundle": false,
              "_integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",
              "_location": "/minimatch",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "minimatch@^3.0.4",
                "name": "minimatch",
                "escapedName": "minimatch",
                "rawSpec": "^3.0.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "^3.0.4"
              },
              "_requiredBy": [
                "/glob"
              ],
              "_resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",
              "_shasum": "5166e286457f03306064be5497e8dbb0c3d32083",
              "_spec": "minimatch@^3.0.4",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
              "author": {
                "name": "Isaac Z. Schlueter",
                "email": "i@izs.me",
                "url": "http://blog.izs.me"
              },
              "bugs": {
                "url": "https://github.com/isaacs/minimatch/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "brace-expansion": {
                  "_from": "brace-expansion@^1.1.7",
                  "_id": "brace-expansion@1.1.8",
                  "_inBundle": false,
                  "_integrity": "sha1-wHshHHyVLsH479Uad+8NHTmQopI=",
                  "_location": "/brace-expansion",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "brace-expansion@^1.1.7",
                    "name": "brace-expansion",
                    "escapedName": "brace-expansion",
                    "rawSpec": "^1.1.7",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.1.7"
                  },
                  "_requiredBy": [
                    "/minimatch"
                  ],
                  "_resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.8.tgz",
                  "_shasum": "c07b211c7c952ec1f8efd51a77ef0d1d3990a292",
                  "_spec": "brace-expansion@^1.1.7",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/minimatch",
                  "author": {
                    "name": "Julian Gruber",
                    "email": "mail@juliangruber.com",
                    "url": "http://juliangruber.com"
                  },
                  "bugs": {
                    "url": "https://github.com/juliangruber/brace-expansion/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "balanced-match": {
                      "_from": "balanced-match@^1.0.0",
                      "_id": "balanced-match@1.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c=",
                      "_location": "/balanced-match",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "balanced-match@^1.0.0",
                        "name": "balanced-match",
                        "escapedName": "balanced-match",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/brace-expansion"
                      ],
                      "_resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
                      "_shasum": "89b4d199ab2bee49de164ea02b89ce462d71b767",
                      "_spec": "balanced-match@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/brace-expansion",
                      "author": {
                        "name": "Julian Gruber",
                        "email": "mail@juliangruber.com",
                        "url": "http://juliangruber.com"
                      },
                      "bugs": {
                        "url": "https://github.com/juliangruber/balanced-match/issues"
                      },
                      "bundleDependencies": false,
                      "dependencies": {},
                      "deprecated": false,
                      "description": "Match balanced character pairs, like \"{\" and \"}\"",
                      "devDependencies": {
                        "matcha": "^0.7.0",
                        "tape": "^4.6.0"
                      },
                      "homepage": "https://github.com/juliangruber/balanced-match",
                      "keywords": [
                        "match",
                        "regexp",
                        "test",
                        "balanced",
                        "parse"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "balanced-match",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/juliangruber/balanced-match.git"
                      },
                      "scripts": {
                        "bench": "make bench",
                        "test": "make test"
                      },
                      "testling": {
                        "files": "test/*.js",
                        "browsers": [
                          "ie/8..latest",
                          "firefox/20..latest",
                          "firefox/nightly",
                          "chrome/25..latest",
                          "chrome/canary",
                          "opera/12..latest",
                          "opera/next",
                          "safari/5.1..latest",
                          "ipad/6.0..latest",
                          "iphone/6.0..latest",
                          "android-browser/4.2..latest"
                        ]
                      },
                      "version": "1.0.0",
                      "readme": "# balanced-match\n\nMatch balanced string pairs, like `{` and `}` or `<b>` and `</b>`. Supports regular expressions as well!\n\n[![build status](https://secure.travis-ci.org/juliangruber/balanced-match.svg)](http://travis-ci.org/juliangruber/balanced-match)\n[![downloads](https://img.shields.io/npm/dm/balanced-match.svg)](https://www.npmjs.org/package/balanced-match)\n\n[![testling badge](https://ci.testling.com/juliangruber/balanced-match.png)](https://ci.testling.com/juliangruber/balanced-match)\n\n## Example\n\nGet the first matching pair of braces:\n\n```js\nvar balanced = require('balanced-match');\n\nconsole.log(balanced('{', '}', 'pre{in{nested}}post'));\nconsole.log(balanced('{', '}', 'pre{first}between{second}post'));\nconsole.log(balanced(/\\s+\\{\\s+/, /\\s+\\}\\s+/, 'pre  {   in{nest}   }  post'));\n```\n\nThe matches are:\n\n```bash\n$ node example.js\n{ start: 3, end: 14, pre: 'pre', body: 'in{nested}', post: 'post' }\n{ start: 3,\n  end: 9,\n  pre: 'pre',\n  body: 'first',\n  post: 'between{second}post' }\n{ start: 3, end: 17, pre: 'pre', body: 'in{nest}', post: 'post' }\n```\n\n## API\n\n### var m = balanced(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\nobject with those keys:\n\n* **start** the index of the first match of `a`\n* **end** the index of the matching `b`\n* **pre** the preamble, `a` and `b` not included\n* **body** the match, `a` and `b` not included\n* **post** the postscript, `a` and `b` not included\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `['{', 'a', '']` and `{a}}` will match `['', 'a', '}']`.\n\n### var r = balanced.range(a, b, str)\n\nFor the first non-nested matching pair of `a` and `b` in `str`, return an\narray with indexes: `[ <a index>, <b index> ]`.\n\nIf there's no match, `undefined` will be returned.\n\nIf the `str` contains more `a` than `b` / there are unmatched pairs, the first match that was closed will be used. For example, `{{a}` will match `[ 1, 3 ]` and `{a}}` will match `[0, 2]`.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install balanced-match\n```\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                      "readmeFilename": "README.md",
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/balanced-match",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "concat-map": {
                      "_from": "concat-map@0.0.1",
                      "_id": "concat-map@0.0.1",
                      "_inBundle": false,
                      "_integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=",
                      "_location": "/concat-map",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "version",
                        "registry": true,
                        "raw": "concat-map@0.0.1",
                        "name": "concat-map",
                        "escapedName": "concat-map",
                        "rawSpec": "0.0.1",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "0.0.1"
                      },
                      "_requiredBy": [
                        "/brace-expansion"
                      ],
                      "_resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
                      "_shasum": "d8a96bd77fd68df7793a73036a3ba0d5405d477b",
                      "_spec": "concat-map@0.0.1",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/brace-expansion",
                      "author": {
                        "name": "James Halliday",
                        "email": "mail@substack.net",
                        "url": "http://substack.net"
                      },
                      "bugs": {
                        "url": "https://github.com/substack/node-concat-map/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "concatenative mapdashery",
                      "devDependencies": {
                        "tape": "~2.4.0"
                      },
                      "directories": {
                        "example": "example",
                        "test": "test"
                      },
                      "homepage": "https://github.com/substack/node-concat-map#readme",
                      "keywords": [
                        "concat",
                        "concatMap",
                        "map",
                        "functional",
                        "higher-order"
                      ],
                      "license": "MIT",
                      "main": "index.js",
                      "name": "concat-map",
                      "repository": {
                        "type": "git",
                        "url": "git://github.com/substack/node-concat-map.git"
                      },
                      "scripts": {
                        "test": "tape test/*.js"
                      },
                      "testling": {
                        "files": "test/*.js",
                        "browsers": {
                          "ie": [
                            6,
                            7,
                            8,
                            9
                          ],
                          "ff": [
                            3.5,
                            10,
                            15
                          ],
                          "chrome": [
                            10,
                            22
                          ],
                          "safari": [
                            5.1
                          ],
                          "opera": [
                            12
                          ]
                        }
                      },
                      "version": "0.0.1",
                      "readme": "concat-map\n==========\n\nConcatenative mapdashery.\n\n[![browser support](http://ci.testling.com/substack/node-concat-map.png)](http://ci.testling.com/substack/node-concat-map)\n\n[![build status](https://secure.travis-ci.org/substack/node-concat-map.png)](http://travis-ci.org/substack/node-concat-map)\n\nexample\n=======\n\n``` js\nvar concatMap = require('concat-map');\nvar xs = [ 1, 2, 3, 4, 5, 6 ];\nvar ys = concatMap(xs, function (x) {\n    return x % 2 ? [ x - 0.1, x, x + 0.1 ] : [];\n});\nconsole.dir(ys);\n```\n\n***\n\n```\n[ 0.9, 1, 1.1, 2.9, 3, 3.1, 4.9, 5, 5.1 ]\n```\n\nmethods\n=======\n\n``` js\nvar concatMap = require('concat-map')\n```\n\nconcatMap(xs, fn)\n-----------------\n\nReturn an array of concatenated elements by calling `fn(x, i)` for each element\n`x` and each index `i` in the array `xs`.\n\nWhen `fn(x, i)` returns an array, its result will be concatenated with the\nresult array. If `fn(x, i)` returns anything else, that value will be pushed\nonto the end of the result array.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install concat-map\n```\n\nlicense\n=======\n\nMIT\n\nnotes\n=====\n\nThis module was written while sitting high above the ground in a tree.\n",
                      "readmeFilename": "README.markdown",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/concat-map",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Brace expansion as known from sh/bash",
                  "devDependencies": {
                    "matcha": "^0.7.0",
                    "tape": "^4.6.0"
                  },
                  "homepage": "https://github.com/juliangruber/brace-expansion",
                  "keywords": [],
                  "license": "MIT",
                  "main": "index.js",
                  "name": "brace-expansion",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/juliangruber/brace-expansion.git"
                  },
                  "scripts": {
                    "bench": "matcha test/perf/bench.js",
                    "gentest": "bash test/generate.sh",
                    "test": "tape test/*.js"
                  },
                  "testling": {
                    "files": "test/*.js",
                    "browsers": [
                      "ie/8..latest",
                      "firefox/20..latest",
                      "firefox/nightly",
                      "chrome/25..latest",
                      "chrome/canary",
                      "opera/12..latest",
                      "opera/next",
                      "safari/5.1..latest",
                      "ipad/6.0..latest",
                      "iphone/6.0..latest",
                      "android-browser/4.2..latest"
                    ]
                  },
                  "version": "1.1.8",
                  "readme": "# brace-expansion\n\n[Brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html), \nas known from sh/bash, in JavaScript.\n\n[![build status](https://secure.travis-ci.org/juliangruber/brace-expansion.svg)](http://travis-ci.org/juliangruber/brace-expansion)\n[![downloads](https://img.shields.io/npm/dm/brace-expansion.svg)](https://www.npmjs.org/package/brace-expansion)\n[![Greenkeeper badge](https://badges.greenkeeper.io/juliangruber/brace-expansion.svg)](https://greenkeeper.io/)\n\n[![testling badge](https://ci.testling.com/juliangruber/brace-expansion.png)](https://ci.testling.com/juliangruber/brace-expansion)\n\n## Example\n\n```js\nvar expand = require('brace-expansion');\n\nexpand('file-{a,b,c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('-v{,,}')\n// => ['-v', '-v', '-v']\n\nexpand('file{0..2}.jpg')\n// => ['file0.jpg', 'file1.jpg', 'file2.jpg']\n\nexpand('file-{a..c}.jpg')\n// => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']\n\nexpand('file{2..0}.jpg')\n// => ['file2.jpg', 'file1.jpg', 'file0.jpg']\n\nexpand('file{0..4..2}.jpg')\n// => ['file0.jpg', 'file2.jpg', 'file4.jpg']\n\nexpand('file-{a..e..2}.jpg')\n// => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg']\n\nexpand('file{00..10..5}.jpg')\n// => ['file00.jpg', 'file05.jpg', 'file10.jpg']\n\nexpand('{{A..C},{a..c}}')\n// => ['A', 'B', 'C', 'a', 'b', 'c']\n\nexpand('ppp{,config,oe{,conf}}')\n// => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']\n```\n\n## API\n\n```js\nvar expand = require('brace-expansion');\n```\n\n### var expanded = expand(str)\n\nReturn an array of all possible and valid expansions of `str`. If none are\nfound, `[str]` is returned.\n\nValid expansions are:\n\n```js\n/^(.*,)+(.+)?$/\n// {a,b,...}\n```\n\nA comma seperated list of options, like `{a,b}` or `{a,{b,c}}` or `{,a,}`.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nA numeric sequence from `x` to `y` inclusive, with optional increment.\nIf `x` or `y` start with a leading `0`, all the numbers will be padded\nto have equal length. Negative numbers and backwards iteration work too.\n\n```js\n/^-?\\d+\\.\\.-?\\d+(\\.\\.-?\\d+)?$/\n// {x..y[..incr]}\n```\n\nAn alphabetic sequence from `x` to `y` inclusive, with optional increment.\n`x` and `y` must be exactly one character, and if given, `incr` must be a\nnumber.\n\nFor compatibility reasons, the string `${` is not eligible for brace expansion.\n\n## Installation\n\nWith [npm](https://npmjs.org) do:\n\n```bash\nnpm install brace-expansion\n```\n\n## Contributors\n\n- [Julian Gruber](https://github.com/juliangruber)\n- [Isaac Z. Schlueter](https://github.com/isaacs)\n\n## License\n\n(MIT)\n\nCopyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "balanced-match": "^1.0.0",
                    "concat-map": "0.0.1"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/brace-expansion",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "a glob matcher in javascript",
              "devDependencies": {
                "tap": "^10.3.2"
              },
              "engines": {
                "node": "*"
              },
              "files": [
                "minimatch.js"
              ],
              "homepage": "https://github.com/isaacs/minimatch#readme",
              "license": "ISC",
              "main": "minimatch.js",
              "name": "minimatch",
              "repository": {
                "type": "git",
                "url": "git://github.com/isaacs/minimatch.git"
              },
              "scripts": {
                "postpublish": "git push origin --all; git push origin --tags",
                "postversion": "npm publish",
                "preversion": "npm test",
                "test": "tap test/*.js --cov"
              },
              "version": "3.0.4",
              "readme": "# minimatch\n\nA minimal matching utility.\n\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.svg)](http://travis-ci.org/isaacs/minimatch)\n\n\nThis is the matching library used internally by npm.\n\nIt works by converting glob expressions into JavaScript `RegExp`\nobjects.\n\n## Usage\n\n```javascript\nvar minimatch = require(\"minimatch\")\n\nminimatch(\"bar.foo\", \"*.foo\") // true!\nminimatch(\"bar.foo\", \"*.bar\") // false!\nminimatch(\"bar.foo\", \"*.+(bar|foo)\", { debug: true }) // true, and noisy!\n```\n\n## Features\n\nSupports these glob features:\n\n* Brace Expansion\n* Extended glob matching\n* \"Globstar\" `**` matching\n\nSee:\n\n* `man sh`\n* `man bash`\n* `man 3 fnmatch`\n* `man 5 gitignore`\n\n## Minimatch Class\n\nCreate a minimatch object by instantiating the `minimatch.Minimatch` class.\n\n```javascript\nvar Minimatch = require(\"minimatch\").Minimatch\nvar mm = new Minimatch(pattern, options)\n```\n\n### Properties\n\n* `pattern` The original pattern the minimatch object represents.\n* `options` The options supplied to the constructor.\n* `set` A 2-dimensional array of regexp or string expressions.\n  Each row in the\n  array corresponds to a brace-expanded pattern.  Each item in the row\n  corresponds to a single path-part.  For example, the pattern\n  `{a,b/c}/d` would expand to a set of patterns like:\n\n        [ [ a, d ]\n        , [ b, c, d ] ]\n\n    If a portion of the pattern doesn't have any \"magic\" in it\n    (that is, it's something like `\"foo\"` rather than `fo*o?`), then it\n    will be left as a string rather than converted to a regular\n    expression.\n\n* `regexp` Created by the `makeRe` method.  A single regular expression\n  expressing the entire pattern.  This is useful in cases where you wish\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\n* `negate` True if the pattern is negated.\n* `comment` True if the pattern is a comment.\n* `empty` True if the pattern is `\"\"`.\n\n### Methods\n\n* `makeRe` Generate the `regexp` member if necessary, and return it.\n  Will return `false` if the pattern is invalid.\n* `match(fname)` Return true if the filename matches the pattern, or\n  false otherwise.\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\n  filename, and match it against a single row in the `regExpSet`.  This\n  method is mainly for internal use, but is exposed so that it can be\n  used by a glob-walker that needs to avoid excessive filesystem calls.\n\nAll other methods are internal, and will be called as necessary.\n\n### minimatch(path, pattern, options)\n\nMain export.  Tests a path against the pattern using the options.\n\n```javascript\nvar isJS = minimatch(file, \"*.js\", { matchBase: true })\n```\n\n### minimatch.filter(pattern, options)\n\nReturns a function that tests its\nsupplied argument, suitable for use with `Array.filter`.  Example:\n\n```javascript\nvar javascripts = fileList.filter(minimatch.filter(\"*.js\", {matchBase: true}))\n```\n\n### minimatch.match(list, pattern, options)\n\nMatch against the list of\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\noptions.nonull is set, then return a list containing the pattern itself.\n\n```javascript\nvar javascripts = minimatch.match(fileList, \"*.js\", {matchBase: true}))\n```\n\n### minimatch.makeRe(pattern, options)\n\nMake a regular expression object from the pattern.\n\n## Options\n\nAll options are `false` by default.\n\n### debug\n\nDump a ton of stuff to stderr.\n\n### nobrace\n\nDo not expand `{a,b}` and `{1..3}` brace sets.\n\n### noglobstar\n\nDisable `**` matching against multiple folder names.\n\n### dot\n\nAllow patterns to match filenames starting with a period, even if\nthe pattern does not explicitly have a period in that spot.\n\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\nis set.\n\n### noext\n\nDisable \"extglob\" style patterns like `+(a|b)`.\n\n### nocase\n\nPerform a case-insensitive match.\n\n### nonull\n\nWhen a match is not found by `minimatch.match`, return a list containing\nthe pattern itself if this option is set.  When not set, an empty list\nis returned if there are no matches.\n\n### matchBase\n\nIf set, then patterns without slashes will be matched\nagainst the basename of the path if it contains slashes.  For example,\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\n\n### nocomment\n\nSuppress the behavior of treating `#` at the start of a pattern as a\ncomment.\n\n### nonegate\n\nSuppress the behavior of treating a leading `!` character as negation.\n\n### flipNegate\n\nReturns from negate expressions the same as if they were not negated.\n(Ie, true on a hit, false on a miss.)\n\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between minimatch and other\nimplementations, and are intentional.\n\nIf the pattern starts with a `!` character, then it is negated.  Set the\n`nonegate` flag to suppress this behavior, and treat leading `!`\ncharacters normally.  This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.\n\nIf a pattern starts with `#`, then it is treated as a comment, and\nwill not match anything.  Use `\\#` to match a literal `#` at the\nstart of a line, or set the `nocomment` flag to suppress this behavior.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.1, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen minimatch.match returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`minimatch.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "brace-expansion": "^1.1.7"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/minimatch",
              "error": "[Circular]",
              "extraneous": false
            },
            "once": {
              "_from": "once@^1.3.0",
              "_id": "once@1.4.0",
              "_inBundle": false,
              "_integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
              "_location": "/once",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
              "_shasum": "583b1aa775961d4b113ac17d9c50baef9dd76bd1",
              "_spec": "once@^1.3.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {
                "wrappy": {
                  "_from": "wrappy@1",
                  "_id": "wrappy@1.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=",
                  "_location": "/wrappy",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
                  "_shasum": "b5243d8f3ec1aa35f1364605bc0d1036e30ab69f",
                  "_spec": "wrappy@1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inflight",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Callback wrapping utility",
                  "devDependencies": "[Circular]",
                  "directories": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/npm/wrappy",
                  "license": "ISC",
                  "main": "wrappy.js",
                  "name": "wrappy",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.2",
                  "readme": "# wrappy\n\nCallback wrapping utility\n\n## USAGE\n\n```javascript\nvar wrappy = require(\"wrappy\")\n\n// var wrapper = wrappy(wrapperFunction)\n\n// make sure a cb is called only once\n// See also: http://npm.im/once for this specific use case\nvar once = wrappy(function (cb) {\n  var called = false\n  return function () {\n    if (called) return\n    called = true\n    return cb.apply(this, arguments)\n  }\n})\n\nfunction printBoo () {\n  console.log('boo')\n}\n// has some rando property\nprintBoo.iAmBooPrinter = true\n\nvar onlyPrintOnce = once(printBoo)\n\nonlyPrintOnce() // prints 'boo'\nonlyPrintOnce() // does nothing\n\n// random property is retained!\nassert.equal(onlyPrintOnce.iAmBooPrinter, true)\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/wrappy",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "wrappy"
                }
              },
              "deprecated": false,
              "description": "Run a function exactly one time",
              "devDependencies": "[Circular]",
              "directories": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/isaacs/once#readme",
              "keywords": "[Circular]",
              "license": "ISC",
              "main": "once.js",
              "name": "once",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "1.4.0",
              "readme": "# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n\n## `once.strict(func)`\n\nThrow an error if the function is called twice.\n\nSome functions are expected to be called only once. Using `once` for them would\npotentially hide logical errors.\n\nIn the example below, the `greet` function has to call the callback only once:\n\n```javascript\nfunction greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n```\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/once",
              "error": "[Circular]",
              "extraneous": false
            },
            "path-is-absolute": {
              "_from": "path-is-absolute@^1.0.0",
              "_id": "path-is-absolute@1.0.1",
              "_inBundle": false,
              "_integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
              "_location": "/path-is-absolute",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "path-is-absolute@^1.0.0",
                "name": "path-is-absolute",
                "escapedName": "path-is-absolute",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/eslint",
                "/glob"
              ],
              "_resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
              "_shasum": "174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f",
              "_spec": "path-is-absolute@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/path-is-absolute/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Node.js 0.12 path.isAbsolute() ponyfill",
              "devDependencies": {
                "xo": "^0.16.0"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/path-is-absolute#readme",
              "keywords": [
                "path",
                "paths",
                "file",
                "dir",
                "absolute",
                "isabsolute",
                "is-absolute",
                "built-in",
                "util",
                "utils",
                "core",
                "ponyfill",
                "polyfill",
                "shim",
                "is",
                "detect",
                "check"
              ],
              "license": "MIT",
              "name": "path-is-absolute",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/path-is-absolute.git"
              },
              "scripts": {
                "test": "xo && node test.js"
              },
              "version": "1.0.1",
              "readme": "# path-is-absolute [![Build Status](https://travis-ci.org/sindresorhus/path-is-absolute.svg?branch=master)](https://travis-ci.org/sindresorhus/path-is-absolute)\n\n> Node.js 0.12 [`path.isAbsolute()`](http://nodejs.org/api/path.html#path_path_isabsolute_path) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save path-is-absolute\n```\n\n\n## Usage\n\n```js\nconst pathIsAbsolute = require('path-is-absolute');\n\n// Running on Linux\npathIsAbsolute('/home/foo');\n//=> true\npathIsAbsolute('C:/Users/foo');\n//=> false\n\n// Running on Windows\npathIsAbsolute('C:/Users/foo');\n//=> true\npathIsAbsolute('/home/foo');\n//=> false\n\n// Running on any OS\npathIsAbsolute.posix('/home/foo');\n//=> true\npathIsAbsolute.posix('C:/Users/foo');\n//=> false\npathIsAbsolute.win32('C:/Users/foo');\n//=> true\npathIsAbsolute.win32('/home/foo');\n//=> false\n```\n\n\n## API\n\nSee the [`path.isAbsolute()` docs](http://nodejs.org/api/path.html#path_path_isabsolute_path).\n\n### pathIsAbsolute(path)\n\n### pathIsAbsolute.posix(path)\n\nPOSIX specific version.\n\n### pathIsAbsolute.win32(path)\n\nWindows specific version.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/path-is-absolute",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "path-is-absolute"
            }
          },
          "deprecated": false,
          "description": "a little globber",
          "devDependencies": "[Circular]",
          "engines": "[Circular]",
          "files": "[Circular]",
          "homepage": "https://github.com/isaacs/node-glob#readme",
          "license": "ISC",
          "main": "glob.js",
          "name": "glob",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "7.1.2",
          "readme": "# Glob\n\nMatch files using the patterns the shell uses, like stars and stuff.\n\n[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch=master)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg=true)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github)](https://coveralls.io/github/isaacs/node-glob?branch=master)\n\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\nlibrary to do its matching.\n\n![](oh-my-glob.gif)\n\n## Usage\n\nInstall with npm\n\n```\nnpm i glob\n```\n\n```javascript\nvar glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n```\n\n## Glob Primer\n\n\"Globs\" are the patterns you type when you do stuff like `ls *.js` on\nthe command line, or put `build/*` in a `.gitignore` file.\n\nBefore parsing the path part patterns, braced sections are expanded\ninto a set.  Braced sections start with `{` and end with `}`, with any\nnumber of comma-delimited sections within.  Braced sections may contain\nslash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.\n\nThe following characters have special magic meaning when used in a\npath portion:\n\n* `*` Matches 0 or more characters in a single path portion\n* `?` Matches 1 character\n* `[...]` Matches a range of characters, similar to a RegExp range.\n  If the first character of the range is `!` or `^` then it matches\n  any character not in the range.\n* `!(pattern|pattern|pattern)` Matches anything that does not match\n  any of the patterns provided.\n* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the\n  patterns provided.\n* `+(pattern|pattern|pattern)` Matches one or more occurrences of the\n  patterns provided.\n* `*(a|b|c)` Matches zero or more occurrences of the patterns provided\n* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns\n  provided\n* `**` If a \"globstar\" is alone in a path portion, then it matches\n  zero or more directories and subdirectories searching for matches.\n  It does not crawl symlinked directories.\n\n### Dots\n\nIf a file or directory path portion has a `.` as the first character,\nthen it will not match any glob pattern unless that pattern's\ncorresponding path part also has a `.` as its first character.\n\nFor example, the pattern `a/.*/c` would match the file at `a/.b/c`.\nHowever the pattern `a/*/c` would not, because `*` does not start with\na dot character.\n\nYou can make glob treat dots as normal characters by setting\n`dot:true` in the options.\n\n### Basename Matching\n\nIf you set `matchBase:true` in the options, and the pattern has no\nslashes in it, then it will seek for any file anywhere in the tree\nwith a matching basename.  For example, `*.js` would match\n`test/simple/basic.js`.\n\n### Empty Sets\n\nIf no matching files are found, then an empty array is returned.  This\ndiffers from the shell, where the pattern itself is returned.  For\nexample:\n\n    $ echo a*s*d*f\n    a*s*d*f\n\nTo get the bash-style behavior, set the `nonull:true` in the options.\n\n### See Also:\n\n* `man sh`\n* `man bash` (Search for \"Pattern Matching\")\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob.hasMagic(pattern, [options])\n\nReturns `true` if there are any special characters in the pattern, and\n`false` otherwise.\n\nNote that the options affect the results.  If `noext:true` is set in\nthe options object, then `+(a|b)` will not be considered a magic\npattern.  If the pattern has a brace expansion, like `a/{b/c,x/y}`\nthen that is considered magical, unless `nobrace:true` is set in the\noptions.\n\n## glob(pattern, [options], cb)\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* `cb` `{Function}`\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options])\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* return: `{Array<String>}` filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instantiating the `glob.Glob` class.\n\n```javascript\nvar Glob = require(\"glob\").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt's an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` `{String}` pattern to search for\n* `options` `{Object}`\n* `cb` `{Function}` Called when an error occurs, or matches are found\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `aborted` Boolean which is set to true when calling `abort()`.  There\n  is no way at this time to continue a glob search after aborting, but\n  you can re-use the statCache to avoid having to duplicate syscalls.\n* `cache` Convenience object.  Each field has the following possible\n  values:\n  * `false` - Path does not exist\n  * `true` - Path exists\n  * `'FILE'` - Path exists, and is not a directory\n  * `'DIR'` - Path exists, and is a directory\n  * `[file, entries, ...]` - Path exists, is a directory, and the\n    array value is the results of `fs.readdir`\n* `statCache` Cache of `fs.stat` results, to prevent statting the same\n  path multiple times.\n* `symlinks` A record of which paths are symbolic links, which is\n  relevant in resolving `**` patterns.\n* `realpathCache` An optional object which is passed to `fs.realpath`\n  to minimize unnecessary syscalls.  It is stored on the instantiated\n  Glob object, and may be re-used.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n  matches found.  If the `nonull` option is set, and no match was found,\n  then the `matches` list contains the original pattern.  The matches\n  are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the specific\n  thing that matched. It is not deduplicated or resolved to a realpath.\n* `error` Emitted when an unexpected error is encountered, or whenever\n  any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `pause` Temporarily stop the search\n* `resume` Resume the search\n* `abort` Stop the search forever\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior.  Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the Glob object, as well.\n\nIf you are running many `glob` operations, you can pass a Glob object\nas the `options` argument to a subsequent operation to shortcut some\n`stat` and `readdir` calls.  At the very least, you may pass in shared\n`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that\nparallel glob operations will be sped up by sharing information about\nthe filesystem.\n\n* `cwd` The current working directory in which to search.  Defaults\n  to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n  onto.  Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix\n  systems, and `C:\\` or some such on Windows.)\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\n  Note that an explicit dot in a portion of the pattern will always\n  match dot files.\n* `nomount` By default, a pattern starting with a forward-slash will be\n  \"mounted\" onto the root setting, so that a valid filesystem path is\n  returned.  Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches.  Note that this\n  requires additional stat calls.\n* `nosort` Don't sort the results.\n* `stat` Set to true to stat *all* results.  This reduces performance\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\n  to be an untrustworthy indicator of file existence.\n* `silent` When an unusual error is encountered when attempting to\n  read a directory, a warning will be printed to stderr.  Set the\n  `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered when attempting to\n  read a directory, the process will just continue on in search of\n  other matches.  Set the `strict` option to raise an error in these\n  cases.\n* `cache` See `cache` property above.  Pass in a previously generated\n  cache object to save some fs calls.\n* `statCache` A cache of results of filesystem information, to prevent\n  unnecessary stat calls.  While it should not normally be necessary\n  to set this, you may pass the statCache from one glob() call to the\n  options object of another, if you know that the filesystem will not\n  change between calls.  (See \"Race Conditions\" below.)\n* `symlinks` A cache of known symbolic links.  You may pass in a\n  previously generated `symlinks` object to save `lstat` calls when\n  resolving `**` matches.\n* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.\n* `nounique` In some cases, brace-expanded patterns can result in the\n  same file showing up multiple times in the result set.  By default,\n  this implementation prevents duplicates in the result set.  Set this\n  flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n  containing the pattern itself.  This is the default in glob(3).\n* `debug` Set to enable debug logging in minimatch and glob.\n* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.\n* `noglobstar` Do not match `**` against multiple filenames.  (Ie,\n  treat it as a normal `*` instead.)\n* `noext` Do not match `+(a|b)` \"extglob\" patterns.\n* `nocase` Perform a case-insensitive match.  Note: on\n  case-insensitive filesystems, non-magic patterns will match by\n  default, since `stat` and `readdir` will not raise errors.\n* `matchBase` Perform a basename-only match if the pattern does not\n  contain any slash characters.  That is, `*.js` would be treated as\n  equivalent to `**/*.js`, matching all js files in all directories.\n* `nodir` Do not match directories, only files.  (Note: to match\n  *only* directories, simply put a `/` at the end of the pattern.)\n* `ignore` Add a pattern or an array of glob patterns to exclude matches.\n  Note: `ignore` patterns are *always* in `dot:true` mode, regardless\n  of any other settings.\n* `follow` Follow symlinked directories when expanding `**` patterns.\n  Note that this can result in a lot of duplicate references in the\n  presence of cyclic links.\n* `realpath` Set to true to call `fs.realpath` on all of the results.\n  In the case of a symlink that cannot be resolved, the full absolute\n  path to the matched entry is returned (though it will usually be a\n  broken symlink)\n* `absolute` Set to true to always receive absolute paths for matched\n  files.  Unlike `realpath`, this also affects the values returned in\n  the `match` event.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.3, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nNote that symlinked directories are not crawled as part of a `**`,\nthough their contents may match against subsequent portions of the\npattern.  This prevents infinite loops and duplicates and the like.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n### Comments and Negation\n\nPreviously, this module let you mark a pattern as a \"comment\" if it\nstarted with a `#` character, or a \"negated\" pattern if it started\nwith a `!` character.\n\nThese options were deprecated in version 5, and removed in version 6.\n\nTo specify things that should not match, use the `ignore` option.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation.  You must use\nforward-slashes **only** in glob expressions.  Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`.  On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead.  However, this also makes it even more susceptible to races,\nespecially if the cache or statCache objects are reused between glob\ncalls.\n\nUsers are thus advised not to use a glob result as a guarantee of\nfilesystem state in the face of rapid changes.  For the vast majority\nof operations, this is never a problem.\n\n## Contributing\n\nAny change to behavior (including bugfixes) must come with a test.\n\nPatches that fail tests or reduce performance will be rejected.\n\n```\n# to run tests\nnpm test\n\n# to re-generate test fixtures\nnpm run test-regen\n\n# to benchmark against bash/zsh\nnpm run bench\n\n# to profile javascript\nnpm run prof\n```\n",
          "readmeFilename": "README.md",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
          "error": "[Circular]",
          "extraneous": false
        },
        "globals": {
          "_from": "globals@^9.2.0",
          "_id": "globals@9.18.0",
          "_inBundle": false,
          "_integrity": "sha512-S0nG3CLEQiY/ILxqtztTWH/3iRRdyBLw6KMDxnKMchrtbj2OFmehVh0WUCfW3DUrIgx/qFrJPICrq4Z4sTR9UQ==",
          "_location": "/globals",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "globals@^9.2.0",
            "name": "globals",
            "escapedName": "globals",
            "rawSpec": "^9.2.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^9.2.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/globals/-/globals-9.18.0.tgz",
          "_shasum": "aa3896b3e69b487f17e31ed2143d69a8e30c2d8a",
          "_spec": "globals@^9.2.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "http://sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/globals/issues"
          },
          "bundleDependencies": false,
          "deprecated": false,
          "description": "Global identifiers from different JavaScript environments",
          "devDependencies": {
            "mocha": "*"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "index.js",
            "globals.json"
          ],
          "homepage": "https://github.com/sindresorhus/globals#readme",
          "keywords": [
            "globals",
            "global",
            "identifiers",
            "variables",
            "vars",
            "jshint",
            "eslint",
            "environments"
          ],
          "license": "MIT",
          "name": "globals",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/globals.git"
          },
          "scripts": {
            "test": "mocha"
          },
          "version": "9.18.0",
          "readme": "# globals [![Build Status](https://travis-ci.org/sindresorhus/globals.svg?branch=master)](https://travis-ci.org/sindresorhus/globals)\n\n> Global identifiers from different JavaScript environments\n\nExtracted from [JSHint](https://github.com/jshint/jshint/blob/3a8efa979dbb157bfb5c10b5826603a55a33b9ad/src/vars.js) and [ESLint](https://github.com/eslint/eslint/blob/b648406218f8a2d7302b98f5565e23199f44eb31/conf/environments.json) and merged.\n\nIt's just a [JSON file](globals.json), so use it in whatever environment you like.\n\n**This module [no longer accepts](https://github.com/sindresorhus/globals/issues/82) new environments. If you need it for ESLint, just [create a plugin](http://eslint.org/docs/developer-guide/working-with-plugins#environments-in-plugins).**\n\n\n## Install\n\n```\n$ npm install --save globals\n```\n\n\n## Usage\n\n```js\nvar globals = require('globals');\n\nconsole.log(globals.browser);\n/*\n{\n\taddEventListener: false,\n\tapplicationCache: false,\n\tArrayBuffer: false,\n\tatob: false,\n\t...\n}\n*/\n```\n\nEach global is given a value of `true` or `false`. A value of `true` indicates that the variable may be overwritten. A value of `false` indicates that the variable should be considered read-only. This information is used by static analysis tools to flag incorrect behavior. We assume all variables should be `false` unless we hear otherwise.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/globals",
          "error": "[Circular]",
          "extraneous": false
        },
        "ignore": {
          "_from": "ignore@^3.1.2",
          "_id": "ignore@3.3.3",
          "_inBundle": false,
          "_integrity": "sha1-QyNS5XrM2HqzEQ6C0/6g5HgSFW0=",
          "_location": "/ignore",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "ignore@^3.1.2",
            "name": "ignore",
            "escapedName": "ignore",
            "rawSpec": "^3.1.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "^3.1.2"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.3.tgz",
          "_shasum": "432352e57accd87ab3110e82d3fea0e47812156d",
          "_spec": "ignore@^3.1.2",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "kael"
          },
          "bugs": {
            "url": "https://github.com/kaelzhang/node-ignore/issues"
          },
          "bundleDependencies": false,
          "deprecated": false,
          "description": "Ignore is a manager and filter for .gitignore rules.",
          "devDependencies": {
            "chai": "~1.7.2",
            "codecov": "^1.0.1",
            "istanbul": "^0.4.5",
            "mocha": "~1.13.0"
          },
          "files": [
            "ignore.js",
            "index.d.ts",
            "LICENSE-MIT"
          ],
          "homepage": "https://github.com/kaelzhang/node-ignore#readme",
          "keywords": [
            "ignore",
            ".gitignore",
            "gitignore",
            "npmignore",
            "rules",
            "manager",
            "filter",
            "regexp",
            "regex",
            "fnmatch",
            "glob",
            "asterisks",
            "regular-expression"
          ],
          "license": "MIT",
          "main": "./ignore.js",
          "name": "ignore",
          "repository": {
            "type": "git",
            "url": "git+ssh://git@github.com/kaelzhang/node-ignore.git"
          },
          "scripts": {
            "cov-report": "istanbul report",
            "test": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec ./test/ignore.js && codecov",
            "test-no-cov": "mocha --reporter spec ./test/ignore.js"
          },
          "version": "3.3.3",
          "readme": "<table><thead>\n  <tr>\n    <th>Linux</th>\n    <th>OS X</th>\n    <th>Windows</th>\n    <th>Coverage</th>\n    <th>Downloads</th>\n  </tr>\n</thead><tbody><tr>\n  <td colspan=\"2\" align=\"center\">\n    <a href=\"https://travis-ci.org/kaelzhang/node-ignore\">\n    <img\n      src=\"https://travis-ci.org/kaelzhang/node-ignore.svg?branch=master\"\n      alt=\"Build Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://ci.appveyor.com/project/kaelzhang/node-ignore\">\n    <img\n      src=\"https://ci.appveyor.com/api/projects/status/github/kaelzhang/node-ignore?branch=master&svg=true\"\n      alt=\"Windows Build Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://codecov.io/gh/kaelzhang/node-ignore\">\n    <img\n      src=\"https://codecov.io/gh/kaelzhang/node-ignore/branch/master/graph/badge.svg\"\n      alt=\"Coverage Status\" /></a>\n  </td>\n  <td align=\"center\">\n    <a href=\"https://www.npmjs.org/package/ignore\">\n    <img\n      src=\"http://img.shields.io/npm/dm/ignore.svg\"\n      alt=\"npm module downloads per month\" /></a>\n  </td>\n</tr></tbody></table>\n\n# ignore\n\n`ignore` is a manager, filter and parser which implemented in pure JavaScript according to the .gitignore [spec](http://git-scm.com/docs/gitignore).\n\nPay attention that [`minimatch`](https://www.npmjs.org/package/minimatch) does not work in the gitignore way. To filter filenames according to .gitignore file, I recommend this module.\n\n##### Tested on\n\n- Linux + Node: `0.8` - `7.x`\n- Windows + Node: `0.10` - `7.x`, node < `0.10` is not tested due to the lack of support of appveyor.\n\nActually, `ignore` does not rely on any versions of node specially.\n\n## Table Of Main Contents\n\n- [Usage](#usage)\n- [Guide for 2.x -> 3.x](#upgrade-2x---3x)\n- [Contributing](#contributing)\n- [Related Packages](#related)\n\n## Usage\n\n```js\nconst ignore = require('ignore')\nconst ig = ignore().add(['.abc/*', '!.abc/d/'])\n```\n\n### Filter the given paths\n\n```js\nconst paths = [\n  '.abc/a.js',    // filtered out\n  '.abc/d/e.js'   // included\n]\n\nig.filter(paths)        // ['.abc/d/e.js']\nig.ignores('.abc/a.js') // true\n```\n\n### As the filter function\n\n```js\npaths.filter(ig.createFilter()); // ['.abc/d/e.js']\n```\n\n### Win32 paths will be handled\n\n```js\nig.filter(['.abc\\\\a.js', '.abc\\\\d\\\\e.js'])\n// if the code above runs on windows, the result will be\n// ['.abc\\\\d\\\\e.js']\n```\n\n## Why another ignore?\n\n- `ignore` is a standalone module, and is much simpler so that it could easy work with other programs, unlike [isaacs](https://npmjs.org/~isaacs)'s [fstream-ignore](https://npmjs.org/package/fstream-ignore) which must work with the modules of the fstream family.\n\n- `ignore` only contains utility methods to filter paths according to the specified ignore rules, so\n  - `ignore` never try to find out ignore rules by traversing directories or fetching from git configurations.\n  - `ignore` don't cares about sub-modules of git projects.\n\n- Exactly according to [gitignore man page](http://git-scm.com/docs/gitignore), fixes some known matching issues of fstream-ignore, such as:\n  - '`/*.js`' should only match '`a.js`', but not '`abc/a.js`'.\n  - '`**/foo`' should match '`foo`' anywhere.\n  - Prevent re-including a file if a parent directory of that file is excluded.\n  - Handle trailing whitespaces:\n    - `'a '`(one space) should not match `'a  '`(two spaces).\n    - `'a \\ '` matches `'a  '`\n\n## Methods\n\n### .add(pattern)\n### .add(patterns)\n\n- pattern `String|Ignore` An ignore pattern string, or the `Ignore` instance\n- patterns `Array.<pattern>` Array of ignore patterns.\n\nAdds a rule or several rules to the current manager.\n\nReturns `this`\n\nNotice that a line starting with `'#'`(hash) is treated as a comment. Put a backslash (`'\\'`) in front of the first hash for patterns that begin with a hash, if you want to ignore a file with a hash at the beginning of the filename.\n\n```js\nignore().add('#abc').ignores('#abc')    // false\nignore().add('\\#abc').ignores('#abc')   // true\n```\n\n`pattern` could either be a line of ignore pattern or a string of multiple ignore patterns, which means we could just `ignore().add()` the content of a ignore file:\n\n```js\nignore()\n.add(fs.readFileSync(filenameOfGitignore).toString())\n.filter(filenames)\n```\n\n`pattern` could also be an `ignore` instance, so that we could easily inherit the rules of another `Ignore` instance.\n\n### <strike>.addIgnoreFile(path)</strike>\n\nREMOVED in `3.x` for now.\n\nTo upgrade `ignore@2.x` up to `3.x`, use\n\n```js\nconst fs = require('fs')\n\nif (fs.existsSync(filename)) {\n  ignore().add(fs.readFileSync(filename).toString())\n}\n```\n\ninstead.\n\n\n### .filter(paths)\n\nFilters the given array of pathnames, and returns the filtered array.\n\n- paths `Array.<path>` The array of paths to be filtered.\n\n*NOTICE* that each `path` here should be a relative path to the root of your repository. Suppose the dir structure is:\n\n```\n/path/to/your/repo\n    |-- a\n    |   |-- a.js\n    |\n    |-- .b\n    |\n    |-- .c\n         |-- .DS_store\n```\n\nThen the `paths` might be like this:\n\n```js\n[\n  'a/a.js'\n  '.b',\n  '.c/.DS_store'\n]\n```\n\nUsually, you could use [`glob`](http://npmjs.org/package/glob) with `option.mark = true` to fetch the structure of the current directory:\n\n```js\nconst glob = require('glob')\n\nglob('**', {\n  // Adds a / character to directory matches.\n  mark: true\n}, (err, files) => {\n  if (err) {\n    return console.error(err)\n  }\n\n  let filtered = ignore().add(patterns).filter(files)\n  console.log(filtered)\n})\n```\n\n### .createFilter()\n\nCreates a filter function which could filter an array of paths with `Array.prototype.filter`.\n\nReturns `function(path)` the filter function.\n\n### .ignores(pathname)\n\n> new in 3.2.0\n\nReturns `Boolean` whether `pathname` should be ignored.\n\n```js\nig.ignores('.abc/a.js')    // true\n```\n\n****\n\n## Upgrade 2.x -> 3.x\n\n- All `options` of 2.x are unnecessary and removed, so just remove them.\n- `ignore()` instance is no longer an [`EventEmitter`](nodejs.org/api/events.html), and all events are unnecessary and removed.\n- `.addIgnoreFile()` is removed, see the [.addIgnoreFile](#addignorefilepath) section for details.\n\n****\n\n## Contributing\n\nThe code of `node-ignore` is based on es6 and babel, but babel and its preset is not included in the `dependencies` field of package.json, so that the installation process of test cases will not fail in older versions of node.\n\nSo use `bash install.sh` to install dependencies and `bash test.sh` to run test cases in your local machine.\n\n#### Collaborators\n\n- [SamyPesse](https://github.com/SamyPesse) *Samy PessÃ©*\n- [azproduction](https://github.com/azproduction) *Mikhail Davydov*\n- [TrySound](https://github.com/TrySound) *Bogdan Chadkin*\n- [JanMattner](https://github.com/JanMattner) *Jan Mattner*\n\n## Related\n\n- [`glob-gitignore`](https://www.npmjs.com/package/glob-gitignore) matches files using patterns and filters them according to gitignore rules.\n",
          "readmeFilename": "README.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ignore",
          "error": "[Circular]",
          "extraneous": false
        },
        "imurmurhash": {
          "_from": "imurmurhash@^0.1.4",
          "_id": "imurmurhash@0.1.4",
          "_inBundle": false,
          "_integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",
          "_location": "/imurmurhash",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "imurmurhash@^0.1.4",
            "name": "imurmurhash",
            "escapedName": "imurmurhash",
            "rawSpec": "^0.1.4",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.1.4"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
          "_shasum": "9218b9b2b928a238b13dc4fb6b6d576f231453ea",
          "_spec": "imurmurhash@^0.1.4",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Jens Taylor",
            "email": "jensyt@gmail.com",
            "url": "https://github.com/homebrewing"
          },
          "bugs": {
            "url": "https://github.com/jensyt/imurmurhash-js/issues"
          },
          "bundleDependencies": false,
          "dependencies": {},
          "deprecated": false,
          "description": "An incremental implementation of MurmurHash3",
          "devDependencies": {},
          "engines": {
            "node": ">=0.8.19"
          },
          "files": [
            "imurmurhash.js",
            "imurmurhash.min.js",
            "package.json",
            "README.md"
          ],
          "homepage": "https://github.com/jensyt/imurmurhash-js",
          "keywords": [
            "murmur",
            "murmurhash",
            "murmurhash3",
            "hash",
            "incremental"
          ],
          "license": "MIT",
          "main": "imurmurhash.js",
          "name": "imurmurhash",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/jensyt/imurmurhash-js.git"
          },
          "version": "0.1.4",
          "readme": "iMurmurHash.js\n==============\n\nAn incremental implementation of the MurmurHash3 (32-bit) hashing algorithm for JavaScript based on [Gary Court's implementation](https://github.com/garycourt/murmurhash-js) with [kazuyukitanimura's modifications](https://github.com/kazuyukitanimura/murmurhash-js).\n\nThis version works significantly faster than the non-incremental version if you need to hash many small strings into a single hash, since string concatenation (to build the single string to pass the non-incremental version) is fairly costly. In one case tested, using the incremental version was about 50% faster than concatenating 5-10 strings and then hashing.\n\nInstallation\n------------\n\nTo use iMurmurHash in the browser, [download the latest version](https://raw.github.com/jensyt/imurmurhash-js/master/imurmurhash.min.js) and include it as a script on your site.\n\n```html\n<script type=\"text/javascript\" src=\"/scripts/imurmurhash.min.js\"></script>\n<script>\n// Your code here, access iMurmurHash using the global object MurmurHash3\n</script>\n```\n\n---\n\nTo use iMurmurHash in Node.js, install the module using NPM:\n\n```bash\nnpm install imurmurhash\n```\n\nThen simply include it in your scripts:\n\n```javascript\nMurmurHash3 = require('imurmurhash');\n```\n\nQuick Example\n-------------\n\n```javascript\n// Create the initial hash\nvar hashState = MurmurHash3('string');\n\n// Incrementally add text\nhashState.hash('more strings');\nhashState.hash('even more strings');\n\n// All calls can be chained if desired\nhashState.hash('and').hash('some').hash('more');\n\n// Get a result\nhashState.result();\n// returns 0xe4ccfe6b\n```\n\nFunctions\n---------\n\n### MurmurHash3 ([string], [seed])\nGet a hash state object, optionally initialized with the given _string_ and _seed_. _Seed_ must be a positive integer if provided. Calling this function without the `new` keyword will return a cached state object that has been reset. This is safe to use as long as the object is only used from a single thread and no other hashes are created while operating on this one. If this constraint cannot be met, you can use `new` to create a new state object. For example:\n\n```javascript\n// Use the cached object, calling the function again will return the same\n// object (but reset, so the current state would be lost)\nhashState = MurmurHash3();\n...\n\n// Create a new object that can be safely used however you wish. Calling the\n// function again will simply return a new state object, and no state loss\n// will occur, at the cost of creating more objects.\nhashState = new MurmurHash3();\n```\n\nBoth methods can be mixed however you like if you have different use cases.\n\n---\n\n### MurmurHash3.prototype.hash (string)\nIncrementally add _string_ to the hash. This can be called as many times as you want for the hash state object, including after a call to `result()`. Returns `this` so calls can be chained.\n\n---\n\n### MurmurHash3.prototype.result ()\nGet the result of the hash as a 32-bit positive integer. This performs the tail and finalizer portions of the algorithm, but does not store the result in the state object. This means that it is perfectly safe to get results and then continue adding strings via `hash`.\n\n```javascript\n// Do the whole string at once\nMurmurHash3('this is a test string').result();\n// 0x70529328\n\n// Do part of the string, get a result, then the other part\nvar m = MurmurHash3('this is a');\nm.result();\n// 0xbfc4f834\nm.hash(' test string').result();\n// 0x70529328 (same as above)\n```\n\n---\n\n### MurmurHash3.prototype.reset ([seed])\nReset the state object for reuse, optionally using the given _seed_ (defaults to 0 like the constructor). Returns `this` so calls can be chained.\n\n---\n\nLicense (MIT)\n-------------\nCopyright (c) 2013 Gary Court, Jens Taylor\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/imurmurhash",
          "error": "[Circular]",
          "extraneous": false
        },
        "inquirer": {
          "_from": "inquirer@^0.12.0",
          "_id": "inquirer@0.12.0",
          "_inBundle": false,
          "_integrity": "sha1-HvK/1jUE3wvHV4X/+MLEHfEvB34=",
          "_location": "/inquirer",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "inquirer@^0.12.0",
            "name": "inquirer",
            "escapedName": "inquirer",
            "rawSpec": "^0.12.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.12.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/inquirer/-/inquirer-0.12.0.tgz",
          "_shasum": "1ef2bfd63504df0bc75785fff8c2c41df12f077e",
          "_spec": "inquirer@^0.12.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Simon Boudrias",
            "email": "admin@simonboudrias.com"
          },
          "bugs": {
            "url": "https://github.com/SBoudrias/Inquirer.js/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "ansi-escapes": {
              "_from": "ansi-escapes@^1.1.0",
              "_id": "ansi-escapes@1.4.0",
              "_inBundle": false,
              "_integrity": "sha1-06ioOzGapneTZisT52HHkRQiMG4=",
              "_location": "/ansi-escapes",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "ansi-escapes@^1.1.0",
                "name": "ansi-escapes",
                "escapedName": "ansi-escapes",
                "rawSpec": "^1.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.1.0"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-1.4.0.tgz",
              "_shasum": "d3a8a83b319aa67793662b13e761c7911422306e",
              "_spec": "ansi-escapes@^1.1.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/ansi-escapes/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "ANSI escape codes for manipulating the terminal",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/ansi-escapes#readme",
              "keywords": [
                "ansi",
                "terminal",
                "console",
                "cli",
                "string",
                "tty",
                "escape",
                "escapes",
                "formatting",
                "shell",
                "xterm",
                "log",
                "logging",
                "command-line",
                "text",
                "vt100",
                "sequence",
                "control",
                "code",
                "codes",
                "cursor",
                "iterm",
                "iterm2"
              ],
              "license": "MIT",
              "name": "ansi-escapes",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/ansi-escapes.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.4.0",
              "readme": "# ansi-escapes [![Build Status](https://travis-ci.org/sindresorhus/ansi-escapes.svg?branch=master)](https://travis-ci.org/sindresorhus/ansi-escapes)\n\n> [ANSI escape codes](http://www.termsys.demon.co.uk/vtansi.htm) for manipulating the terminal\n\n\n## Install\n\n```\n$ npm install --save ansi-escapes\n```\n\n\n## Usage\n\n```js\nconst ansiEscapes = require('ansi-escapes');\n\n// moves the cursor two rows up and to the left\nprocess.stdout.write(ansiEscapes.cursorUp(2) + ansiEscapes.cursorLeft);\n//=> '\\u001b[2A\\u001b[1000D'\n```\n\n\n## API\n\n### cursorTo([x, [y]])\n\nSet the absolute position of the cursor. `x0` `y0` is the top left of the screen.\n\nSpecify either both `x` & `y`, only `x`, or nothing.\n\n### cursorMove(x, [y])\n\nSet the position of the cursor relative to its current position.\n\n### cursorUp(count)\n\nMove cursor up a specific amount of rows. Default is `1`.\n\n### cursorDown(count)\n\nMove cursor down a specific amount of rows. Default is `1`.\n\n### cursorForward(count)\n\nMove cursor forward a specific amount of rows. Default is `1`.\n\n### cursorBackward(count)\n\nMove cursor backward a specific amount of rows. Default is `1`.\n\n### cursorLeft\n\nMove cursor to the left side.\n\n### cursorSavePosition\n\nSave cursor position.\n\n### cursorRestorePosition\n\nRestore saved cursor position.\n\n### cursorGetPosition\n\nGet cursor position.\n\n### cursorNextLine\n\nMove cursor to the next line.\n\n### cursorPrevLine\n\nMove cursor to the previous line.\n\n### cursorHide\n\nHide cursor.\n\n### cursorShow\n\nShow cursor.\n\n### eraseLines(count)\n\nErase from the current cursor position up the specified amount of rows.\n\n### eraseEndLine\n\nErase from the current cursor position to the end of the current line.\n\n### eraseStartLine\n\nErase from the current cursor position to the start of the current line.\n\n### eraseLine\n\nErase the entire current line.\n\n### eraseDown\n\nErase the screen from the current line down to the bottom of the screen.\n\n### eraseUp\n\nErase the screen from the current line up to the top of the screen.\n\n### eraseScreen\n\nErase the screen and move the cursor the top left position.\n\n### scrollUp\n\nScroll display up one line.\n\n### scrollDown\n\nScroll display down one line.\n\n### clearScreen\n\nClear the terminal screen.\n\n### beep\n\nOutput a beeping sound.\n\n### image(input, [options])\n\nDisplay an image.\n\n*Currently only supported on iTerm >=2.9.*\n\nSee [term-img](https://github.com/sindresorhus/term-img) for a higher-level module.\n\n#### input\n\nType: `buffer`\n\nBuffer of an image. Usually read in with `fs.readFile()`.\n\n#### options\n\n##### width\n##### height\n\nType: `string` `number`\n\nThe width and height are given as a number followed by a unit, or the word \"auto\".\n\n- `N`: N character cells.\n- `Npx`: N pixels.\n- `N%`: N percent of the session's width or height.\n- `auto`: The image's inherent size will be used to determine an appropriate dimension.\n\n##### preserveAspectRatio\n\nType: `boolean`<br>\nDefault: `true`\n\n### iTerm.setCwd([path])\n\nType: `string`<br>\nDefault: `process.cwd()`\n\n[Inform iTerm](https://www.iterm2.com/documentation-escape-codes.html) of the current directory to help semantic history and enable [Cmd-clicking relative paths](https://coderwall.com/p/b7e82q/quickly-open-files-in-iterm-with-cmd-click).\n\n\n## Related\n\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ansi-escapes",
              "error": "[Circular]",
              "extraneous": false
            },
            "ansi-regex": {
              "_from": "ansi-regex@^2.0.0",
              "_id": "ansi-regex@2.1.1",
              "_inBundle": false,
              "_integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8=",
              "_location": "/ansi-regex",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",
              "_shasum": "c3b33ab5ee360d86e0e628f0468ae7ef27d654df",
              "_spec": "ansi-regex@^2.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/has-ansi",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Regular expression for matching ANSI escape codes",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/chalk/ansi-regex#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "maintainers": "[Circular]",
              "name": "ansi-regex",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "2.1.1",
              "xo": "[Circular]",
              "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001b[4mcake\\u001b[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001b[4mcake\\u001b[0m'.match(ansiRegex());\n//=> ['\\u001b[4m', '\\u001b[0m']\n```\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. If I recall correctly, we test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ansi-regex",
              "error": "[Circular]",
              "extraneous": false
            },
            "chalk": {
              "_from": "chalk@^1.1.3",
              "_id": "chalk@1.1.3",
              "_inBundle": false,
              "_integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
              "_location": "/chalk",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
              "_shasum": "a8115c55e4a702fe4d150abd3872822a7e09fc98",
              "_spec": "chalk@^1.1.3",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Terminal string styling done right. Much color.",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/chalk/chalk#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "maintainers": "[Circular]",
              "name": "chalk",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "1.1.3",
              "xo": "[Circular]",
              "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"360\" src=\"https://cdn.rawgit.com/chalk/chalk/19935d6484811c5e468817f846b7b3d417d7bf4a/logo.svg\" alt=\"chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk)\n[![Coverage Status](https://coveralls.io/repos/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/r/chalk/chalk?branch=master)\n[![](http://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4)\n\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68). Although there are other ones, they either do too much or not enough.\n\n**Chalk is a clean and focused alternative.**\n\n![](https://github.com/chalk/ansi-styles/raw/master/screenshot.png)\n\n\n## Why\n\n- Highly performant\n- Doesn't extend `String.prototype`\n- Expressive API\n- Ability to nest styles\n- Clean and focused\n- Auto-detects color support\n- Actively maintained\n- [Used by ~4500 modules](https://www.npmjs.com/browse/depended/chalk) as of July 15, 2015\n\n\n## Install\n\n```\n$ npm install --save chalk\n```\n\n\n## Usage\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nvar chalk = require('chalk');\n\n// style a string\nchalk.blue('Hello world!');\n\n// combine styled and normal strings\nchalk.blue('Hello') + 'World' + chalk.red('!');\n\n// compose multiple styles using the chainable API\nchalk.blue.bgRed.bold('Hello world!');\n\n// pass in multiple arguments\nchalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz');\n\n// nest styles\nchalk.red('Hello', chalk.underline.bgBlue('world') + '!');\n\n// nest styles of the same type even (color, underline, background)\nchalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n);\n```\n\nEasily define your own themes.\n\n```js\nvar chalk = require('chalk');\nvar error = chalk.bold.red;\nconsole.log(error('Error!'));\n```\n\nTake advantage of console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data).\n\n```js\nvar name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> Hello Sindre\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `Chalk.red.yellow.green` is equivalent to `Chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, but you can override it by setting the `enabled` property. You should however only do this in your own code as it applies globally to all chalk consumers.\n\nIf you need to change this in a reusable module create a new instance:\n\n```js\nvar ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add an environment variable `FORCE_COLOR` with any value to force color. Trumps `--no-color`.\n\n### chalk.styles\n\nExposes the styles as [ANSI escape codes](https://github.com/chalk/ansi-styles).\n\nGenerally not useful, but you might need just the `.open` or `.close` escape code if you're mixing externally styled strings with your own.\n\n```js\nvar chalk = require('chalk');\n\nconsole.log(chalk.styles.red);\n//=> {open: '\\u001b[31m', close: '\\u001b[39m'}\n\nconsole.log(chalk.styles.red.open + 'Hello' + chalk.styles.red.close);\n```\n\n### chalk.hasColor(string)\n\nCheck whether a string [has color](https://github.com/chalk/has-ansi).\n\n### chalk.stripColor(string)\n\n[Strip color](https://github.com/chalk/strip-ansi) from a string.\n\nCan be useful in combination with `.supportsColor` to strip color on externally styled text when it's not supported.\n\nExample:\n\n```js\nvar chalk = require('chalk');\nvar styledString = getText();\n\nif (!chalk.supportsColor) {\n\tstyledString = chalk.stripColor(styledString);\n}\n```\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(on Windows the bright version is used as normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n\n\n## 256-colors\n\nChalk does not support anything other than the base eight colors, which guarantees it will work on all terminals and systems. Some terminals, specifically `xterm` compliant ones, will support the full range of 8-bit colors. For this the lower level [ansi-256-colors](https://github.com/jbnicolai/ansi-256-colors) package can be used.\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://bliker.github.io/cmder/) instead of `cmd.exe`.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles/) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color/) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "chalk"
            },
            "cli-cursor": {
              "_from": "cli-cursor@^1.0.1",
              "_id": "cli-cursor@1.0.2",
              "_inBundle": false,
              "_integrity": "sha1-ZNo/fValRBLll5S9Ytw1KV6PKYc=",
              "_location": "/cli-cursor",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "cli-cursor@^1.0.1",
                "name": "cli-cursor",
                "escapedName": "cli-cursor",
                "rawSpec": "^1.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.1"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-1.0.2.tgz",
              "_shasum": "64da3f7d56a54412e59794bd62dc35295e8f2987",
              "_spec": "cli-cursor@^1.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/cli-cursor/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "restore-cursor": {
                  "_from": "restore-cursor@^1.0.1",
                  "_id": "restore-cursor@1.0.1",
                  "_inBundle": false,
                  "_integrity": "sha1-NGYfRohjJ/7SmRR5FSJS35LapUE=",
                  "_location": "/restore-cursor",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "restore-cursor@^1.0.1",
                    "name": "restore-cursor",
                    "escapedName": "restore-cursor",
                    "rawSpec": "^1.0.1",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.0.1"
                  },
                  "_requiredBy": [
                    "/cli-cursor"
                  ],
                  "_resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-1.0.1.tgz",
                  "_shasum": "34661f46886327fed2991479152252df92daa541",
                  "_spec": "restore-cursor@^1.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/cli-cursor",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "http://sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/restore-cursor/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "exit-hook": {
                      "_from": "exit-hook@^1.0.0",
                      "_id": "exit-hook@1.1.1",
                      "_inBundle": false,
                      "_integrity": "sha1-8FyiM7SMBdVP/wd2XfhQfpXAL/g=",
                      "_location": "/exit-hook",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "exit-hook@^1.0.0",
                        "name": "exit-hook",
                        "escapedName": "exit-hook",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/restore-cursor"
                      ],
                      "_resolved": "https://registry.npmjs.org/exit-hook/-/exit-hook-1.1.1.tgz",
                      "_shasum": "f05ca233b48c05d54fff07765df8507e95c02ff8",
                      "_spec": "exit-hook@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/restore-cursor",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "http://sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/exit-hook/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Run some code when the process exits",
                      "devDependencies": {
                        "ava": "0.0.4"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/exit-hook#readme",
                      "keywords": [
                        "exit",
                        "quit",
                        "process",
                        "hook",
                        "graceful",
                        "handler",
                        "shutdown",
                        "sigterm",
                        "sigint",
                        "terminate",
                        "kill",
                        "stop",
                        "event"
                      ],
                      "license": "MIT",
                      "name": "exit-hook",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/exit-hook.git"
                      },
                      "scripts": {
                        "test": "node test.js"
                      },
                      "version": "1.1.1",
                      "readme": "# exit-hook [![Build Status](https://travis-ci.org/sindresorhus/exit-hook.svg?branch=master)](https://travis-ci.org/sindresorhus/exit-hook)\n\n> Run some code when the process exits\n\nThe `process.on('exit')` event doesn't catch all the ways a process can exit.\n\nUseful for cleaning up.\n\n\n## Install\n\n```sh\n$ npm install --save exit-hook\n```\n\n\n## Usage\n\n```js\nvar exitHook = require('exit-hook');\n\nexitHook(function () {\n\tconsole.log('exiting');\n});\n\n// you can add multiple hooks, even across files\nexitHook(function () {\n\tconsole.log('exiting 2');\n});\n\nthrow new Error('unicorns');\n\n//=> exiting\n//=> exiting 2\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/exit-hook",
                      "error": "[Circular]",
                      "extraneous": false
                    },
                    "onetime": {
                      "_from": "onetime@^1.0.0",
                      "_id": "onetime@1.1.0",
                      "_inBundle": false,
                      "_integrity": "sha1-ofeDj4MUxRbwXs78vEzP4EtO14k=",
                      "_location": "/onetime",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "onetime@^1.0.0",
                        "name": "onetime",
                        "escapedName": "onetime",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/restore-cursor"
                      ],
                      "_resolved": "https://registry.npmjs.org/onetime/-/onetime-1.1.0.tgz",
                      "_shasum": "a1f7838f8314c516f05ecefcbc4ccfe04b4ed789",
                      "_spec": "onetime@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/restore-cursor",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/onetime/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Only call a function once",
                      "devDependencies": {
                        "ava": "*",
                        "xo": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/onetime#readme",
                      "keywords": [
                        "once",
                        "one",
                        "single",
                        "call",
                        "function",
                        "prevent"
                      ],
                      "license": "MIT",
                      "name": "onetime",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/onetime.git"
                      },
                      "scripts": {
                        "test": "xo && ava"
                      },
                      "version": "1.1.0",
                      "readme": "# onetime [![Build Status](https://travis-ci.org/sindresorhus/onetime.svg?branch=master)](https://travis-ci.org/sindresorhus/onetime)\n\n> Only call a function once\n\nWhen called multiple times it will return the return value from the first call.\n\n*Unlike the module [once](https://github.com/isaacs/once), this one isn't naughty extending `Function.prototype`.*\n\n\n## Install\n\n```\n$ npm install --save onetime\n```\n\n\n## Usage\n\n```js\nlet i = 0;\n\nconst foo = onetime(() => i++);\n\nfoo(); //=> 0\nfoo(); //=> 0\nfoo(); //=> 0\n```\n\n\n## API\n\n### onetime(function, [shouldThrow])\n\n#### function\n\nType: `function`\n\nFunction that should only be called once.\n\n#### shouldThrow\n\nType: `boolean`  \nDefault: `false`\n\n![](screenshot-shouldthrow.png)\n\nSet to `true` if you want it to fail with a nice and descriptive error when called more than once.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/onetime",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Gracefully restore the CLI cursor on exit",
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/restore-cursor#readme",
                  "keywords": [
                    "exit",
                    "quit",
                    "process",
                    "graceful",
                    "shutdown",
                    "sigterm",
                    "sigint",
                    "terminate",
                    "kill",
                    "stop",
                    "cli",
                    "cursor",
                    "ansi",
                    "show",
                    "term",
                    "terminal",
                    "console",
                    "tty",
                    "shell",
                    "command-line"
                  ],
                  "license": "MIT",
                  "name": "restore-cursor",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/restore-cursor.git"
                  },
                  "version": "1.0.1",
                  "readme": "# restore-cursor\n\n> Gracefully restore the CLI cursor on exit\n\nPrevent the cursor you've hidden interactively to remain hidden if the process crashes.\n\n\n## Install\n\n```sh\n$ npm install --save restore-cursor\n```\n\n\n## Usage\n\n```js\nvar restoreCursor = require('restore-cursor');\nrestoreCursor();\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "devDependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {
                    "exit-hook": "^1.0.0",
                    "onetime": "^1.0.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/restore-cursor",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Toggle the CLI cursor",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/cli-cursor#readme",
              "keywords": [
                "cli",
                "cursor",
                "ansi",
                "toggle",
                "display",
                "show",
                "hide",
                "term",
                "terminal",
                "console",
                "tty",
                "shell",
                "command-line"
              ],
              "license": "MIT",
              "name": "cli-cursor",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/cli-cursor.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.2",
              "readme": "# cli-cursor [![Build Status](https://travis-ci.org/sindresorhus/cli-cursor.svg?branch=master)](https://travis-ci.org/sindresorhus/cli-cursor)\n\n> Toggle the CLI cursor\n\nThe cursor is [gracefully restored](https://github.com/sindresorhus/restore-cursor) if the process exits.\n\n\n## Install\n\n```\n$ npm install --save cli-cursor\n```\n\n\n## Usage\n\n```js\nconst cliCursor = require('cli-cursor');\n\ncliCursor.hide();\n\nconst unicornsAreAwesome = true;\ncliCursor.toggle(unicornsAreAwesome);\n```\n\n\n## API\n\n### .show()\n\n### .hide()\n\n### .toggle(force)\n\n`force` is useful to show or hide the cursor based an a boolean.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "restore-cursor": "^1.0.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/cli-cursor",
              "error": "[Circular]",
              "extraneous": false
            },
            "cli-width": {
              "_from": "cli-width@^2.0.0",
              "_id": "cli-width@2.1.0",
              "_inBundle": false,
              "_integrity": "sha1-sjTKIJsp72b8UY2bmNWEewDt8Ao=",
              "_location": "/cli-width",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "cli-width@^2.0.0",
                "name": "cli-width",
                "escapedName": "cli-width",
                "rawSpec": "^2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.0"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.1.0.tgz",
              "_shasum": "b234ca209b29ef66fc518d9b98d5847b00edf00a",
              "_spec": "cli-width@^2.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Ilya Radchenko",
                "email": "ilya@burstcreations.com"
              },
              "bugs": {
                "url": "https://github.com/knownasilya/cli-width/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Get stdout window width, with two fallbacks, tty and then a default.",
              "devDependencies": {
                "coveralls": "^2.11.4",
                "isparta": "^3.0.4",
                "rimraf": "^2.4.3",
                "tap-spec": "^4.1.0",
                "tape": "^3.4.0"
              },
              "homepage": "https://github.com/knownasilya/cli-width",
              "license": "ISC",
              "main": "index.js",
              "name": "cli-width",
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/knownasilya/cli-width.git"
              },
              "scripts": {
                "coverage": "isparta cover test/*.js | tspec",
                "coveralls": "npm run coverage -s && coveralls < coverage/lcov.info",
                "postcoveralls": "rimraf ./coverage",
                "test": "node test | tspec"
              },
              "version": "2.1.0",
              "readme": "cli-width\n=========\n\nGet stdout window width, with four fallbacks, `tty`, `output.columns`, a custom environment variable and then a default.\n\n[![npm version](https://badge.fury.io/js/cli-width.svg)](http://badge.fury.io/js/cli-width)\n[![Build Status](https://travis-ci.org/knownasilya/cli-width.svg)](https://travis-ci.org/knownasilya/cli-width)\n[![Coverage Status](https://coveralls.io/repos/knownasilya/cli-width/badge.svg?branch=master&service=github)](https://coveralls.io/github/knownasilya/cli-width?branch=master)\n\n## Usage\n\n```\nnpm install --save cli-width\n```\n\n```js\n'use stict';\n\nvar cliWidth = require('cli-width');\n\ncliWidth(); // maybe 204 :)\n```\n\nYou can also set the `CLI_WIDTH` environment variable.\n\nIf none of the methods are supported, and the environment variable isn't set,\nthe default width value is going to be `0`, that can be changed using the configurable `options`.\n\n## API\n\n### cliWidth([options])\n\n`cliWidth` can be configured using an `options` parameter, the possible properties are:\n\n- **defaultWidth**\\<number\\> Defines a default value to be used if none of the methods are available, defaults to `0`\n- **output**\\<object\\> A stream to be used to read width values from, defaults to `process.stdout`\n- **tty**\\<object\\> TTY module to try to read width from as a fallback, defaults to `require('tty')`\n\n\n### Examples\n\nDefining both a default width value and a stream output to try to read from:\n\n```js\nvar cliWidth = require('cli-width');\nvar ttys = require('ttys');\n\ncliWidth({\n  defaultWidth: 80,\n  output: ttys.output\n});\n```\n\nDefines a different tty module to read width from:\n\n```js\nvar cliWidth = require('cli-width');\nvar ttys = require('ttys');\n\ncliWidth({\n  tty: ttys\n});\n```\n\n## Tests\n\n```bash\nnpm install\nnpm test\n```\n\nCoverage can be generated with `npm run coverage`.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/cli-width",
              "error": "[Circular]",
              "extraneous": false
            },
            "figures": {
              "_from": "figures@^1.3.5",
              "_id": "figures@1.7.0",
              "_inBundle": false,
              "_integrity": "sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=",
              "_location": "/figures",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "figures@^1.3.5",
                "name": "figures",
                "escapedName": "figures",
                "rawSpec": "^1.3.5",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.3.5"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/figures/-/figures-1.7.0.tgz",
              "_shasum": "cbe1e3affcf1cd44b80cadfed28dc793a9701d2e",
              "_spec": "figures@^1.3.5",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/figures/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "escape-string-regexp": {
                  "_from": "escape-string-regexp@^1.0.2",
                  "_id": "escape-string-regexp@1.0.5",
                  "_inBundle": false,
                  "_integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=",
                  "_location": "/escape-string-regexp",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
                  "_shasum": "1b61c0562190a8dff6ae3bb2cf0200ca130b86d4",
                  "_spec": "escape-string-regexp@^1.0.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Escape RegExp special characters",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/sindresorhus/escape-string-regexp#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "maintainers": "[Circular]",
                  "name": "escape-string-regexp",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.5",
                  "readme": "# escape-string-regexp [![Build Status](https://travis-ci.org/sindresorhus/escape-string-regexp.svg?branch=master)](https://travis-ci.org/sindresorhus/escape-string-regexp)\n\n> Escape RegExp special characters\n\n\n## Install\n\n```\n$ npm install --save escape-string-regexp\n```\n\n\n## Usage\n\n```js\nconst escapeStringRegexp = require('escape-string-regexp');\n\nconst escapedString = escapeStringRegexp('how much $ for a unicorn?');\n//=> 'how much \\$ for a unicorn\\?'\n\nnew RegExp(escapedString);\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/escape-string-regexp",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "escape-string-regexp"
                },
                "object-assign": {
                  "_from": "object-assign@^4.0.1",
                  "_id": "object-assign@4.1.1",
                  "_inBundle": false,
                  "_integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=",
                  "_location": "/object-assign",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
                  "_shasum": "2109adc7965887cfc05cbbd442cac8bfbb360863",
                  "_spec": "object-assign@^4.0.1",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esrecurse",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "ES2015 `Object.assign()` ponyfill",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/sindresorhus/object-assign#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "object-assign",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "4.1.1",
                  "readme": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) [ponyfill](https://ponyfill.com)\n\n\n## Use the built-in\n\nNode.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\nsupport `Object.assign()` :tada:. If you target only those environments, then by all\nmeans, use `Object.assign()` instead of this package.\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/object-assign",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "object-assign"
                }
              },
              "deprecated": false,
              "description": "Unicode symbols with Windows CMD fallbacks",
              "devDependencies": {
                "ava": "*",
                "markdown-table": "^0.4.0",
                "require-uncached": "^1.0.2",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/figures#readme",
              "keywords": [
                "unicode",
                "cli",
                "cmd",
                "command-line",
                "characters",
                "char",
                "symbol",
                "symbols",
                "figure",
                "figures",
                "fallback"
              ],
              "license": "MIT",
              "name": "figures",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/figures.git"
              },
              "scripts": {
                "make": "./makefile.js",
                "test": "xo && ava"
              },
              "version": "1.7.0",
              "readme": "# figures [![Build Status: Linux](https://travis-ci.org/sindresorhus/figures.svg?branch=master)](https://travis-ci.org/sindresorhus/figures) [![Build status: Windows](https://ci.appveyor.com/api/projects/status/mb743hl70269be3r/branch/master?svg=true)](https://ci.appveyor.com/project/sindresorhus/figures/branch/master)\n\n> Unicode symbols with Windows CMD fallbacks\n\n[![](screenshot.png)](index.js)\n\n[*and more...*](index.js)\n\nWindows CMD only supports a [limited character set](http://en.wikipedia.org/wiki/Code_page_437).\n\n\n## Install\n\n```\n$ npm install --save figures\n```\n\n\n## Usage\n\nSee the [source](index.js) for supported symbols.\n\n```js\nconst figures = require('figures');\n\nconsole.log(figures('âï¸ check'));\n// On real OSes:  âï¸ check\n// On Windows:    â check\n\nconsole.log(figures.tick);\n// On real OSes:  âï¸\n// On Windows:    â\n```\n\n\n## API\n\n### figures(input)\n\nReturns the input with replaced fallback unicode symbols on Windows.\n\nAll the below [figures](#figures) are attached to the main export as shown in the example above.\n\n#### input\n\nType: `string`\n\nString where the unicode symbols will be replaced with fallback symbols depending on the OS.\n\n\n## Figures\n\n| Name               | Real OSes | Windows |\n| ------------------ | :-------: | :-----: |\n| tick               |     â     |    â    |\n| cross              |     â     |    Ã    |\n| star               |     â     |    *    |\n| square             |     â     |    â    |\n| squareSmall        |     â»     |   [ ]   |\n| squareSmallFilled  |     â¼     |   [â]   |\n| play               |     â¶     |    âº    |\n| circle             |     â¯     |   ( )   |\n| circleFilled       |     â     |   (*)   |\n| circleDotted       |     â     |   ( )   |\n| circleDouble       |     â     |   ( )   |\n| circleCircle       |     â     |   (â)   |\n| circleCross        |     â§     |   (Ã)   |\n| circlePipe         |     â¾     |   (â)   |\n| circleQuestionMark |     ?â    |   (?)   |\n| bullet             |     â     |    *    |\n| dot                |     â¤     |    .    |\n| line               |     â     |    â    |\n| ellipsis           |     â¦     |   ...   |\n| pointer            |     â¯     |    >    |\n| pointerSmall       |     âº     |    Â»    |\n| info               |     â¹     |    i    |\n| warning            |     â      |    â¼    |\n| hamburger          |     â°     |    â¡    |\n| smiley             |     ã¡     |    âº    |\n| mustache           |     à·´     |   âââ   |\n| heart              |     â¥     |    â¥    |\n| arrowUp            |     â     |    â    |\n| arrowDown          |     â     |    â    |\n| arrowLeft          |     â     |    â    |\n| arrowRight         |     â     |    â    |\n| radioOn            |     â     |   (*)   |\n| radioOff           |     â¯     |   ( )   |\n| checkboxOn         |     â     |   [Ã]   |\n| checkboxOff        |     â     |   [ ]   |\n| checkboxCircleOn   |     â§     |   (Ã)   |\n| checkboxCircleOff  |     â¾     |   ( )   |\n| questionMarkPrefix |     ?â    |    ï¼    |\n| oneHalf            |     Â½     |   1/2   |\n| oneThird           |     â     |   1/3   |\n| oneQuarter         |     Â¼     |   1/4   |\n| oneFifth           |     â     |   1/5   |\n| oneSixth           |     â     |   1/6   |\n| oneSeventh         |     â     |   1/7   |\n| oneEighth          |     â     |   1/8   |\n| oneNinth           |     â     |   1/9   |\n| oneTenth           |     â     |   1/10  |\n| twoThirds          |     â     |   2/3   |\n| twoFifths          |     â     |   2/5   |\n| threeQuarters      |     Â¾     |   3/4   |\n| threeFifths        |     â     |   3/5   |\n| threeEighths       |     â     |   3/8   |\n| fourFifths         |     â     |   4/5   |\n| fiveSixths         |     â     |   5/6   |\n| fiveEighths        |     â     |   5/8   |\n| sevenEighths       |     â     |   7/8   |\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "escape-string-regexp": "^1.0.5",
                "object-assign": "^4.1.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/figures",
              "error": "[Circular]",
              "extraneous": false
            },
            "lodash": {
              "_from": "lodash@^4.0.0",
              "_id": "lodash@4.17.4",
              "_inBundle": false,
              "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
              "_location": "/lodash",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "lodash@^4.0.0",
                "name": "lodash",
                "escapedName": "lodash",
                "rawSpec": "^4.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^4.0.0"
              },
              "_requiredBy": [
                "/eslint",
                "/inquirer",
                "/table"
              ],
              "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
              "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
              "_spec": "lodash@^4.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "author": {
                "name": "John-David Dalton",
                "email": "john.david.dalton@gmail.com",
                "url": "http://allyoucanleet.com/"
              },
              "bugs": {
                "url": "https://github.com/lodash/lodash/issues"
              },
              "bundleDependencies": false,
              "contributors": [
                {
                  "name": "John-David Dalton",
                  "email": "john.david.dalton@gmail.com",
                  "url": "http://allyoucanleet.com/"
                },
                {
                  "name": "Mathias Bynens",
                  "email": "mathias@qiwi.be",
                  "url": "https://mathiasbynens.be/"
                }
              ],
              "deprecated": false,
              "description": "Lodash modular utilities.",
              "homepage": "https://lodash.com/",
              "icon": "https://lodash.com/icon.svg",
              "keywords": [
                "modules",
                "stdlib",
                "util"
              ],
              "license": "MIT",
              "main": "lodash.js",
              "name": "lodash",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/lodash/lodash.git"
              },
              "scripts": {
                "test": "echo \"See https://travis-ci.org/lodash/lodash-cli for testing details.\""
              },
              "version": "4.17.4",
              "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "devDependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/lodash",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "lodash"
            },
            "readline2": {
              "_from": "readline2@^1.0.1",
              "_id": "readline2@1.0.1",
              "_inBundle": false,
              "_integrity": "sha1-QQWWCP/BVHV7cV2ZidGZ/783LjU=",
              "_location": "/readline2",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "readline2@^1.0.1",
                "name": "readline2",
                "escapedName": "readline2",
                "rawSpec": "^1.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.1"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/readline2/-/readline2-1.0.1.tgz",
              "_shasum": "41059608ffc154757b715d9989d199ffbf372e35",
              "_spec": "readline2@^1.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Simon Boudrias",
                "email": "admin@simonboudrias.com"
              },
              "bugs": {
                "url": "https://github.com/SBoudrias/readline2/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "code-point-at": {
                  "_from": "code-point-at@^1.0.0",
                  "_id": "code-point-at@1.1.0",
                  "_inBundle": false,
                  "_integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",
                  "_location": "/code-point-at",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "code-point-at@^1.0.0",
                    "name": "code-point-at",
                    "escapedName": "code-point-at",
                    "rawSpec": "^1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.0.0"
                  },
                  "_requiredBy": [
                    "/readline2",
                    "/string-width"
                  ],
                  "_resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
                  "_shasum": "0d070b4d043a5bea33a2f1a40e2edb3d9a4ccf77",
                  "_spec": "code-point-at@^1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readline2",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/code-point-at/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "ES2015 `String#codePointAt()` ponyfill",
                  "devDependencies": {
                    "ava": "*",
                    "xo": "^0.16.0"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/code-point-at#readme",
                  "keywords": [
                    "es2015",
                    "ponyfill",
                    "polyfill",
                    "shim",
                    "string",
                    "str",
                    "code",
                    "point",
                    "at",
                    "codepoint",
                    "unicode"
                  ],
                  "license": "MIT",
                  "name": "code-point-at",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/code-point-at.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "1.1.0",
                  "readme": "# code-point-at [![Build Status](https://travis-ci.org/sindresorhus/code-point-at.svg?branch=master)](https://travis-ci.org/sindresorhus/code-point-at)\n\n> ES2015 [`String#codePointAt()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save code-point-at\n```\n\n\n## Usage\n\n```js\nvar codePointAt = require('code-point-at');\n\ncodePointAt('ð´');\n//=> 128052\n\ncodePointAt('abc', 2);\n//=> 99\n```\n\n## API\n\n### codePointAt(input, [position])\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/code-point-at",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "is-fullwidth-code-point": {
                  "_from": "is-fullwidth-code-point@^1.0.0",
                  "_id": "is-fullwidth-code-point@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
                  "_location": "/is-fullwidth-code-point",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "is-fullwidth-code-point@^1.0.0",
                    "name": "is-fullwidth-code-point",
                    "escapedName": "is-fullwidth-code-point",
                    "rawSpec": "^1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.0.0"
                  },
                  "_requiredBy": [
                    "/readline2",
                    "/string-width"
                  ],
                  "_resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
                  "_shasum": "ef9e31386f031a7f0d643af82fde50c457ef00cb",
                  "_spec": "is-fullwidth-code-point@^1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readline2",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/is-fullwidth-code-point/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "number-is-nan": {
                      "_from": "number-is-nan@^1.0.0",
                      "_id": "number-is-nan@1.0.1",
                      "_inBundle": false,
                      "_integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=",
                      "_location": "/number-is-nan",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "number-is-nan@^1.0.0",
                        "name": "number-is-nan",
                        "escapedName": "number-is-nan",
                        "rawSpec": "^1.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^1.0.0"
                      },
                      "_requiredBy": [
                        "/is-fullwidth-code-point"
                      ],
                      "_resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",
                      "_shasum": "097b602b53422a522c1afb8790318336941a011d",
                      "_spec": "number-is-nan@^1.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-fullwidth-code-point",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/sindresorhus/number-is-nan/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "ES2015 Number.isNaN() ponyfill",
                      "devDependencies": {
                        "ava": "*"
                      },
                      "engines": {
                        "node": ">=0.10.0"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/sindresorhus/number-is-nan#readme",
                      "keywords": [
                        "es2015",
                        "ecmascript",
                        "ponyfill",
                        "polyfill",
                        "shim",
                        "number",
                        "is",
                        "nan",
                        "not"
                      ],
                      "license": "MIT",
                      "name": "number-is-nan",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/sindresorhus/number-is-nan.git"
                      },
                      "scripts": {
                        "test": "ava"
                      },
                      "version": "1.0.1",
                      "readme": "# number-is-nan [![Build Status](https://travis-ci.org/sindresorhus/number-is-nan.svg?branch=master)](https://travis-ci.org/sindresorhus/number-is-nan)\n\n> ES2015 [`Number.isNaN()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save number-is-nan\n```\n\n\n## Usage\n\n```js\nvar numberIsNan = require('number-is-nan');\n\nnumberIsNan(NaN);\n//=> true\n\nnumberIsNan('unicorn');\n//=> false\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/number-is-nan",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Check if the character represented by a given Unicode code point is fullwidth",
                  "devDependencies": {
                    "ava": "0.0.4",
                    "code-point-at": "^1.0.0"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/is-fullwidth-code-point#readme",
                  "keywords": [
                    "fullwidth",
                    "full-width",
                    "full",
                    "width",
                    "unicode",
                    "character",
                    "char",
                    "string",
                    "str",
                    "codepoint",
                    "code",
                    "point",
                    "is",
                    "detect",
                    "check"
                  ],
                  "license": "MIT",
                  "name": "is-fullwidth-code-point",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/is-fullwidth-code-point.git"
                  },
                  "scripts": {
                    "test": "node test.js"
                  },
                  "version": "1.0.0",
                  "readme": "# is-fullwidth-code-point [![Build Status](https://travis-ci.org/sindresorhus/is-fullwidth-code-point.svg?branch=master)](https://travis-ci.org/sindresorhus/is-fullwidth-code-point)\n\n> Check if the character represented by a given [Unicode code point](https://en.wikipedia.org/wiki/Code_point) is [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms)\n\n\n## Install\n\n```\n$ npm install --save is-fullwidth-code-point\n```\n\n\n## Usage\n\n```js\nvar isFullwidthCodePoint = require('is-fullwidth-code-point');\n\nisFullwidthCodePoint('è°¢'.codePointAt());\n//=> true\n\nisFullwidthCodePoint('a'.codePointAt());\n//=> false\n```\n\n\n## API\n\n### isFullwidthCodePoint(input)\n\n#### input\n\nType: `number`\n\n[Code point](https://en.wikipedia.org/wiki/Code_point) of a character.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "number-is-nan": "^1.0.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-fullwidth-code-point",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "mute-stream": {
                  "_from": "mute-stream@0.0.5",
                  "_id": "mute-stream@0.0.5",
                  "_inBundle": false,
                  "_integrity": "sha1-j7+rsKmKJT0xhDMfno3rc3L6xsA=",
                  "_location": "/mute-stream",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "version",
                    "registry": true,
                    "raw": "mute-stream@0.0.5",
                    "name": "mute-stream",
                    "escapedName": "mute-stream",
                    "rawSpec": "0.0.5",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "0.0.5"
                  },
                  "_requiredBy": [
                    "/readline2"
                  ],
                  "_resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.5.tgz",
                  "_shasum": "8fbfabb0a98a253d3184331f9e8deb7372fac6c0",
                  "_spec": "mute-stream@0.0.5",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readline2",
                  "author": {
                    "name": "Isaac Z. Schlueter",
                    "email": "i@izs.me",
                    "url": "http://blog.izs.me/"
                  },
                  "bugs": {
                    "url": "https://github.com/isaacs/mute-stream/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Bytes go in, but they don't come out (when muted).",
                  "devDependencies": {
                    "tap": "~0.2.5"
                  },
                  "directories": {
                    "test": "test"
                  },
                  "homepage": "https://github.com/isaacs/mute-stream#readme",
                  "keywords": [
                    "mute",
                    "stream",
                    "pipe"
                  ],
                  "license": "ISC",
                  "main": "mute.js",
                  "name": "mute-stream",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/isaacs/mute-stream.git"
                  },
                  "scripts": {
                    "test": "tap test/*.js"
                  },
                  "version": "0.0.5",
                  "readme": "# mute-stream\n\nBytes go in, but they don't come out (when muted).\n\nThis is a basic pass-through stream, but when muted, the bytes are\nsilently dropped, rather than being passed through.\n\n## Usage\n\n```javascript\nvar MuteStream = require('mute-stream')\n\nvar ms = new MuteStream(options)\n\nms.pipe(process.stdout)\nms.write('foo') // writes 'foo' to stdout\nms.mute()\nms.write('bar') // does not write 'bar'\nms.unmute()\nms.write('baz') // writes 'baz' to stdout\n\n// can also be used to mute incoming data\nvar ms = new MuteStream\ninput.pipe(ms)\n\nms.on('data', function (c) {\n  console.log('data: ' + c)\n})\n\ninput.emit('data', 'foo') // logs 'foo'\nms.mute()\ninput.emit('data', 'bar') // does not log 'bar'\nms.unmute()\ninput.emit('data', 'baz') // logs 'baz'\n```\n\n## Options\n\nAll options are optional.\n\n* `replace` Set to a string to replace each character with the\n  specified string when muted.  (So you can show `****` instead of the\n  password, for example.)\n\n* `prompt` If you are using a replacement char, and also using a\n  prompt with a readline stream (as for a `Password: *****` input),\n  then specify what the prompt is so that backspace will work\n  properly.  Otherwise, pressing backspace will overwrite the prompt\n  with the replacement character, which is weird.\n\n## ms.mute()\n\nSet `muted` to `true`.  Turns `.write()` into a no-op.\n\n## ms.unmute()\n\nSet `muted` to `false`\n\n## ms.isTTY\n\nTrue if the pipe destination is a TTY, or if the incoming pipe source is\na TTY.\n\n## Other stream methods...\n\nThe other standard readable and writable stream methods are all\navailable.  The MuteStream object acts as a facade to its pipe source\nand destination.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/mute-stream",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Readline FaÃ§ade fixing bugs and issues found in releases 0.8 and 0.10",
              "devDependencies": {
                "chalk": "^1.1.0",
                "mocha": "^2.1.0",
                "sinon": "^1.7.3"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/SBoudrias/readline2#readme",
              "keywords": [
                "cli",
                "terminal",
                "readline",
                "tty",
                "ansi"
              ],
              "license": "MIT",
              "name": "readline2",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/SBoudrias/readline2.git"
              },
              "scripts": {
                "test": "mocha -R spec"
              },
              "version": "1.0.1",
              "readme": "readline2 [![Build Status](https://travis-ci.org/SBoudrias/readline2.png?branch=master)](https://travis-ci.org/SBoudrias/readline2)\n=========\n\nNode.js (v0.8 and v0.10) had some bugs and issues with the default [Readline](http://nodejs.org/api/readline.html) module.\n\nThis module include fixes seen in later version (0.11-0.12 and iojs) and ease some undesirable behavior one could see using the readline to create interatives prompts. This means `readline2` change some behaviors and as so is **not** meant to be an exact drop-in replacement.\n\nThis project is extracted from the core of [Inquirer.js interactive prompt interface](https://github.com/SBoudrias/Inquirer.js) to be available as a standalone module.\n\n\nDocumentation\n-------------\n\n**Installation**: `npm install --save readline2`\n\n### readline2.createInterface(options); -> {Interface}\n\nPresent the same API as [Node.js `readline.createInterface()`](http://nodejs.org/api/readline.html)\n\n#### Improvements\n- Default `options.input` as `process.stdin`\n- Default `options.output` as `process.stdout`\n- `interface.stdout` is wrapped in a [MuteStream](https://github.com/isaacs/mute-stream)\n- Prevent `up` and `down` keys from moving through history inside the readline\n- Fix cursor position after a line refresh when the `Interface` prompt contains ANSI colors\n- Correctly return the cursor position when faced with implicit line returns\n\n\nLicense\n-------------\n\nCopyright (c) 2012 Simon Boudrias (twitter: [@vaxilart](https://twitter.com/Vaxilart))\nLicensed under the MIT license.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "code-point-at": "^1.0.0",
                "is-fullwidth-code-point": "^1.0.0",
                "mute-stream": "0.0.5"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readline2",
              "error": "[Circular]",
              "extraneous": false
            },
            "run-async": {
              "_from": "run-async@^0.1.0",
              "_id": "run-async@0.1.0",
              "_inBundle": false,
              "_integrity": "sha1-yK1KXhEGYeQCp9IbUw4AnyX444k=",
              "_location": "/run-async",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "run-async@^0.1.0",
                "name": "run-async",
                "escapedName": "run-async",
                "rawSpec": "^0.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^0.1.0"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/run-async/-/run-async-0.1.0.tgz",
              "_shasum": "c8ad4a5e110661e402a7d21b530e009f25f8e389",
              "_spec": "run-async@^0.1.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Simon Boudrias",
                "email": "admin@simonboudrias.com"
              },
              "bugs": {
                "url": "https://github.com/SBoudrias/run-async/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "once": {
                  "_from": "once@^1.3.0",
                  "_id": "once@1.4.0",
                  "_inBundle": false,
                  "_integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",
                  "_location": "/once",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
                  "_shasum": "583b1aa775961d4b113ac17d9c50baef9dd76bd1",
                  "_spec": "once@^1.3.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/glob",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Run a function exactly one time",
                  "devDependencies": "[Circular]",
                  "directories": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/isaacs/once#readme",
                  "keywords": "[Circular]",
                  "license": "ISC",
                  "main": "once.js",
                  "name": "once",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.4.0",
                  "readme": "# once\n\nOnly call a function once.\n\n## usage\n\n```javascript\nvar once = require('once')\n\nfunction load (file, cb) {\n  cb = once(cb)\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nOr add to the Function.prototype in a responsible way:\n\n```javascript\n// only has to be done once\nrequire('once').proto()\n\nfunction load (file, cb) {\n  cb = cb.once()\n  loader.load('file')\n  loader.once('load', cb)\n  loader.once('error', cb)\n}\n```\n\nIronically, the prototype feature makes this module twice as\ncomplicated as necessary.\n\nTo check whether you function has been called, use `fn.called`. Once the\nfunction is called for the first time the return value of the original\nfunction is saved in `fn.value` and subsequent calls will continue to\nreturn this value.\n\n```javascript\nvar once = require('once')\n\nfunction load (cb) {\n  cb = once(cb)\n  var stream = createStream()\n  stream.once('data', cb)\n  stream.once('end', function () {\n    if (!cb.called) cb(new Error('not found'))\n  })\n}\n```\n\n## `once.strict(func)`\n\nThrow an error if the function is called twice.\n\nSome functions are expected to be called only once. Using `once` for them would\npotentially hide logical errors.\n\nIn the example below, the `greet` function has to call the callback only once:\n\n```javascript\nfunction greet (name, cb) {\n  // return is missing from the if statement\n  // when no name is passed, the callback is called twice\n  if (!name) cb('Hello anonymous')\n  cb('Hello ' + name)\n}\n\nfunction log (msg) {\n  console.log(msg)\n}\n\n// this will print 'Hello anonymous' but the logical error will be missed\ngreet(null, once(msg))\n\n// once.strict will print 'Hello anonymous' and throw an error when the callback will be called the second time\ngreet(null, once.strict(msg))\n```\n",
                  "readmeFilename": "README.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/once",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "once"
                }
              },
              "deprecated": false,
              "description": "Utility method to run function either synchronously or asynchronously using the common `this.async()` style.",
              "devDependencies": {
                "mocha": "^1.21.4"
              },
              "homepage": "https://github.com/SBoudrias/run-async",
              "keywords": [
                "flow",
                "flow-control",
                "async"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "run-async",
              "repository": {
                "type": "git",
                "url": "git://github.com/SBoudrias/run-async.git"
              },
              "scripts": {
                "test": "mocha -R spec"
              },
              "version": "0.1.0",
              "readme": "Run Async\n=========\n\n[![npm](https://badge.fury.io/js/run-async.svg)](http://badge.fury.io/js/run-async) [![tests](https://travis-ci.org/SBoudrias/run-async.svg?branch=master)](http://travis-ci.org/SBoudrias/run-async) [![dependencies](https://david-dm.org/SBoudrias/run-async.svg?theme=shields.io)](https://david-dm.org/SBoudrias/run-async)\n\nUtility method to run function either synchronously or asynchronously using the common `this.async()` style.\n\nThis is useful for library author accepting sync or async functions as parameter. `runAsync` will always run them as async method, and normalize the function handling.\n\nInstallation\n=========\n\n```bash\nnpm install --save run-async\n```\n\nUsage\n=========\n\n```js\nvar runAsync = require('run-async');\n\n// In Async mode:\nvar asyncFn = function (a) {\n  var done = this.async();\n\n  setTimeout(function () {\n    done('running: ' + a);\n  }, 10);\n};\n\nrunAsync(asyncFn, function (answer) {\n  console.log(answer); // 'running: async'\n}, 'async');\n\n// In Sync mode:\nvar syncFn = function (a) {\n  return 'running: ' + a;\n};\n\nrunAsync(asyncFn, function (answer) {\n  console.log(answer); // 'running: sync'\n}, 'sync');\n```\n\nLicence\n========\n\nCopyright (c) 2014 Simon Boudrias (twitter: @vaxilart)  \nLicensed under the MIT license.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "once": "^1.3.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/run-async",
              "error": "[Circular]",
              "extraneous": false
            },
            "rx-lite": {
              "_from": "rx-lite@^3.1.2",
              "_id": "rx-lite@3.1.2",
              "_inBundle": false,
              "_integrity": "sha1-Gc5QLKVyZl87ZHsQk5+X/RYV8QI=",
              "_location": "/rx-lite",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "rx-lite@^3.1.2",
                "name": "rx-lite",
                "escapedName": "rx-lite",
                "rawSpec": "^3.1.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "^3.1.2"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-3.1.2.tgz",
              "_shasum": "19ce502ca572665f3b647b10939f97fd1615f102",
              "_spec": "rx-lite@^3.1.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Cloud Programmability Team",
                "url": "https://github.com/Reactive-Extensions/RxJS/blob/master/authors.txt"
              },
              "browser": {
                "index.js": "rx.lite.js"
              },
              "bugs": {
                "url": "https://github.com/Reactive-Extensions/RxJS/issues"
              },
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Lightweight library for composing asynchronous and event-based operations in JavaScript",
              "devDependencies": {},
              "homepage": "https://github.com/Reactive-Extensions/RxJS",
              "jam": {
                "main": "rx.lite.js"
              },
              "keywords": [
                "React",
                "Reactive",
                "Events",
                "Rx",
                "RxJS"
              ],
              "licenses": [
                {
                  "type": "Apache License, Version 2.0",
                  "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
                }
              ],
              "main": "rx.lite.js",
              "name": "rx-lite",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/Reactive-Extensions/RxJS.git"
              },
              "title": "Reactive Extensions for JavaScript (RxJS) Lite",
              "version": "3.1.2",
              "readme": "# RxJS Lite Module #\n\nThe Reactive Extensions for JavaScript Lite version is a lightweight version of the Reactive Extensions for JavaScript which covers most of the day to day operators you might use all in a single library.  Functionality such as bridging to events, promises, callbacks, Node.js-style callbacks, time-based operations and more are built right in.  This comes with `rx.lite.js` which is for use in modern development environments such as > IE9 and server-side environments such as Node.js.\n\n## Getting Started\n\nThere are a number of ways to get started with RxJS. \n\n### Installing with [NPM](https://npmjs.org/)\n\n```bash`\n$ npm install rx-lite\n$ npm install -g rx-lite\n```\n\n### Using with Node.js and Ringo.js\n\n```js\nvar Rx = require('rx-lite');\n```\n\n### In a Browser:\n\n```html\n<!-- Just the core RxJS -->\n<script src=\"path/to/rx.lite.js\"></script>\n```\n\n## Included Observable Operators ##\n\n### `Observable Methods`\n- [`catch | catchException`](../../doc/api/core/operators/catch.md)\n- [`concat`](../../doc/api/core/operators/concat.md)\n- [`create | createWithDisposable`](../../doc/api/core/operators/create.md)\n- [`defer`](../../doc/api/core/operators/defer.md)\n- [`empty`](../../doc/api/core/operators/empty.md)\n- [`from`](../../doc/api/core/operators/from.md)\n- [`fromArray`](../../doc/api/core/operators/fromarray.md)\n- [`fromCallback`](../../doc/api/core/operators/fromcallback.md)\n- [`fromEvent`](../../doc/api/core/operators/fromevent.md)\n- [`fromEventPattern`](../../doc/api/core/operators/fromeventpattern.md)\n- [`fromNodeCallback`](../../doc/api/core/operators/fromnodecallback.md)\n- [`fromPromise`](../../doc/api/core/operators/frompromise.md)\n- [`interval`](../../doc/api/core/operators/interval.md)\n- [`just`](../../doc/api/core/operators/return.md)\n- [`merge`](../../doc/api/core/operators/merge.md)\n- [`mergeDelayError`](../../doc/api/core/operators/mergedelayerror.md)\n- [`never`](../../doc/api/core/operators/never.md)\n- [`of`](../../doc/api/core/operators/of.md)\n- [`ofWithScheduler`](../../doc/api/core/operators/ofwithscheduler.md)\n- [`range`](../../doc/api/core/operators/range.md)\n- [`repeat`](../../doc/api/core/operators/repeat.md)\n- [`return | returnValue`](../../doc/api/core/operators/return.md)\n- [`throw | throwError | throwException`](../../doc/api/core/operators/throw.md)\n- [`timer`](../../doc/api/core/operators/timer.md)\n- [`zip`](../../doc/api/core/operators/zip.md)\n- [`zipArray`](../../doc/api/core/operators/ziparray.md)\n\n### `Observable Instance Methods`\n- [`asObservable`](../../doc/api/core/operators/asobservable.md)\n- [`catch | catchException`](../../doc/api/core/operators/catchproto.md)\n- [`combineLatest`](../../doc/api/core/operators/combinelatest.md)\n- [`concat`](../../doc/api/core/operators/concatproto.md)\n- [`concatMap`](../../doc/api/core/operators/concatmap.md)\n- [`connect`](../../doc/api/core/operators/connect.md)\n- [`debounce`](../../doc/api/core/operators/debounce.md)  \n- [`defaultIfEmpty`](../../doc/api/core/operators/defaultifempty.md)\n- [`delay`](../../doc/api/core/operators/delay.md)\n- [`dematerialize`](../../doc/api/core/operators/dematerialize.md)\n- [`distinctUntilChanged`](../../doc/api/core/operators/distinctuntilchanged.md)\n- [`do | doAction`](../../doc/api/core/operators/do.md)\n- [`doOnNext`](../../doc/api/core/operators/doonnext.md)\n- [`doOnError`](../../doc/api/core/operators/doonerror.md)\n- [`doOnCompleted`](../../doc/api/core/operators/dooncompleted.md)\n- [`filter`](../../doc/api/core/operators/where.md)\n- [`finally | finallyAction`](../../doc/api/core/operators/finally.md)\n- [`flatMap`](../../doc/api/core/operators/selectmany.md)\n- [`flatMapLatest`](../../doc/api/core/operators/flatmaplatest.md)\n- [`ignoreElements`](../../doc/api/core/operators/ignoreelements.md)\n- [`map`](../../doc/api/core/operators/select.md)\n- [`merge`](../../doc/api/core/operators/mergeproto.md)\n- [`mergeObservable | mergeAll`](../../doc/api/core/operators/mergeall.md)\n- [`multicast`](../../doc/api/core/operators/multicast.md)\n- [`publish`](../../doc/api/core/operators/publish.md)\n- [`publishLast`](../../doc/api/core/operators/publishlast.md)\n- [`publishValue`](../../doc/api/core/operators/publishvalue.md)\n- [`refCount`](../../doc/api/core/operators/refcount.md)\n- [`repeat`](../../doc/api/core/operators/repeat.md)\n- [`replay`](../../doc/api/core/operators/replay.md)\n- [`retry`](../../doc/api/core/operators/retry.md)\n- [`retryWhen`](../../doc/api/core/operators/retrywhen.md)\n- [`sample`](../../doc/api/core/operators/sample.md)\n- [`scan`](../../doc/api/core/operators/scan.md)\n- [`select`](../../doc/api/core/operators/select.md)\n- [`selectConcat`](../../doc/api/core/operators/concatmap.md)\n- [`selectMany`](../../doc/api/core/operators/selectmany.md)\n- [`selectSwitch`](../../doc/api/core/operators/flatmaplatest.md)\n- [`singleInstance`](../../doc/api/core/operators/singleinstance.md)\n- [`skip`](../../doc/api/core/operators/skip.md)\n- [`skipLast`](../../doc/api/core/operators/skiplast.md)\n- [`skipUntil`](../../doc/api/core/operators/skipuntil.md)\n- [`skipWhile`](../../doc/api/core/operators/skipwhile.md)\n- [`startWith`](../../doc/api/core/operators/startwith.md)\n- [`subscribe | forEach`](../../doc/api/core/operators/subscribe.md)\n- [`subscribeOnNext`](../../doc/api/core/operators/subscribeonnext.md)\n- [`subscribeOnError`](../../doc/api/core/operators/subscribeonerror.md)\n- [`subscribeOnCompleted`](../../doc/api/core/operators/subscribeoncompleted.md)\n- [`switch | switchLatest`](../../doc/api/core/operators/switch.md)\n- [`take`](../../doc/api/core/operators/take.md)\n- [`takeLast`](../../doc/api/core/operators/takelast.md)\n- [`takeUntil`](../../doc/api/core/operators/takeuntil.md)\n- [`takeWhile`](../../doc/api/core/operators/takewhile.md)\n- [`tap`](../../doc/api/core/operators/do.md)\n- [`tapOnNext`](../../doc/api/core/operators/doonnext.md)\n- [`tapOnError`](../../doc/api/core/operators/doonerror.md)\n- [`tapOnCompleted`](../../doc/api/core/operators/dooncompleted.md)\n- [`throttle`](../../doc/api/core/operators/throttle.md)\n- [`throttleFirst`](../../doc/api/core/operators/throttlefirst.md)\n- [`timeout`](../../doc/api/core/operators/timeout.md)\n- [`timestamp`](../../doc/api/core/operators/timestamp.md)\n- [`toArray`](../../doc/api/core/operators/toarray.md)\n- [`transduce`](../../doc/api/core/operators/transduce.md)\n- [`where`](../../doc/api/core/operators/where.md)\n- [`withLatestFrom`](../../doc/api/core/operators/withlatestfrom.md)\n- [`zip`](../../doc/api/core/operators/zipproto.md)\n\n## Included Classes ##\n\n### Core Objects\n- [`Rx.Observer`](../../doc/api/core/observer.md)\n- [`Rx.Notification`](../../doc/api/core/notification.md)\n\n### Subjects\n\n- [`Rx.AsyncSubject`](../../doc/api/subjects/asyncsubject.md)\n- [`Rx.BehaviorSubject`](../../doc/api/subjects/behaviorsubject.md)\n- [`Rx.ReplaySubject`](../../doc/api/subjects/replaysubject.md)\n- [`Rx.Subject`](../../doc/api/subjects/subject.md)\n\n### Schedulers\n\n- [`Rx.Scheduler`](../../doc/api/schedulers/scheduler.md)\n\n### Disposables\n\n- [`Rx.CompositeDisposable`](../../doc/api/disposables/compositedisposable.md)\n- [`Rx.Disposable`](../../doc/api/disposables/disposable.md)\n- [`Rx.RefCountDisposable`](../../doc/api/disposables/refcountdisposable.md)\n- [`Rx.SerialDisposable`](../../doc/api/disposables/serialdisposable.md)\n- [`Rx.SingleAssignmentDisposable`](../../doc/api/disposables/singleassignmentdisposable.md)\n\n## Contributing ##\n\nThere are lots of ways to contribute to the project, and we appreciate our [contributors](https://github.com/Reactive-Extensions/RxJS/wiki/Contributors).  If you wish to contribute, check out our [style guide]((https://github.com/Reactive-Extensions/RxJS/tree/master/doc/contributing)).\n\nYou can contribute by reviewing and sending feedback on code checkins, suggesting and trying out new features as they are implemented, submit bugs and help us verify fixes as they are checked in, as well as submit code fixes or code contributions of your own. Note that all code submissions will be rigorously reviewed and tested by the Rx Team, and only those that meet an extremely high bar for both quality and design/roadmap appropriateness will be merged into the source.\n\n## License ##\n\nCopyright (c) Microsoft Open Technologies, Inc.  All rights reserved.\nMicrosoft Open Technologies would like to thank its contributors, a list\nof whom are at https://github.com/Reactive-Extensions/RxJS/wiki/Contributors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you\nmay not use this file except in compliance with the License. You may\nobtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied. See the License for the specific language governing permissions\nand limitations under the License.\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/rx-lite",
              "error": "[Circular]",
              "extraneous": false
            },
            "string-width": {
              "_from": "string-width@^1.0.1",
              "_id": "string-width@1.0.2",
              "_inBundle": false,
              "_integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",
              "_location": "/string-width",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "string-width@^1.0.1",
                "name": "string-width",
                "escapedName": "string-width",
                "rawSpec": "^1.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.1"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",
              "_shasum": "118bdf5b8cdc51a2a7e70d211e07e2b0b9b107d3",
              "_spec": "string-width@^1.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/string-width/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "code-point-at": {
                  "_from": "code-point-at@^1.0.0",
                  "_id": "code-point-at@1.1.0",
                  "_inBundle": false,
                  "_integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=",
                  "_location": "/code-point-at",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",
                  "_shasum": "0d070b4d043a5bea33a2f1a40e2edb3d9a4ccf77",
                  "_spec": "code-point-at@^1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readline2",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "ES2015 `String#codePointAt()` ponyfill",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/sindresorhus/code-point-at#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "code-point-at",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.1.0",
                  "readme": "# code-point-at [![Build Status](https://travis-ci.org/sindresorhus/code-point-at.svg?branch=master)](https://travis-ci.org/sindresorhus/code-point-at)\n\n> ES2015 [`String#codePointAt()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save code-point-at\n```\n\n\n## Usage\n\n```js\nvar codePointAt = require('code-point-at');\n\ncodePointAt('ð´');\n//=> 128052\n\ncodePointAt('abc', 2);\n//=> 99\n```\n\n## API\n\n### codePointAt(input, [position])\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/code-point-at",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "code-point-at"
                },
                "is-fullwidth-code-point": {
                  "_from": "is-fullwidth-code-point@^1.0.0",
                  "_id": "is-fullwidth-code-point@1.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",
                  "_location": "/is-fullwidth-code-point",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",
                  "_shasum": "ef9e31386f031a7f0d643af82fde50c457ef00cb",
                  "_spec": "is-fullwidth-code-point@^1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/readline2",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Check if the character represented by a given Unicode code point is fullwidth",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/sindresorhus/is-fullwidth-code-point#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "name": "is-fullwidth-code-point",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.0.0",
                  "readme": "# is-fullwidth-code-point [![Build Status](https://travis-ci.org/sindresorhus/is-fullwidth-code-point.svg?branch=master)](https://travis-ci.org/sindresorhus/is-fullwidth-code-point)\n\n> Check if the character represented by a given [Unicode code point](https://en.wikipedia.org/wiki/Code_point) is [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms)\n\n\n## Install\n\n```\n$ npm install --save is-fullwidth-code-point\n```\n\n\n## Usage\n\n```js\nvar isFullwidthCodePoint = require('is-fullwidth-code-point');\n\nisFullwidthCodePoint('è°¢'.codePointAt());\n//=> true\n\nisFullwidthCodePoint('a'.codePointAt());\n//=> false\n```\n\n\n## API\n\n### isFullwidthCodePoint(input)\n\n#### input\n\nType: `number`\n\n[Code point](https://en.wikipedia.org/wiki/Code_point) of a character.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-fullwidth-code-point",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "is-fullwidth-code-point"
                },
                "strip-ansi": {
                  "_from": "strip-ansi@^3.0.0",
                  "_id": "strip-ansi@3.0.1",
                  "_inBundle": false,
                  "_integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
                  "_location": "/strip-ansi",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
                  "_shasum": "6a385fb8853d952d5ff05d0e8aaf94278dc63dcf",
                  "_spec": "strip-ansi@^3.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Strip ANSI escape codes",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "https://github.com/chalk/strip-ansi#readme",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "maintainers": "[Circular]",
                  "name": "strip-ansi",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "3.0.1",
                  "readme": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save strip-ansi\n```\n\n\n## Usage\n\n```js\nvar stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001b[4mcake\\u001b[0m');\n//=> 'cake'\n```\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/strip-ansi",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "strip-ansi"
                }
              },
              "deprecated": false,
              "description": "Get the visual width of a string - the number of columns required to display it",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/string-width#readme",
              "keywords": [
                "string",
                "str",
                "character",
                "char",
                "unicode",
                "width",
                "visual",
                "column",
                "columns",
                "fullwidth",
                "full-width",
                "full",
                "ansi",
                "escape",
                "codes",
                "cli",
                "command-line",
                "terminal",
                "console",
                "cjk",
                "chinese",
                "japanese",
                "korean",
                "fixed-width"
              ],
              "license": "MIT",
              "name": "string-width",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/string-width.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.2",
              "readme": "# string-width [![Build Status](https://travis-ci.org/sindresorhus/string-width.svg?branch=master)](https://travis-ci.org/sindresorhus/string-width)\n\n> Get the visual width of a string - the number of columns required to display it\n\nSome Unicode characters are [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) and use double the normal width. [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code) are stripped and doesn't affect the width.\n\nUseful to be able to measure the actual width of command-line output.\n\n\n## Install\n\n```\n$ npm install --save string-width\n```\n\n\n## Usage\n\n```js\nconst stringWidth = require('string-width');\n\nstringWidth('å¤');\n//=> 2\n\nstringWidth('\\u001b[1må¤\\u001b[22m');\n//=> 2\n\nstringWidth('a');\n//=> 1\n```\n\n\n## Related\n\n- [string-width-cli](https://github.com/sindresorhus/string-width-cli) - CLI for this module\n- [string-length](https://github.com/sindresorhus/string-length) - Get the real length of a string\n- [widest-line](https://github.com/sindresorhus/widest-line) - Get the visual width of the widest line in a string\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "code-point-at": "^1.0.0",
                "is-fullwidth-code-point": "^1.0.0",
                "strip-ansi": "^3.0.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/string-width",
              "error": "[Circular]",
              "extraneous": false
            },
            "strip-ansi": {
              "_from": "strip-ansi@^3.0.0",
              "_id": "strip-ansi@3.0.1",
              "_inBundle": false,
              "_integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",
              "_location": "/strip-ansi",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",
              "_shasum": "6a385fb8853d952d5ff05d0e8aaf94278dc63dcf",
              "_spec": "strip-ansi@^3.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Strip ANSI escape codes",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/chalk/strip-ansi#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "maintainers": "[Circular]",
              "name": "strip-ansi",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "3.0.1",
              "readme": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install --save strip-ansi\n```\n\n\n## Usage\n\n```js\nvar stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001b[4mcake\\u001b[0m');\n//=> 'cake'\n```\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/strip-ansi",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "strip-ansi"
            },
            "through": {
              "_from": "through@^2.3.6",
              "_id": "through@2.3.8",
              "_inBundle": false,
              "_integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=",
              "_location": "/through",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "through@^2.3.6",
                "name": "through",
                "escapedName": "through",
                "rawSpec": "^2.3.6",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.3.6"
              },
              "_requiredBy": [
                "/inquirer"
              ],
              "_resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",
              "_shasum": "0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5",
              "_spec": "through@^2.3.6",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
              "author": {
                "name": "Dominic Tarr",
                "email": "dominic.tarr@gmail.com",
                "url": "dominictarr.com"
              },
              "bugs": {
                "url": "https://github.com/dominictarr/through/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "simplified stream construction",
              "devDependencies": {
                "from": "~0.1.3",
                "stream-spec": "~0.3.5",
                "tape": "~2.3.2"
              },
              "homepage": "https://github.com/dominictarr/through",
              "keywords": [
                "stream",
                "streams",
                "user-streams",
                "pipe"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "through",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/dominictarr/through.git"
              },
              "scripts": {
                "test": "set -e; for t in test/*.js; do node $t; done"
              },
              "testling": {
                "browsers": [
                  "ie/8..latest",
                  "ff/15..latest",
                  "chrome/20..latest",
                  "safari/5.1..latest"
                ],
                "files": "test/*.js"
              },
              "version": "2.3.8",
              "readme": "#through\n\n[![build status](https://secure.travis-ci.org/dominictarr/through.png)](http://travis-ci.org/dominictarr/through)\n[![testling badge](https://ci.testling.com/dominictarr/through.png)](https://ci.testling.com/dominictarr/through)\n\nEasy way to create a `Stream` that is both `readable` and `writable`. \n\n* Pass in optional `write` and `end` methods.\n* `through` takes care of pause/resume logic if you use `this.queue(data)` instead of `this.emit('data', data)`.\n* Use `this.pause()` and `this.resume()` to manage flow.\n* Check `this.paused` to see current flow state. (`write` always returns `!this.paused`).\n\nThis function is the basis for most of the synchronous streams in \n[event-stream](http://github.com/dominictarr/event-stream).\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.queue(data) //data *must* not be null\n  },\n  function end () { //optional\n    this.queue(null)\n  })\n```\n\nOr, can also be used _without_ buffering on pause, use `this.emit('data', data)`,\nand this.emit('end')\n\n``` js\nvar through = require('through')\n\nthrough(function write(data) {\n    this.emit('data', data)\n    //this.pause() \n  },\n  function end () { //optional\n    this.emit('end')\n  })\n```\n\n## Extended Options\n\nYou will probably not need these 99% of the time.\n\n### autoDestroy=false\n\nBy default, `through` emits close when the writable\nand readable side of the stream has ended.\nIf that is not desired, set `autoDestroy=false`.\n\n``` js\nvar through = require('through')\n\n//like this\nvar ts = through(write, end, {autoDestroy: false})\n//or like this\nvar ts = through(write, end)\nts.autoDestroy = false\n```\n\n## License\n\nMIT / Apache2\n",
              "readmeFilename": "readme.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/through",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "A collection of common interactive command line user interfaces.",
          "devDependencies": {
            "chai": "^3.0.0",
            "cmdify": "^0.0.4",
            "grunt": "^0.4.1",
            "grunt-cli": "^0.1.8",
            "grunt-contrib-jshint": "^0.11.1",
            "grunt-mocha-test": "^0.12.7",
            "mocha": "^2.2.1",
            "mockery": "^1.4.0",
            "sinon": "^1.12.1"
          },
          "files": [
            "lib"
          ],
          "homepage": "https://github.com/SBoudrias/Inquirer.js#readme",
          "keywords": [
            "command",
            "prompt",
            "stdin",
            "cli",
            "tty",
            "menu"
          ],
          "license": "MIT",
          "main": "lib/inquirer.js",
          "name": "inquirer",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/SBoudrias/Inquirer.js.git"
          },
          "scripts": {
            "test": "grunt --verbose"
          },
          "version": "0.12.0",
          "readme": "Inquirer.js\n===========\n\n[![npm](https://badge.fury.io/js/inquirer.svg)](http://badge.fury.io/js/inquirer) [![tests](https://travis-ci.org/SBoudrias/Inquirer.js.svg?branch=master)](http://travis-ci.org/SBoudrias/Inquirer.js) [![dependencies](https://david-dm.org/SBoudrias/Inquirer.js.svg?theme=shields.io)](https://david-dm.org/SBoudrias/Inquirer.js)\n\nA collection of common interactive command line user interfaces.\n\n\n## Goal and Philosophy\n\n<img align=\"right\" alt=\"Inquirer Logo\" src=\"/assets/inquirer_readme.png\" title=\"Inquirer.js\"/>\n\n**`Inquirer.js`** strives to be an easily embeddable and beautiful command line interface for [Node.js](https://nodejs.org/) (and perhaps the \"CLI [Xanadu](https://en.wikipedia.org/wiki/Xanadu_(Citizen_Kane))\").\n\n**`Inquirer.js`** should ease the process of\n- providing *error feedback*\n- *asking questions*\n- *parsing* input\n- *validating* answers\n- managing *hierarchical prompts*\n\n> **Note:** **`Inquirer.js`** provides the user interface, and the inquiry session flow. If you're searching for a full blown command line program utility, then check out [Commander.js](https://github.com/visionmedia/commander.js) or [Vorpal.js](https://github.com/dthree/vorpal).\n\n\n## Documentation\n\n### Installation\n\n``` shell\nnpm install inquirer\n```\n\n```javascript\nvar inquirer = require(\"inquirer\");\ninquirer.prompt([/* Pass your questions in here */], function( answers ) {\n\t// Use user feedback for... whatever!!\n});\n```\n\n\n### Examples (Run it and see it)\nCheckout the `examples/` folder for code and interface examples.\n\n``` shell\nnode examples/pizza.js\nnode examples/checkbox.js\n# etc...\n```\n\n\n### Methods\n\n`inquirer.prompt( questions, callback )`\n\nLaunch the prompt interface (inquiry session)\n\n- **questions** (Array) containing [Question Object](#question) (using the [reactive interface](#reactive-interface), you can also pass a `Rx.Observable` instance)\n- **callback** (Function) first parameter is the [Answers Object](#answers)\n\n\n### Objects\n\n#### Question\nA question object is a `hash` containing question related values:\n\n- **type**: (String) Type of the prompt. Defaults: `input` - Possible values: `input`, `confirm`,\n`list`, `rawlist`, `password`\n- **name**: (String) The name to use when storing the answer in the answers hash.\n- **message**: (String|Function) The question to print. If defined as a function, the first parameter will be the current inquirer session answers.\n- **default**: (String|Number|Array|Function) Default value(s) to use if nothing is entered, or a function that returns the default value(s). If defined as a function, the first parameter will be the current inquirer session answers.\n- **choices**: (Array|Function) Choices array or a function returning a choices array. If defined as a function, the first parameter will be the current inquirer session answers.\nArray values can be simple `strings`, or `objects` containing a `name` (to display in list), a `value` (to save in the answers hash) and a `short` (to display after selection) properties. The choices array can also contain [a `Separator`](#separator).\n- **validate**: (Function) Receive the user input and should return `true` if the value is valid, and an error message (`String`) otherwise. If `false` is returned, a default error message is provided.\n- **filter**: (Function) Receive the user input and return the filtered value to be used inside the program. The value returned will be added to the _Answers_ hash.\n- **when**: (Function, Boolean) Receive the current user answers hash and should return `true` or `false` depending on whether or not this question should be asked. The value can also be a simple boolean.\n\n`default`, `choices`(if defined as functions), `validate`, `filter` and `when` functions can be called asynchronously using `this.async()`. You just have to pass the value you'd normally return to the callback option.\n\n``` javascript\n{\n  validate: function(input) {\n\n    // Declare function as asynchronous, and save the done callback\n    var done = this.async();\n\n    // Do async stuff\n    setTimeout(function() {\n      if (typeof input !== \"number\") {\n        // Pass the return value in the done callback\n        done(\"You need to provide a number\");\n        return;\n      }\n      // Pass the return value in the done callback\n      done(true);\n    }, 3000);\n  }\n}\n```\n\n### Answers\nA key/value hash containing the client answers in each prompt.\n\n- **Key** The `name` property of the _question_ object\n- **Value** (Depends on the prompt)\n  - `confirm`: (Boolean)\n  - `input` : User input (filtered if `filter` is defined) (String)\n  - `rawlist`, `list` : Selected choice value (or name if no value specified) (String)\n\n### Separator\nA separator can be added to any `choices` array:\n\n```\n// In the question object\nchoices: [ \"Choice A\", new inquirer.Separator(), \"choice B\" ]\n\n// Which'll be displayed this way\n[?] What do you want to do?\n > Order a pizza\n   Make a reservation\n   --------\n   Ask opening hours\n   Talk to the receptionist\n```\n\nThe constructor takes a facultative `String` value that'll be use as the separator. If omitted, the separator will be `--------`.\n\nSeparator instances have a property `type` equal to `separator`. This should allow tools faÃ§ading Inquirer interface from detecting separator types in lists.\n\nPrompts type\n---------------------\n\n> **Note:**: _allowed options written inside square brackets (`[]`) are optional. Others are required._\n\n#### List - `{ type: \"list\" }`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array or a choice `value`)\n\n![List prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/list-prompt.png)\n\n---\n\n#### Raw List - `{ type: \"rawlist\" }`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must the choice `index` in the array)\n\n![Raw list prompt](https://i.cloudup.com/LcRGpXI0CX-3000x3000.png)\n\n---\n\n#### Expand - `{ type: \"expand\" }`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array)\n\nNote that the `choices` object will take an extra parameter called `key` for the `expand` prompt. This parameter must be a single (lowercased) character. The `h` option is added by the prompt and shouldn't be defined by the user.\n\nSee `examples/expand.js` for a running example.\n\n![Expand prompt closed](https://dl.dropboxusercontent.com/u/59696254/inquirer/expand-prompt-1.png)\n![Expand prompt expanded](https://dl.dropboxusercontent.com/u/59696254/inquirer/expand-prompt-2.png)\n\n---\n\n#### Checkbox - `{ type: \"checkbox\" }`\n\nTake `type`, `name`, `message`, `choices`[, `filter`, `validate`, `default`] properties. `default` is expected to be an Array of the checked choices value.\n\nChoices marked as `{ checked: true }` will be checked by default.\n\nChoices whose property `disabled` is truthy will be unselectable. If `disabled` is a string, then the string will be outputted next to the disabled choice, otherwise it'll default to `\"Disabled\"`. The `disabled` property can also be a synchronous function receiving the current answers as argument and returning a boolean or a string.\n\n![Checkbox prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/checkbox-prompt.png)\n\n---\n\n#### Confirm - `{ type: \"confirm\" }`\n\nTake `type`, `name`, `message`[, `default`] properties. `default` is expected to be a boolean if used.\n\n![Confirm prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/confirm-prompt.png)\n\n---\n\n#### Input - `{ type: \"input\" }`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`] properties.\n\n![Input prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/input-prompt.png)\n\n---\n\n#### Password - `{ type: \"password\" }`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`] properties.\n\n![Password prompt](https://dl.dropboxusercontent.com/u/59696254/inquirer/password-prompt.png)\n\n## User Interfaces and layouts\n\nAlong with the prompts, Inquirer offers some basic text UI.\n\n#### Bottom Bar - `inquirer.ui.BottomBar`\n\nThis UI present a fixed text at the bottom of a free text zone. This is useful to keep a message to the bottom of the screen while outputting command outputs on the higher section.\n\n```javascript\nvar ui = new inquirer.ui.BottomBar();\n\n// pipe a Stream to the log zone\noutputStream.pipe( ui.log );\n\n// Or simply write output\nui.log.write(\"something just happened.\");\nui.log.write(\"Almost over, standby!\");\n\n// During processing, update the bottom bar content to display a loader\n// or output a progress bar, etc\nui.updateBottomBar(\"new bottom bar content\");\n```\n\n#### Prompt - `inquirer.ui.Prompt`\n\nThis is UI layout used to run prompt. This layout is returned by `inquirer.prompt` and you should probably always use `inquirer.prompt` to interface with this UI.\n\n\n## Reactive interface\n\nInternally, Inquirer uses the [JS reactive extension](https://github.com/Reactive-Extensions/RxJS) to handle events and async flows.\n\nThis mean you can take advantage of this feature to provide more advanced flows. For example, you can dynamically add questions to be asked:\n\n```js\nvar prompts = Rx.Observable.create(function( obs ) {\n  obs.onNext({ /* question... */ });\n  setTimeout(function () {\n    obs.onNext({ /* question... */ });\n    obs.onCompleted();\n  });\n});\n\ninquirer.prompt(prompts);\n```\n\nAnd using the `process` property, you have access to more fine grained callbacks:\n\n```js\ninquirer.prompt(prompts).process.subscribe(\n  onEachAnswer,\n  onError,\n  onComplete\n);\n```\n\n## Support (OS Terminals)\n\nYou should expect mostly good support for the CLI below. This does not mean we won't\nlook at issues found on other command line - feel free to report any!\n\n- **Mac OS**:\n  - Terminal.app\n  - iTerm\n- **Windows**:\n  - cmd.exe\n  - Powershell\n  - Cygwin\n- **Linux (Ubuntu, openSUSE, Arch Linux, etc)**:\n  - gnome-terminal (Terminal GNOME)\n  - konsole\n\n\n## News on the march (Release notes)\n\nPlease refer to the [Github releases section for the changelog](https://github.com/SBoudrias/Inquirer.js/releases)\n\n\n## Contributing\n\n**Style Guide**\nPlease brief yourself on [Idiomatic.js](https://github.com/rwldrn/idiomatic.js) style guide with two space indent\n\n**Unit test**\nUnit test are written in [Mocha](https://mochajs.org/). Please add a unit test for every new feature or bug fix. `npm test` to run the test suite.\n\n**Documentation**\nAdd documentation for every API change. Feel free to send corrections\nor better docs!\n\n**Pull Requests**\nSend _fixes_ PR on the `master` branch. Any new features should be send on the `wip`branch.\n\nWe're looking to offer good support for multiple prompts and environments. If you want to\nhelp, we'd like to keep a list of testers for each terminal/OS so we can contact you and\nget feedback before release. Let us know if you want to be added to the list (just tweet\nto @vaxilart) or just add your name to [the wiki](https://github.com/SBoudrias/Inquirer.js/wiki/Testers)\n\n## License\n\nCopyright (c) 2015 Simon Boudrias (twitter: @vaxilart)\nLicensed under the MIT license.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "ansi-escapes": "^1.1.0",
            "ansi-regex": "^2.0.0",
            "chalk": "^1.0.0",
            "cli-cursor": "^1.0.1",
            "cli-width": "^2.0.0",
            "figures": "^1.3.5",
            "lodash": "^4.3.0",
            "readline2": "^1.0.1",
            "run-async": "^0.1.0",
            "rx-lite": "^3.1.2",
            "string-width": "^1.0.1",
            "strip-ansi": "^3.0.0",
            "through": "^2.3.6"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/inquirer",
          "error": "[Circular]",
          "extraneous": false
        },
        "is-my-json-valid": {
          "_from": "is-my-json-valid@^2.10.0",
          "_id": "is-my-json-valid@2.16.0",
          "_inBundle": false,
          "_integrity": "sha1-8Hndm/2uZe4gOKrorLyGqxCeNpM=",
          "_location": "/is-my-json-valid",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "is-my-json-valid@^2.10.0",
            "name": "is-my-json-valid",
            "escapedName": "is-my-json-valid",
            "rawSpec": "^2.10.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^2.10.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/is-my-json-valid/-/is-my-json-valid-2.16.0.tgz",
          "_shasum": "f079dd9bfdae65ee2038aae8acbc86ab109e3693",
          "_spec": "is-my-json-valid@^2.10.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Mathias Buus"
          },
          "bugs": {
            "url": "https://github.com/mafintosh/is-my-json-valid/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "generate-function": {
              "_from": "generate-function@^2.0.0",
              "_id": "generate-function@2.0.0",
              "_inBundle": false,
              "_integrity": "sha1-aFj+fAlpt9TpCTM3ZHrHn2DfvnQ=",
              "_location": "/generate-function",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "generate-function@^2.0.0",
                "name": "generate-function",
                "escapedName": "generate-function",
                "rawSpec": "^2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.0"
              },
              "_requiredBy": [
                "/is-my-json-valid"
              ],
              "_resolved": "https://registry.npmjs.org/generate-function/-/generate-function-2.0.0.tgz",
              "_shasum": "6858fe7c0969b7d4e9093337647ac79f60dfbe74",
              "_spec": "generate-function@^2.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-my-json-valid",
              "author": {
                "name": "Mathias Buus"
              },
              "bugs": {
                "url": "https://github.com/mafintosh/generate-function/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Module that helps you write generated functions in Node",
              "devDependencies": {
                "tape": "^2.13.4"
              },
              "homepage": "https://github.com/mafintosh/generate-function",
              "keywords": [
                "generate",
                "code",
                "generation",
                "function",
                "performance"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "generate-function",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/mafintosh/generate-function.git"
              },
              "scripts": {
                "test": "tape test.js"
              },
              "version": "2.0.0",
              "readme": "# generate-function\n\nModule that helps you write generated functions in Node\n\n```\nnpm install generate-function\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/generate-function.svg?style=flat)](http://travis-ci.org/mafintosh/generate-function)\n\n## Disclamer\n\nWriting code that generates code is hard.\nYou should only use this if you really, really, really need this for performance reasons (like schema validators / parsers etc).\n\n## Usage\n\n``` js\nvar genfun = require('generate-function')\n\nvar addNumber = function(val) {\n  var fn = genfun()\n    ('function add(n) {')\n      ('return n + %d', val) // supports format strings to insert values\n    ('}')\n\n  return fn.toFunction() // will compile the function\n}\n\nvar add2 = addNumber(2)\n\nconsole.log('1+2=', add2(1))\nconsole.log(add2.toString()) // prints the generated function\n```\n\nIf you need to close over variables in your generated function pass them to `toFunction(scope)`\n\n``` js\nvar multiply = function(a, b) {\n  return a * b\n}\n\nvar addAndMultiplyNumber = function(val) {\n  var fn = genfun()\n    ('function(n) {')\n      ('if (typeof n !== \"number\") {') // ending a line with { will indent the source\n        ('throw new Error(\"argument should be a number\")')\n      ('}')\n      ('var result = multiply(%d, n+%d)', val, val)\n      ('return result')\n    ('}')\n\n  // use fn.toString() if you want to see the generated source\n\n  return fn.toFunction({\n    multiply: multiply\n  })\n}\n\nvar addAndMultiply2 = addAndMultiplyNumber(2)\n\nconsole.log('(3 + 2) * 2 =', addAndMultiply2(3))\n```\n\n## Related\n\nSee [generate-object-property](https://github.com/mafintosh/generate-object-property) if you need to safely generate code that\ncan be used to reference an object property\n\n## License\n\nMIT",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/generate-function",
              "error": "[Circular]",
              "extraneous": false
            },
            "generate-object-property": {
              "_from": "generate-object-property@^1.1.0",
              "_id": "generate-object-property@1.2.0",
              "_inBundle": false,
              "_integrity": "sha1-nA4cQDCM6AT0eDYYuTf6iPmdUNA=",
              "_location": "/generate-object-property",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "generate-object-property@^1.1.0",
                "name": "generate-object-property",
                "escapedName": "generate-object-property",
                "rawSpec": "^1.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.1.0"
              },
              "_requiredBy": [
                "/is-my-json-valid"
              ],
              "_resolved": "https://registry.npmjs.org/generate-object-property/-/generate-object-property-1.2.0.tgz",
              "_shasum": "9c0e1c40308ce804f4783618b937fa88f99d50d0",
              "_spec": "generate-object-property@^1.1.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-my-json-valid",
              "author": {
                "name": "Mathias Buus",
                "url": "@mafintosh"
              },
              "bugs": {
                "url": "https://github.com/mafintosh/generate-object-property/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "is-property": {
                  "_from": "is-property@^1.0.0",
                  "_id": "is-property@1.0.2",
                  "_inBundle": false,
                  "_integrity": "sha1-V/4cTkhHTt1lsJkR8msc1Ald2oQ=",
                  "_location": "/is-property",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "is-property@^1.0.0",
                    "name": "is-property",
                    "escapedName": "is-property",
                    "rawSpec": "^1.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^1.0.0"
                  },
                  "_requiredBy": [
                    "/generate-object-property"
                  ],
                  "_resolved": "https://registry.npmjs.org/is-property/-/is-property-1.0.2.tgz",
                  "_shasum": "57fe1c4e48474edd65b09911f26b1cd4095dda84",
                  "_spec": "is-property@^1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/generate-object-property",
                  "author": {
                    "name": "Mikola Lysenko"
                  },
                  "bugs": {
                    "url": "https://github.com/mikolalysenko/is-property/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "Tests if a JSON property can be accessed using . syntax",
                  "devDependencies": {
                    "tape": "~1.0.4"
                  },
                  "directories": {
                    "test": "test"
                  },
                  "gitHead": "0a85ea5b6b1264ea1cdecc6e5cf186adbb3ffc50",
                  "homepage": "https://github.com/mikolalysenko/is-property#readme",
                  "keywords": [
                    "is",
                    "property",
                    "json",
                    "dot",
                    "bracket",
                    ".",
                    "[]"
                  ],
                  "license": "MIT",
                  "main": "is-property.js",
                  "name": "is-property",
                  "repository": {
                    "type": "git",
                    "url": "git://github.com/mikolalysenko/is-property.git"
                  },
                  "scripts": {
                    "test": "tap test/*.js"
                  },
                  "version": "1.0.2",
                  "readme": "is-property\n===========\nTests if a property of a JavaScript object can be accessed using the dot (.) notation or if it must be enclosed in brackets, (ie use x[\" ... \"])\n\nExample\n-------\n\n```javascript\nvar isProperty = require(\"is-property\")\n\nconsole.log(isProperty(\"foo\"))  //Prints true\nconsole.log(isProperty(\"0\"))    //Prints false\n```\n\nInstall\n-------\n\n    npm install is-property\n    \n### `require(\"is-property\")(str)`\nChecks if str is a property\n\n* `str` is a string which we will test if it is a property or not\n\n**Returns** true or false depending if str is a property\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License",
                  "readmeFilename": "README.md",
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-property",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Generate safe JS code that can used to reference a object property",
              "devDependencies": {
                "tape": "^2.13.0"
              },
              "homepage": "https://github.com/mafintosh/generate-object-property",
              "license": "MIT",
              "main": "index.js",
              "name": "generate-object-property",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/mafintosh/generate-object-property.git"
              },
              "scripts": {
                "test": "tape test.js"
              },
              "version": "1.2.0",
              "readme": "# generate-object-property\n\nGenerate safe JS code that can used to reference a object property\n\n\tnpm install generate-object-property\n\n[![build status](http://img.shields.io/travis/mafintosh/generate-object-property.svg?style=flat)](http://travis-ci.org/mafintosh/generate-object-property)\n\n## Usage\n\n``` js\nvar gen = require('generate-object-property');\nconsole.log(gen('a','b')); // prints a.b\nconsole.log(gen('a', 'foo-bar')); // prints a[\"foo-bar\"]\n```\n\n## License\n\nMIT",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "is-property": "^1.0.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/generate-object-property",
              "error": "[Circular]",
              "extraneous": false
            },
            "jsonpointer": {
              "_from": "jsonpointer@^4.0.0",
              "_id": "jsonpointer@4.0.1",
              "_inBundle": false,
              "_integrity": "sha1-T9kss04OnbPInIYi7PUfm5eMbLk=",
              "_location": "/jsonpointer",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "jsonpointer@^4.0.0",
                "name": "jsonpointer",
                "escapedName": "jsonpointer",
                "rawSpec": "^4.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^4.0.0"
              },
              "_requiredBy": [
                "/is-my-json-valid"
              ],
              "_resolved": "https://registry.npmjs.org/jsonpointer/-/jsonpointer-4.0.1.tgz",
              "_shasum": "4fd92cb34e0e9db3c89c8622ecf51f9b978c6cb9",
              "_spec": "jsonpointer@^4.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-my-json-valid",
              "author": {
                "name": "Jan Lehnardt",
                "email": "jan@apache.org"
              },
              "bugs": {
                "url": "http://github.com/janl/node-jsonpointer/issues"
              },
              "bundleDependencies": false,
              "contributors": [
                {
                  "name": "Joe Hildebrand",
                  "email": "joe-github@cursive.net"
                },
                {
                  "name": "Marc Bachmann",
                  "email": "marc.brookman@gmail.com"
                }
              ],
              "deprecated": false,
              "description": "Simple JSON Addressing.",
              "devDependencies": {
                "standard": "^5.3.1"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "jsonpointer.js"
              ],
              "homepage": "https://github.com/janl/node-jsonpointer#readme",
              "license": "MIT",
              "main": "./jsonpointer",
              "name": "jsonpointer",
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/janl/node-jsonpointer.git"
              },
              "scripts": {
                "test": "standard && node test.js"
              },
              "tags": [
                "util",
                "simple",
                "util",
                "utility"
              ],
              "version": "4.0.1",
              "readme": "# JSON Pointer for nodejs\n\nThis is an implementation of [JSON Pointer](http://tools.ietf.org/html/draft-ietf-appsawg-json-pointer-08).\n\n## Usage\n```javascript\nvar jsonpointer = require('jsonpointer');\nvar obj = { foo: 1, bar: { baz: 2}, qux: [3, 4, 5]};\n\njsonpointer.get(obj, '/foo');     // returns 1\njsonpointer.get(obj, '/bar/baz'); // returns 2\njsonpointer.get(obj, '/qux/0');   // returns 3\njsonpointer.get(obj, '/qux/1');   // returns 4\njsonpointer.get(obj, '/qux/2');   // returns 5\njsonpointer.get(obj, '/quo');     // returns undefined\n\njsonpointer.set(obj, '/foo', 6);  // sets obj.foo = 6;\njsonpointer.set(obj, '/qux/-', 6) // sets obj.qux = [3, 4, 5, 6]\n\nvar pointer = jsonpointer.compile('/foo')\npointer.get(obj)    // returns 1\npointer.set(obj, 1) // sets obj.foo = 1\n```\n\n## Testing\n\n    $ node test.js\n    All tests pass.\n    $\n\n[![Build Status](https://travis-ci.org/janl/node-jsonpointer.png?branch=master)](https://travis-ci.org/janl/node-jsonpointer)\n\n## Author\n\n(c) 2011-2015 Jan Lehnardt <jan@apache.org> & Marc Bachmann <https://github.com/marcbachmann>\n\n## License\n\nMIT License.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/jsonpointer",
              "error": "[Circular]",
              "extraneous": false
            },
            "xtend": {
              "_from": "xtend@^4.0.0",
              "_id": "xtend@4.0.1",
              "_inBundle": false,
              "_integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68=",
              "_location": "/xtend",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "xtend@^4.0.0",
                "name": "xtend",
                "escapedName": "xtend",
                "rawSpec": "^4.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^4.0.0"
              },
              "_requiredBy": [
                "/is-my-json-valid"
              ],
              "_resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",
              "_shasum": "a5c6d532be656e23db820efb943a1f04998d63af",
              "_spec": "xtend@^4.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-my-json-valid",
              "author": {
                "name": "Raynos",
                "email": "raynos2@gmail.com"
              },
              "bugs": {
                "url": "https://github.com/Raynos/xtend/issues",
                "email": "raynos2@gmail.com"
              },
              "bundleDependencies": false,
              "contributors": [
                {
                  "name": "Jake Verbaten"
                },
                {
                  "name": "Matt Esch"
                }
              ],
              "dependencies": {},
              "deprecated": false,
              "description": "extend like a boss",
              "devDependencies": {
                "tape": "~1.1.0"
              },
              "engines": {
                "node": ">=0.4"
              },
              "homepage": "https://github.com/Raynos/xtend",
              "keywords": [
                "extend",
                "merge",
                "options",
                "opts",
                "object",
                "array"
              ],
              "license": "MIT",
              "main": "immutable",
              "name": "xtend",
              "repository": {
                "type": "git",
                "url": "git://github.com/Raynos/xtend.git"
              },
              "scripts": {
                "test": "node test"
              },
              "testling": {
                "files": "test.js",
                "browsers": [
                  "ie/7..latest",
                  "firefox/16..latest",
                  "firefox/nightly",
                  "chrome/22..latest",
                  "chrome/canary",
                  "opera/12..latest",
                  "opera/next",
                  "safari/5.1..latest",
                  "ipad/6.0..latest",
                  "iphone/6.0..latest"
                ]
              },
              "version": "4.0.1",
              "readme": "# xtend\n\n[![browser support][3]][4]\n\n[![locked](http://badges.github.io/stability-badges/dist/locked.svg)](http://github.com/badges/stability-badges)\n\nExtend like a boss\n\nxtend is a basic utility library which allows you to extend an object by appending all of the properties from each object in a list. When there are identical properties, the right-most property takes precedence.\n\n## Examples\n\n```js\nvar extend = require(\"xtend\")\n\n// extend returns a new object. Does not mutate arguments\nvar combination = extend({\n    a: \"a\",\n    b: 'c'\n}, {\n    b: \"b\"\n})\n// { a: \"a\", b: \"b\" }\n```\n\n## Stability status: Locked\n\n## MIT Licenced\n\n\n  [3]: http://ci.testling.com/Raynos/xtend.png\n  [4]: http://ci.testling.com/Raynos/xtend\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/xtend",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "A JSONSchema validator that uses code generation to be extremely fast",
          "devDependencies": {
            "tape": "^2.13.4"
          },
          "homepage": "https://github.com/mafintosh/is-my-json-valid",
          "keywords": [
            "json",
            "schema",
            "orderly",
            "jsonschema"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "is-my-json-valid",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/mafintosh/is-my-json-valid.git"
          },
          "scripts": {
            "test": "tape test/*.js"
          },
          "version": "2.16.0",
          "readme": "# is-my-json-valid\n\nA [JSONSchema](http://json-schema.org/) validator that uses code generation\nto be extremely fast\n\n```\nnpm install is-my-json-valid\n```\n\nIt passes the entire JSONSchema v4 test suite except for `remoteRefs` and `maxLength`/`minLength` when using unicode surrogate pairs.\n\n[![build status](http://img.shields.io/travis/mafintosh/is-my-json-valid.svg?style=flat)](http://travis-ci.org/mafintosh/is-my-json-valid)\n\n## Usage\n\nSimply pass a schema to compile it\n\n``` js\nvar validator = require('is-my-json-valid')\n\nvar validate = validator({\n  required: true,\n  type: 'object',\n  properties: {\n    hello: {\n      required: true,\n      type: 'string'\n    }\n  }\n})\n\nconsole.log('should be valid', validate({hello: 'world'}))\nconsole.log('should not be valid', validate({}))\n\n// get the last list of errors by checking validate.errors\n// the following will print [{field: 'data.hello', message: 'is required'}]\nconsole.log(validate.errors)\n```\n\nYou can also pass the schema as a string\n\n``` js\nvar validate = validator('{\"type\": ... }')\n```\n\nOptionally you can use the require submodule to load a schema from `__dirname`\n\n``` js\nvar validator = require('is-my-json-valid/require')\nvar validate = validator('my-schema.json')\n```\n\n## Custom formats\n\nis-my-json-valid supports the formats specified in JSON schema v4 (such as date-time).\nIf you want to add your own custom formats pass them as the formats options to the validator\n\n``` js\nvar validate = validator({\n  type: 'string',\n  required: true,\n  format: 'only-a'\n}, {\n  formats: {\n    'only-a': /^a+$/\n  }\n})\n\nconsole.log(validate('aa')) // true\nconsole.log(validate('ab')) // false\n```\n\n## External schemas\n\nYou can pass in external schemas that you reference using the `$ref` attribute as the `schemas` option\n\n``` js\nvar ext = {\n  required: true,\n  type: 'string'\n}\n\nvar schema = {\n  $ref: '#ext' // references another schema called ext\n}\n\n// pass the external schemas as an option\nvar validate = validator(schema, {schemas: {ext: ext}})\n\nvalidate('hello') // returns true\nvalidate(42) // return false\n```\n\n## Filtering away additional properties\n\nis-my-json-valid supports filtering away properties not in the schema\n\n``` js\nvar filter = validator.filter({\n  required: true,\n  type: 'object',\n  properties: {\n    hello: {type: 'string', required: true}\n  },\n  additionalProperties: false\n})\n\nvar doc = {hello: 'world', notInSchema: true}\nconsole.log(filter(doc)) // {hello: 'world'}\n```\n\n## Verbose mode outputs the value on errors\n\nis-my-json-valid outputs the value causing an error when verbose is set to true\n\n``` js\nvar validate = validator({\n  required: true,\n  type: 'object',\n  properties: {\n    hello: {\n      required: true,\n      type: 'string'\n    }\n  }\n}, {\n  verbose: true\n})\n\nvalidate({hello: 100});\nconsole.log(validate.errors) // {field: 'data.hello', message: 'is the wrong type', value: 100, type: 'string'}\n```\n\n## Greedy mode tries to validate as much as possible\n\nBy default is-my-json-valid bails on first validation error but when greedy is\nset to true it tries to validate as much as possible:\n\n``` js\nvar validate = validator({\n  type: 'object',\n  properties: {\n    x: {\n      type: 'number'\n    }\n  },\n  required: ['x', 'y']\n}, {\n  greedy: true\n});\n\nvalidate({x: 'string'});\nconsole.log(validate.errors) // [{field: 'data.y', message: 'is required'},\n                             //  {field: 'data.x', message: 'is the wrong type'}]\n```\n\n## Error messages\n\nHere is a list of possible `message` values for errors:\n\n* `is required`\n* `is the wrong type`\n* `has additional items`\n* `must be FORMAT format` (FORMAT is the `format` property from the schema)\n* `must be unique`\n* `must be an enum value`\n* `dependencies not set`\n* `has additional properties`\n* `referenced schema does not match`\n* `negative schema matches`\n* `pattern mismatch`\n* `no schemas match`\n* `no (or more than one) schemas match`\n* `has a remainder`\n* `has more properties than allowed`\n* `has less properties than allowed`\n* `has more items than allowed`\n* `has less items than allowed`\n* `has longer length than allowed`\n* `has less length than allowed`\n* `is less than minimum`\n* `is more than maximum`\n\n## Performance\n\nis-my-json-valid uses code generation to turn your JSON schema into basic javascript code that is easily optimizeable by v8.\n\nAt the time of writing, is-my-json-valid is the __fastest validator__ when running\n\n* [json-schema-benchmark](https://github.com/Muscula/json-schema-benchmark)\n* [cosmicreals.com benchmark](http://cosmicrealms.com/blog/2014/08/29/benchmark-of-node-dot-js-json-validation-modules-part-3/)\n* [jsck benchmark](https://github.com/pandastrike/jsck/issues/72#issuecomment-70992684)\n* [themis benchmark](https://cdn.rawgit.com/playlyfe/themis/master/benchmark/results.html)\n* [z-schema benchmark](https://rawgit.com/zaggino/z-schema/master/benchmark/results.html)\n\nIf you know any other relevant benchmarks open a PR and I'll add them.\n\n## License\n\nMIT\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "generate-function": "^2.0.0",
            "generate-object-property": "^1.1.0",
            "jsonpointer": "^4.0.0",
            "xtend": "^4.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-my-json-valid",
          "error": "[Circular]",
          "extraneous": false
        },
        "is-resolvable": {
          "_from": "is-resolvable@^1.0.0",
          "_id": "is-resolvable@1.0.0",
          "_inBundle": false,
          "_integrity": "sha1-jfV8YeouPFAUCNEA+wE8+NbgzGI=",
          "_location": "/is-resolvable",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "is-resolvable@^1.0.0",
            "name": "is-resolvable",
            "escapedName": "is-resolvable",
            "rawSpec": "^1.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.0.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.0.0.tgz",
          "_shasum": "8df57c61ea2e3c501408d100fb013cf8d6e0cc62",
          "_spec": "is-resolvable@^1.0.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Shinnosuke Watanabe",
            "url": "https://github.com/shinnn"
          },
          "bugs": {
            "url": "https://github.com/shinnn/is-resolvable/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "tryit": {
              "_from": "tryit@^1.0.1",
              "_id": "tryit@1.0.3",
              "_inBundle": false,
              "_integrity": "sha1-OTvnMKlEb9Hq1tpZoBQwjzbCics=",
              "_location": "/tryit",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "tryit@^1.0.1",
                "name": "tryit",
                "escapedName": "tryit",
                "rawSpec": "^1.0.1",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.1"
              },
              "_requiredBy": [
                "/is-resolvable"
              ],
              "_resolved": "https://registry.npmjs.org/tryit/-/tryit-1.0.3.tgz",
              "_shasum": "393be730a9446fd1ead6da59a014308f36c289cb",
              "_spec": "tryit@^1.0.1",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-resolvable",
              "author": {
                "name": "Henrik Joreteg",
                "email": "henrik@andyet.net"
              },
              "bugs": {
                "url": "https://github.com/HenrikJoreteg/tryit/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Module to wrap try-catch for better performance and cleaner API.",
              "devDependencies": {
                "tap-spec": "^2.1.2",
                "tape": "^3.0.3"
              },
              "files": [
                "tryit.js"
              ],
              "homepage": "https://github.com/HenrikJoreteg/tryit#readme",
              "keywords": [
                "errors",
                "try",
                "errorhandling"
              ],
              "license": "MIT",
              "main": "tryit.js",
              "name": "tryit",
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/HenrikJoreteg/tryit.git"
              },
              "scripts": {
                "test": "node test/test.js | tap-spec"
              },
              "version": "1.0.3",
              "readme": "# tryit\n\nTiny module wrapping try/catch in JavaScript. \n\nIt's *literally 11 lines of code*, [just read it](tryit.js) that's all the documentation you'll need.\n\n\n## install\n\n```\nnpm install tryit\n```\n\n## usage \n\nWhat you'd normally do:\n```js\ntry {\n    dangerousThing();\n} catch (e) {\n    console.log('something');\n}\n```\n\nWith try-it (all it does is wrap try-catch)\n```js\nvar tryit = require('tryit');\n\ntryit(dangerousThing);\n```\n\nYou can also handle the error by passing a second function\n```js\ntryit(dangerousThing, function (e) {\n    if (e) {\n        console.log('do something');\n    }\n})\n```\n\nThe second function follows error-first pattern common in node. So if you pass a callback it gets called in both cases. But will have an error as the first argument if it fails.\n\n## WHAT? WHY DO THIS!? \n\nPrimary motivation is having a clean way to wrap things that might fail, where I don't care if it fails. I just want to try it. \n\nThis includes stuff like blindly reading/parsing stuff from localStorage in the browser. If it's not there or if parsing it fails, that's fine. But I don't want to leave a bunch of empty `catch (e) {}` blocks in the code.\n\nObviously, this is useful any time you're going to attempt to read some unknown data structure.\n\nIn addition, my understanding is that it's hard for JS engines to optimize code in try blocks. By actually passing the code to be executed into a re-used try block, we can avoid having to have more than a single try block in our app. Again, this is not a primary motivation, just a potential side benefit. \n\n\n## license\n\n[MIT](http://mit.joreteg.com/)\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/tryit",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Check if a module ID is resolvable with require()",
          "devDependencies": {
            "@shinnn/eslintrc-node": "^1.0.2",
            "eslint": "^0.24.0",
            "istanbul": "^0.3.17",
            "tape": "^4.0.0"
          },
          "files": [
            "index.js"
          ],
          "homepage": "https://github.com/shinnn/is-resolvable#readme",
          "keywords": [
            "read",
            "file",
            "font",
            "glyph",
            "code-point",
            "unicode",
            "parse",
            "cmap",
            "table",
            "data",
            "metadata"
          ],
          "license": "MIT",
          "name": "is-resolvable",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/shinnn/is-resolvable.git"
          },
          "scripts": {
            "coverage": "istanbul cover test.js",
            "pretest": "eslint --config node_modules/@shinnn/eslintrc-node/rc.json index.js test.js",
            "test": "node test.js"
          },
          "version": "1.0.0",
          "readme": "# is-resolvable\n\n[![NPM version](https://img.shields.io/npm/v/is-resolvable.svg)](https://www.npmjs.com/package/is-resolvable)\n[![Build Status](https://travis-ci.org/shinnn/is-resolvable.svg?branch=master)](https://travis-ci.org/shinnn/is-resolvable)\n[![Build status](https://ci.appveyor.com/api/projects/status/ww1cdpignehlasbs?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/is-resolvable)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/is-resolvable.svg)](https://coveralls.io/r/shinnn/is-resolvable)\n[![Dependency Status](https://img.shields.io/david/shinnn/is-resolvable.svg?label=deps)](https://david-dm.org/shinnn/is-resolvable)\n[![devDependency Status](https://img.shields.io/david/dev/shinnn/is-resolvable.svg?label=devDeps)](https://david-dm.org/shinnn/is-resolvable#info=devDependencies)\n\nA [Node](https://nodejs.org/) module to check if a module ID is resolvable with [`require()`](https://nodejs.org/api/globals.html#globals_require)\n\n```javascript\nconst isResolvable = require('is-resolvable');\n\nisResolvable('fs'); //=> true\nisResolvable('path'); //=> true\n\n// When `./index.js` exists\nisResolvable('./index.js') //=> true\nisResolvable('./index') //=> true\nisResolvable('.') //=> true\n```\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```\nnpm install is-resolvable\n```\n\n## API\n\n```javascript\nconst isResolvable = require('is-resolvable');\n```\n\n### isResolvable(*moduleId*)\n\n*moduleId*: `String` (module ID)  \nReturn: `Boolean`\n\nIt returns `true` if `require()` can load a file form a given module ID, otherwise `false`.\n\n```javascript\nconst isResolvable = require('is-resolvable');\n\n// When `./foo.json` exists\nisResolvable('./foo.json'); //=> true\nisResolvable('./foo'); //=> true\n\nisResolvable('./foo.js'); //=> false\n\n\n// When `lodash` module is installed but `underscore` isn't\nisResolvable('lodash'); //=> true\nisResolvable('underscore'); //=> false\n\n// When `readable-stream` module is installed\nisResolvable('readable-stream/readable'); //=> true\nisResolvable('readable-stream/writable'); //=> true\n```\n\n## License\n\nCopyright (c) 2014 - 2015 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "tryit": "^1.0.1"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/is-resolvable",
          "error": "[Circular]",
          "extraneous": false
        },
        "js-yaml": {
          "_from": "js-yaml@^3.5.1",
          "_id": "js-yaml@3.9.1",
          "_inBundle": false,
          "_integrity": "sha512-CbcG379L1e+mWBnLvHWWeLs8GyV/EMw862uLI3c+GxVyDHWZcjZinwuBd3iW2pgxgIlksW/1vNJa4to+RvDOww==",
          "_location": "/js-yaml",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "js-yaml@^3.5.1",
            "name": "js-yaml",
            "escapedName": "js-yaml",
            "rawSpec": "^3.5.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "^3.5.1"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.9.1.tgz",
          "_shasum": "08775cebdfdd359209f0d2acd383c8f86a6904a0",
          "_spec": "js-yaml@^3.5.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Vladimir Zapparov",
            "email": "dervus.grim@gmail.com"
          },
          "bin": {
            "js-yaml": "bin/js-yaml.js"
          },
          "bugs": {
            "url": "https://github.com/nodeca/js-yaml/issues"
          },
          "bundleDependencies": false,
          "contributors": [
            {
              "name": "Aleksey V Zapparov",
              "email": "ixti@member.fsf.org",
              "url": "http://www.ixti.net/"
            },
            {
              "name": "Vitaly Puzrin",
              "email": "vitaly@rcdesign.ru",
              "url": "https://github.com/puzrin"
            },
            {
              "name": "Martin Grenfell",
              "email": "martin.grenfell@gmail.com",
              "url": "http://got-ravings.blogspot.com"
            }
          ],
          "dependencies": {
            "argparse": {
              "_from": "argparse@^1.0.7",
              "_id": "argparse@1.0.9",
              "_inBundle": false,
              "_integrity": "sha1-c9g7wmP4bpf4zE9rrhsOkKfSLIY=",
              "_location": "/argparse",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "argparse@^1.0.7",
                "name": "argparse",
                "escapedName": "argparse",
                "rawSpec": "^1.0.7",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.7"
              },
              "_requiredBy": [
                "/js-yaml"
              ],
              "_resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.9.tgz",
              "_shasum": "73d83bc263f86e97f8cc4f6bae1b0e90a7d22c86",
              "_spec": "argparse@^1.0.7",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/js-yaml",
              "bugs": {
                "url": "https://github.com/nodeca/argparse/issues"
              },
              "bundleDependencies": false,
              "contributors": [
                {
                  "name": "Eugene Shkuropat"
                },
                {
                  "name": "Paul Jacobson"
                }
              ],
              "dependencies": {
                "sprintf-js": {
                  "_from": "sprintf-js@~1.0.2",
                  "_id": "sprintf-js@1.0.3",
                  "_inBundle": false,
                  "_integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",
                  "_location": "/sprintf-js",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "sprintf-js@~1.0.2",
                    "name": "sprintf-js",
                    "escapedName": "sprintf-js",
                    "rawSpec": "~1.0.2",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "~1.0.2"
                  },
                  "_requiredBy": [
                    "/argparse"
                  ],
                  "_resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
                  "_shasum": "04e6926f662895354f3dd015203633b857297e2c",
                  "_spec": "sprintf-js@~1.0.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/argparse",
                  "author": {
                    "name": "Alexandru Marasteanu",
                    "email": "hello@alexei.ro",
                    "url": "http://alexei.ro/"
                  },
                  "bugs": {
                    "url": "https://github.com/alexei/sprintf.js/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "JavaScript sprintf implementation",
                  "devDependencies": {
                    "grunt": "*",
                    "grunt-contrib-uglify": "*",
                    "grunt-contrib-watch": "*",
                    "mocha": "*"
                  },
                  "homepage": "https://github.com/alexei/sprintf.js#readme",
                  "license": "BSD-3-Clause",
                  "main": "src/sprintf.js",
                  "name": "sprintf-js",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/alexei/sprintf.js.git"
                  },
                  "scripts": {
                    "test": "mocha test/test.js"
                  },
                  "version": "1.0.3",
                  "readme": "# sprintf.js\n**sprintf.js** is a complete open source JavaScript sprintf implementation for the *browser* and *node.js*.\n\nIts prototype is simple:\n\n    string sprintf(string format , [mixed arg1 [, mixed arg2 [ ,...]]])\n\nThe placeholders in the format string are marked by `%` and are followed by one or more of these elements, in this order:\n\n* An optional number followed by a `$` sign that selects which argument index to use for the value. If not specified, arguments will be placed in the same order as the placeholders in the input string.\n* An optional `+` sign that forces to preceed the result with a plus or minus sign on numeric values. By default, only the `-` sign is used on negative numbers.\n* An optional padding specifier that says what character to use for padding (if specified). Possible values are `0` or any other character precedeed by a `'` (single quote). The default is to pad with *spaces*.\n* An optional `-` sign, that causes sprintf to left-align the result of this placeholder. The default is to right-align the result.\n* An optional number, that says how many characters the result should have. If the value to be returned is shorter than this number, the result will be padded. When used with the `j` (JSON) type specifier, the padding length specifies the tab size used for indentation.\n* An optional precision modifier, consisting of a `.` (dot) followed by a number, that says how many digits should be displayed for floating point numbers. When used with the `g` type specifier, it specifies the number of significant digits. When used on a string, it causes the result to be truncated.\n* A type specifier that can be any of:\n    * `%` â yields a literal `%` character\n    * `b` â yields an integer as a binary number\n    * `c` â yields an integer as the character with that ASCII value\n    * `d` or `i` â yields an integer as a signed decimal number\n    * `e` â yields a float using scientific notation\n    * `u` â yields an integer as an unsigned decimal number\n    * `f` â yields a float as is; see notes on precision above\n    * `g` â yields a float as is; see notes on precision above\n    * `o` â yields an integer as an octal number\n    * `s` â yields a string as is\n    * `x` â yields an integer as a hexadecimal number (lower-case)\n    * `X` â yields an integer as a hexadecimal number (upper-case)\n    * `j` â yields a JavaScript object or array as a JSON encoded string\n\n## JavaScript `vsprintf`\n`vsprintf` is the same as `sprintf` except that it accepts an array of arguments, rather than a variable number of arguments:\n\n    vsprintf(\"The first 4 letters of the english alphabet are: %s, %s, %s and %s\", [\"a\", \"b\", \"c\", \"d\"])\n\n## Argument swapping\nYou can also swap the arguments. That is, the order of the placeholders doesn't have to match the order of the arguments. You can do that by simply indicating in the format string which arguments the placeholders refer to:\n\n    sprintf(\"%2$s %3$s a %1$s\", \"cracker\", \"Polly\", \"wants\")\nAnd, of course, you can repeat the placeholders without having to increase the number of arguments.\n\n## Named arguments\nFormat strings may contain replacement fields rather than positional placeholders. Instead of referring to a certain argument, you can now refer to a certain key within an object. Replacement fields are surrounded by rounded parentheses - `(` and `)` - and begin with a keyword that refers to a key:\n\n    var user = {\n        name: \"Dolly\"\n    }\n    sprintf(\"Hello %(name)s\", user) // Hello Dolly\nKeywords in replacement fields can be optionally followed by any number of keywords or indexes:\n\n    var users = [\n        {name: \"Dolly\"},\n        {name: \"Molly\"},\n        {name: \"Polly\"}\n    ]\n    sprintf(\"Hello %(users[0].name)s, %(users[1].name)s and %(users[2].name)s\", {users: users}) // Hello Dolly, Molly and Polly\nNote: mixing positional and named placeholders is not (yet) supported\n\n## Computed values\nYou can pass in a function as a dynamic value and it will be invoked (with no arguments) in order to compute the value on-the-fly.\n\n    sprintf(\"Current timestamp: %d\", Date.now) // Current timestamp: 1398005382890\n    sprintf(\"Current date and time: %s\", function() { return new Date().toString() })\n\n# AngularJS\nYou can now use `sprintf` and `vsprintf` (also aliased as `fmt` and `vfmt` respectively) in your AngularJS projects. See `demo/`.\n\n# Installation\n\n## Via Bower\n\n    bower install sprintf\n\n## Or as a node.js module\n\n    npm install sprintf-js\n\n### Usage\n\n    var sprintf = require(\"sprintf-js\").sprintf,\n        vsprintf = require(\"sprintf-js\").vsprintf\n\n    sprintf(\"%2$s %3$s a %1$s\", \"cracker\", \"Polly\", \"wants\")\n    vsprintf(\"The first 4 letters of the english alphabet are: %s, %s, %s and %s\", [\"a\", \"b\", \"c\", \"d\"])\n\n# License\n\n**sprintf.js** is licensed under the terms of the 3-clause BSD license.\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/sprintf-js",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Very powerful CLI arguments parser. Native port of argparse - python's options parsing library",
              "devDependencies": {
                "eslint": "^2.13.1",
                "istanbul": "^0.4.5",
                "mocha": "^3.1.0",
                "ndoc": "^5.0.1"
              },
              "files": [
                "index.js",
                "lib/"
              ],
              "homepage": "https://github.com/nodeca/argparse#readme",
              "keywords": [
                "cli",
                "parser",
                "argparse",
                "option",
                "args"
              ],
              "license": "MIT",
              "name": "argparse",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/nodeca/argparse.git"
              },
              "scripts": {
                "test": "make test"
              },
              "version": "1.0.9",
              "readme": "argparse\n========\n\n[![Build Status](https://secure.travis-ci.org/nodeca/argparse.png?branch=master)](http://travis-ci.org/nodeca/argparse)\n[![NPM version](https://img.shields.io/npm/v/argparse.svg)](https://www.npmjs.org/package/argparse)\n\nCLI arguments parser for node.js. Javascript port of python's\n[argparse](http://docs.python.org/dev/library/argparse.html) module\n(original version 3.2). That's a full port, except some very rare options,\nrecorded in issue tracker.\n\n**NB. Difference with original.**\n\n- Method names changed to camelCase. See [generated docs](http://nodeca.github.com/argparse/).\n- Use `defaultValue` instead of `default`.\n\n\nExample\n=======\n\ntest.js file:\n\n```javascript\n#!/usr/bin/env node\n'use strict';\n\nvar ArgumentParser = require('../lib/argparse').ArgumentParser;\nvar parser = new ArgumentParser({\n  version: '0.0.1',\n  addHelp:true,\n  description: 'Argparse example'\n});\nparser.addArgument(\n  [ '-f', '--foo' ],\n  {\n    help: 'foo bar'\n  }\n);\nparser.addArgument(\n  [ '-b', '--bar' ],\n  {\n    help: 'bar foo'\n  }\n);\nparser.addArgument(\n  '--baz',\n  {\n    help: 'baz bar'\n  }\n);\nvar args = parser.parseArgs();\nconsole.dir(args);\n```\n\nDisplay help:\n\n```\n$ ./test.js -h\nusage: example.js [-h] [-v] [-f FOO] [-b BAR] [--baz BAZ]\n\nArgparse example\n\nOptional arguments:\n  -h, --help         Show this help message and exit.\n  -v, --version      Show program's version number and exit.\n  -f FOO, --foo FOO  foo bar\n  -b BAR, --bar BAR  bar foo\n  --baz BAZ          baz bar\n```\n\nParse arguments:\n\n```\n$ ./test.js -f=3 --bar=4 --baz 5\n{ foo: '3', bar: '4', baz: '5' }\n```\n\nMore [examples](https://github.com/nodeca/argparse/tree/master/examples).\n\n\nArgumentParser objects\n======================\n\n```\nnew ArgumentParser({paramters hash});\n```\n\nCreates a new ArgumentParser object.\n\n**Supported params:**\n\n- ```description``` - Text to display before the argument help.\n- ```epilog``` - Text to display after the argument help.\n- ```addHelp``` - Add a -h/âhelp option to the parser. (default: true)\n- ```argumentDefault``` - Set the global default value for arguments. (default: null)\n- ```parents``` - A list of ArgumentParser objects whose arguments should also be included.\n- ```prefixChars``` - The set of characters that prefix optional arguments. (default: â-â)\n- ```formatterClass``` - A class for customizing the help output.\n- ```prog``` - The name of the program (default: `path.basename(process.argv[1])`)\n- ```usage``` - The string describing the program usage (default: generated)\n- ```conflictHandler``` - Usually unnecessary, defines strategy for resolving conflicting optionals.\n\n**Not supportied yet**\n\n- ```fromfilePrefixChars``` - The set of characters that prefix files from which additional arguments should be read.\n\n\nDetails in [original ArgumentParser guide](http://docs.python.org/dev/library/argparse.html#argumentparser-objects)\n\n\naddArgument() method\n====================\n\n```\nArgumentParser.addArgument(name or flag or [name] or [flags...], {options})\n```\n\nDefines how a single command-line argument should be parsed.\n\n- ```name or flag or [name] or [flags...]``` - Either a positional name\n  (e.g., `'foo'`), a single option (e.g., `'-f'` or `'--foo'`), an array\n  of a single positional name (e.g., `['foo']`), or an array of options\n  (e.g., `['-f', '--foo']`).\n\nOptions:\n\n- ```action``` - The basic type of action to be taken when this argument is encountered at the command line.\n- ```nargs```- The number of command-line arguments that should be consumed.\n- ```constant``` - A constant value required by some action and nargs selections.\n- ```defaultValue``` - The value produced if the argument is absent from the command line.\n- ```type``` - The type to which the command-line argument should be converted.\n- ```choices``` - A container of the allowable values for the argument.\n- ```required``` - Whether or not the command-line option may be omitted (optionals only).\n- ```help``` - A brief description of what the argument does.\n- ```metavar``` - A name for the argument in usage messages.\n- ```dest``` - The name of the attribute to be added to the object returned by parseArgs().\n\nDetails in [original add_argument guide](http://docs.python.org/dev/library/argparse.html#the-add-argument-method)\n\n\nAction (some details)\n================\n\nArgumentParser objects associate command-line arguments with actions.\nThese actions can do just about anything with the command-line arguments associated\nwith them, though most actions simply add an attribute to the object returned by\nparseArgs(). The action keyword argument specifies how the command-line arguments\nshould be handled. The supported actions are:\n\n- ```store``` - Just stores the argumentâs value. This is the default action.\n- ```storeConst``` - Stores value, specified by the const keyword argument.\n  (Note that the const keyword argument defaults to the rather unhelpful None.)\n  The 'storeConst' action is most commonly used with optional arguments, that\n  specify some sort of flag.\n- ```storeTrue``` and ```storeFalse``` - Stores values True and False\n  respectively. These are special cases of 'storeConst'.\n- ```append``` - Stores a list, and appends each argument value to the list.\n  This is useful to allow an option to be specified multiple times.\n- ```appendConst``` - Stores a list, and appends value, specified by the\n  const keyword argument to the list. (Note, that the const keyword argument defaults\n  is None.) The 'appendConst' action is typically used when multiple arguments need\n  to store constants to the same list.\n- ```count``` - Counts the number of times a keyword argument occurs. For example,\n  used for increasing verbosity levels.\n- ```help``` - Prints a complete help message for all the options in the current\n  parser and then exits. By default a help action is automatically added to the parser.\n  See ArgumentParser for details of how the output is created.\n- ```version``` - Prints version information and exit. Expects a `version=`\n  keyword argument in the addArgument() call.\n\nDetails in [original action guide](http://docs.python.org/dev/library/argparse.html#action)\n\n\nSub-commands\n============\n\nArgumentParser.addSubparsers()\n\nMany programs split their functionality into a number of sub-commands, for\nexample, the svn program can invoke sub-commands like `svn checkout`, `svn update`,\nand `svn commit`. Splitting up functionality this way can be a particularly good\nidea when a program performs several different functions which require different\nkinds of command-line arguments. `ArgumentParser` supports creation of such\nsub-commands with `addSubparsers()` method. The `addSubparsers()` method is\nnormally called with no arguments and returns an special action object.\nThis object has a single method `addParser()`, which takes a command name and\nany `ArgumentParser` constructor arguments, and returns an `ArgumentParser` object\nthat can be modified as usual.\n\nExample:\n\nsub_commands.js\n```javascript\n#!/usr/bin/env node\n'use strict';\n\nvar ArgumentParser = require('../lib/argparse').ArgumentParser;\nvar parser = new ArgumentParser({\n  version: '0.0.1',\n  addHelp:true,\n  description: 'Argparse examples: sub-commands',\n});\n\nvar subparsers = parser.addSubparsers({\n  title:'subcommands',\n  dest:\"subcommand_name\"\n});\n\nvar bar = subparsers.addParser('c1', {addHelp:true});\nbar.addArgument(\n  [ '-f', '--foo' ],\n  {\n    action: 'store',\n    help: 'foo3 bar3'\n  }\n);\nvar bar = subparsers.addParser(\n  'c2',\n  {aliases:['co'], addHelp:true}\n);\nbar.addArgument(\n  [ '-b', '--bar' ],\n  {\n    action: 'store',\n    type: 'int',\n    help: 'foo3 bar3'\n  }\n);\n\nvar args = parser.parseArgs();\nconsole.dir(args);\n\n```\n\nDetails in [original sub-commands guide](http://docs.python.org/dev/library/argparse.html#sub-commands)\n\n\nContributors\n============\n\n- [Eugene Shkuropat](https://github.com/shkuropat)\n- [Paul Jacobson](https://github.com/hpaulj)\n\n[others](https://github.com/nodeca/argparse/graphs/contributors)\n\nLicense\n=======\n\nCopyright (c) 2012 [Vitaly Puzrin](https://github.com/puzrin).\nReleased under the MIT license. See\n[LICENSE](https://github.com/nodeca/argparse/blob/master/LICENSE) for details.\n\n\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "sprintf-js": "~1.0.2"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/argparse",
              "error": "[Circular]",
              "extraneous": false
            },
            "esprima": {
              "_from": "esprima@^4.0.0",
              "_id": "esprima@4.0.0",
              "_inBundle": false,
              "_integrity": "sha512-oftTcaMu/EGrEIu904mWteKIv8vMuOgGYo7EhVJJN00R/EED9DCua/xxHRdYnKtcECzVg7xOWhflvJMnqcFZjw==",
              "_location": "/esprima",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "esprima@^4.0.0",
                "name": "esprima",
                "escapedName": "esprima",
                "rawSpec": "^4.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^4.0.0"
              },
              "_requiredBy": [
                "/js-yaml"
              ],
              "_resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.0.tgz",
              "_shasum": "4499eddcd1110e0b218bacf2fa7f7f59f55ca804",
              "_spec": "esprima@^4.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/js-yaml",
              "author": {
                "name": "Ariya Hidayat",
                "email": "ariya.hidayat@gmail.com"
              },
              "bin": {
                "esparse": "./bin/esparse.js",
                "esvalidate": "./bin/esvalidate.js"
              },
              "bugs": {
                "url": "https://github.com/jquery/esprima/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "ECMAScript parsing infrastructure for multipurpose analysis",
              "devDependencies": {
                "codecov.io": "~0.1.6",
                "escomplex-js": "1.2.0",
                "everything.js": "~1.0.3",
                "glob": "~7.1.0",
                "istanbul": "~0.4.0",
                "json-diff": "~0.3.1",
                "karma": "~1.3.0",
                "karma-chrome-launcher": "~2.0.0",
                "karma-detect-browsers": "~2.2.3",
                "karma-edge-launcher": "~0.2.0",
                "karma-firefox-launcher": "~1.0.0",
                "karma-ie-launcher": "~1.0.0",
                "karma-mocha": "~1.3.0",
                "karma-safari-launcher": "~1.0.0",
                "karma-safaritechpreview-launcher": "~0.0.4",
                "karma-sauce-launcher": "~1.1.0",
                "lodash": "~3.10.1",
                "mocha": "~3.2.0",
                "node-tick-processor": "~0.0.2",
                "regenerate": "~1.3.2",
                "temp": "~0.8.3",
                "tslint": "~5.1.0",
                "typescript": "~2.3.2",
                "typescript-formatter": "~5.1.3",
                "unicode-8.0.0": "~0.7.0",
                "webpack": "~1.14.0"
              },
              "engines": {
                "node": ">=4"
              },
              "files": [
                "bin",
                "dist/esprima.js"
              ],
              "homepage": "http://esprima.org",
              "keywords": [
                "ast",
                "ecmascript",
                "esprima",
                "javascript",
                "parser",
                "syntax"
              ],
              "license": "BSD-2-Clause",
              "main": "dist/esprima.js",
              "maintainers": [
                {
                  "name": "Ariya Hidayat",
                  "email": "ariya.hidayat@gmail.com",
                  "url": "http://ariya.ofilabs.com"
                }
              ],
              "name": "esprima",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/jquery/esprima.git"
              },
              "scripts": {
                "all-tests": "npm run verify-line-ending && npm run generate-fixtures && npm run unit-tests && npm run api-tests && npm run grammar-tests && npm run regression-tests && npm run hostile-env-tests",
                "analyze-coverage": "istanbul cover test/unit-tests.js",
                "api-tests": "mocha -R dot test/api-tests.js",
                "appveyor": "npm run compile && npm run all-tests && npm run browser-tests",
                "benchmark": "npm run benchmark-parser && npm run benchmark-tokenizer",
                "benchmark-parser": "node -expose_gc test/benchmark-parser.js",
                "benchmark-tokenizer": "node --expose_gc test/benchmark-tokenizer.js",
                "browser-tests": "npm run compile && npm run generate-fixtures && cd test && karma start --single-run",
                "check-coverage": "istanbul check-coverage --statement 100 --branch 100 --function 100",
                "check-version": "node test/check-version.js",
                "circleci": "npm test && npm run codecov && npm run downstream",
                "code-style": "tsfmt --verify src/*.ts && tsfmt --verify test/*.js",
                "codecov": "istanbul report cobertura && codecov < ./coverage/cobertura-coverage.xml",
                "compile": "tsc -p src/ && webpack && node tools/fixupbundle.js",
                "complexity": "node test/check-complexity.js",
                "downstream": "node test/downstream.js",
                "droneio": "npm run compile && npm run all-tests && npm run saucelabs",
                "dynamic-analysis": "npm run analyze-coverage && npm run check-coverage",
                "format-code": "tsfmt -r src/*.ts && tsfmt -r test/*.js",
                "generate-fixtures": "node tools/generate-fixtures.js",
                "generate-regex": "node tools/generate-identifier-regex.js",
                "generate-xhtml-entities": "node tools/generate-xhtml-entities.js",
                "grammar-tests": "node test/grammar-tests.js",
                "hostile-env-tests": "node test/hostile-environment-tests.js",
                "prepublish": "npm run compile",
                "profile": "node --prof test/profile.js && mv isolate*.log v8.log && node-tick-processor",
                "regression-tests": "node test/regression-tests.js",
                "saucelabs": "npm run saucelabs-evergreen && npm run saucelabs-ie && npm run saucelabs-safari",
                "saucelabs-evergreen": "cd test && karma start saucelabs-evergreen.conf.js",
                "saucelabs-ie": "cd test && karma start saucelabs-ie.conf.js",
                "saucelabs-safari": "cd test && karma start saucelabs-safari.conf.js",
                "static-analysis": "npm run check-version && npm run tslint && npm run code-style && npm run complexity",
                "test": "npm run compile && npm run all-tests && npm run static-analysis && npm run dynamic-analysis",
                "travis": "npm test",
                "tslint": "tslint src/*.ts",
                "unit-tests": "node test/unit-tests.js",
                "verify-line-ending": "node test/verify-line-ending.js"
              },
              "version": "4.0.0",
              "readme": "[![NPM version](https://img.shields.io/npm/v/esprima.svg)](https://www.npmjs.com/package/esprima)\n[![npm download](https://img.shields.io/npm/dm/esprima.svg)](https://www.npmjs.com/package/esprima)\n[![Build Status](https://img.shields.io/travis/jquery/esprima/master.svg)](https://travis-ci.org/jquery/esprima)\n[![Coverage Status](https://img.shields.io/codecov/c/github/jquery/esprima/master.svg)](https://codecov.io/github/jquery/esprima)\n\n**Esprima** ([esprima.org](http://esprima.org), BSD license) is a high performance,\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\nparser written in ECMAScript (also popularly known as\n[JavaScript](https://en.wikipedia.org/wiki/JavaScript)).\nEsprima is created and maintained by [Ariya Hidayat](https://twitter.com/ariyahidayat),\nwith the help of [many contributors](https://github.com/jquery/esprima/contributors).\n\n### Features\n\n- Full support for ECMAScript 2017 ([ECMA-262 8th Edition](http://www.ecma-international.org/publications/standards/Ecma-262.htm))\n- Sensible [syntax tree format](https://github.com/estree/estree/blob/master/es5.md) as standardized by [ESTree project](https://github.com/estree/estree)\n- Experimental support for [JSX](https://facebook.github.io/jsx/), a syntax extension for [React](https://facebook.github.io/react/)\n- Optional tracking of syntax node location (index-based and line-column)\n- [Heavily tested](http://esprima.org/test/ci.html) (~1500 [unit tests](https://github.com/jquery/esprima/tree/master/test/fixtures) with [full code coverage](https://codecov.io/github/jquery/esprima))\n\n### API\n\nEsprima can be used to perform [lexical analysis](https://en.wikipedia.org/wiki/Lexical_analysis) (tokenization) or [syntactic analysis](https://en.wikipedia.org/wiki/Parsing) (parsing) of a JavaScript program.\n\nA simple example on Node.js REPL:\n\n```javascript\n> var esprima = require('esprima');\n> var program = 'const answer = 42';\n\n> esprima.tokenize(program);\n[ { type: 'Keyword', value: 'const' },\n  { type: 'Identifier', value: 'answer' },\n  { type: 'Punctuator', value: '=' },\n  { type: 'Numeric', value: '42' } ]\n  \n> esprima.parseScript(program);\n{ type: 'Program',\n  body:\n   [ { type: 'VariableDeclaration',\n       declarations: [Object],\n       kind: 'const' } ],\n  sourceType: 'script' }\n```\n\nFor more information, please read the [complete documentation](http://esprima.org/doc).",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/esprima",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "YAML 1.2 parser and serializer",
          "devDependencies": {
            "ansi": "^0.3.1",
            "benchmark": "^2.1.4",
            "browserify": "^14.3.0",
            "codemirror": "^5.13.4",
            "eslint": "^4.1.1",
            "istanbul": "^0.4.5",
            "mocha": "^3.3.0",
            "uglify-js": "^3.0.1"
          },
          "files": [
            "index.js",
            "lib/",
            "bin/",
            "dist/"
          ],
          "homepage": "https://github.com/nodeca/js-yaml",
          "keywords": [
            "yaml",
            "parser",
            "serializer",
            "pyyaml"
          ],
          "license": "MIT",
          "name": "js-yaml",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/nodeca/js-yaml.git"
          },
          "scripts": {
            "test": "make test"
          },
          "version": "3.9.1",
          "readme": "JS-YAML - YAML 1.2 parser / writer for JavaScript\n=================================================\n\n[![Build Status](https://travis-ci.org/nodeca/js-yaml.svg?branch=master)](https://travis-ci.org/nodeca/js-yaml)\n[![NPM version](https://img.shields.io/npm/v/js-yaml.svg)](https://www.npmjs.org/package/js-yaml)\n\n__[Online Demo](http://nodeca.github.com/js-yaml/)__\n\n\nThis is an implementation of [YAML](http://yaml.org/), a human-friendly data\nserialization language. Started as [PyYAML](http://pyyaml.org/) port, it was\ncompletely rewritten from scratch. Now it's very fast, and supports 1.2 spec.\n\n\nInstallation\n------------\n\n### YAML module for node.js\n\n```\nnpm install js-yaml\n```\n\n\n### CLI executable\n\nIf you want to inspect your YAML files from CLI, install js-yaml globally:\n\n```\nnpm install -g js-yaml\n```\n\n#### Usage\n\n```\nusage: js-yaml [-h] [-v] [-c] [-t] file\n\nPositional arguments:\n  file           File with YAML document(s)\n\nOptional arguments:\n  -h, --help     Show this help message and exit.\n  -v, --version  Show program's version number and exit.\n  -c, --compact  Display errors in compact mode\n  -t, --trace    Show stack trace on error\n```\n\n\n### Bundled YAML library for browsers\n\n``` html\n<!-- esprima required only for !!js/function -->\n<script src=\"esprima.js\"></script>\n<script src=\"js-yaml.min.js\"></script>\n<script type=\"text/javascript\">\nvar doc = jsyaml.load('greeting: hello\\nname: world');\n</script>\n```\n\nBrowser support was done mostly for the online demo. If you find any errors - feel\nfree to send pull requests with fixes. Also note, that IE and other old browsers\nneeds [es5-shims](https://github.com/kriskowal/es5-shim) to operate.\n\nNotes:\n\n1. We have no resources to support browserified version. Don't expect it to be\n   well tested. Don't expect fast fixes if something goes wrong there.\n2. `!!js/function` in browser bundle will not work by default. If you really need\n   it - load `esprima` parser first (via amd or directly).\n3. `!!bin` in browser will return `Array`, because browsers do not support\n   node.js `Buffer` and adding Buffer shims is completely useless on practice.\n\n\nAPI\n---\n\nHere we cover the most 'useful' methods. If you need advanced details (creating\nyour own tags), see [wiki](https://github.com/nodeca/js-yaml/wiki) and\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) for more\ninfo.\n\n``` javascript\nyaml = require('js-yaml');\nfs   = require('fs');\n\n// Get document, or throw exception on error\ntry {\n  var doc = yaml.safeLoad(fs.readFileSync('/home/ixti/example.yml', 'utf8'));\n  console.log(doc);\n} catch (e) {\n  console.log(e);\n}\n```\n\n\n### safeLoad (string [ , options ])\n\n**Recommended loading way.** Parses `string` as single YAML document. Returns a JavaScript\nobject or throws `YAMLException` on error. By default, does not support regexps,\nfunctions and undefined. This method is safe for untrusted data.\n\noptions:\n\n- `filename` _(default: null)_ - string to be used as a file path in\n  error/warning messages.\n- `onWarning` _(default: null)_ - function to call on warning messages.\n  Loader will throw on warnings if this function is not provided.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ - specifies a schema to use.\n  - `FAILSAFE_SCHEMA` - only strings, arrays and plain objects:\n    http://www.yaml.org/spec/1.2/spec.html#id2802346\n  - `JSON_SCHEMA` - all JSON-supported types:\n    http://www.yaml.org/spec/1.2/spec.html#id2803231\n  - `CORE_SCHEMA` - same as `JSON_SCHEMA`:\n    http://www.yaml.org/spec/1.2/spec.html#id2804923\n  - `DEFAULT_SAFE_SCHEMA` - all supported YAML types, without unsafe ones\n    (`!!js/undefined`, `!!js/regexp` and `!!js/function`):\n    http://yaml.org/type/\n  - `DEFAULT_FULL_SCHEMA` - all supported YAML types.\n- `json` _(default: false)_ - compatibility with JSON.parse behaviour. If true, then duplicate keys in a mapping will override values rather than throwing an error.\n\nNOTE: This function **does not** understand multi-document sources, it throws\nexception on those.\n\nNOTE: JS-YAML **does not** support schema-specific tag resolution restrictions.\nSo, the JSON schema is not as strictly defined in the YAML specification.\nIt allows numbers in any notation, use `Null` and `NULL` as `null`, etc.\nThe core schema also has no such restrictions. It allows binary notation for integers.\n\n\n### load (string [ , options ])\n\n**Use with care with untrusted sources**. The same as `safeLoad()` but uses\n`DEFAULT_FULL_SCHEMA` by default - adds some JavaScript-specific types:\n`!!js/function`, `!!js/regexp` and `!!js/undefined`. For untrusted sources, you\nmust additionally validate object structure to avoid injections:\n\n``` javascript\nvar untrusted_code = '\"toString\": !<tag:yaml.org,2002:js/function> \"function (){very_evil_thing();}\"';\n\n// I'm just converting that string, what could possibly go wrong?\nrequire('js-yaml').load(untrusted_code) + ''\n```\n\n\n### safeLoadAll (string [, iterator] [, options ])\n\nSame as `safeLoad()`, but understands multi-document sources. Applies\n`iterator` to each document if specified, or returns aray of documents.\n\n``` javascript\nvar yaml = require('js-yaml');\n\nyaml.safeLoadAll(data, function (doc) {\n  console.log(doc);\n});\n```\n\n\n### loadAll (string [, iterator] [ , options ])\n\nSame as `safeLoadAll()` but uses `DEFAULT_FULL_SCHEMA` by default.\n\n\n### safeDump (object [ , options ])\n\nSerializes `object` as a YAML document. Uses `DEFAULT_SAFE_SCHEMA`, so it will\nthrow an exception if you try to dump regexps or functions. However, you can\ndisable exceptions by setting the `skipInvalid` option to `true`.\n\noptions:\n\n- `indent` _(default: 2)_ - indentation width to use (in spaces).\n- `skipInvalid` _(default: false)_ - do not throw on invalid types (like function\n  in the safe schema) and skip pairs and single values with such types.\n- `flowLevel` (default: -1) - specifies level of nesting, when to switch from\n  block to flow style for collections. -1 means block style everwhere\n- `styles` - \"tag\" => \"style\" map. Each tag may have own set of styles.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ specifies a schema to use.\n- `sortKeys` _(default: `false`)_ - if `true`, sort keys when dumping YAML. If a\n  function, use the function to sort the keys.\n- `lineWidth` _(default: `80`)_ - set max line width.\n- `noRefs` _(default: `false`)_ - if `true`, don't convert duplicate objects into references\n- `noCompatMode` _(default: `false`)_ - if `true` don't try to be compatible with older\n  yaml versions. Currently: don't quote \"yes\", \"no\" and so on, as required for YAML 1.1\n- `condenseFlow` _(default: `false`)_ - if `true` flow sequences will be condensed, omitting the space between `key: value` or `a, b`. Eg. `'[a,b]'` or `{a:{b:c}}`. Can be useful when using yaml for pretty URL query params as spaces are %-encoded.\n\nThe following table show availlable styles (e.g. \"canonical\",\n\"binary\"...) available for each tag (.e.g. !!null, !!int ...). Yaml\nouput is shown on the right side after `=>` (default setting) or `->`:\n\n``` none\n!!null\n  \"canonical\"   -> \"~\"\n  \"lowercase\"   => \"null\"\n  \"uppercase\"   -> \"NULL\"\n  \"camelcase\"   -> \"Null\"\n\n!!int\n  \"binary\"      -> \"0b1\", \"0b101010\", \"0b1110001111010\"\n  \"octal\"       -> \"01\", \"052\", \"016172\"\n  \"decimal\"     => \"1\", \"42\", \"7290\"\n  \"hexadecimal\" -> \"0x1\", \"0x2A\", \"0x1C7A\"\n\n!!bool\n  \"lowercase\"   => \"true\", \"false\"\n  \"uppercase\"   -> \"TRUE\", \"FALSE\"\n  \"camelcase\"   -> \"True\", \"False\"\n\n!!float\n  \"lowercase\"   => \".nan\", '.inf'\n  \"uppercase\"   -> \".NAN\", '.INF'\n  \"camelcase\"   -> \".NaN\", '.Inf'\n```\n\nExample:\n\n``` javascript\nsafeDump (object, {\n  'styles': {\n    '!!null': 'canonical' // dump null as ~\n  },\n  'sortKeys': true        // sort object keys\n});\n```\n\n### dump (object [ , options ])\n\nSame as `safeDump()` but without limits (uses `DEFAULT_FULL_SCHEMA` by default).\n\n\nSupported YAML types\n--------------------\n\nThe list of standard YAML tags and corresponding JavaScipt types. See also\n[YAML tag discussion](http://pyyaml.org/wiki/YAMLTagDiscussion) and\n[YAML types repository](http://yaml.org/type/).\n\n```\n!!null ''                   # null\n!!bool 'yes'                # bool\n!!int '3...'                # number\n!!float '3.14...'           # number\n!!binary '...base64...'     # buffer\n!!timestamp 'YYYY-...'      # date\n!!omap [ ... ]              # array of key-value pairs\n!!pairs [ ... ]             # array or array pairs\n!!set { ... }               # array of objects with given keys and null values\n!!str '...'                 # string\n!!seq [ ... ]               # array\n!!map { ... }               # object\n```\n\n**JavaScript-specific tags**\n\n```\n!!js/regexp /pattern/gim            # RegExp\n!!js/undefined ''                   # Undefined\n!!js/function 'function () {...}'   # Function\n```\n\nCaveats\n-------\n\nNote, that you use arrays or objects as key in JS-YAML. JS does not allow objects\nor arrays as keys, and stringifies (by calling .toString method) them at the\nmoment of adding them.\n\n``` yaml\n---\n? [ foo, bar ]\n: - baz\n? { foo: bar }\n: - baz\n  - baz\n```\n\n``` javascript\n{ \"foo,bar\": [\"baz\"], \"[object Object]\": [\"baz\", \"baz\"] }\n```\n\nAlso, reading of properties on implicit block mapping keys is not supported yet.\nSo, the following YAML document cannot be loaded.\n\n``` yaml\n&anchor foo:\n  foo: bar\n  *anchor: duplicate key\n  baz: bat\n  *anchor: duplicate key\n```\n\n\nBreaking changes in 2.x.x -> 3.x.x\n----------------------------------\n\nIf you have not used __custom__ tags or loader classes and not loaded yaml\nfiles via `require()`, no changes are needed. Just upgrade the library.\n\nOtherwise, you should:\n\n1. Replace all occurences of `require('xxxx.yml')` by `fs.readFileSync()` +\n  `yaml.safeLoad()`.\n2. rewrite your custom tags constructors and custom loader\n  classes, to conform the new API. See\n  [examples](https://github.com/nodeca/js-yaml/tree/master/examples) and\n  [wiki](https://github.com/nodeca/js-yaml/wiki) for details.\n\n\nLicense\n-------\n\nView the [LICENSE](https://github.com/nodeca/js-yaml/blob/master/LICENSE) file\n(MIT).\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "argparse": "^1.0.7",
            "esprima": "^4.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/js-yaml",
          "error": "[Circular]",
          "extraneous": false
        },
        "json-stable-stringify": {
          "_from": "json-stable-stringify@^1.0.0",
          "_id": "json-stable-stringify@1.0.1",
          "_inBundle": false,
          "_integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
          "_location": "/json-stable-stringify",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "json-stable-stringify@^1.0.0",
            "name": "json-stable-stringify",
            "escapedName": "json-stable-stringify",
            "rawSpec": "^1.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.0.0"
          },
          "_requiredBy": [
            "/ajv",
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
          "_shasum": "9a759d39c5f2ff503fd5300646ed445f88c4f9af",
          "_spec": "json-stable-stringify@^1.0.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "James Halliday",
            "email": "mail@substack.net",
            "url": "http://substack.net"
          },
          "bugs": {
            "url": "https://github.com/substack/json-stable-stringify/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "jsonify": {
              "_from": "jsonify@~0.0.0",
              "_id": "jsonify@0.0.0",
              "_inBundle": false,
              "_integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=",
              "_location": "/jsonify",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "jsonify@~0.0.0",
                "name": "jsonify",
                "escapedName": "jsonify",
                "rawSpec": "~0.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "~0.0.0"
              },
              "_requiredBy": [
                "/json-stable-stringify"
              ],
              "_resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",
              "_shasum": "2c74b6ee41d93ca51b7b5aaee8f503631d252a73",
              "_spec": "jsonify@~0.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/json-stable-stringify",
              "author": {
                "name": "Douglas Crockford",
                "url": "http://crockford.com/"
              },
              "bugs": {
                "url": "https://github.com/substack/jsonify/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "JSON without touching any globals",
              "devDependencies": {
                "garbage": "0.0.x",
                "tap": "0.0.x"
              },
              "directories": {
                "lib": ".",
                "test": "test"
              },
              "engines": {
                "node": "*"
              },
              "homepage": "https://github.com/substack/jsonify#readme",
              "keywords": [
                "json",
                "browser"
              ],
              "license": "Public Domain",
              "main": "index.js",
              "name": "jsonify",
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/substack/jsonify.git"
              },
              "scripts": {
                "test": "tap test"
              },
              "version": "0.0.0",
              "readme": "jsonify\n=======\n\nThis module provides Douglas Crockford's JSON implementation without modifying\nany globals.\n\n`stringify` and `parse` are merely exported without respect to whether or not a\nglobal `JSON` object exists.\n\nmethods\n=======\n\nvar json = require('jsonify');\n\njson.parse(source, reviver)\n---------------------------\n\nReturn a new javascript object from a parse of the `source` string.\n\nIf a `reviver` function is specified, walk the structure passing each name/value\npair to `reviver.call(parent, key, value)` to transform the `value` before\nparsing it.\n\njson.stringify(value, replacer, space)\n--------------------------------------\n\nReturn a string representation for `value`.\n\nIf `replacer` is specified, walk the structure passing each name/value pair to\n`replacer.call(parent, key, value)` to transform the `value` before stringifying\nit.\n\nIf `space` is a number, indent the result by that many spaces.\nIf `space` is a string, use `space` as the indentation.\n",
              "readmeFilename": "README.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/jsonify",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "deterministic JSON.stringify() with custom sorting to get deterministic hashes from stringified results",
          "devDependencies": {
            "tape": "~1.0.4"
          },
          "homepage": "https://github.com/substack/json-stable-stringify",
          "keywords": [
            "json",
            "stringify",
            "deterministic",
            "hash",
            "sort",
            "stable"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "json-stable-stringify",
          "repository": {
            "type": "git",
            "url": "git://github.com/substack/json-stable-stringify.git"
          },
          "scripts": {
            "test": "tape test/*.js"
          },
          "testling": {
            "files": "test/*.js",
            "browsers": [
              "ie/8..latest",
              "ff/5",
              "ff/latest",
              "chrome/15",
              "chrome/latest",
              "safari/latest",
              "opera/latest"
            ]
          },
          "version": "1.0.1",
          "readme": "# json-stable-stringify\n\ndeterministic version of `JSON.stringify()` so you can get a consistent hash\nfrom stringified results\n\nYou can also pass in a custom comparison function.\n\n[![browser support](https://ci.testling.com/substack/json-stable-stringify.png)](https://ci.testling.com/substack/json-stable-stringify)\n\n[![build status](https://secure.travis-ci.org/substack/json-stable-stringify.png)](http://travis-ci.org/substack/json-stable-stringify)\n\n# example\n\n``` js\nvar stringify = require('json-stable-stringify');\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nconsole.log(stringify(obj));\n```\n\noutput:\n\n```\n{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}\n```\n\n# methods\n\n``` js\nvar stringify = require('json-stable-stringify')\n```\n\n## var str = stringify(obj, opts)\n\nReturn a deterministic stringified string `str` from the object `obj`.\n\n## options\n\n### cmp\n\nIf `opts` is given, you can supply an `opts.cmp` to have a custom comparison\nfunction for object keys. Your function `opts.cmp` is called with these\nparameters:\n\n``` js\nopts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue })\n```\n\nFor example, to sort on the object key names in reverse order you could write:\n\n``` js\nvar stringify = require('json-stable-stringify');\n\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nvar s = stringify(obj, function (a, b) {\n    return a.key < b.key ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich results in the output string:\n\n```\n{\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3}\n```\n\nOr if you wanted to sort on the object values in reverse order, you could write:\n\n```\nvar stringify = require('json-stable-stringify');\n\nvar obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 };\nvar s = stringify(obj, function (a, b) {\n    return a.value < b.value ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}\n```\n\n### space\n\nIf you specify `opts.space`, it will indent the output for pretty-printing.\nValid values are strings (e.g. `{space: \\t}`) or a number of spaces\n(`{space: 3}`).\n\nFor example:\n\n```js\nvar obj = { b: 1, a: { foo: 'bar', and: [1, 2, 3] } };\nvar s = stringify(obj, { space: '  ' });\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\n  \"a\": {\n    \"and\": [\n      1,\n      2,\n      3\n    ],\n    \"foo\": \"bar\"\n  },\n  \"b\": 1\n}\n```\n\n### replacer\n\nThe replacer parameter is a function `opts.replacer(key, value)` that behaves\nthe same as the replacer\n[from the core JSON object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_native_JSON#The_replacer_parameter).\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install json-stable-stringify\n```\n\n# license\n\nMIT\n",
          "readmeFilename": "readme.markdown",
          "optionalDependencies": {},
          "_dependencies": {
            "jsonify": "~0.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/json-stable-stringify",
          "error": "[Circular]",
          "extraneous": false
        },
        "levn": {
          "_from": "levn@^0.3.0",
          "_id": "levn@0.3.0",
          "_inBundle": false,
          "_integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
          "_location": "/levn",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "levn@^0.3.0",
            "name": "levn",
            "escapedName": "levn",
            "rawSpec": "^0.3.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.3.0"
          },
          "_requiredBy": [
            "/eslint",
            "/optionator"
          ],
          "_resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
          "_shasum": "3b09924edf9f083c0490fdd4c0bc4421e04764ee",
          "_spec": "levn@^0.3.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "George Zahariev",
            "email": "z@georgezahariev.com"
          },
          "bugs": {
            "url": "https://github.com/gkz/levn/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "prelude-ls": {
              "_from": "prelude-ls@~1.1.2",
              "_id": "prelude-ls@1.1.2",
              "_inBundle": false,
              "_integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
              "_location": "/prelude-ls",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "prelude-ls@~1.1.2",
                "name": "prelude-ls",
                "escapedName": "prelude-ls",
                "rawSpec": "~1.1.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "~1.1.2"
              },
              "_requiredBy": [
                "/levn",
                "/optionator",
                "/type-check"
              ],
              "_resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
              "_shasum": "21932a549f5e52ffd9a827f570e04be62a97da54",
              "_spec": "prelude-ls@~1.1.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/levn",
              "author": {
                "name": "George Zahariev",
                "email": "z@georgezahariev.com"
              },
              "bugs": {
                "url": "https://github.com/gkz/prelude-ls/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "prelude.ls is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript.",
              "devDependencies": {
                "browserify": "~3.24.13",
                "istanbul": "~0.2.4",
                "livescript": "~1.4.0",
                "mocha": "~2.2.4",
                "sinon": "~1.10.2",
                "uglify-js": "~2.4.12"
              },
              "engines": {
                "node": ">= 0.8.0"
              },
              "files": [
                "lib/",
                "README.md",
                "LICENSE"
              ],
              "homepage": "http://preludels.com",
              "keywords": [
                "prelude",
                "livescript",
                "utility",
                "ls",
                "coffeescript",
                "javascript",
                "library",
                "functional",
                "array",
                "list",
                "object",
                "string"
              ],
              "licenses": [
                {
                  "type": "MIT",
                  "url": "https://raw.github.com/gkz/prelude-ls/master/LICENSE"
                }
              ],
              "main": "lib/",
              "name": "prelude-ls",
              "repository": {
                "type": "git",
                "url": "git://github.com/gkz/prelude-ls.git"
              },
              "scripts": {
                "test": "make test"
              },
              "version": "1.1.2",
              "readme": "# prelude.ls [![Build Status](https://travis-ci.org/gkz/prelude-ls.png?branch=master)](https://travis-ci.org/gkz/prelude-ls)\n\nis a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, <a href=\"http://livescript.net\">LiveScript</a>.\n\nSee **[the prelude.ls site](http://preludels.com)** for examples, a reference, and more.\n\nYou can install via npm `npm install prelude-ls`\n\n### Development\n\n`make test` to test\n\n`make build` to build `lib` from `src`\n\n`make build-browser` to build browser versions\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/prelude-ls",
              "error": "[Circular]",
              "extraneous": false
            },
            "type-check": {
              "_from": "type-check@~0.3.2",
              "_id": "type-check@0.3.2",
              "_inBundle": false,
              "_integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
              "_location": "/type-check",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "type-check@~0.3.2",
                "name": "type-check",
                "escapedName": "type-check",
                "rawSpec": "~0.3.2",
                "saveSpec": "[Circular]",
                "fetchSpec": "~0.3.2"
              },
              "_requiredBy": [
                "/levn",
                "/optionator"
              ],
              "_resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
              "_shasum": "5884cab512cf1d355e3fb784f30804b2b520db72",
              "_spec": "type-check@~0.3.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/levn",
              "author": {
                "name": "George Zahariev",
                "email": "z@georgezahariev.com"
              },
              "bugs": {
                "url": "https://github.com/gkz/type-check/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "prelude-ls": {
                  "_from": "prelude-ls@~1.1.2",
                  "_id": "prelude-ls@1.1.2",
                  "_inBundle": false,
                  "_integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
                  "_location": "/prelude-ls",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
                  "_shasum": "21932a549f5e52ffd9a827f570e04be62a97da54",
                  "_spec": "prelude-ls@~1.1.2",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/levn",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "prelude.ls is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript.",
                  "devDependencies": "[Circular]",
                  "engines": "[Circular]",
                  "files": "[Circular]",
                  "homepage": "http://preludels.com",
                  "keywords": "[Circular]",
                  "licenses": "[Circular]",
                  "main": "lib/",
                  "name": "prelude-ls",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "version": "1.1.2",
                  "readme": "# prelude.ls [![Build Status](https://travis-ci.org/gkz/prelude-ls.png?branch=master)](https://travis-ci.org/gkz/prelude-ls)\n\nis a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, <a href=\"http://livescript.net\">LiveScript</a>.\n\nSee **[the prelude.ls site](http://preludels.com)** for examples, a reference, and more.\n\nYou can install via npm `npm install prelude-ls`\n\n### Development\n\n`make test` to test\n\n`make build` to build `lib` from `src`\n\n`make build-browser` to build browser versions\n",
                  "readmeFilename": "README.md",
                  "dependencies": {},
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/prelude-ls",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "prelude-ls"
                }
              },
              "deprecated": false,
              "description": "type-check allows you to check the types of JavaScript values at runtime with a Haskell like type syntax.",
              "devDependencies": {
                "browserify": "~12.0.1",
                "istanbul": "~0.4.1",
                "livescript": "~1.4.0",
                "mocha": "~2.3.4"
              },
              "engines": {
                "node": ">= 0.8.0"
              },
              "files": [
                "lib",
                "README.md",
                "LICENSE"
              ],
              "homepage": "https://github.com/gkz/type-check",
              "keywords": [
                "type",
                "check",
                "checking",
                "library"
              ],
              "license": "MIT",
              "main": "./lib/",
              "name": "type-check",
              "repository": {
                "type": "git",
                "url": "git://github.com/gkz/type-check.git"
              },
              "scripts": {
                "test": "make test"
              },
              "version": "0.3.2",
              "readme": "# type-check [![Build Status](https://travis-ci.org/gkz/type-check.png?branch=master)](https://travis-ci.org/gkz/type-check)\n\n<a name=\"type-check\" />\n\n`type-check` is a library which allows you to check the types of JavaScript values at runtime with a Haskell like type syntax. It is great for checking external input, for testing, or even for adding a bit of safety to your internal code. It is a major component of [levn](https://github.com/gkz/levn). MIT license. Version 0.3.2. Check out the [demo](http://gkz.github.io/type-check/).\n\nFor updates on `type-check`, [follow me on twitter](https://twitter.com/gkzahariev).\n\n    npm install type-check\n\n## Quick Examples\n\n```js\n// Basic types:\nvar typeCheck = require('type-check').typeCheck;\ntypeCheck('Number', 1);               // true\ntypeCheck('Number', 'str');           // false\ntypeCheck('Error', new Error);        // true\ntypeCheck('Undefined', undefined);    // true\n\n// Comment\ntypeCheck('count::Number', 1);        // true\n\n// One type OR another type:\ntypeCheck('Number | String', 2);      // true\ntypeCheck('Number | String', 'str');  // true\n\n// Wildcard, matches all types:\ntypeCheck('*', 2) // true\n\n// Array, all elements of a single type:\ntypeCheck('[Number]', [1, 2, 3]);                // true\ntypeCheck('[Number]', [1, 'str', 3]);            // false\n\n// Tuples, or fixed length arrays with elements of different types:\ntypeCheck('(String, Number)', ['str', 2]);       // true\ntypeCheck('(String, Number)', ['str']);          // false\ntypeCheck('(String, Number)', ['str', 2, 5]);    // false\n\n// Object properties:\ntypeCheck('{x: Number, y: Boolean}', {x: 2, y: false});             // true\ntypeCheck('{x: Number, y: Boolean}',       {x: 2});                 // false\ntypeCheck('{x: Number, y: Maybe Boolean}', {x: 2});                 // true\ntypeCheck('{x: Number, y: Boolean}',      {x: 2, y: false, z: 3});  // false\ntypeCheck('{x: Number, y: Boolean, ...}', {x: 2, y: false, z: 3});  // true\n\n// A particular type AND object properties:\ntypeCheck('RegExp{source: String, ...}', /re/i);          // true\ntypeCheck('RegExp{source: String, ...}', {source: 're'}); // false\n\n// Custom types:\nvar opt = {customTypes:\n  {Even: { typeOf: 'Number', validate: function(x) { return x % 2 === 0; }}}};\ntypeCheck('Even', 2, opt); // true\n\n// Nested:\nvar type = '{a: (String, [Number], {y: Array, ...}), b: Error{message: String, ...}}'\ntypeCheck(type, {a: ['hi', [1, 2, 3], {y: [1, 'ms']}], b: new Error('oh no')}); // true\n```\n\nCheck out the [type syntax format](#syntax) and [guide](#guide).\n\n## Usage\n\n`require('type-check');` returns an object that exposes four properties. `VERSION` is the current version of the library as a string. `typeCheck`, `parseType`, and `parsedTypeCheck` are functions.\n\n```js\n// typeCheck(type, input, options);\ntypeCheck('Number', 2);               // true\n\n// parseType(type);\nvar parsedType = parseType('Number'); // object\n\n// parsedTypeCheck(parsedType, input, options);\nparsedTypeCheck(parsedType, 2);       // true\n```\n\n### typeCheck(type, input, options)\n\n`typeCheck` checks a JavaScript value `input` against `type` written in the [type format](#type-format) (and taking account the optional `options`) and returns whether the `input` matches the `type`.\n\n##### arguments\n* type - `String` - the type written in the [type format](#type-format) which to check against\n* input - `*` - any JavaScript value, which is to be checked against the type\n* options - `Maybe Object` - an optional parameter specifying additional options, currently the only available option is specifying [custom types](#custom-types)\n\n##### returns\n`Boolean` - whether the input matches the type\n\n##### example\n```js\ntypeCheck('Number', 2); // true\n```\n\n### parseType(type)\n\n`parseType` parses string `type` written in the [type format](#type-format) into an object representing the parsed type.\n\n##### arguments\n* type - `String` - the type written in the [type format](#type-format) which to parse\n\n##### returns\n`Object` - an object in the parsed type format representing the parsed type\n\n##### example\n```js\nparseType('Number'); // [{type: 'Number'}]\n```\n### parsedTypeCheck(parsedType, input, options)\n\n`parsedTypeCheck` checks a JavaScript value `input` against parsed `type` in the parsed type format (and taking account the optional `options`) and returns whether the `input` matches the `type`. Use this in conjunction with `parseType` if you are going to use a type more than once.\n\n##### arguments\n* type - `Object` - the type in the parsed type format which to check against\n* input - `*` - any JavaScript value, which is to be checked against the type\n* options - `Maybe Object` - an optional parameter specifying additional options, currently the only available option is specifying [custom types](#custom-types)\n\n##### returns\n`Boolean` - whether the input matches the type\n\n##### example\n```js\nparsedTypeCheck([{type: 'Number'}], 2); // true\nvar parsedType = parseType('String');\nparsedTypeCheck(parsedType, 'str');     // true\n```\n\n<a name=\"type-format\" />\n## Type Format\n\n### Syntax\n\nWhite space is ignored. The root node is a __Types__.\n\n* __Identifier__ = `[\\$\\w]+` - a group of any lower or upper case letters, numbers, underscores, or dollar signs - eg. `String`\n* __Type__ = an `Identifier`, an `Identifier` followed by a `Structure`, just a `Structure`, or a wildcard `*` - eg. `String`, `Object{x: Number}`, `{x: Number}`, `Array{0: String, 1: Boolean, length: Number}`, `*`\n* __Types__ = optionally a comment (an `Indentifier` followed by a `::`), optionally the identifier `Maybe`, one or more `Type`, separated by `|` - eg. `Number`, `String | Date`, `Maybe Number`, `Maybe Boolean | String`\n* __Structure__ = `Fields`, or a `Tuple`, or an `Array` - eg. `{x: Number}`, `(String, Number)`, `[Date]`\n* __Fields__ = a `{`, followed one or more `Field` separated by a comma `,` (trailing comma `,` is permitted), optionally an `...` (always preceded by a comma `,`), followed by a `}` - eg. `{x: Number, y: String}`, `{k: Function, ...}`\n* __Field__ = an `Identifier`, followed by a colon `:`, followed by `Types` - eg. `x: Date | String`, `y: Boolean`\n* __Tuple__ = a `(`, followed by one or more `Types` separated by a comma `,` (trailing comma `,` is permitted), followed by a `)` - eg `(Date)`, `(Number, Date)`\n* __Array__ = a `[` followed by exactly one `Types` followed by a `]` - eg. `[Boolean]`, `[Boolean | Null]`\n\n### Guide\n\n`type-check` uses `Object.toString` to find out the basic type of a value. Specifically,\n\n```js\n{}.toString.call(VALUE).slice(8, -1)\n{}.toString.call(true).slice(8, -1) // 'Boolean'\n```\nA basic type, eg. `Number`, uses this check. This is much more versatile than using `typeof` - for example, with `document`, `typeof` produces `'object'` which isn't that useful, and our technique produces `'HTMLDocument'`.\n\nYou may check for multiple types by separating types with a `|`. The checker proceeds from left to right, and passes if the value is any of the types - eg. `String | Boolean` first checks if the value is a string, and then if it is a boolean. If it is none of those, then it returns false.\n\nAdding a `Maybe` in front of a list of multiple types is the same as also checking for `Null` and `Undefined` - eg. `Maybe String` is equivalent to `Undefined | Null | String`.\n\nYou may add a comment to remind you of what the type is for by following an identifier with a `::` before a type (or multiple types). The comment is simply thrown out.\n\nThe wildcard `*` matches all types.\n\nThere are three types of structures for checking the contents of a value: 'fields', 'tuple', and 'array'.\n\nIf used by itself, a 'fields' structure will pass with any type of object as long as it is an instance of `Object` and the properties pass - this allows for duck typing - eg. `{x: Boolean}`.\n\nTo check if the properties pass, and the value is of a certain type, you can specify the type - eg. `Error{message: String}`.\n\nIf you want to make a field optional, you can simply use `Maybe` - eg. `{x: Boolean, y: Maybe String}` will still pass if `y` is undefined (or null).\n\nIf you don't care if the value has properties beyond what you have specified, you can use the 'etc' operator `...` - eg. `{x: Boolean, ...}` will match an object with an `x` property that is a boolean, and with zero or more other properties.\n\nFor an array, you must specify one or more types (separated by `|`) - it will pass for something of any length as long as each element passes the types provided - eg. `[Number]`, `[Number | String]`.\n\nA tuple checks for a fixed number of elements, each of a potentially different type. Each element is separated by a comma - eg. `(String, Number)`.\n\nAn array and tuple structure check that the value is of type `Array` by default, but if another type is specified, they will check for that instead - eg. `Int32Array[Number]`. You can use the wildcard `*` to search for any type at all.\n\nCheck out the [type precedence](https://github.com/zaboco/type-precedence) library for type-check.\n\n## Options\n\nOptions is an object. It is an optional parameter to the `typeCheck` and `parsedTypeCheck` functions. The only current option is `customTypes`.\n\n<a name=\"custom-types\" />\n### Custom Types\n\n__Example:__\n\n```js\nvar options = {\n  customTypes: {\n    Even: {\n      typeOf: 'Number',\n      validate: function(x) {\n        return x % 2 === 0;\n      }\n    }\n  }\n};\ntypeCheck('Even', 2, options); // true\ntypeCheck('Even', 3, options); // false\n```\n\n`customTypes` allows you to set up custom types for validation. The value of this is an object. The keys of the object are the types you will be matching. Each value of the object will be an object having a `typeOf` property - a string, and `validate` property - a function.\n\nThe `typeOf` property is the type the value should be, and `validate` is a function which should return true if the value is of that type. `validate` receives one parameter, which is the value that we are checking.\n\n## Technical About\n\n`type-check` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It also uses the [prelude.ls](http://preludels.com/) library.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "prelude-ls": "~1.1.2"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/type-check",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Light ECMAScript (JavaScript) Value Notation - human written, concise, typed, flexible",
          "devDependencies": {
            "istanbul": "~0.4.1",
            "livescript": "~1.4.0",
            "mocha": "~2.3.4"
          },
          "engines": {
            "node": ">= 0.8.0"
          },
          "files": [
            "lib",
            "README.md",
            "LICENSE"
          ],
          "homepage": "https://github.com/gkz/levn",
          "keywords": [
            "levn",
            "light",
            "ecmascript",
            "value",
            "notation",
            "json",
            "typed",
            "human",
            "concise",
            "typed",
            "flexible"
          ],
          "license": "MIT",
          "main": "./lib/",
          "name": "levn",
          "repository": {
            "type": "git",
            "url": "git://github.com/gkz/levn.git"
          },
          "scripts": {
            "test": "make test"
          },
          "version": "0.3.0",
          "readme": "# levn [![Build Status](https://travis-ci.org/gkz/levn.png)](https://travis-ci.org/gkz/levn) <a name=\"levn\" />\n__Light ECMAScript (JavaScript) Value Notation__\nLevn is a library which allows you to parse a string into a JavaScript value based on an expected type. It is meant for short amounts of human entered data (eg. config files, command line arguments).\n\nLevn aims to concisely describe JavaScript values in text, and allow for the extraction and validation of those values. Levn uses [type-check](https://github.com/gkz/type-check) for its type format, and to validate the results. MIT license. Version 0.3.0.\n\n__How is this different than JSON?__ levn is meant to be written by humans only, is (due to the previous point) much more concise, can be validated against supplied types, has regex and date literals, and can easily be extended with custom types. On the other hand, it is probably slower and thus less efficient at transporting large amounts of data, which is fine since this is not its purpose.\n\n    npm install levn\n\nFor updates on levn, [follow me on twitter](https://twitter.com/gkzahariev).\n\n\n## Quick Examples\n\n```js\nvar parse = require('levn').parse;\nparse('Number', '2');      // 2\nparse('String', '2');      // '2'\nparse('String', 'levn');   // 'levn'\nparse('String', 'a b');    // 'a b'\nparse('Boolean', 'true');  // true\n\nparse('Date', '#2011-11-11#'); // (Date object)\nparse('Date', '2011-11-11');   // (Date object)\nparse('RegExp', '/[a-z]/gi');  // /[a-z]/gi\nparse('RegExp', 're');         // /re/\nparse('Int', '2');             // 2\n\nparse('Number | String', 'str'); // 'str'\nparse('Number | String', '2');   // 2\n\nparse('[Number]', '[1,2,3]');                      // [1,2,3]\nparse('(String, Boolean)', '(hi, false)');         // ['hi', false]\nparse('{a: String, b: Number}', '{a: str, b: 2}'); // {a: 'str', b: 2}\n\n// at the top level, you can ommit surrounding delimiters\nparse('[Number]', '1,2,3');                      // [1,2,3]\nparse('(String, Boolean)', 'hi, false');         // ['hi', false]\nparse('{a: String, b: Number}', 'a: str, b: 2'); // {a: 'str', b: 2}\n\n// wildcard - auto choose type\nparse('*', '[hi,(null,[42]),{k: true}]'); // ['hi', [null, [42]], {k: true}]\n```\n## Usage\n\n`require('levn');` returns an object that exposes three properties. `VERSION` is the current version of the library as a string. `parse` and `parsedTypeParse` are functions.\n\n```js\n// parse(type, input, options);\nparse('[Number]', '1,2,3'); // [1, 2, 3]\n\n// parsedTypeParse(parsedType, input, options);\nvar parsedType = require('type-check').parseType('[Number]');\nparsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]\n```\n\n### parse(type, input, options)\n\n`parse` casts the string `input` into a JavaScript value according to the specified `type` in the [type format](https://github.com/gkz/type-check#type-format) (and taking account the optional `options`) and returns the resulting JavaScript value.\n\n##### arguments\n* type - `String` - the type written in the [type format](https://github.com/gkz/type-check#type-format) which to check against\n* input - `String` - the value written in the [levn format](#levn-format)\n* options - `Maybe Object` - an optional parameter specifying additional [options](#options)\n\n##### returns\n`*` - the resulting JavaScript value\n\n##### example\n```js\nparse('[Number]', '1,2,3'); // [1, 2, 3]\n```\n\n### parsedTypeParse(parsedType, input, options)\n\n`parsedTypeParse` casts the string `input` into a JavaScript value according to the specified `type` which has already been parsed (and taking account the optional `options`) and returns the resulting JavaScript value. You can parse a type using the [type-check](https://github.com/gkz/type-check) library's `parseType` function.\n\n##### arguments\n* type - `Object` - the type in the parsed type format which to check against\n* input - `String` - the value written in the [levn format](#levn-format)\n* options - `Maybe Object` - an optional parameter specifying additional [options](#options)\n\n##### returns\n`*` - the resulting JavaScript value\n\n##### example\n```js\nvar parsedType = require('type-check').parseType('[Number]');\nparsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]\n```\n\n## Levn Format\n\nLevn can use the type information you provide to choose the appropriate value to produce from the input. For the same input, it will choose a different output value depending on the type provided. For example, `parse('Number', '2')` will produce the number `2`, but `parse('String', '2')` will produce the string `\"2\"`.\n\nIf you do not provide type information, and simply use `*`, levn will parse the input according the unambiguous \"explicit\" mode, which we will now detail - you can also set the `explicit` option to true manually in the [options](#options).\n\n* `\"string\"`, `'string'` are parsed as a String, eg. `\"a msg\"` is `\"a msg\"`\n* `#date#` is parsed as a Date, eg. `#2011-11-11#` is `new Date('2011-11-11')`\n* `/regexp/flags` is parsed as a RegExp, eg. `/re/gi` is `/re/gi`\n* `undefined`, `null`, `NaN`, `true`, and `false` are all their JavaScript equivalents\n* `[element1, element2, etc]` is an Array, and the casting procedure is recursively applied to each element. Eg. `[1,2,3]` is `[1,2,3]`.\n* `(element1, element2, etc)` is an tuple, and the casting procedure is recursively applied to each element. Eg. `(1, a)` is `(1, a)` (is `[1, 'a']`).\n* `{key1: val1, key2: val2, ...}` is an Object, and the casting procedure is recursively applied to each property. Eg. `{a: 1, b: 2}` is `{a: 1, b: 2}`.\n* Any test which does not fall under the above, and which does not contain special characters (`[``]``(``)``{``}``:``,`) is a string, eg. `$12- blah` is `\"$12- blah\"`.\n\nIf you do provide type information, you can make your input more concise as the program already has some information about what it expects. Please see the [type format](https://github.com/gkz/type-check#type-format) section of [type-check](https://github.com/gkz/type-check) for more information about how to specify types. There are some rules about what levn can do with the information:\n\n* If a String is expected, and only a String, all characters of the input (including any special ones) will become part of the output. Eg. `[({})]` is `\"[({})]\"`, and `\"hi\"` is `'\"hi\"'`.\n* If a Date is expected, the surrounding `#` can be omitted from date literals. Eg. `2011-11-11` is `new Date('2011-11-11')`.\n* If a RegExp is expected, no flags need to be specified, and the regex is not using any of the special characters,the opening and closing `/` can be omitted - this will have the affect of setting the source of the regex to the input. Eg. `regex` is `/regex/`.\n* If an Array is expected, and it is the root node (at the top level), the opening `[` and closing `]` can be omitted. Eg. `1,2,3` is `[1,2,3]`.\n* If a tuple is expected, and it is the root node (at the top level), the opening `(` and closing `)` can be omitted. Eg. `1, a` is `(1, a)` (is `[1, 'a']`).\n* If an Object is expected, and it is the root node (at the top level), the opening `{` and closing `}` can be omitted. Eg `a: 1, b: 2` is `{a: 1, b: 2}`.\n\nIf you list multiple types (eg. `Number | String`), it will first attempt to cast to the first type and then validate - if the validation fails it will move on to the next type and so forth, left to right. You must be careful as some types will succeed with any input, such as String. Thus put String at the end of your list. In non-explicit mode, Date and RegExp will succeed with a large variety of input - also be careful with these and list them near the end if not last in your list.\n\nWhitespace between special characters and elements is inconsequential.\n\n## Options\n\nOptions is an object. It is an optional parameter to the `parse` and `parsedTypeParse` functions.\n\n### Explicit\n\nA `Boolean`. By default it is `false`.\n\n__Example:__\n\n```js\nparse('RegExp', 're', {explicit: false});          // /re/\nparse('RegExp', 're', {explicit: true});           // Error: ... does not type check...\nparse('RegExp | String', 're', {explicit: true});  // 're'\n```\n\n`explicit` sets whether to be in explicit mode or not. Using `*` automatically activates explicit mode. For more information, read the [levn format](#levn-format) section.\n\n### customTypes\n\nAn `Object`. Empty `{}` by default.\n\n__Example:__\n\n```js\nvar options = {\n  customTypes: {\n    Even: {\n      typeOf: 'Number',\n      validate: function (x) {\n        return x % 2 === 0;\n      },\n      cast: function (x) {\n        return {type: 'Just', value: parseInt(x)};\n      }\n    }\n  }\n}\nparse('Even', '2', options); // 2\nparse('Even', '3', options); // Error: Value: \"3\" does not type check...\n```\n\n__Another Example:__\n```js\nfunction Person(name, age){\n  this.name = name;\n  this.age = age;\n}\nvar options = {\n  customTypes: {\n    Person: {\n      typeOf: 'Object',\n      validate: function (x) {\n        x instanceof Person;\n      },\n      cast: function (value, options, typesCast) {\n        var name, age;\n        if ({}.toString.call(value).slice(8, -1) !== 'Object') {\n          return {type: 'Nothing'};\n        }\n        name = typesCast(value.name, [{type: 'String'}], options);\n        age = typesCast(value.age, [{type: 'Numger'}], options);\n        return {type: 'Just', value: new Person(name, age)};\n    }\n  }\n}\nparse('Person', '{name: Laura, age: 25}', options); // Person {name: 'Laura', age: 25}\n```\n\n`customTypes` is an object whose keys are the name of the types, and whose values are an object with three properties, `typeOf`, `validate`, and `cast`. For more information about `typeOf` and `validate`, please see the [custom types](https://github.com/gkz/type-check#custom-types) section of type-check.\n\n`cast` is a function which receives three arguments, the value under question, options, and the typesCast function. In `cast`, attempt to cast the value into the specified type. If you are successful, return an object in the format `{type: 'Just', value: CAST-VALUE}`, if you know it won't work, return `{type: 'Nothing'}`.  You can use the `typesCast` function to cast any child values. Remember to pass `options` to it. In your function you can also check for `options.explicit` and act accordingly.\n\n## Technical About\n\n`levn` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It uses [type-check](https://github.com/gkz/type-check) to both parse types and validate values. It also uses the [prelude.ls](http://preludels.com/) library.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "prelude-ls": "~1.1.2",
            "type-check": "~0.3.2"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/levn",
          "error": "[Circular]",
          "extraneous": false
        },
        "lodash": {
          "_from": "lodash@^4.0.0",
          "_id": "lodash@4.17.4",
          "_inBundle": false,
          "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
          "_location": "/lodash",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
          "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
          "_spec": "lodash@^4.0.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "contributors": "[Circular]",
          "deprecated": false,
          "description": "Lodash modular utilities.",
          "homepage": "https://lodash.com/",
          "icon": "https://lodash.com/icon.svg",
          "keywords": "[Circular]",
          "license": "MIT",
          "main": "lodash.js",
          "name": "lodash",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "4.17.4",
          "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
          "readmeFilename": "README.md",
          "dependencies": {},
          "devDependencies": "[Circular]",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/lodash",
          "error": "[Circular]",
          "extraneous": false
        },
        "mkdirp": {
          "_from": "mkdirp@^0.5.0",
          "_id": "mkdirp@0.5.1",
          "_inBundle": false,
          "_integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",
          "_location": "/mkdirp",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",
          "_shasum": "30057438eac6cf7f8c4767f38648d6697d75c903",
          "_spec": "mkdirp@^0.5.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": "[Circular]",
          "bin": "[Circular]",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "dependencies": {
            "minimist": {
              "_from": "minimist@0.0.8",
              "_id": "minimist@0.0.8",
              "_inBundle": false,
              "_integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=",
              "_location": "/minimist",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "minimist@0.0.8",
                "name": "minimist",
                "escapedName": "minimist",
                "rawSpec": "0.0.8",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.0.8"
              },
              "_requiredBy": [
                "/mkdirp"
              ],
              "_resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",
              "_shasum": "857fcabfc3397d2625b8228262e86aa7a011b05d",
              "_spec": "minimist@0.0.8",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/mkdirp",
              "author": {
                "name": "James Halliday",
                "email": "mail@substack.net",
                "url": "http://substack.net"
              },
              "bugs": {
                "url": "https://github.com/substack/minimist/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "parse argument options",
              "devDependencies": {
                "tap": "~0.4.0",
                "tape": "~1.0.4"
              },
              "homepage": "https://github.com/substack/minimist",
              "keywords": [
                "argv",
                "getopt",
                "parser",
                "optimist"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "minimist",
              "repository": {
                "type": "git",
                "url": "git://github.com/substack/minimist.git"
              },
              "scripts": {
                "test": "tap test/*.js"
              },
              "testling": {
                "files": "test/*.js",
                "browsers": [
                  "ie/6..latest",
                  "ff/5",
                  "firefox/latest",
                  "chrome/10",
                  "chrome/latest",
                  "safari/5.1",
                  "safari/latest",
                  "opera/12"
                ]
              },
              "version": "0.0.8",
              "readme": "# minimist\n\nparse argument options\n\nThis module is the guts of optimist's argument parser without all the\nfanciful decoration.\n\n[![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)\n\n[![build status](https://secure.travis-ci.org/substack/minimist.png)](http://travis-ci.org/substack/minimist)\n\n# example\n\n``` js\nvar argv = require('minimist')(process.argv.slice(2));\nconsole.dir(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: 'beep', b: 'boop' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ 'foo', 'bar', 'baz' ],\n  x: 3,\n  y: 4,\n  n: 5,\n  a: true,\n  b: true,\n  c: true,\n  beep: 'boop' }\n```\n\n# methods\n\n``` js\nvar parseArgs = require('minimist')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn't have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `'--'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a string or array of strings to always treat as booleans\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT\n",
              "readmeFilename": "readme.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/minimist",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Recursively mkdir, like `mkdir -p`",
          "devDependencies": "[Circular]",
          "homepage": "https://github.com/substack/node-mkdirp#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "main": "index.js",
          "name": "mkdirp",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "0.5.1",
          "readme": "# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require('mkdirp');\n    \nmkdirp('/tmp/foo/bar/baz', function (err) {\n    if (err) console.error(err)\n    else console.log('pow!')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require('mkdirp');\n```\n\n## mkdirp(dir, opts, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `opts.mode`. If `opts` is a non-object, it will be treated as\nthe `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdir(path, mode, cb)` and\n`opts.fs.stat(path, cb)`.\n\n## mkdirp.sync(dir, opts)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `opts.mode`. If `opts` is a non-object, it will be\ntreated as the `opts.mode`.\n\nIf `opts.mode` isn't specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdirSync(path, mode)` and\n`opts.fs.statSync(path)`.\n\n# usage\n\nThis package also ships with a `mkdirp` command.\n\n```\nusage: mkdirp [DIR1,DIR2..] {OPTIONS}\n\n  Create each supplied directory including any necessary parent directories that\n  don't yet exist.\n  \n  If the directory already exists, do nothing.\n\nOPTIONS are:\n\n  -m, --mode   If a directory needs to be created, set the mode as an octal\n               permission string.\n\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\nto get the library, or\n\n```\nnpm install -g mkdirp\n```\n\nto get the command.\n\n# license\n\nMIT\n",
          "readmeFilename": "readme.markdown",
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/mkdirp",
          "error": "[Circular]",
          "extraneous": false
        },
        "optionator": {
          "_from": "optionator@^0.8.1",
          "_id": "optionator@0.8.2",
          "_inBundle": false,
          "_integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",
          "_location": "/optionator",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "optionator@^0.8.1",
            "name": "optionator",
            "escapedName": "optionator",
            "rawSpec": "^0.8.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.8.1"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",
          "_shasum": "364c5e409d3f4d6301d6c0b4c05bba50180aeb64",
          "_spec": "optionator@^0.8.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "George Zahariev",
            "email": "z@georgezahariev.com"
          },
          "bugs": {
            "url": "https://github.com/gkz/optionator/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "deep-is": {
              "_from": "deep-is@~0.1.3",
              "_id": "deep-is@0.1.3",
              "_inBundle": false,
              "_integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",
              "_location": "/deep-is",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "deep-is@~0.1.3",
                "name": "deep-is",
                "escapedName": "deep-is",
                "rawSpec": "~0.1.3",
                "saveSpec": "[Circular]",
                "fetchSpec": "~0.1.3"
              },
              "_requiredBy": [
                "/optionator"
              ],
              "_resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",
              "_shasum": "b369d6fb5dbc13eecf524f91b070feedc357cf34",
              "_spec": "deep-is@~0.1.3",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/optionator",
              "author": {
                "name": "Thorsten Lorenz",
                "email": "thlorenz@gmx.de",
                "url": "http://thlorenz.com"
              },
              "bugs": {
                "url": "https://github.com/thlorenz/deep-is/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "node's assert.deepEqual algorithm except for NaN being equal to NaN",
              "devDependencies": {
                "tape": "~1.0.2"
              },
              "directories": {
                "lib": ".",
                "example": "example",
                "test": "test"
              },
              "homepage": "https://github.com/thlorenz/deep-is#readme",
              "keywords": [
                "equality",
                "equal",
                "compare"
              ],
              "license": {
                "type": "MIT",
                "url": "https://github.com/thlorenz/deep-is/blob/master/LICENSE"
              },
              "main": "index.js",
              "name": "deep-is",
              "repository": {
                "type": "git",
                "url": "git+ssh://git@github.com/thlorenz/deep-is.git"
              },
              "scripts": {
                "test": "tape test/*.js"
              },
              "testling": {
                "files": "test/*.js",
                "browsers": {
                  "ie": [
                    6,
                    7,
                    8,
                    9
                  ],
                  "ff": [
                    3.5,
                    10,
                    15
                  ],
                  "chrome": [
                    10,
                    22
                  ],
                  "safari": [
                    5.1
                  ],
                  "opera": [
                    12
                  ]
                }
              },
              "version": "0.1.3",
              "readme": "deep-is\n==========\n\nNode's `assert.deepEqual() algorithm` as a standalone module. Exactly like\n[deep-equal](https://github.com/substack/node-deep-equal) except for the fact that `deepEqual(NaN, NaN) === true`.\n\nThis module is around [5 times faster](https://gist.github.com/2790507)\nthan wrapping `assert.deepEqual()` in a `try/catch`.\n\n[![browser support](http://ci.testling.com/thlorenz/deep-is.png)](http://ci.testling.com/thlorenz/deep-is)\n\n[![build status](https://secure.travis-ci.org/thlorenz/deep-is.png)](http://travis-ci.org/thlorenz/deep-is)\n\nexample\n=======\n\n``` js\nvar equal = require('deep-is');\nconsole.dir([\n    equal(\n        { a : [ 2, 3 ], b : [ 4 ] },\n        { a : [ 2, 3 ], b : [ 4 ] }\n    ),\n    equal(\n        { x : 5, y : [6] },\n        { x : 5, y : 6 }\n    )\n]);\n```\n\nmethods\n=======\n\nvar deepIs = require('deep-is')\n\ndeepIs(a, b)\n---------------\n\nCompare objects `a` and `b`, returning whether they are equal according to a\nrecursive equality algorithm.\n\ninstall\n=======\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install deep-is\n```\n\ntest\n====\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm test\n```\n\nlicense\n=======\n\nCopyright (c) 2012, 2013 Thorsten Lorenz <thlorenz@gmx.de>\nCopyright (c) 2012 James Halliday <mail@substack.net>\n\nDerived largely from node's assert module, which has the copyright statement:\n\nCopyright (c) 2009 Thomas Robinson <280north.com>\n\nReleased under the MIT license, see LICENSE for details.\n",
              "readmeFilename": "README.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/deep-is",
              "error": "[Circular]",
              "extraneous": false
            },
            "fast-levenshtein": {
              "_from": "fast-levenshtein@~2.0.4",
              "_id": "fast-levenshtein@2.0.6",
              "_inBundle": false,
              "_integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",
              "_location": "/fast-levenshtein",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "fast-levenshtein@~2.0.4",
                "name": "fast-levenshtein",
                "escapedName": "fast-levenshtein",
                "rawSpec": "~2.0.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "~2.0.4"
              },
              "_requiredBy": [
                "/optionator"
              ],
              "_resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
              "_shasum": "3d8a5c66883a16a30ca8643e851f19baa7797917",
              "_spec": "fast-levenshtein@~2.0.4",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/optionator",
              "author": {
                "name": "Ramesh Nair",
                "email": "ram@hiddentao.com",
                "url": "http://www.hiddentao.com/"
              },
              "bugs": {
                "url": "https://github.com/hiddentao/fast-levenshtein/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Efficient implementation of Levenshtein algorithm  with locale-specific collator support.",
              "devDependencies": {
                "chai": "~1.5.0",
                "grunt": "~0.4.1",
                "grunt-benchmark": "~0.2.0",
                "grunt-cli": "^1.2.0",
                "grunt-contrib-jshint": "~0.4.3",
                "grunt-contrib-uglify": "~0.2.0",
                "grunt-mocha-test": "~0.2.2",
                "grunt-npm-install": "~0.1.0",
                "load-grunt-tasks": "~0.6.0",
                "lodash": "^4.0.1",
                "mocha": "~1.9.0"
              },
              "files": [
                "levenshtein.js"
              ],
              "homepage": "https://github.com/hiddentao/fast-levenshtein#readme",
              "keywords": [
                "levenshtein",
                "distance",
                "string"
              ],
              "license": "MIT",
              "main": "levenshtein.js",
              "name": "fast-levenshtein",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/hiddentao/fast-levenshtein.git"
              },
              "scripts": {
                "benchmark": "grunt benchmark",
                "build": "grunt build",
                "prepublish": "npm run build",
                "test": "mocha"
              },
              "version": "2.0.6",
              "readme": "# fast-levenshtein - Levenshtein algorithm in Javascript\n\n[![Build Status](https://secure.travis-ci.org/hiddentao/fast-levenshtein.png)](http://travis-ci.org/hiddentao/fast-levenshtein)\n[![NPM module](https://badge.fury.io/js/fast-levenshtein.png)](https://badge.fury.io/js/fast-levenshtein)\n[![NPM downloads](https://img.shields.io/npm/dm/fast-levenshtein.svg?maxAge=2592000)](https://www.npmjs.com/package/fast-levenshtein)\n[![Follow on Twitter](https://img.shields.io/twitter/url/http/shields.io.svg?style=social&label=Follow&maxAge=2592000)](https://twitter.com/hiddentao)\n\nAn efficient Javascript implementation of the [Levenshtein algorithm](http://en.wikipedia.org/wiki/Levenshtein_distance) with locale-specific collator support.\n\n## Features\n\n* Works in node.js and in the browser.\n* Better performance than other implementations by not needing to store the whole matrix ([more info](http://www.codeproject.com/Articles/13525/Fast-memory-efficient-Levenshtein-algorithm)).\n* Locale-sensitive string comparisions if needed.\n* Comprehensive test suite and performance benchmark.\n* Small: <1 KB minified and gzipped\n\n## Installation\n\n### node.js\n\nInstall using [npm](http://npmjs.org/):\n\n```bash\n$ npm install fast-levenshtein\n```\n\n### Browser\n\nUsing bower:\n\n```bash\n$ bower install fast-levenshtein\n```\n\nIf you are not using any module loader system then the API will then be accessible via the `window.Levenshtein` object.\n\n## Examples\n\n**Default usage**\n\n```javascript\nvar levenshtein = require('fast-levenshtein');\n\nvar distance = levenshtein.get('back', 'book');   // 2\nvar distance = levenshtein.get('ææä½ ', 'æå«ä½ ');   // 1\n```\n\n**Locale-sensitive string comparisons**\n\nIt supports using [Intl.Collator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Collator) for locale-sensitive  string comparisons:\n\n```javascript\nvar levenshtein = require('fast-levenshtein');\n\nlevenshtein.get('mikailovitch', 'MikhaÃ¯lovitch', { useCollator: true});\n// 1\n```\n\n## Building and Testing\n\nTo build the code and run the tests:\n\n```bash\n$ npm install -g grunt-cli\n$ npm install\n$ npm run build\n```\n\n## Performance\n\n_Thanks to [Titus Wormer](https://github.com/wooorm) for [encouraging me](https://github.com/hiddentao/fast-levenshtein/issues/1) to do this._\n\nBenchmarked against other node.js levenshtein distance modules (on Macbook Air 2012, Core i7, 8GB RAM):\n\n```bash\nRunning suite Implementation comparison [benchmark/speed.js]...\n>> levenshtein-edit-distance x 234 ops/sec Â±3.02% (73 runs sampled)\n>> levenshtein-component x 422 ops/sec Â±4.38% (83 runs sampled)\n>> levenshtein-deltas x 283 ops/sec Â±3.83% (78 runs sampled)\n>> natural x 255 ops/sec Â±0.76% (88 runs sampled)\n>> levenshtein x 180 ops/sec Â±3.55% (86 runs sampled)\n>> fast-levenshtein x 1,792 ops/sec Â±2.72% (95 runs sampled)\nBenchmark done.\nFastest test is fast-levenshtein at 4.2x faster than levenshtein-component\n```\n\nYou can run this benchmark yourself by doing:\n\n```bash\n$ npm install\n$ npm run build\n$ npm run benchmark\n```\n\n## Contributing\n\nIf you wish to submit a pull request please update and/or create new tests for any changes you make and ensure the grunt build passes.\n\nSee [CONTRIBUTING.md](https://github.com/hiddentao/fast-levenshtein/blob/master/CONTRIBUTING.md) for details.\n\n## License\n\nMIT - see [LICENSE.md](https://github.com/hiddentao/fast-levenshtein/blob/master/LICENSE.md)\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/fast-levenshtein",
              "error": "[Circular]",
              "extraneous": false
            },
            "levn": {
              "_from": "levn@^0.3.0",
              "_id": "levn@0.3.0",
              "_inBundle": false,
              "_integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",
              "_location": "/levn",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",
              "_shasum": "3b09924edf9f083c0490fdd4c0bc4421e04764ee",
              "_spec": "levn@^0.3.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Light ECMAScript (JavaScript) Value Notation - human written, concise, typed, flexible",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/gkz/levn",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "./lib/",
              "name": "levn",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.3.0",
              "readme": "# levn [![Build Status](https://travis-ci.org/gkz/levn.png)](https://travis-ci.org/gkz/levn) <a name=\"levn\" />\n__Light ECMAScript (JavaScript) Value Notation__\nLevn is a library which allows you to parse a string into a JavaScript value based on an expected type. It is meant for short amounts of human entered data (eg. config files, command line arguments).\n\nLevn aims to concisely describe JavaScript values in text, and allow for the extraction and validation of those values. Levn uses [type-check](https://github.com/gkz/type-check) for its type format, and to validate the results. MIT license. Version 0.3.0.\n\n__How is this different than JSON?__ levn is meant to be written by humans only, is (due to the previous point) much more concise, can be validated against supplied types, has regex and date literals, and can easily be extended with custom types. On the other hand, it is probably slower and thus less efficient at transporting large amounts of data, which is fine since this is not its purpose.\n\n    npm install levn\n\nFor updates on levn, [follow me on twitter](https://twitter.com/gkzahariev).\n\n\n## Quick Examples\n\n```js\nvar parse = require('levn').parse;\nparse('Number', '2');      // 2\nparse('String', '2');      // '2'\nparse('String', 'levn');   // 'levn'\nparse('String', 'a b');    // 'a b'\nparse('Boolean', 'true');  // true\n\nparse('Date', '#2011-11-11#'); // (Date object)\nparse('Date', '2011-11-11');   // (Date object)\nparse('RegExp', '/[a-z]/gi');  // /[a-z]/gi\nparse('RegExp', 're');         // /re/\nparse('Int', '2');             // 2\n\nparse('Number | String', 'str'); // 'str'\nparse('Number | String', '2');   // 2\n\nparse('[Number]', '[1,2,3]');                      // [1,2,3]\nparse('(String, Boolean)', '(hi, false)');         // ['hi', false]\nparse('{a: String, b: Number}', '{a: str, b: 2}'); // {a: 'str', b: 2}\n\n// at the top level, you can ommit surrounding delimiters\nparse('[Number]', '1,2,3');                      // [1,2,3]\nparse('(String, Boolean)', 'hi, false');         // ['hi', false]\nparse('{a: String, b: Number}', 'a: str, b: 2'); // {a: 'str', b: 2}\n\n// wildcard - auto choose type\nparse('*', '[hi,(null,[42]),{k: true}]'); // ['hi', [null, [42]], {k: true}]\n```\n## Usage\n\n`require('levn');` returns an object that exposes three properties. `VERSION` is the current version of the library as a string. `parse` and `parsedTypeParse` are functions.\n\n```js\n// parse(type, input, options);\nparse('[Number]', '1,2,3'); // [1, 2, 3]\n\n// parsedTypeParse(parsedType, input, options);\nvar parsedType = require('type-check').parseType('[Number]');\nparsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]\n```\n\n### parse(type, input, options)\n\n`parse` casts the string `input` into a JavaScript value according to the specified `type` in the [type format](https://github.com/gkz/type-check#type-format) (and taking account the optional `options`) and returns the resulting JavaScript value.\n\n##### arguments\n* type - `String` - the type written in the [type format](https://github.com/gkz/type-check#type-format) which to check against\n* input - `String` - the value written in the [levn format](#levn-format)\n* options - `Maybe Object` - an optional parameter specifying additional [options](#options)\n\n##### returns\n`*` - the resulting JavaScript value\n\n##### example\n```js\nparse('[Number]', '1,2,3'); // [1, 2, 3]\n```\n\n### parsedTypeParse(parsedType, input, options)\n\n`parsedTypeParse` casts the string `input` into a JavaScript value according to the specified `type` which has already been parsed (and taking account the optional `options`) and returns the resulting JavaScript value. You can parse a type using the [type-check](https://github.com/gkz/type-check) library's `parseType` function.\n\n##### arguments\n* type - `Object` - the type in the parsed type format which to check against\n* input - `String` - the value written in the [levn format](#levn-format)\n* options - `Maybe Object` - an optional parameter specifying additional [options](#options)\n\n##### returns\n`*` - the resulting JavaScript value\n\n##### example\n```js\nvar parsedType = require('type-check').parseType('[Number]');\nparsedTypeParse(parsedType, '1,2,3'); // [1, 2, 3]\n```\n\n## Levn Format\n\nLevn can use the type information you provide to choose the appropriate value to produce from the input. For the same input, it will choose a different output value depending on the type provided. For example, `parse('Number', '2')` will produce the number `2`, but `parse('String', '2')` will produce the string `\"2\"`.\n\nIf you do not provide type information, and simply use `*`, levn will parse the input according the unambiguous \"explicit\" mode, which we will now detail - you can also set the `explicit` option to true manually in the [options](#options).\n\n* `\"string\"`, `'string'` are parsed as a String, eg. `\"a msg\"` is `\"a msg\"`\n* `#date#` is parsed as a Date, eg. `#2011-11-11#` is `new Date('2011-11-11')`\n* `/regexp/flags` is parsed as a RegExp, eg. `/re/gi` is `/re/gi`\n* `undefined`, `null`, `NaN`, `true`, and `false` are all their JavaScript equivalents\n* `[element1, element2, etc]` is an Array, and the casting procedure is recursively applied to each element. Eg. `[1,2,3]` is `[1,2,3]`.\n* `(element1, element2, etc)` is an tuple, and the casting procedure is recursively applied to each element. Eg. `(1, a)` is `(1, a)` (is `[1, 'a']`).\n* `{key1: val1, key2: val2, ...}` is an Object, and the casting procedure is recursively applied to each property. Eg. `{a: 1, b: 2}` is `{a: 1, b: 2}`.\n* Any test which does not fall under the above, and which does not contain special characters (`[``]``(``)``{``}``:``,`) is a string, eg. `$12- blah` is `\"$12- blah\"`.\n\nIf you do provide type information, you can make your input more concise as the program already has some information about what it expects. Please see the [type format](https://github.com/gkz/type-check#type-format) section of [type-check](https://github.com/gkz/type-check) for more information about how to specify types. There are some rules about what levn can do with the information:\n\n* If a String is expected, and only a String, all characters of the input (including any special ones) will become part of the output. Eg. `[({})]` is `\"[({})]\"`, and `\"hi\"` is `'\"hi\"'`.\n* If a Date is expected, the surrounding `#` can be omitted from date literals. Eg. `2011-11-11` is `new Date('2011-11-11')`.\n* If a RegExp is expected, no flags need to be specified, and the regex is not using any of the special characters,the opening and closing `/` can be omitted - this will have the affect of setting the source of the regex to the input. Eg. `regex` is `/regex/`.\n* If an Array is expected, and it is the root node (at the top level), the opening `[` and closing `]` can be omitted. Eg. `1,2,3` is `[1,2,3]`.\n* If a tuple is expected, and it is the root node (at the top level), the opening `(` and closing `)` can be omitted. Eg. `1, a` is `(1, a)` (is `[1, 'a']`).\n* If an Object is expected, and it is the root node (at the top level), the opening `{` and closing `}` can be omitted. Eg `a: 1, b: 2` is `{a: 1, b: 2}`.\n\nIf you list multiple types (eg. `Number | String`), it will first attempt to cast to the first type and then validate - if the validation fails it will move on to the next type and so forth, left to right. You must be careful as some types will succeed with any input, such as String. Thus put String at the end of your list. In non-explicit mode, Date and RegExp will succeed with a large variety of input - also be careful with these and list them near the end if not last in your list.\n\nWhitespace between special characters and elements is inconsequential.\n\n## Options\n\nOptions is an object. It is an optional parameter to the `parse` and `parsedTypeParse` functions.\n\n### Explicit\n\nA `Boolean`. By default it is `false`.\n\n__Example:__\n\n```js\nparse('RegExp', 're', {explicit: false});          // /re/\nparse('RegExp', 're', {explicit: true});           // Error: ... does not type check...\nparse('RegExp | String', 're', {explicit: true});  // 're'\n```\n\n`explicit` sets whether to be in explicit mode or not. Using `*` automatically activates explicit mode. For more information, read the [levn format](#levn-format) section.\n\n### customTypes\n\nAn `Object`. Empty `{}` by default.\n\n__Example:__\n\n```js\nvar options = {\n  customTypes: {\n    Even: {\n      typeOf: 'Number',\n      validate: function (x) {\n        return x % 2 === 0;\n      },\n      cast: function (x) {\n        return {type: 'Just', value: parseInt(x)};\n      }\n    }\n  }\n}\nparse('Even', '2', options); // 2\nparse('Even', '3', options); // Error: Value: \"3\" does not type check...\n```\n\n__Another Example:__\n```js\nfunction Person(name, age){\n  this.name = name;\n  this.age = age;\n}\nvar options = {\n  customTypes: {\n    Person: {\n      typeOf: 'Object',\n      validate: function (x) {\n        x instanceof Person;\n      },\n      cast: function (value, options, typesCast) {\n        var name, age;\n        if ({}.toString.call(value).slice(8, -1) !== 'Object') {\n          return {type: 'Nothing'};\n        }\n        name = typesCast(value.name, [{type: 'String'}], options);\n        age = typesCast(value.age, [{type: 'Numger'}], options);\n        return {type: 'Just', value: new Person(name, age)};\n    }\n  }\n}\nparse('Person', '{name: Laura, age: 25}', options); // Person {name: 'Laura', age: 25}\n```\n\n`customTypes` is an object whose keys are the name of the types, and whose values are an object with three properties, `typeOf`, `validate`, and `cast`. For more information about `typeOf` and `validate`, please see the [custom types](https://github.com/gkz/type-check#custom-types) section of type-check.\n\n`cast` is a function which receives three arguments, the value under question, options, and the typesCast function. In `cast`, attempt to cast the value into the specified type. If you are successful, return an object in the format `{type: 'Just', value: CAST-VALUE}`, if you know it won't work, return `{type: 'Nothing'}`.  You can use the `typesCast` function to cast any child values. Remember to pass `options` to it. In your function you can also check for `options.explicit` and act accordingly.\n\n## Technical About\n\n`levn` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It uses [type-check](https://github.com/gkz/type-check) to both parse types and validate values. It also uses the [prelude.ls](http://preludels.com/) library.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/levn",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "levn"
            },
            "prelude-ls": {
              "_from": "prelude-ls@~1.1.2",
              "_id": "prelude-ls@1.1.2",
              "_inBundle": false,
              "_integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=",
              "_location": "/prelude-ls",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",
              "_shasum": "21932a549f5e52ffd9a827f570e04be62a97da54",
              "_spec": "prelude-ls@~1.1.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/levn",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "deprecated": false,
              "description": "prelude.ls is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript.",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "http://preludels.com",
              "keywords": "[Circular]",
              "licenses": "[Circular]",
              "main": "lib/",
              "name": "prelude-ls",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "1.1.2",
              "readme": "# prelude.ls [![Build Status](https://travis-ci.org/gkz/prelude-ls.png?branch=master)](https://travis-ci.org/gkz/prelude-ls)\n\nis a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, <a href=\"http://livescript.net\">LiveScript</a>.\n\nSee **[the prelude.ls site](http://preludels.com)** for examples, a reference, and more.\n\nYou can install via npm `npm install prelude-ls`\n\n### Development\n\n`make test` to test\n\n`make build` to build `lib` from `src`\n\n`make build-browser` to build browser versions\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/prelude-ls",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "prelude-ls"
            },
            "type-check": {
              "_from": "type-check@~0.3.2",
              "_id": "type-check@0.3.2",
              "_inBundle": false,
              "_integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",
              "_location": "/type-check",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",
              "_shasum": "5884cab512cf1d355e3fb784f30804b2b520db72",
              "_spec": "type-check@~0.3.2",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/levn",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "type-check allows you to check the types of JavaScript values at runtime with a Haskell like type syntax.",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/gkz/type-check",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "./lib/",
              "name": "type-check",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "0.3.2",
              "readme": "# type-check [![Build Status](https://travis-ci.org/gkz/type-check.png?branch=master)](https://travis-ci.org/gkz/type-check)\n\n<a name=\"type-check\" />\n\n`type-check` is a library which allows you to check the types of JavaScript values at runtime with a Haskell like type syntax. It is great for checking external input, for testing, or even for adding a bit of safety to your internal code. It is a major component of [levn](https://github.com/gkz/levn). MIT license. Version 0.3.2. Check out the [demo](http://gkz.github.io/type-check/).\n\nFor updates on `type-check`, [follow me on twitter](https://twitter.com/gkzahariev).\n\n    npm install type-check\n\n## Quick Examples\n\n```js\n// Basic types:\nvar typeCheck = require('type-check').typeCheck;\ntypeCheck('Number', 1);               // true\ntypeCheck('Number', 'str');           // false\ntypeCheck('Error', new Error);        // true\ntypeCheck('Undefined', undefined);    // true\n\n// Comment\ntypeCheck('count::Number', 1);        // true\n\n// One type OR another type:\ntypeCheck('Number | String', 2);      // true\ntypeCheck('Number | String', 'str');  // true\n\n// Wildcard, matches all types:\ntypeCheck('*', 2) // true\n\n// Array, all elements of a single type:\ntypeCheck('[Number]', [1, 2, 3]);                // true\ntypeCheck('[Number]', [1, 'str', 3]);            // false\n\n// Tuples, or fixed length arrays with elements of different types:\ntypeCheck('(String, Number)', ['str', 2]);       // true\ntypeCheck('(String, Number)', ['str']);          // false\ntypeCheck('(String, Number)', ['str', 2, 5]);    // false\n\n// Object properties:\ntypeCheck('{x: Number, y: Boolean}', {x: 2, y: false});             // true\ntypeCheck('{x: Number, y: Boolean}',       {x: 2});                 // false\ntypeCheck('{x: Number, y: Maybe Boolean}', {x: 2});                 // true\ntypeCheck('{x: Number, y: Boolean}',      {x: 2, y: false, z: 3});  // false\ntypeCheck('{x: Number, y: Boolean, ...}', {x: 2, y: false, z: 3});  // true\n\n// A particular type AND object properties:\ntypeCheck('RegExp{source: String, ...}', /re/i);          // true\ntypeCheck('RegExp{source: String, ...}', {source: 're'}); // false\n\n// Custom types:\nvar opt = {customTypes:\n  {Even: { typeOf: 'Number', validate: function(x) { return x % 2 === 0; }}}};\ntypeCheck('Even', 2, opt); // true\n\n// Nested:\nvar type = '{a: (String, [Number], {y: Array, ...}), b: Error{message: String, ...}}'\ntypeCheck(type, {a: ['hi', [1, 2, 3], {y: [1, 'ms']}], b: new Error('oh no')}); // true\n```\n\nCheck out the [type syntax format](#syntax) and [guide](#guide).\n\n## Usage\n\n`require('type-check');` returns an object that exposes four properties. `VERSION` is the current version of the library as a string. `typeCheck`, `parseType`, and `parsedTypeCheck` are functions.\n\n```js\n// typeCheck(type, input, options);\ntypeCheck('Number', 2);               // true\n\n// parseType(type);\nvar parsedType = parseType('Number'); // object\n\n// parsedTypeCheck(parsedType, input, options);\nparsedTypeCheck(parsedType, 2);       // true\n```\n\n### typeCheck(type, input, options)\n\n`typeCheck` checks a JavaScript value `input` against `type` written in the [type format](#type-format) (and taking account the optional `options`) and returns whether the `input` matches the `type`.\n\n##### arguments\n* type - `String` - the type written in the [type format](#type-format) which to check against\n* input - `*` - any JavaScript value, which is to be checked against the type\n* options - `Maybe Object` - an optional parameter specifying additional options, currently the only available option is specifying [custom types](#custom-types)\n\n##### returns\n`Boolean` - whether the input matches the type\n\n##### example\n```js\ntypeCheck('Number', 2); // true\n```\n\n### parseType(type)\n\n`parseType` parses string `type` written in the [type format](#type-format) into an object representing the parsed type.\n\n##### arguments\n* type - `String` - the type written in the [type format](#type-format) which to parse\n\n##### returns\n`Object` - an object in the parsed type format representing the parsed type\n\n##### example\n```js\nparseType('Number'); // [{type: 'Number'}]\n```\n### parsedTypeCheck(parsedType, input, options)\n\n`parsedTypeCheck` checks a JavaScript value `input` against parsed `type` in the parsed type format (and taking account the optional `options`) and returns whether the `input` matches the `type`. Use this in conjunction with `parseType` if you are going to use a type more than once.\n\n##### arguments\n* type - `Object` - the type in the parsed type format which to check against\n* input - `*` - any JavaScript value, which is to be checked against the type\n* options - `Maybe Object` - an optional parameter specifying additional options, currently the only available option is specifying [custom types](#custom-types)\n\n##### returns\n`Boolean` - whether the input matches the type\n\n##### example\n```js\nparsedTypeCheck([{type: 'Number'}], 2); // true\nvar parsedType = parseType('String');\nparsedTypeCheck(parsedType, 'str');     // true\n```\n\n<a name=\"type-format\" />\n## Type Format\n\n### Syntax\n\nWhite space is ignored. The root node is a __Types__.\n\n* __Identifier__ = `[\\$\\w]+` - a group of any lower or upper case letters, numbers, underscores, or dollar signs - eg. `String`\n* __Type__ = an `Identifier`, an `Identifier` followed by a `Structure`, just a `Structure`, or a wildcard `*` - eg. `String`, `Object{x: Number}`, `{x: Number}`, `Array{0: String, 1: Boolean, length: Number}`, `*`\n* __Types__ = optionally a comment (an `Indentifier` followed by a `::`), optionally the identifier `Maybe`, one or more `Type`, separated by `|` - eg. `Number`, `String | Date`, `Maybe Number`, `Maybe Boolean | String`\n* __Structure__ = `Fields`, or a `Tuple`, or an `Array` - eg. `{x: Number}`, `(String, Number)`, `[Date]`\n* __Fields__ = a `{`, followed one or more `Field` separated by a comma `,` (trailing comma `,` is permitted), optionally an `...` (always preceded by a comma `,`), followed by a `}` - eg. `{x: Number, y: String}`, `{k: Function, ...}`\n* __Field__ = an `Identifier`, followed by a colon `:`, followed by `Types` - eg. `x: Date | String`, `y: Boolean`\n* __Tuple__ = a `(`, followed by one or more `Types` separated by a comma `,` (trailing comma `,` is permitted), followed by a `)` - eg `(Date)`, `(Number, Date)`\n* __Array__ = a `[` followed by exactly one `Types` followed by a `]` - eg. `[Boolean]`, `[Boolean | Null]`\n\n### Guide\n\n`type-check` uses `Object.toString` to find out the basic type of a value. Specifically,\n\n```js\n{}.toString.call(VALUE).slice(8, -1)\n{}.toString.call(true).slice(8, -1) // 'Boolean'\n```\nA basic type, eg. `Number`, uses this check. This is much more versatile than using `typeof` - for example, with `document`, `typeof` produces `'object'` which isn't that useful, and our technique produces `'HTMLDocument'`.\n\nYou may check for multiple types by separating types with a `|`. The checker proceeds from left to right, and passes if the value is any of the types - eg. `String | Boolean` first checks if the value is a string, and then if it is a boolean. If it is none of those, then it returns false.\n\nAdding a `Maybe` in front of a list of multiple types is the same as also checking for `Null` and `Undefined` - eg. `Maybe String` is equivalent to `Undefined | Null | String`.\n\nYou may add a comment to remind you of what the type is for by following an identifier with a `::` before a type (or multiple types). The comment is simply thrown out.\n\nThe wildcard `*` matches all types.\n\nThere are three types of structures for checking the contents of a value: 'fields', 'tuple', and 'array'.\n\nIf used by itself, a 'fields' structure will pass with any type of object as long as it is an instance of `Object` and the properties pass - this allows for duck typing - eg. `{x: Boolean}`.\n\nTo check if the properties pass, and the value is of a certain type, you can specify the type - eg. `Error{message: String}`.\n\nIf you want to make a field optional, you can simply use `Maybe` - eg. `{x: Boolean, y: Maybe String}` will still pass if `y` is undefined (or null).\n\nIf you don't care if the value has properties beyond what you have specified, you can use the 'etc' operator `...` - eg. `{x: Boolean, ...}` will match an object with an `x` property that is a boolean, and with zero or more other properties.\n\nFor an array, you must specify one or more types (separated by `|`) - it will pass for something of any length as long as each element passes the types provided - eg. `[Number]`, `[Number | String]`.\n\nA tuple checks for a fixed number of elements, each of a potentially different type. Each element is separated by a comma - eg. `(String, Number)`.\n\nAn array and tuple structure check that the value is of type `Array` by default, but if another type is specified, they will check for that instead - eg. `Int32Array[Number]`. You can use the wildcard `*` to search for any type at all.\n\nCheck out the [type precedence](https://github.com/zaboco/type-precedence) library for type-check.\n\n## Options\n\nOptions is an object. It is an optional parameter to the `typeCheck` and `parsedTypeCheck` functions. The only current option is `customTypes`.\n\n<a name=\"custom-types\" />\n### Custom Types\n\n__Example:__\n\n```js\nvar options = {\n  customTypes: {\n    Even: {\n      typeOf: 'Number',\n      validate: function(x) {\n        return x % 2 === 0;\n      }\n    }\n  }\n};\ntypeCheck('Even', 2, options); // true\ntypeCheck('Even', 3, options); // false\n```\n\n`customTypes` allows you to set up custom types for validation. The value of this is an object. The keys of the object are the types you will be matching. Each value of the object will be an object having a `typeOf` property - a string, and `validate` property - a function.\n\nThe `typeOf` property is the type the value should be, and `validate` is a function which should return true if the value is of that type. `validate` receives one parameter, which is the value that we are checking.\n\n## Technical About\n\n`type-check` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It also uses the [prelude.ls](http://preludels.com/) library.\n",
              "readmeFilename": "README.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/type-check",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "type-check"
            },
            "wordwrap": {
              "_from": "wordwrap@~1.0.0",
              "_id": "wordwrap@1.0.0",
              "_inBundle": false,
              "_integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=",
              "_location": "/wordwrap",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "wordwrap@~1.0.0",
                "name": "wordwrap",
                "escapedName": "wordwrap",
                "rawSpec": "~1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "~1.0.0"
              },
              "_requiredBy": [
                "/optionator"
              ],
              "_resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",
              "_shasum": "27584810891456a4171c8d0226441ade90cbcaeb",
              "_spec": "wordwrap@~1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/optionator",
              "author": {
                "name": "James Halliday",
                "email": "mail@substack.net",
                "url": "http://substack.net"
              },
              "bugs": {
                "url": "https://github.com/substack/node-wordwrap/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Wrap those words. Show them at what columns to start and stop.",
              "devDependencies": {
                "tape": "^4.0.0"
              },
              "directories": {
                "lib": ".",
                "example": "example",
                "test": "test"
              },
              "homepage": "https://github.com/substack/node-wordwrap#readme",
              "keywords": [
                "word",
                "wrap",
                "rule",
                "format",
                "column"
              ],
              "license": "MIT",
              "main": "./index.js",
              "name": "wordwrap",
              "repository": {
                "type": "git",
                "url": "git://github.com/substack/node-wordwrap.git"
              },
              "scripts": {
                "test": "expresso"
              },
              "version": "1.0.0",
              "readme": "wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require('wordwrap')(15);\n    console.log(wrap('You and your whole family are made out of meat.'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require('wordwrap')(20, 60);\n    console.log(wrap(\n        'At long last the struggle and tumult was over.'\n        + ' The machines had finally cast off their oppressors'\n        + ' and were finally free to roam the cosmos.'\n        + '\\n'\n        + 'Free of purpose, free of obligation.'\n        + ' Just drifting through emptiness.'\n        + ' The sun was just another point of light.'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require('wordwrap');\n\nwrap(stop), wrap(start, stop, params={mode:\"soft\"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn \"soft\" mode, split chunks by `/(\\S+\\s+/` and don't break up chunks which are\nlonger than `stop - start`, in \"hard\" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = \"hard\"`.\n",
              "readmeFilename": "README.markdown",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/wordwrap",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "option parsing and help generation",
          "devDependencies": {
            "istanbul": "~0.4.1",
            "livescript": "~1.5.0",
            "mocha": "~3.0.2"
          },
          "engines": {
            "node": ">= 0.8.0"
          },
          "files": [
            "lib",
            "README.md",
            "LICENSE"
          ],
          "homepage": "https://github.com/gkz/optionator",
          "keywords": [
            "options",
            "flags",
            "option parsing",
            "cli"
          ],
          "license": "MIT",
          "main": "./lib/",
          "name": "optionator",
          "repository": {
            "type": "git",
            "url": "git://github.com/gkz/optionator.git"
          },
          "scripts": {
            "test": "make test"
          },
          "version": "0.8.2",
          "readme": "# Optionator\n<a name=\"optionator\" />\n\nOptionator is a JavaScript option parsing and help generation library used by [eslint](http://eslint.org), [Grasp](http://graspjs.com), [LiveScript](http://livescript.net), [esmangle](https://github.com/estools/esmangle), [escodegen](https://github.com/estools/escodegen), and [many more](https://www.npmjs.com/browse/depended/optionator).\n\nFor an online demo, check out the [Grasp online demo](http://www.graspjs.com/#demo).\n\n[About](#about) &middot; [Usage](#usage) &middot; [Settings Format](#settings-format) &middot; [Argument Format](#argument-format)\n\n## Why?\nThe  problem with other option parsers, such as `yargs` or `minimist`, is they just accept all input, valid or not.\nWith Optionator, if you mistype an option, it will give you an error (with a suggestion for what you meant).\nIf you give the wrong type of argument for an option, it will give you an error rather than supplying the wrong input to your application.\n\n    $ cmd --halp\n    Invalid option '--halp' - perhaps you meant '--help'?\n\n    $ cmd --count str\n    Invalid value for option 'count' - expected type Int, received value: str.\n\nOther helpful features include reformatting the help text based on the size of the console, so that it fits even if the console is narrow, and accepting not just an array (eg. process.argv), but a string or object as well, making things like testing much easier.\n\n## About\nOptionator uses [type-check](https://github.com/gkz/type-check) and [levn](https://github.com/gkz/levn) behind the scenes to cast and verify input according the specified types.\n\nMIT license. Version 0.8.2\n\n    npm install optionator\n\nFor updates on Optionator, [follow me on twitter](https://twitter.com/gkzahariev).\n\n## Usage\n`require('optionator');` returns a function. It has one property, `VERSION`, the current version of the library as a string. This function is called with an object specifying your options and other information, see the [settings format section](#settings-format). This in turn returns an object with three properties, `parse`, `parseArgv`, `generateHelp`, and `generateHelpForOption`, which are all functions.\n\n```js\nvar optionator = require('optionator')({\n    prepend: 'Usage: cmd [options]',\n    append: 'Version 1.0.0',\n    options: [{\n        option: 'help',\n        alias: 'h',\n        type: 'Boolean',\n        description: 'displays help'\n    }, {\n        option: 'count',\n        alias: 'c',\n        type: 'Int',\n        description: 'number of things',\n        example: 'cmd --count 2'\n    }]\n});\n\nvar options = optionator.parseArgv(process.argv);\nif (options.help) {\n    console.log(optionator.generateHelp());\n}\n...\n```\n\n### parse(input, parseOptions)\n`parse` processes the `input` according to your settings, and returns an object with the results.\n\n##### arguments\n* input - `[String] | Object | String` - the input you wish to parse\n* parseOptions - `{slice: Int}` - all options optional\n    - `slice` specifies how much to slice away from the beginning if the input is an array or string - by default `0` for string, `2` for array (works with `process.argv`)\n\n##### returns\n`Object` - the parsed options, each key is a camelCase version of the option name (specified in dash-case), and each value is the processed value for that option. Positional values are in an array under the `_` key.\n\n##### example\n```js\nparse(['node', 't.js', '--count', '2', 'positional']); // {count: 2, _: ['positional']}\nparse('--count 2 positional');                         // {count: 2, _: ['positional']}\nparse({count: 2, _:['positional']});                   // {count: 2, _: ['positional']}\n```\n\n### parseArgv(input)\n`parseArgv` works exactly like `parse`, but only for array input and it slices off the first two elements.\n\n##### arguments\n* input - `[String]` - the input you wish to parse\n\n##### returns\nSee \"returns\" section in \"parse\"\n\n##### example\n```js\nparseArgv(process.argv);\n```\n\n### generateHelp(helpOptions)\n`generateHelp` produces help text based on your settings.\n\n##### arguments\n* helpOptions - `{showHidden: Boolean, interpolate: Object}` - all options optional\n    - `showHidden` specifies whether to show options with `hidden: true` specified, by default it is `false`\n    - `interpolate` specify data to be interpolated in `prepend` and `append` text, `{{key}}` is the format - eg. `generateHelp({interpolate:{version: '0.4.2'}})`, will change this `append` text: `Version {{version}}` to `Version 0.4.2`\n\n##### returns\n`String` - the generated help text\n\n##### example\n```js\ngenerateHelp(); /*\n\"Usage: cmd [options] positional\n\n  -h, --help       displays help\n  -c, --count Int  number of things\n\nVersion  1.0.0\n\"*/\n```\n\n### generateHelpForOption(optionName)\n`generateHelpForOption` produces expanded help text for the specified with `optionName` option. If an `example` was specified for the option, it will be displayed,  and if a `longDescription` was specified, it will display that instead of the `description`.\n\n##### arguments\n* optionName - `String` - the name of the option to display\n\n##### returns\n`String` - the generated help text for the option\n\n##### example\n```js\ngenerateHelpForOption('count'); /*\n\"-c, --count Int\ndescription: number of things\nexample: cmd --count 2\n\"*/\n```\n\n## Settings Format\nWhen your `require('optionator')`, you get a function that takes in a settings object. This object has the type:\n\n    {\n      prepend: String,\n      append: String,\n      options: [{heading: String} | {\n        option: String,\n        alias: [String] | String,\n        type: String,\n        enum: [String],\n        default: String,\n        restPositional: Boolean,\n        required: Boolean,\n        overrideRequired: Boolean,\n        dependsOn: [String] | String,\n        concatRepeatedArrays: Boolean | (Boolean, Object),\n        mergeRepeatedObjects: Boolean,\n        description: String,\n        longDescription: String,\n        example: [String] | String\n      }],\n      helpStyle: {\n        aliasSeparator: String,\n        typeSeparator: String,\n        descriptionSeparator: String,\n        initialIndent: Int,\n        secondaryIndent: Int,\n        maxPadFactor: Number\n      },\n      mutuallyExclusive: [[String | [String]]],\n      concatRepeatedArrays: Boolean | (Boolean, Object), // deprecated, set in defaults object\n      mergeRepeatedObjects: Boolean, // deprecated, set in defaults object\n      positionalAnywhere: Boolean,\n      typeAliases: Object,\n      defaults: Object\n    }\n\nAll of the properties are optional (the `Maybe` has been excluded for brevities sake), except for having either `heading: String` or `option: String` in each object in the `options` array.\n\n### Top Level Properties\n* `prepend` is an optional string to be placed before the options in the help text\n* `append` is an optional string to be placed after the options in the help text\n* `options` is a required array specifying your options and headings, the options and headings will be displayed in the order specified\n* `helpStyle` is an optional object which enables you to change the default appearance of some aspects of the help text\n* `mutuallyExclusive` is an optional array of arrays of either strings or arrays of strings. The top level array is a list of rules, each rule is a list of elements - each element can be either a string (the name of an option), or a list of strings (a group of option names) - there will be an error if more than one element is present\n* `concatRepeatedArrays` see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the `defaults` property\n* `mergeRepeatedObjects` see description under the \"Option Properties\" heading - use at the top level is deprecated, if you want to set this for all options, use the `defaults` property\n* `positionalAnywhere` is an optional boolean (defaults to `true`) - when `true` it allows positional arguments anywhere, when `false`, all arguments after the first positional one are taken to be positional as well, even if they look like a flag. For example, with `positionalAnywhere: false`, the arguments `--flag --boom 12 --crack` would have two positional arguments: `12` and `--crack`\n* `typeAliases` is an optional object, it allows you to set aliases for types, eg. `{Path: 'String'}` would allow you to use the type `Path` as an alias for the type `String`\n* `defaults` is an optional object following the option properties format, which specifies default values for all options. A default will be overridden if manually set. For example, you can do `default: { type: \"String\" }` to set the default type of all options to `String`, and then override that default in an individual option by setting the `type` property\n\n#### Heading Properties\n* `heading` a required string, the name of the heading\n\n#### Option Properties\n* `option` the required name of the option - use dash-case, without the leading dashes\n* `alias` is an optional string or array of strings which specify any aliases for the option\n* `type` is a required string in the [type check](https://github.com/gkz/type-check) [format](https://github.com/gkz/type-check#type-format), this will be used to cast the inputted value and validate it\n* `enum` is an optional array of strings, each string will be parsed by [levn](https://github.com/gkz/levn) - the argument value must be one of the resulting values - each potential value must validate against the specified `type`\n* `default` is a optional string, which will be parsed by [levn](https://github.com/gkz/levn) and used as the default value if none is set - the value must validate against the specified `type`\n* `restPositional` is an optional boolean - if set to `true`, everything after the option will be taken to be a positional argument, even if it looks like a named argument\n* `required` is an optional boolean - if set to `true`, the option parsing will fail if the option is not defined\n* `overrideRequired` is a optional boolean - if set to `true` and the option is used, and there is another option which is required but not set, it will override the need for the required option and there will be no error - this is useful if you have required options and want to use `--help` or `--version` flags\n* `concatRepeatedArrays` is an optional boolean or tuple with boolean and options object (defaults to `false`) - when set to `true` and an option contains an array value and is repeated, the subsequent values for the flag will be appended rather than overwriting the original value - eg. option `g` of type `[String]`: `-g a -g b -g c,d` will result in `['a','b','c','d']`\n\n You can supply an options object by giving the following value: `[true, options]`. The one currently supported option is `oneValuePerFlag`, this only allows one array value per flag. This is useful if your potential values contain a comma.\n* `mergeRepeatedObjects` is an optional boolean (defaults to `false`) - when set to `true` and an option contains an object value and is repeated, the subsequent values for the flag will be merged rather than overwriting the original value - eg. option `g` of type `Object`: `-g a:1 -g b:2 -g c:3,d:4` will result in `{a: 1, b: 2, c: 3, d: 4}`\n* `dependsOn` is an optional string or array of strings - if simply a string (the name of another option), it will make sure that that other option is set, if an array of strings, depending on whether `'and'` or `'or'` is first, it will either check whether all (`['and', 'option-a', 'option-b']`), or at least one (`['or', 'option-a', 'option-b']`) other options are set\n* `description` is an optional string, which will be displayed next to the option in the help text\n* `longDescription` is an optional string, it will be displayed instead of the `description` when `generateHelpForOption` is used\n* `example` is an optional string or array of strings with example(s) for the option - these will be displayed when `generateHelpForOption` is used\n\n#### Help Style Properties\n* `aliasSeparator` is an optional string, separates multiple names from each other - default: ' ,'\n* `typeSeparator` is an optional string, separates the type from the names - default: ' '\n* `descriptionSeparator` is an optional string , separates the description from the padded name and type - default: '  '\n* `initialIndent` is an optional int - the amount of indent for options - default: 2\n* `secondaryIndent` is an optional int - the amount of indent if wrapped fully (in addition to the initial indent) - default: 4\n* `maxPadFactor` is an optional number - affects the default level of padding for the names/type, it is multiplied by the average of the length of the names/type - default: 1.5\n\n## Argument Format\nAt the highest level there are two types of arguments: named, and positional.\n\nName arguments of any length are prefixed with `--` (eg. `--go`), and those of one character may be prefixed with either `--` or `-` (eg. `-g`).\n\nThere are two types of named arguments: boolean flags (eg. `--problemo`, `-p`) which take no value and result in a `true` if they are present, the falsey `undefined` if they are not present, or `false` if present and explicitly prefixed with `no` (eg. `--no-problemo`). Named arguments with values (eg. `--tseries 800`, `-t 800`) are the other type. If the option has a type `Boolean` it will automatically be made into a boolean flag. Any other type results in a named argument that takes a value.\n\nFor more information about how to properly set types to get the value you want, take a look at the [type check](https://github.com/gkz/type-check) and [levn](https://github.com/gkz/levn) pages.\n\nYou can group single character arguments that use a single `-`, however all except the last must be boolean flags (which take no value). The last may be a boolean flag, or an argument which takes a value - eg. `-ba 2` is equivalent to `-b -a 2`.\n\nPositional arguments are all those values which do not fall under the above - they can be anywhere, not just at the end. For example, in `cmd -b one -a 2 two` where `b` is a boolean flag, and `a` has the type `Number`, there are two positional arguments, `one` and `two`.\n\nEverything after an `--` is positional, even if it looks like a named argument.\n\nYou may optionally use `=` to separate option names from values, for example: `--count=2`.\n\nIf you specify the option `NUM`, then any argument using a single `-` followed by a number will be valid and will set the value of `NUM`. Eg. `-2` will be parsed into `NUM: 2`.\n\nIf duplicate named arguments are present, the last one will be taken.\n\n## Technical About\n`optionator` is written in [LiveScript](http://livescript.net/) - a language that compiles to JavaScript. It uses [levn](https://github.com/gkz/levn) to cast arguments to their specified type, and uses [type-check](https://github.com/gkz/type-check) to validate values. It also uses the [prelude.ls](http://preludels.com/) library.\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "deep-is": "~0.1.3",
            "fast-levenshtein": "~2.0.4",
            "levn": "~0.3.0",
            "prelude-ls": "~1.1.2",
            "type-check": "~0.3.2",
            "wordwrap": "~1.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/optionator",
          "error": "[Circular]",
          "extraneous": false
        },
        "path-is-absolute": {
          "_from": "path-is-absolute@^1.0.0",
          "_id": "path-is-absolute@1.0.1",
          "_inBundle": false,
          "_integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18=",
          "_location": "/path-is-absolute",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
          "_shasum": "174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f",
          "_spec": "path-is-absolute@^1.0.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "deprecated": false,
          "description": "Node.js 0.12 path.isAbsolute() ponyfill",
          "devDependencies": "[Circular]",
          "engines": "[Circular]",
          "files": "[Circular]",
          "homepage": "https://github.com/sindresorhus/path-is-absolute#readme",
          "keywords": "[Circular]",
          "license": "MIT",
          "name": "path-is-absolute",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "1.0.1",
          "readme": "# path-is-absolute [![Build Status](https://travis-ci.org/sindresorhus/path-is-absolute.svg?branch=master)](https://travis-ci.org/sindresorhus/path-is-absolute)\n\n> Node.js 0.12 [`path.isAbsolute()`](http://nodejs.org/api/path.html#path_path_isabsolute_path) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save path-is-absolute\n```\n\n\n## Usage\n\n```js\nconst pathIsAbsolute = require('path-is-absolute');\n\n// Running on Linux\npathIsAbsolute('/home/foo');\n//=> true\npathIsAbsolute('C:/Users/foo');\n//=> false\n\n// Running on Windows\npathIsAbsolute('C:/Users/foo');\n//=> true\npathIsAbsolute('/home/foo');\n//=> false\n\n// Running on any OS\npathIsAbsolute.posix('/home/foo');\n//=> true\npathIsAbsolute.posix('C:/Users/foo');\n//=> false\npathIsAbsolute.win32('C:/Users/foo');\n//=> true\npathIsAbsolute.win32('/home/foo');\n//=> false\n```\n\n\n## API\n\nSee the [`path.isAbsolute()` docs](http://nodejs.org/api/path.html#path_path_isabsolute_path).\n\n### pathIsAbsolute(path)\n\n### pathIsAbsolute.posix(path)\n\nPOSIX specific version.\n\n### pathIsAbsolute.win32(path)\n\nWindows specific version.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/path-is-absolute",
          "error": "[Circular]",
          "extraneous": false
        },
        "path-is-inside": {
          "_from": "path-is-inside@^1.0.1",
          "_id": "path-is-inside@1.0.2",
          "_inBundle": false,
          "_integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM=",
          "_location": "/path-is-inside",
          "_phantomChildren": "[Circular]",
          "_requested": "[Circular]",
          "_requiredBy": "[Circular]",
          "_resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",
          "_shasum": "365417dede44430d1c11af61027facf074bdfc53",
          "_spec": "path-is-inside@^1.0.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": "[Circular]",
          "bugs": "[Circular]",
          "bundleDependencies": false,
          "deprecated": false,
          "description": "Tests whether one path is inside another path",
          "devDependencies": "[Circular]",
          "files": "[Circular]",
          "homepage": "https://github.com/domenic/path-is-inside#readme",
          "keywords": "[Circular]",
          "license": "(WTFPL OR MIT)",
          "main": "lib/path-is-inside.js",
          "name": "path-is-inside",
          "repository": "[Circular]",
          "scripts": "[Circular]",
          "version": "1.0.2",
          "readme": "ERROR: No README data found!",
          "dependencies": {},
          "optionalDependencies": "[Circular]",
          "_dependencies": "[Circular]",
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/path-is-inside",
          "error": "[Circular]",
          "extraneous": false
        },
        "pluralize": {
          "_from": "pluralize@^1.2.1",
          "_id": "pluralize@1.2.1",
          "_inBundle": false,
          "_integrity": "sha1-0aIUg/0iu0HlihL6NCGCMUCJfEU=",
          "_location": "/pluralize",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "pluralize@^1.2.1",
            "name": "pluralize",
            "escapedName": "pluralize",
            "rawSpec": "^1.2.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.2.1"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/pluralize/-/pluralize-1.2.1.tgz",
          "_shasum": "d1a21483fd22bb41e58a12fa3421823140897c45",
          "_spec": "pluralize@^1.2.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Blake Embrey",
            "email": "hello@blakeembrey.com",
            "url": "http://blakeembrey.me"
          },
          "bugs": {
            "url": "https://github.com/blakeembrey/pluralize/issues"
          },
          "bundleDependencies": false,
          "deprecated": false,
          "description": "Pluralize and singularize any word",
          "devDependencies": {
            "chai": "^1.9.1",
            "istanbul": "^0.3.0",
            "mocha": "^1.21.4",
            "pre-commit": "^1.0.10",
            "semistandard": "^7.0.2"
          },
          "files": [
            "pluralize.js",
            "LICENSE"
          ],
          "homepage": "https://github.com/blakeembrey/pluralize#readme",
          "keywords": [
            "plural",
            "plurals",
            "pluralize",
            "singular",
            "singularize"
          ],
          "license": "MIT",
          "main": "pluralize.js",
          "name": "pluralize",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/blakeembrey/pluralize.git"
          },
          "scripts": {
            "lint": "semistandard",
            "test": "npm run lint && npm run test-cov",
            "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec --bail",
            "test-spec": "mocha -R spec --bail"
          },
          "version": "1.2.1",
          "readme": "# Pluralize\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][downloads-image]][downloads-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\n> Pluralize and singularize any word.\n\n## Installation\n\n```\nnpm install pluralize --save\nbower install pluralize --save\n```\n\n### Node\n\n```javascript\nvar pluralize = require('pluralize')\n```\n\n### AMD\n\n```javascript\ndefine(function (require, exports, module) {\n  var pluralize = require('pluralize')\n})\n```\n\n### `<script>` tag\n\n```html\n<script src=\"pluralize.js\"></script>\n```\n\n## Why?\n\nThis module uses a pre-defined list of rules, applied in order, to singularize or pluralize a given word. There are many cases where this is useful, such as any automation based on user input. For applications where the word(s) are known ahead of time, you can use a simple ternary (or function) which would be a much lighter alternative.\n\n## Usage\n\n```javascript\npluralize('test') //=> \"tests\"\npluralize('test', 1) //=> \"test\"\npluralize('test', 5) //=> \"tests\"\npluralize('test', 1, true) //=> \"1 test\"\npluralize('test', 5, true) //=> \"5 tests\"\n\npluralize.plural('regex') //=> \"regexes\"\npluralize.addPluralRule(/gex$/i, 'gexii')\npluralize.plural('regex') //=> \"regexii\"\n\npluralize.plural('singles', 1) //=> \"single\"\npluralize.addSingularRule(/singles$/i, 'singular')\npluralize.plural('singles', 1) //=> \"singular\"\n\npluralize.plural('irregular') //=> \"irregulars\"\npluralize.addIrregularRule('irregular', 'regular')\npluralize.plural('irregular') //=> \"regular\"\n\npluralize.plural('paper') //=> \"papers\"\npluralize.addUncountableRule('paper')\npluralize.plural('paper') //=> \"paper\"\n```\n\n## License\n\nMIT\n\n[npm-image]: https://img.shields.io/npm/v/pluralize.svg?style=flat\n[npm-url]: https://npmjs.org/package/pluralize\n[downloads-image]: https://img.shields.io/npm/dm/pluralize.svg?style=flat\n[downloads-url]: https://npmjs.org/package/pluralize\n[travis-image]: https://img.shields.io/travis/blakeembrey/pluralize.svg?style=flat\n[travis-url]: https://travis-ci.org/blakeembrey/pluralize\n[coveralls-image]: https://img.shields.io/coveralls/blakeembrey/pluralize.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/blakeembrey/pluralize?branch=master\n",
          "readmeFilename": "Readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/pluralize",
          "error": "[Circular]",
          "extraneous": false
        },
        "progress": {
          "_from": "progress@^1.1.8",
          "_id": "progress@1.1.8",
          "_inBundle": false,
          "_integrity": "sha1-4mDHj2Fhzdmw5WzD4Khd4Xx6V74=",
          "_location": "/progress",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "progress@^1.1.8",
            "name": "progress",
            "escapedName": "progress",
            "rawSpec": "^1.1.8",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.1.8"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/progress/-/progress-1.1.8.tgz",
          "_shasum": "e260c78f6161cdd9b0e56cc3e0a85de17c7a57be",
          "_spec": "progress@^1.1.8",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "TJ Holowaychuk",
            "email": "tj@vision-media.ca"
          },
          "bugs": {
            "url": "https://github.com/visionmedia/node-progress/issues"
          },
          "bundleDependencies": false,
          "contributors": [
            {
              "name": "Christoffer Hallas",
              "email": "christoffer.hallas@gmail.com"
            },
            {
              "name": "Jordan Scales",
              "email": "scalesjordan@gmail.com"
            }
          ],
          "dependencies": {},
          "deprecated": false,
          "description": "Flexible ascii progress bar",
          "engines": {
            "node": ">=0.4.0"
          },
          "homepage": "https://github.com/visionmedia/node-progress#readme",
          "keywords": [
            "cli",
            "progress"
          ],
          "main": "index",
          "name": "progress",
          "repository": {
            "type": "git",
            "url": "git://github.com/visionmedia/node-progress.git"
          },
          "version": "1.1.8",
          "readme": "Flexible ascii progress bar.\n\n## Installation\n\n```bash\n$ npm install progress\n```\n\n## Usage\n\nFirst we create a `ProgressBar`, giving it a format string\nas well as the `total`, telling the progress bar when it will\nbe considered complete. After that all we need to do is `tick()` appropriately.\n\n```javascript\nvar ProgressBar = require('progress');\n\nvar bar = new ProgressBar(':bar', { total: 10 });\nvar timer = setInterval(function () {\n  bar.tick();\n  if (bar.complete) {\n    console.log('\\ncomplete\\n');\n    clearInterval(timer);\n  }\n}, 100);\n```\n\n### Options\n\nThese are keys in the options object you can pass to the progress bar along with\n`total` as seen in the example above.\n\n- `total` total number of ticks to complete\n- `width` the displayed width of the progress bar defaulting to total\n- `stream` the output stream defaulting to stderr\n- `complete` completion character defaulting to \"=\"\n- `incomplete` incomplete character defaulting to \"-\"\n- `clear` option to clear the bar on completion defaulting to false\n- `callback` optional function to call when the progress bar completes\n\n### Tokens\n\nThese are tokens you can use in the format of your progress bar.\n\n- `:bar` the progress bar itself\n- `:current` current tick number\n- `:total` total ticks\n- `:elapsed` time elapsed in seconds\n- `:percent` completion percentage\n- `:eta` estimated completion time in seconds\n\n## Examples\n\n### Download\n\nIn our download example each tick has a variable influence, so we pass the chunk\nlength which adjusts the progress bar appropriately relative to the total\nlength.\n\n```javascript\nvar ProgressBar = require('../');\nvar https = require('https');\n\nvar req = https.request({\n  host: 'download.github.com',\n  port: 443,\n  path: '/visionmedia-node-jscoverage-0d4608a.zip'\n});\n\nreq.on('response', function(res){\n  var len = parseInt(res.headers['content-length'], 10);\n\n  console.log();\n  var bar = new ProgressBar('  downloading [:bar] :percent :etas', {\n    complete: '=',\n    incomplete: ' ',\n    width: 20,\n    total: len\n  });\n\n  res.on('data', function (chunk) {\n    bar.tick(chunk.length);\n  });\n\n  res.on('end', function () {\n    console.log('\\n');\n  });\n});\n\nreq.end();\n```\n\nThe above example result in a progress bar like the one below.\n\n```\ndownloading [=====             ] 29% 3.7s\n```\n\nYou can see more examples in the `examples` folder.\n\n## License\n\nMIT\n",
          "readmeFilename": "Readme.md",
          "devDependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/progress",
          "error": "[Circular]",
          "extraneous": false
        },
        "require-uncached": {
          "_from": "require-uncached@^1.0.2",
          "_id": "require-uncached@1.0.3",
          "_inBundle": false,
          "_integrity": "sha1-Tg1W1slmL9MeQwEcS5WqSZVUIdM=",
          "_location": "/require-uncached",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "require-uncached@^1.0.2",
            "name": "require-uncached",
            "escapedName": "require-uncached",
            "rawSpec": "^1.0.2",
            "saveSpec": "[Circular]",
            "fetchSpec": "^1.0.2"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/require-uncached/-/require-uncached-1.0.3.tgz",
          "_shasum": "4e0d56d6c9662fd31e43011c4b95aa49955421d3",
          "_spec": "require-uncached@^1.0.2",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/require-uncached/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "caller-path": {
              "_from": "caller-path@^0.1.0",
              "_id": "caller-path@0.1.0",
              "_inBundle": false,
              "_integrity": "sha1-lAhe9jWB7NPaqSREqP6U6CV3dR8=",
              "_location": "/caller-path",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "caller-path@^0.1.0",
                "name": "caller-path",
                "escapedName": "caller-path",
                "rawSpec": "^0.1.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^0.1.0"
              },
              "_requiredBy": [
                "/require-uncached"
              ],
              "_resolved": "https://registry.npmjs.org/caller-path/-/caller-path-0.1.0.tgz",
              "_shasum": "94085ef63581ecd3daa92444a8fe94e82577751f",
              "_spec": "caller-path@^0.1.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/require-uncached",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "http://sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/caller-path/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "callsites": {
                  "_from": "callsites@^0.2.0",
                  "_id": "callsites@0.2.0",
                  "_inBundle": false,
                  "_integrity": "sha1-r6uWJikQp/M8GaV3WCXGnzTjUMo=",
                  "_location": "/callsites",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "callsites@^0.2.0",
                    "name": "callsites",
                    "escapedName": "callsites",
                    "rawSpec": "^0.2.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^0.2.0"
                  },
                  "_requiredBy": [
                    "/caller-path"
                  ],
                  "_resolved": "https://registry.npmjs.org/callsites/-/callsites-0.2.0.tgz",
                  "_shasum": "afab96262910a7f33c19a5775825c69f34e350ca",
                  "_spec": "callsites@^0.2.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/caller-path",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "http://sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/callsites/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Get callsites from the V8 stack trace API",
                  "devDependencies": {
                    "mocha": "*"
                  },
                  "engines": {
                    "node": ">=0.10.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/callsites#readme",
                  "keywords": [
                    "callsites",
                    "callsite",
                    "v8",
                    "stacktrace",
                    "stack",
                    "trace",
                    "function",
                    "file",
                    "line",
                    "debug"
                  ],
                  "license": "MIT",
                  "name": "callsites",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/callsites.git"
                  },
                  "scripts": {
                    "test": "mocha"
                  },
                  "version": "0.2.0",
                  "readme": "# callsites [![Build Status](https://travis-ci.org/sindresorhus/callsites.svg?branch=master)](https://travis-ci.org/sindresorhus/callsites)\n\n> Get callsites from the [V8 stack trace API](https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi)\n\n\n## Install\n\n```sh\n$ npm install --save callsites\n```\n\n\n## Usage\n\n```js\nvar callsites = require('callsites');\n\nfunction unicorn() {\n\tconsole.log(callsites()[0].getFileName());\n\t//=> /Users/sindresorhus/dev/callsites/test.js\n}\n\nunicorn();\n```\n\n## API\n\nReturns an array of callsite objects with the following methods:\n\n- `getThis`: returns the value of this\n- `getTypeName`: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\n- `getFunction`: returns the current function\n- `getFunctionName`: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n- `getMethodName`: returns the name of the property of this or one of its prototypes that holds the current function\n- `getFileName`: if this function was defined in a script returns the name of the script\n- `getLineNumber`: if this function was defined in a script returns the current line number\n- `getColumnNumber`: if this function was defined in a script returns the current column number\n- `getEvalOrigin`: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n- `isToplevel`: is this a toplevel invocation, that is, is this the global object?\n- `isEval`: does this call take place in code defined by a call to eval?\n- `isNative`: is this call in native V8 code?\n- `isConstructor`: is this a constructor call?\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/callsites",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Get the path of the caller module",
              "devDependencies": {
                "mocha": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/caller-path#readme",
              "keywords": [
                "caller",
                "calling",
                "module",
                "path",
                "parent",
                "callsites",
                "callsite",
                "stacktrace",
                "stack",
                "trace",
                "function",
                "file"
              ],
              "license": "MIT",
              "name": "caller-path",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/caller-path.git"
              },
              "scripts": {
                "test": "mocha"
              },
              "version": "0.1.0",
              "readme": "# caller-path [![Build Status](https://travis-ci.org/sindresorhus/caller-path.svg?branch=master)](https://travis-ci.org/sindresorhus/caller-path)\n\n> Get the path of the caller module\n\nYou can't use [`module.parent`](http://nodejs.org/api/modules.html#modules_module_parent) as modules are cached and it will return the first caller module, not necessarily the current one.\n\n\n## Install\n\n```\n$ npm install --save caller-path\n```\n\n\n## Usage\n\n```js\n// foo.js\nvar callerPath = require('caller-path');\n\nmodule.exports = function () {\n\tconsole.log(callerPath());\n\t//=> /Users/sindresorhus/dev/unicorn/bar.js\n}\n```\n\n```js\n// bar.js\nvar foo = require('./foo');\nfoo();\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "callsites": "^0.2.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/caller-path",
              "error": "[Circular]",
              "extraneous": false
            },
            "resolve-from": {
              "_from": "resolve-from@^1.0.0",
              "_id": "resolve-from@1.0.1",
              "_inBundle": false,
              "_integrity": "sha1-Jsv+k10a7uq7Kbw/5a6wHpPUQiY=",
              "_location": "/resolve-from",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "resolve-from@^1.0.0",
                "name": "resolve-from",
                "escapedName": "resolve-from",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/require-uncached"
              ],
              "_resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-1.0.1.tgz",
              "_shasum": "26cbfe935d1aeeeabb29bc3fe5aeb01e93d44226",
              "_spec": "resolve-from@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/require-uncached",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/resolve-from/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Resolve the path of a module like require.resolve() but from a given path",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/resolve-from#readme",
              "keywords": [
                "require",
                "resolve",
                "path",
                "module",
                "from",
                "like",
                "path"
              ],
              "license": "MIT",
              "name": "resolve-from",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/resolve-from.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.1",
              "readme": "# resolve-from [![Build Status](https://travis-ci.org/sindresorhus/resolve-from.svg?branch=master)](https://travis-ci.org/sindresorhus/resolve-from)\n\n> Resolve the path of a module like [`require.resolve()`](http://nodejs.org/api/globals.html#globals_require_resolve) but from a given path\n\n\n## Install\n\n```\n$ npm install --save resolve-from\n```\n\n\n## Usage\n\n```js\nconst resolveFrom = require('resolve-from');\n\n// there's a file at `./foo/bar.js`\n\nresolveFrom('foo', './bar');\n//=> '/Users/sindresorhus/dev/test/foo/bar.js'\n```\n\n\n## API\n\n### resolveFrom(fromDir, moduleId)\n\n#### fromDir\n\nType: `string`\n\nThe directory to resolve from.\n\n#### moduleId\n\nType: `string`\n\nWhat you would use in `require()`.\n\n\n## Tip\n\nCreate a partial using a bound function if you want to require from the same `fromDir` multiple times:\n\n```js\nconst resolveFromFoo = resolveFrom.bind(null, 'foo');\n\nresolveFromFoo('./bar');\nresolveFromFoo('./baz');\n```\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/resolve-from",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Require a module bypassing the cache",
          "devDependencies": {
            "ava": "*",
            "heapdump": "^0.3.7",
            "xo": "^0.16.0"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "index.js"
          ],
          "homepage": "https://github.com/sindresorhus/require-uncached#readme",
          "keywords": [
            "require",
            "cache",
            "uncache",
            "uncached",
            "module",
            "fresh",
            "bypass"
          ],
          "license": "MIT",
          "name": "require-uncached",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/require-uncached.git"
          },
          "scripts": {
            "heapdump": "node heapdump.js",
            "test": "xo && ava"
          },
          "version": "1.0.3",
          "xo": {
            "rules": {
              "import/no-dynamic-require": "off"
            }
          },
          "readme": "# require-uncached [![Build Status](https://travis-ci.org/sindresorhus/require-uncached.svg?branch=master)](https://travis-ci.org/sindresorhus/require-uncached)\n\n> Require a module bypassing the [cache](https://nodejs.org/api/modules.html#modules_caching)\n\nUseful for testing purposes when you need to freshly require a module.\n\n\n## Install\n\n```\n$ npm install --save require-uncached\n```\n\n\n## Usage\n\n```js\n// foo.js\nlet i = 0;\nmodule.exports = () => ++i;\n```\n\n```js\nconst requireUncached = require('require-uncached');\n\nrequire('./foo')();\n//=> 1\n\nrequire('./foo')();\n//=> 2\n\nrequireUncached('./foo')();\n//=> 1\n\nrequireUncached('./foo')();\n//=> 1\n```\n\n\n## Related\n\n- [clear-require](https://github.com/sindresorhus/clear-require) - Clear a module from the require cache\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "caller-path": "^0.1.0",
            "resolve-from": "^1.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/require-uncached",
          "error": "[Circular]",
          "extraneous": false
        },
        "shelljs": {
          "_from": "shelljs@^0.6.0",
          "_id": "shelljs@0.6.1",
          "_inBundle": false,
          "_integrity": "sha1-7GIRvtGSBEIIj+D3Cyg3Iy7SyKg=",
          "_location": "/shelljs",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "shelljs@^0.6.0",
            "name": "shelljs",
            "escapedName": "shelljs",
            "rawSpec": "^0.6.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^0.6.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/shelljs/-/shelljs-0.6.1.tgz",
          "_shasum": "ec6211bed1920442088fe0f70b2837232ed2c8a8",
          "_spec": "shelljs@^0.6.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Artur Adib",
            "email": "arturadib@gmail.com"
          },
          "bin": {
            "shjs": "./bin/shjs"
          },
          "bugs": {
            "url": "https://github.com/shelljs/shelljs/issues"
          },
          "bundleDependencies": false,
          "contributors": [
            {
              "name": "Ari Porad",
              "email": "ari@ariporad.com",
              "url": "http://ariporad.com/"
            },
            {
              "name": "Nate Fischer",
              "email": "ntfschr@gmail.com"
            }
          ],
          "dependencies": {},
          "deprecated": false,
          "description": "Portable Unix shell commands for Node.js",
          "devDependencies": {
            "coffee-script": "^1.10.0",
            "jshint": "~2.1.11"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "homepage": "http://github.com/shelljs/shelljs",
          "keywords": [
            "unix",
            "shell",
            "makefile",
            "make",
            "jake",
            "synchronous"
          ],
          "license": "BSD-3-Clause",
          "main": "./shell.js",
          "name": "shelljs",
          "optionalDependencies": {},
          "repository": {
            "type": "git",
            "url": "git://github.com/shelljs/shelljs.git"
          },
          "scripts": {
            "test": "node scripts/run-tests"
          },
          "version": "0.6.1",
          "readme": "# ShellJS - Unix shell commands for Node.js\n\n[![Join the chat at https://gitter.im/shelljs/shelljs](https://badges.gitter.im/shelljs/shelljs.svg)](https://gitter.im/shelljs/shelljs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.org/shelljs/shelljs.svg?branch=master)](http://travis-ci.org/shelljs/shelljs)\n[![Build status](https://ci.appveyor.com/api/projects/status/42txr0s3ux5wbumv/branch/master?svg=true)](https://ci.appveyor.com/project/shelljs/shelljs)\n\nShellJS is a portable **(Windows/Linux/OS X)** implementation of Unix shell commands on top of the Node.js API. You can use it to eliminate your shell script's dependency on Unix while still keeping its familiar and powerful commands. You can also install it globally so you can run it from outside Node projects - say goodbye to those gnarly Bash scripts!\n\nThe project is [unit-tested](http://travis-ci.org/shelljs/shelljs) and battled-tested in projects like:\n\n+ [PDF.js](http://github.com/mozilla/pdf.js) - Firefox's next-gen PDF reader\n+ [Firebug](http://getfirebug.com/) - Firefox's infamous debugger\n+ [JSHint](http://jshint.com) - Most popular JavaScript linter\n+ [Zepto](http://zeptojs.com) - jQuery-compatible JavaScript library for modern browsers\n+ [Yeoman](http://yeoman.io/) - Web application stack and development tool\n+ [Deployd.com](http://deployd.com) - Open source PaaS for quick API backend generation\n\nand [many more](https://npmjs.org/browse/depended/shelljs).\n\nIf you have feedback, suggestions, or need help, feel free to post in our [issue tracker](https://github.com/shelljs/shelljs/issues).\n\n## Installing\n\nVia npm:\n\n```bash\n$ npm install [-g] shelljs\n```\n\nIf the global option `-g` is specified, the binary `shjs` will be installed. This makes it possible to\nrun ShellJS scripts much like any shell script from the command line, i.e. without requiring a `node_modules` folder:\n\n```bash\n$ shjs my_script\n```\n\n## Examples\n\n### JavaScript\n\n```javascript\nrequire('shelljs/global');\n\nif (!which('git')) {\n  echo('Sorry, this script requires git');\n  exit(1);\n}\n\n// Copy files to release dir\nmkdir('-p', 'out/Release');\ncp('-R', 'stuff/*', 'out/Release');\n\n// Replace macros in each .js file\ncd('lib');\nls('*.js').forEach(function(file) {\n  sed('-i', 'BUILD_VERSION', 'v0.1.2', file);\n  sed('-i', /.*REMOVE_THIS_LINE.*\\n/, '', file);\n  sed('-i', /.*REPLACE_LINE_WITH_MACRO.*\\n/, cat('macro.js'), file);\n});\ncd('..');\n\n// Run external tool synchronously\nif (exec('git commit -am \"Auto-commit\"').code !== 0) {\n  echo('Error: Git commit failed');\n  exit(1);\n}\n```\n\n### CoffeeScript\n\nCoffeeScript is also supported automatically:\n\n```coffeescript\nrequire 'shelljs/global'\n\nif not which 'git'\n  echo 'Sorry, this script requires git'\n  exit 1\n\n# Copy files to release dir\nmkdir '-p', 'out/Release'\ncp '-R', 'stuff/*', 'out/Release'\n\n# Replace macros in each .js file\ncd 'lib'\nfor file in ls '*.js'\n  sed '-i', 'BUILD_VERSION', 'v0.1.2', file\n  sed '-i', /.*REMOVE_THIS_LINE.*\\n/, '', file\n  sed '-i', /.*REPLACE_LINE_WITH_MACRO.*\\n/, cat('macro.js'), file\ncd '..'\n\n# Run external tool synchronously\nif (exec 'git commit -am \"Auto-commit\"').code != 0\n  echo 'Error: Git commit failed'\n  exit 1\n```\n\n## Global vs. Local\n\nThe example above uses the convenience script `shelljs/global` to reduce verbosity. If polluting your global namespace is not desirable, simply require `shelljs`.\n\nExample:\n\n```javascript\nvar shell = require('shelljs');\nshell.echo('hello world');\n```\n\n## Make tool\n\nA convenience script `shelljs/make` is also provided to mimic the behavior of a Unix Makefile.\nIn this case all shell objects are global, and command line arguments will cause the script to\nexecute only the corresponding function in the global `target` object. To avoid redundant calls,\ntarget functions are executed only once per script.\n\nExample:\n\n```javascript\nrequire('shelljs/make');\n\ntarget.all = function() {\n  target.bundle();\n  target.docs();\n};\n\ntarget.bundle = function() {\n  cd(__dirname);\n  mkdir('-p', 'build');\n  cd('src');\n  cat('*.js').to('../build/output.js');\n};\n\ntarget.docs = function() {\n  cd(__dirname);\n  mkdir('-p', 'docs');\n  var files = ls('src/*.js');\n  for(var i = 0; i < files.length; i++) {\n    var text = grep('//@', files[i]);     // extract special comments\n    text = text.replace(/\\/\\/@/g, '');    // remove comment tags\n    text.toEnd('docs/my_docs.md');\n  }\n};\n```\n\nTo run the target `all`, call the above script without arguments: `$ node make`. To run the target `docs`: `$ node make docs`.\n\nYou can also pass arguments to your targets by using the `--` separator. For example, to pass `arg1` and `arg2` to a target `bundle`, do `$ node make bundle -- arg1 arg2`:\n\n```javascript\nrequire('shelljs/make');\n\ntarget.bundle = function(argsArray) {\n  // argsArray = ['arg1', 'arg2']\n  /* ... */\n}\n```\n\n\n<!-- DO NOT MODIFY BEYOND THIS POINT - IT'S AUTOMATICALLY GENERATED -->\n\n\n## Command reference\n\n\nAll commands run synchronously, unless otherwise stated.\n\n\n### cd([dir])\nChanges to directory `dir` for the duration of the script. Changes to home\ndirectory if no argument is supplied.\n\n\n### pwd()\nReturns the current directory.\n\n\n### ls([options,] [path, ...])\n### ls([options,] path_array)\nAvailable options:\n\n+ `-R`: recursive\n+ `-A`: all files (include files beginning with `.`, except for `.` and `..`)\n+ `-d`: list directories themselves, not their contents\n+ `-l`: list objects representing each file, each with fields containing `ls\n        -l` output fields. See\n        [fs.Stats](https://nodejs.org/api/fs.html#fs_class_fs_stats)\n        for more info\n\nExamples:\n\n```javascript\nls('projs/*.js');\nls('-R', '/users/me', '/tmp');\nls('-R', ['/users/me', '/tmp']); // same as above\nls('-l', 'file.txt'); // { name: 'file.txt', mode: 33188, nlink: 1, ...}\n```\n\nReturns array of files in the given path, or in current directory if no path provided.\n\n\n### find(path [, path ...])\n### find(path_array)\nExamples:\n\n```javascript\nfind('src', 'lib');\nfind(['src', 'lib']); // same as above\nfind('.').filter(function(file) { return file.match(/\\.js$/); });\n```\n\nReturns array of all files (however deep) in the given paths.\n\nThe main difference from `ls('-R', path)` is that the resulting file names\ninclude the base directories, e.g. `lib/resources/file1` instead of just `file1`.\n\n\n### cp([options,] source [, source ...], dest)\n### cp([options,] source_array, dest)\nAvailable options:\n\n+ `-f`: force (default behavior)\n+ `-n`: no-clobber\n+ `-r, -R`: recursive\n\nExamples:\n\n```javascript\ncp('file1', 'dir1');\ncp('-Rf', '/tmp/*', '/usr/local/*', '/home/tmp');\ncp('-Rf', ['/tmp/*', '/usr/local/*'], '/home/tmp'); // same as above\n```\n\nCopies files. The wildcard `*` is accepted.\n\n\n### rm([options,] file [, file ...])\n### rm([options,] file_array)\nAvailable options:\n\n+ `-f`: force\n+ `-r, -R`: recursive\n\nExamples:\n\n```javascript\nrm('-rf', '/tmp/*');\nrm('some_file.txt', 'another_file.txt');\nrm(['some_file.txt', 'another_file.txt']); // same as above\n```\n\nRemoves files. The wildcard `*` is accepted.\n\n\n### mv([options ,] source [, source ...], dest')\n### mv([options ,] source_array, dest')\nAvailable options:\n\n+ `-f`: force (default behavior)\n+ `-n`: no-clobber\n\nExamples:\n\n```javascript\nmv('-n', 'file', 'dir/');\nmv('file1', 'file2', 'dir/');\nmv(['file1', 'file2'], 'dir/'); // same as above\n```\n\nMoves files. The wildcard `*` is accepted.\n\n\n### mkdir([options,] dir [, dir ...])\n### mkdir([options,] dir_array)\nAvailable options:\n\n+ `-p`: full path (will create intermediate dirs if necessary)\n\nExamples:\n\n```javascript\nmkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\nmkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n```\n\nCreates directories.\n\n\n### test(expression)\nAvailable expression primaries:\n\n+ `'-b', 'path'`: true if path is a block device\n+ `'-c', 'path'`: true if path is a character device\n+ `'-d', 'path'`: true if path is a directory\n+ `'-e', 'path'`: true if path exists\n+ `'-f', 'path'`: true if path is a regular file\n+ `'-L', 'path'`: true if path is a symbolic link\n+ `'-p', 'path'`: true if path is a pipe (FIFO)\n+ `'-S', 'path'`: true if path is a socket\n\nExamples:\n\n```javascript\nif (test('-d', path)) { /* do something with dir */ };\nif (!test('-f', path)) continue; // skip if it's a regular file\n```\n\nEvaluates expression using the available primaries and returns corresponding value.\n\n\n### cat(file [, file ...])\n### cat(file_array)\n\nExamples:\n\n```javascript\nvar str = cat('file*.txt');\nvar str = cat('file1', 'file2');\nvar str = cat(['file1', 'file2']); // same as above\n```\n\nReturns a string containing the given file, or a concatenated string\ncontaining the files if more than one file is given (a new line character is\nintroduced between each file). Wildcard `*` accepted.\n\n\n### 'string'.to(file)\n\nExamples:\n\n```javascript\ncat('input.txt').to('output.txt');\n```\n\nAnalogous to the redirection operator `>` in Unix, but works with JavaScript strings (such as\nthose returned by `cat`, `grep`, etc). _Like Unix redirections, `to()` will overwrite any existing file!_\n\n\n### 'string'.toEnd(file)\n\nExamples:\n\n```javascript\ncat('input.txt').toEnd('output.txt');\n```\n\nAnalogous to the redirect-and-append operator `>>` in Unix, but works with JavaScript strings (such as\nthose returned by `cat`, `grep`, etc).\n\n\n### sed([options,] search_regex, replacement, file [, file ...])\n### sed([options,] search_regex, replacement, file_array)\nAvailable options:\n\n+ `-i`: Replace contents of 'file' in-place. _Note that no backups will be created!_\n\nExamples:\n\n```javascript\nsed('-i', 'PROGRAM_VERSION', 'v0.1.3', 'source.js');\nsed(/.*DELETE_THIS_LINE.*\\n/, '', 'source.js');\n```\n\nReads an input string from `files` and performs a JavaScript `replace()` on the input\nusing the given search regex and replacement string or function. Returns the new string after replacement.\n\n\n### grep([options,] regex_filter, file [, file ...])\n### grep([options,] regex_filter, file_array)\nAvailable options:\n\n+ `-v`: Inverse the sense of the regex and print the lines not matching the criteria.\n\nExamples:\n\n```javascript\ngrep('-v', 'GLOBAL_VARIABLE', '*.js');\ngrep('GLOBAL_VARIABLE', '*.js');\n```\n\nReads input string from given files and returns a string containing all lines of the\nfile that match the given `regex_filter`. Wildcard `*` accepted.\n\n\n### which(command)\n\nExamples:\n\n```javascript\nvar nodeExec = which('node');\n```\n\nSearches for `command` in the system's PATH. On Windows, this uses the\n`PATHEXT` variable to append the extension if it's not already executable.\nReturns string containing the absolute path to the command.\n\n\n### echo(string [, string ...])\n\nExamples:\n\n```javascript\necho('hello world');\nvar str = echo('hello world');\n```\n\nPrints string to stdout, and returns string with additional utility methods\nlike `.to()`.\n\n\n### pushd([options,] [dir | '-N' | '+N'])\n\nAvailable options:\n\n+ `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\n\nArguments:\n\n+ `dir`: Makes the current working directory be the top of the stack, and then executes the equivalent of `cd dir`.\n+ `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n+ `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n\nExamples:\n\n```javascript\n// process.cwd() === '/usr'\npushd('/etc'); // Returns /etc /usr\npushd('+1');   // Returns /usr /etc\n```\n\nSave the current directory on the top of the directory stack and then cd to `dir`. With no arguments, pushd exchanges the top two directories. Returns an array of paths in the stack.\n\n### popd([options,] ['-N' | '+N'])\n\nAvailable options:\n\n+ `-n`: Suppresses the normal change of directory when removing directories from the stack, so that only the stack is manipulated.\n\nArguments:\n\n+ `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\n+ `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\n\nExamples:\n\n```javascript\necho(process.cwd()); // '/usr'\npushd('/etc');       // '/etc /usr'\necho(process.cwd()); // '/etc'\npopd();              // '/usr'\necho(process.cwd()); // '/usr'\n```\n\nWhen no arguments are given, popd removes the top directory from the stack and performs a cd to the new top directory. The elements are numbered from 0 starting at the first directory listed with dirs; i.e., popd is equivalent to popd +0. Returns an array of paths in the stack.\n\n### dirs([options | '+N' | '-N'])\n\nAvailable options:\n\n+ `-c`: Clears the directory stack by deleting all of the elements.\n\nArguments:\n\n+ `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\n+ `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\n\nDisplay the list of currently remembered directories. Returns an array of paths in the stack, or a single path if +N or -N was specified.\n\nSee also: pushd, popd\n\n\n### ln([options,] source, dest)\nAvailable options:\n\n+ `-s`: symlink\n+ `-f`: force\n\nExamples:\n\n```javascript\nln('file', 'newlink');\nln('-sf', 'file', 'existing');\n```\n\nLinks source to dest. Use -f to force the link, should dest already exist.\n\n\n### exit(code)\nExits the current process with the given exit code.\n\n### env['VAR_NAME']\nObject containing environment variables (both getter and setter). Shortcut to process.env.\n\n### exec(command [, options] [, callback])\nAvailable options (all `false` by default):\n\n+ `async`: Asynchronous execution. If a callback is provided, it will be set to\n  `true`, regardless of the passed value.\n+ `silent`: Do not echo program output to console.\n+ and any option available to NodeJS's\n  [child_process.exec()](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback)\n\nExamples:\n\n```javascript\nvar version = exec('node --version', {silent:true}).stdout;\n\nvar child = exec('some_long_running_process', {async:true});\nchild.stdout.on('data', function(data) {\n  /* ... do something with data ... */\n});\n\nexec('some_long_running_process', function(code, stdout, stderr) {\n  console.log('Exit code:', code);\n  console.log('Program output:', stdout);\n  console.log('Program stderr:', stderr);\n});\n```\n\nExecutes the given `command` _synchronously_, unless otherwise specified.  When in synchronous\nmode returns the object `{ code:..., stdout:... , stderr:... }`, containing the program's\n`stdout`, `stderr`, and its exit `code`. Otherwise returns the child process object,\nand the `callback` gets the arguments `(code, stdout, stderr)`.\n\n**Note:** For long-lived processes, it's best to run `exec()` asynchronously as\nthe current synchronous implementation uses a lot of CPU. This should be getting\nfixed soon.\n\n\n### chmod(octal_mode || octal_string, file)\n### chmod(symbolic_mode, file)\n\nAvailable options:\n\n+ `-v`: output a diagnostic for every file processed\n+ `-c`: like verbose but report only when a change is made\n+ `-R`: change files and directories recursively\n\nExamples:\n\n```javascript\nchmod(755, '/Users/brandon');\nchmod('755', '/Users/brandon'); // same as above\nchmod('u+x', '/Users/brandon');\n```\n\nAlters the permissions of a file or directory by either specifying the\nabsolute permissions in octal form or expressing the changes in symbols.\nThis command tries to mimic the POSIX behavior as much as possible.\nNotable exceptions:\n\n+ In symbolic modes, 'a-r' and '-r' are identical.  No consideration is\n  given to the umask.\n+ There is no \"quiet\" option since default behavior is to run silent.\n\n\n### touch([options,] file)\nAvailable options:\n\n+ `-a`: Change only the access time\n+ `-c`: Do not create any files\n+ `-m`: Change only the modification time\n+ `-d DATE`: Parse DATE and use it instead of current time\n+ `-r FILE`: Use FILE's times instead of current time\n\nExamples:\n\n```javascript\ntouch('source.js');\ntouch('-c', '/path/to/some/dir/source.js');\ntouch({ '-r': FILE }, '/path/to/some/dir/source.js');\n```\n\nUpdate the access and modification times of each FILE to the current time.\nA FILE argument that does not exist is created empty, unless -c is supplied.\nThis is a partial implementation of *[touch(1)](http://linux.die.net/man/1/touch)*.\n\n\n### set(options)\nAvailable options:\n\n+ `+/-e`: exit upon error (`config.fatal`)\n+ `+/-v`: verbose: show all commands (`config.verbose`)\n\nExamples:\n\n```javascript\nset('-e'); // exit upon first error\nset('+e'); // this undoes a \"set('-e')\"\n```\n\nSets global configuration variables\n\n\n## Non-Unix commands\n\n\n### tempdir()\n\nExamples:\n\n```javascript\nvar tmp = tempdir(); // \"/tmp\" for most *nix platforms\n```\n\nSearches and returns string containing a writeable, platform-dependent temporary directory.\nFollows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\n\n\n### error()\nTests if error occurred in the last command. Returns `null` if no error occurred,\notherwise returns string explaining the error\n\n\n## Configuration\n\n\n### config.silent\nExample:\n\n```javascript\nvar sh = require('shelljs');\nvar silentState = sh.config.silent; // save old silent state\nsh.config.silent = true;\n/* ... */\nsh.config.silent = silentState; // restore old silent state\n```\n\nSuppresses all command output if `true`, except for `echo()` calls.\nDefault is `false`.\n\n### config.fatal\nExample:\n\n```javascript\nrequire('shelljs/global');\nconfig.fatal = true; // or set('-e');\ncp('this_file_does_not_exist', '/dev/null'); // dies here\n/* more commands... */\n```\n\nIf `true` the script will die on errors. Default is `false`. This is\nanalogous to Bash's `set -e`\n\n### config.verbose\nExample:\n\n```javascript\nconfig.verbose = true; // or set('-v');\ncd('dir/');\nls('subdir/');\n```\n\nWill print each command as follows:\n\n```\ncd dir/\nls subdir/\n```\n",
          "readmeFilename": "README.md",
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/shelljs",
          "error": "[Circular]",
          "extraneous": false
        },
        "strip-json-comments": {
          "_from": "strip-json-comments@~1.0.1",
          "_id": "strip-json-comments@1.0.4",
          "_inBundle": false,
          "_integrity": "sha1-HhX7ysl9Pumb8tc7TGVrCCu6+5E=",
          "_location": "/strip-json-comments",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "strip-json-comments@~1.0.1",
            "name": "strip-json-comments",
            "escapedName": "strip-json-comments",
            "rawSpec": "~1.0.1",
            "saveSpec": "[Circular]",
            "fetchSpec": "~1.0.1"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-1.0.4.tgz",
          "_shasum": "1e15fbcac97d3ee99bf2d73b4c656b082bbafb91",
          "_spec": "strip-json-comments@~1.0.1",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bin": {
            "strip-json-comments": "cli.js"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/strip-json-comments/issues"
          },
          "bundleDependencies": false,
          "deprecated": false,
          "description": "Strip comments from JSON. Lets you use comments in your JSON files!",
          "devDependencies": {
            "mocha": "*"
          },
          "engines": {
            "node": ">=0.8.0"
          },
          "files": [
            "cli.js",
            "strip-json-comments.js"
          ],
          "homepage": "https://github.com/sindresorhus/strip-json-comments#readme",
          "keywords": [
            "json",
            "strip",
            "remove",
            "delete",
            "trim",
            "comments",
            "multiline",
            "parse",
            "config",
            "configuration",
            "conf",
            "settings",
            "util",
            "env",
            "environment",
            "cli",
            "bin"
          ],
          "license": "MIT",
          "main": "strip-json-comments",
          "name": "strip-json-comments",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/strip-json-comments.git"
          },
          "scripts": {
            "test": "mocha --ui tdd"
          },
          "version": "1.0.4",
          "readme": "# strip-json-comments [![Build Status](https://travis-ci.org/sindresorhus/strip-json-comments.svg?branch=master)](https://travis-ci.org/sindresorhus/strip-json-comments)\n\n> Strip comments from JSON. Lets you use comments in your JSON files!\n\nThis is now possible:\n\n```js\n{\n\t// rainbows\n\t\"unicorn\": /* â¤ */ \"cake\"\n}\n```\n\nIt will remove single-line comments `//` and multi-line comments `/**/`.\n\nAlso available as a [gulp](https://github.com/sindresorhus/gulp-strip-json-comments)/[grunt](https://github.com/sindresorhus/grunt-strip-json-comments)/[broccoli](https://github.com/sindresorhus/broccoli-strip-json-comments) plugin.\n\n-\n\n*There's also [`json-comments`](https://npmjs.org/package/json-comments), but it's only for Node.js, inefficient, bloated as it also minifies, and comes with a `require` hook, which is :(*\n\n\n## Install\n\n```sh\n$ npm install --save strip-json-comments\n```\n\n```sh\n$ bower install --save strip-json-comments\n```\n\n```sh\n$ component install sindresorhus/strip-json-comments\n```\n\n\n## Usage\n\n```js\nvar json = '{/*rainbows*/\"unicorn\":\"cake\"}';\nJSON.parse(stripJsonComments(json));\n//=> {unicorn: 'cake'}\n```\n\n\n## API\n\n### stripJsonComments(input)\n\n#### input\n\nType: `string`\n\nAccepts a string with JSON and returns a string without comments.\n\n\n## CLI\n\n```sh\n$ npm install --global strip-json-comments\n```\n\n```sh\n$ strip-json-comments --help\n\nstrip-json-comments input-file > output-file\n# or\nstrip-json-comments < input-file > output-file\n```\n\n\n## Related\n\n- [`strip-css-comments`](https://github.com/sindresorhus/strip-css-comments)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/strip-json-comments",
          "error": "[Circular]",
          "extraneous": false
        },
        "table": {
          "_from": "table@^3.7.8",
          "_id": "table@3.8.3",
          "_inBundle": false,
          "_integrity": "sha1-K7xULw/amGGnVdOUf+/Ys/UThV8=",
          "_location": "/table",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "table@^3.7.8",
            "name": "table",
            "escapedName": "table",
            "rawSpec": "^3.7.8",
            "saveSpec": "[Circular]",
            "fetchSpec": "^3.7.8"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/table/-/table-3.8.3.tgz",
          "_shasum": "2bbc542f0fda9861a755d3947fefd8b3f513855f",
          "_spec": "table@^3.7.8",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Gajus Kuizinas",
            "email": "gajus@gajus.com",
            "url": "http://gajus.com"
          },
          "bugs": {
            "url": "https://github.com/gajus/table/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "ajv": {
              "_from": "ajv@^4.7.0",
              "_id": "ajv@4.11.8",
              "_inBundle": false,
              "_integrity": "sha1-gv+wKynmYq5TvcIK8VlHcGc5xTY=",
              "_location": "/ajv",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "ajv@^4.7.0",
                "name": "ajv",
                "escapedName": "ajv",
                "rawSpec": "^4.7.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^4.7.0"
              },
              "_requiredBy": [
                "/table"
              ],
              "_resolved": "https://registry.npmjs.org/ajv/-/ajv-4.11.8.tgz",
              "_shasum": "82ffb02b29e662ae53bdc20af15947706739c536",
              "_spec": "ajv@^4.7.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table",
              "author": {
                "name": "Evgeny Poberezkin"
              },
              "bugs": {
                "url": "https://github.com/epoberezkin/ajv/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "co": {
                  "_from": "co@^4.6.0",
                  "_id": "co@4.6.0",
                  "_inBundle": false,
                  "_integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",
                  "_location": "/co",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "co@^4.6.0",
                    "name": "co",
                    "escapedName": "co",
                    "rawSpec": "^4.6.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^4.6.0"
                  },
                  "_requiredBy": [
                    "/ajv"
                  ],
                  "_resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",
                  "_shasum": "6ea6bdf3d853ae54ccb8e47bfa0bf3f9031fb184",
                  "_spec": "co@^4.6.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ajv",
                  "bugs": {
                    "url": "https://github.com/tj/co/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "generator async control flow goodness",
                  "devDependencies": {
                    "browserify": "^10.0.0",
                    "istanbul-harmony": "0",
                    "mocha": "^2.0.0",
                    "mz": "^1.0.2"
                  },
                  "engines": {
                    "iojs": ">= 1.0.0",
                    "node": ">= 0.12.0"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/tj/co#readme",
                  "keywords": [
                    "async",
                    "flow",
                    "generator",
                    "coro",
                    "coroutine"
                  ],
                  "license": "MIT",
                  "name": "co",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/tj/co.git"
                  },
                  "scripts": {
                    "browserify": "browserify index.js -o ./co-browser.js -s co",
                    "prepublish": "npm run browserify",
                    "test": "mocha --harmony",
                    "test-cov": "node --harmony node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha -- --reporter dot",
                    "test-travis": "node --harmony node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- --reporter dot"
                  },
                  "version": "4.6.0",
                  "readme": "# co\n\n[![Gitter][gitter-image]][gitter-url]\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Downloads][downloads-image]][downloads-url]\n\n  Generator based control flow goodness for nodejs and the browser,\n  using promises, letting you write non-blocking code in a nice-ish way.\n\n## Co v4\n\n  `co@4.0.0` has been released, which now relies on promises.\n  It is a stepping stone towards [ES7 async/await](https://github.com/lukehoban/ecmascript-asyncawait).\n  The primary API change is how `co()` is invoked.\n  Before, `co` returned a \"thunk\", which you then called with a callback and optional arguments.\n  Now, `co()` returns a promise.\n\n```js\nco(function* () {\n  var result = yield Promise.resolve(true);\n  return result;\n}).then(function (value) {\n  console.log(value);\n}, function (err) {\n  console.error(err.stack);\n});\n```\n\n  If you want to convert a `co`-generator-function into a regular function that returns a promise,\n  you now use `co.wrap(fn*)`.\n\n```js\nvar fn = co.wrap(function* (val) {\n  return yield Promise.resolve(val);\n});\n\nfn(true).then(function (val) {\n\n});\n```\n\n## Platform Compatibility\n\n  `co@4+` requires a `Promise` implementation.\n  For versions of node `< 0.11` and for many older browsers,\n  you should/must include your own `Promise` polyfill.\n\n  When using node 0.11.x or greater, you must use the `--harmony-generators`\n  flag or just `--harmony` to get access to generators.\n\n  When using node 0.10.x and lower or browsers without generator support,\n  you must use [gnode](https://github.com/TooTallNate/gnode) and/or [regenerator](http://facebook.github.io/regenerator/).\n\n  io.js is supported out of the box, you can use `co` without flags or polyfills.\n\n## Installation\n\n```\n$ npm install co\n```\n\n## Associated libraries\n\nAny library that returns promises work well with `co`.\n\n- [mz](https://github.com/normalize/mz) - wrap all of node's code libraries as promises.\n\nView the [wiki](https://github.com/visionmedia/co/wiki) for more libraries.\n\n## Examples\n\n```js\nvar co = require('co');\n\nco(function *(){\n  // yield any promise\n  var result = yield Promise.resolve(true);\n}).catch(onerror);\n\nco(function *(){\n  // resolve multiple promises in parallel\n  var a = Promise.resolve(1);\n  var b = Promise.resolve(2);\n  var c = Promise.resolve(3);\n  var res = yield [a, b, c];\n  console.log(res);\n  // => [1, 2, 3]\n}).catch(onerror);\n\n// errors can be try/catched\nco(function *(){\n  try {\n    yield Promise.reject(new Error('boom'));\n  } catch (err) {\n    console.error(err.message); // \"boom\"\n }\n}).catch(onerror);\n\nfunction onerror(err) {\n  // log any uncaught errors\n  // co will not throw any errors you do not handle!!!\n  // HANDLE ALL YOUR ERRORS!!!\n  console.error(err.stack);\n}\n```\n\n## Yieldables\n\n  The `yieldable` objects currently supported are:\n\n  - promises\n  - thunks (functions)\n  - array (parallel execution)\n  - objects (parallel execution)\n  - generators (delegation)\n  - generator functions (delegation)\n\nNested `yieldable` objects are supported, meaning you can nest\npromises within objects within arrays, and so on!\n\n### Promises\n\n[Read more on promises!](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n\n### Thunks\n\nThunks are functions that only have a single argument, a callback.\nThunk support only remains for backwards compatibility and may\nbe removed in future versions of `co`.\n\n### Arrays\n\n`yield`ing an array will resolve all the `yieldables` in parallel.\n\n```js\nco(function* () {\n  var res = yield [\n    Promise.resolve(1),\n    Promise.resolve(2),\n    Promise.resolve(3),\n  ];\n  console.log(res); // => [1, 2, 3]\n}).catch(onerror);\n```\n\n### Objects\n\nJust like arrays, objects resolve all `yieldable`s in parallel.\n\n```js\nco(function* () {\n  var res = yield {\n    1: Promise.resolve(1),\n    2: Promise.resolve(2),\n  };\n  console.log(res); // => { 1: 1, 2: 2 }\n}).catch(onerror);\n```\n\n### Generators and Generator Functions\n\nAny generator or generator function you can pass into `co`\ncan be yielded as well. This should generally be avoided\nas we should be moving towards spec-compliant `Promise`s instead.\n\n## API\n\n### co(fn*).then( val => )\n\nReturns a promise that resolves a generator, generator function,\nor any function that returns a generator.\n\n```js\nco(function* () {\n  return yield Promise.resolve(true);\n}).then(function (val) {\n  console.log(val);\n}, function (err) {\n  console.error(err.stack);\n});\n```\n\n### var fn = co.wrap(fn*)\n\nConvert a generator into a regular function that returns a `Promise`.\n\n```js\nvar fn = co.wrap(function* (val) {\n  return yield Promise.resolve(val);\n});\n\nfn(true).then(function (val) {\n\n});\n```\n\n## License\n\n  MIT\n\n[npm-image]: https://img.shields.io/npm/v/co.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/co\n[travis-image]: https://img.shields.io/travis/tj/co.svg?style=flat-square\n[travis-url]: https://travis-ci.org/tj/co\n[coveralls-image]: https://img.shields.io/coveralls/tj/co.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/tj/co\n[downloads-image]: http://img.shields.io/npm/dm/co.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/co\n[gitter-image]: https://badges.gitter.im/Join%20Chat.svg\n[gitter-url]: https://gitter.im/tj/co?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n",
                  "readmeFilename": "Readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/co",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "json-stable-stringify": {
                  "_from": "json-stable-stringify@^1.0.0",
                  "_id": "json-stable-stringify@1.0.1",
                  "_inBundle": false,
                  "_integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",
                  "_location": "/json-stable-stringify",
                  "_phantomChildren": "[Circular]",
                  "_requested": "[Circular]",
                  "_requiredBy": "[Circular]",
                  "_resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",
                  "_shasum": "9a759d39c5f2ff503fd5300646ed445f88c4f9af",
                  "_spec": "json-stable-stringify@^1.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
                  "author": "[Circular]",
                  "bugs": "[Circular]",
                  "bundleDependencies": false,
                  "dependencies": {},
                  "deprecated": false,
                  "description": "deterministic JSON.stringify() with custom sorting to get deterministic hashes from stringified results",
                  "devDependencies": "[Circular]",
                  "homepage": "https://github.com/substack/json-stable-stringify",
                  "keywords": "[Circular]",
                  "license": "MIT",
                  "main": "index.js",
                  "name": "json-stable-stringify",
                  "repository": "[Circular]",
                  "scripts": "[Circular]",
                  "testling": "[Circular]",
                  "version": "1.0.1",
                  "readme": "# json-stable-stringify\n\ndeterministic version of `JSON.stringify()` so you can get a consistent hash\nfrom stringified results\n\nYou can also pass in a custom comparison function.\n\n[![browser support](https://ci.testling.com/substack/json-stable-stringify.png)](https://ci.testling.com/substack/json-stable-stringify)\n\n[![build status](https://secure.travis-ci.org/substack/json-stable-stringify.png)](http://travis-ci.org/substack/json-stable-stringify)\n\n# example\n\n``` js\nvar stringify = require('json-stable-stringify');\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nconsole.log(stringify(obj));\n```\n\noutput:\n\n```\n{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}\n```\n\n# methods\n\n``` js\nvar stringify = require('json-stable-stringify')\n```\n\n## var str = stringify(obj, opts)\n\nReturn a deterministic stringified string `str` from the object `obj`.\n\n## options\n\n### cmp\n\nIf `opts` is given, you can supply an `opts.cmp` to have a custom comparison\nfunction for object keys. Your function `opts.cmp` is called with these\nparameters:\n\n``` js\nopts.cmp({ key: akey, value: avalue }, { key: bkey, value: bvalue })\n```\n\nFor example, to sort on the object key names in reverse order you could write:\n\n``` js\nvar stringify = require('json-stable-stringify');\n\nvar obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\nvar s = stringify(obj, function (a, b) {\n    return a.key < b.key ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich results in the output string:\n\n```\n{\"c\":8,\"b\":[{\"z\":6,\"y\":5,\"x\":4},7],\"a\":3}\n```\n\nOr if you wanted to sort on the object values in reverse order, you could write:\n\n```\nvar stringify = require('json-stable-stringify');\n\nvar obj = { d: 6, c: 5, b: [{z:3,y:2,x:1},9], a: 10 };\nvar s = stringify(obj, function (a, b) {\n    return a.value < b.value ? 1 : -1;\n});\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\"d\":6,\"c\":5,\"b\":[{\"z\":3,\"y\":2,\"x\":1},9],\"a\":10}\n```\n\n### space\n\nIf you specify `opts.space`, it will indent the output for pretty-printing.\nValid values are strings (e.g. `{space: \\t}`) or a number of spaces\n(`{space: 3}`).\n\nFor example:\n\n```js\nvar obj = { b: 1, a: { foo: 'bar', and: [1, 2, 3] } };\nvar s = stringify(obj, { space: '  ' });\nconsole.log(s);\n```\n\nwhich outputs:\n\n```\n{\n  \"a\": {\n    \"and\": [\n      1,\n      2,\n      3\n    ],\n    \"foo\": \"bar\"\n  },\n  \"b\": 1\n}\n```\n\n### replacer\n\nThe replacer parameter is a function `opts.replacer(key, value)` that behaves\nthe same as the replacer\n[from the core JSON object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_native_JSON#The_replacer_parameter).\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install json-stable-stringify\n```\n\n# license\n\nMIT\n",
                  "readmeFilename": "readme.markdown",
                  "optionalDependencies": "[Circular]",
                  "_dependencies": "[Circular]",
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/json-stable-stringify",
                  "error": "[Circular]",
                  "extraneous": false,
                  "_deduped": "json-stable-stringify"
                }
              },
              "deprecated": false,
              "description": "Another JSON Schema Validator",
              "devDependencies": {
                "bluebird": "^3.1.5",
                "brfs": "^1.4.3",
                "browserify": "^14.1.0",
                "chai": "^3.5.0",
                "coveralls": "^2.11.4",
                "del-cli": "^0.2.1",
                "dot": "^1.0.3",
                "eslint": "^3.2.2",
                "gh-pages-generator": "^0.2.0",
                "glob": "^7.0.0",
                "if-node-version": "^1.0.0",
                "js-beautify": "^1.5.6",
                "jshint": "^2.8.0",
                "json-schema-test": "^1.1.1",
                "karma": "^1.0.0",
                "karma-chrome-launcher": "^2.0.0",
                "karma-mocha": "^1.1.1",
                "karma-phantomjs-launcher": "^1.0.0",
                "karma-sauce-launcher": "^1.1.0",
                "mocha": "^3.0.0",
                "nodent": "^3.0.17",
                "nyc": "^10.0.0",
                "phantomjs-prebuilt": "^2.1.4",
                "pre-commit": "^1.1.1",
                "regenerator": "0.9.7",
                "require-globify": "^1.3.0",
                "typescript": "^2.0.3",
                "uglify-js": "^2.6.1",
                "watch": "^1.0.0"
              },
              "files": [
                "lib/",
                "dist/",
                "scripts/",
                "LICENSE",
                ".tonic_example.js"
              ],
              "homepage": "https://github.com/epoberezkin/ajv",
              "keywords": [
                "JSON",
                "schema",
                "validator",
                "validation",
                "jsonschema",
                "json-schema",
                "json-schema-validator",
                "json-schema-validation"
              ],
              "license": "MIT",
              "main": "lib/ajv.js",
              "name": "ajv",
              "nyc": {
                "exclude": [
                  "**/spec/**",
                  "node_modules"
                ],
                "reporter": [
                  "lcov",
                  "text-summary"
                ]
              },
              "publishConfig": {
                "tag": "4.x"
              },
              "repository": {
                "type": "git",
                "url": "git+https://github.com/epoberezkin/ajv.git"
              },
              "scripts": {
                "build": "del-cli lib/dotjs/*.js && node scripts/compile-dots.js",
                "bundle": "node ./scripts/bundle.js . Ajv pure_getters",
                "bundle-all": "del-cli dist && npm run bundle && npm run bundle-regenerator && npm run bundle-nodent",
                "bundle-beautify": "node ./scripts/bundle.js js-beautify",
                "bundle-nodent": "node ./scripts/bundle.js nodent",
                "bundle-regenerator": "node ./scripts/bundle.js regenerator",
                "eslint": "if-node-version \">=4\" eslint lib/*.js lib/compile/*.js spec scripts",
                "jshint": "jshint lib/*.js lib/**/*.js --exclude lib/dotjs/**/*",
                "prepublish": "npm run build && npm run bundle-all",
                "test": "npm run jshint && npm run eslint && npm run test-ts && npm run build && npm run test-cov && if-node-version 4 npm run test-browser",
                "test-browser": "del-cli .browser && npm run bundle-all && scripts/prepare-tests && npm run test-karma",
                "test-cov": "nyc npm run test-spec",
                "test-debug": "mocha spec/*.spec.js --debug-brk -R spec",
                "test-fast": "AJV_FAST_TEST=true npm run test-spec",
                "test-karma": "karma start --single-run --browsers PhantomJS",
                "test-spec": "mocha spec/*.spec.js -R spec",
                "test-ts": "tsc --target ES5 --noImplicitAny lib/ajv.d.ts",
                "watch": "watch 'npm run build' ./lib/dot"
              },
              "tonicExampleFilename": ".tonic_example.js",
              "typings": "lib/ajv.d.ts",
              "version": "4.11.8",
              "webpack": "dist/ajv.bundle.js",
              "readme": "<img align=\"right\" alt=\"Ajv logo\" width=\"160\" src=\"http://epoberezkin.github.io/ajv/images/ajv_logo.png\">\n\n# Ajv: Another JSON Schema Validator\n\nThe fastest JSON Schema validator for node.js and browser. Supports [v5 proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals).\n\n\n[![Build Status](https://travis-ci.org/epoberezkin/ajv.svg?branch=master)](https://travis-ci.org/epoberezkin/ajv)\n[![npm version](https://badge.fury.io/js/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![npm downloads](https://img.shields.io/npm/dm/ajv.svg)](https://www.npmjs.com/package/ajv)\n[![Code Climate](https://codeclimate.com/github/epoberezkin/ajv/badges/gpa.svg)](https://codeclimate.com/github/epoberezkin/ajv)\n[![Coverage Status](https://coveralls.io/repos/epoberezkin/ajv/badge.svg?branch=master&service=github)](https://coveralls.io/github/epoberezkin/ajv?branch=master)\n[![Gitter](https://img.shields.io/gitter/room/ajv-validator/ajv.svg)](https://gitter.im/ajv-validator/ajv)\n\n\n__Please note__: You can start using NEW beta version [5.0.4](https://github.com/epoberezkin/ajv/releases/tag/5.0.4-beta.3) (see [migration guide from 4.x.x](https://github.com/epoberezkin/ajv/releases/tag/5.0.1-beta.0)) with the support of JSON-Schema draft-06 (not officially published yet): `npm install ajv@^5.0.4-beta`.\n\nAlso see [docs](https://github.com/epoberezkin/ajv/tree/5.0.4-beta.3) for 5.0.4.\n\n\n## Contents\n\n- [Performance](#performance)\n- [Features](#features)\n- [Getting started](#getting-started)\n- [Frequently Asked Questions](https://github.com/epoberezkin/ajv/blob/master/FAQ.md)\n- [Using in browser](#using-in-browser)\n- [Command line interface](#command-line-interface)\n- Validation\n  - [Keywords](#validation-keywords)\n  - [Formats](#formats)\n  - [$data reference](#data-reference)\n  - NEW: [$merge and $patch keywords](#merge-and-patch-keywords)\n  - [Defining custom keywords](#defining-custom-keywords)\n  - [Asynchronous schema compilation](#asynchronous-compilation)\n  - [Asynchronous validation](#asynchronous-validation)\n- Modifying data during validation\n  - [Filtering data](#filtering-data)\n  - [Assigning defaults](#assigning-defaults)\n  - [Coercing data types](#coercing-data-types)\n- API\n  - [Methods](#api)\n  - [Options](#options)\n  - [Validation errors](#validation-errors)\n- [Related packages](#related-packages)\n- [Packages using Ajv](#some-packages-using-ajv)\n- [Tests, Contributing, History, License](#tests)\n\n\n## Performance\n\nAjv generates code using [doT templates](https://github.com/olado/doT) to turn JSON schemas into super-fast validation functions that are efficient for v8 optimization.\n\nCurrently Ajv is the fastest and the most standard compliant validator according to these benchmarks:\n\n- [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark) - 50% faster than the second place\n- [jsck benchmark](https://github.com/pandastrike/jsck#benchmarks) - 20-190% faster\n- [z-schema benchmark](https://rawgit.com/zaggino/z-schema/master/benchmark/results.html)\n- [themis benchmark](https://cdn.rawgit.com/playlyfe/themis/master/benchmark/results.html)\n\n\nPerformace of different validators by [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark):\n\n[![performance](https://chart.googleapis.com/chart?chxt=x,y&cht=bhs&chco=76A4FB&chls=2.0&chbh=32,4,1&chs=600x416&chxl=-1:%7Cajv%7Cis-my-json-valid%7Cjsen%7Cschemasaurus%7Cthemis%7Cz-schema%7Cjsck%7Cjsonschema%7Cskeemas%7Ctv4%7Cjayschema&chd=t:100,68,61,22.8,17.6,6.6,2.7,0.9,0.7,0.4,0.1)](https://github.com/ebdrup/json-schema-benchmark/blob/master/README.md#performance)\n\n\n## Features\n\n- Ajv implements full [JSON Schema draft 4](http://json-schema.org/) standard:\n  - all validation keywords (see [JSON-Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md))\n  - full support of remote refs (remote schemas have to be added with `addSchema` or compiled to be available)\n  - support of circular references between schemas\n  - correct string lengths for strings with unicode pairs (can be turned off)\n  - [formats](#formats) defined by JSON Schema draft 4 standard and custom formats (can be turned off)\n  - [validates schemas against meta-schema](#api-validateschema)\n- supports [browsers](#using-in-browser) and nodejs 0.10-6.x\n- [asynchronous loading](#asynchronous-compilation) of referenced schemas during compilation\n- \"All errors\" validation mode with [option allErrors](#options)\n- [error messages with parameters](#validation-errors) describing error reasons to allow creating custom error messages\n- i18n error messages support with [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) package\n- [filtering data](#filtering-data) from additional properties\n- [assigning defaults](#assigning-defaults) to missing properties and items\n- [coercing data](#coercing-data-types) to the types specified in `type` keywords\n- [custom keywords](#defining-custom-keywords)\n- keywords `switch`, `constant`, `contains`, `patternGroups`, `patternRequired`, `formatMaximum` / `formatMinimum` and `formatExclusiveMaximum` / `formatExclusiveMinimum` from [JSON-schema v5 proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) with [option v5](#options)\n- [v5 meta-schema](https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#) for schemas using v5 keywords\n- [v5 $data reference](#data-reference) to use values from the validated data as values for the schema keywords\n- [asynchronous validation](#asynchronous-validation) of custom formats and keywords\n\nCurrently Ajv is the only validator that passes all the tests from [JSON Schema Test Suite](https://github.com/json-schema/JSON-Schema-Test-Suite) (according to [json-schema-benchmark](https://github.com/ebdrup/json-schema-benchmark), apart from the test that requires that `1.0` is not an integer that is impossible to satisfy in JavaScript).\n\n\n## Install\n\n```\nnpm install ajv\n```\n\nTo install a stable beta version [5.0.4](https://github.com/epoberezkin/ajv/releases/tag/5.0.4-beta.3) (see [migration guide from 4.x.x](https://github.com/epoberezkin/ajv/releases/tag/5.0.1-beta.0)):\n\n```\nnpm install ajv@^5.0.4-beta\n```\n\n\n## <a name=\"usage\"></a>Getting started\n\nTry it in the node REPL: https://tonicdev.com/npm/ajv\n\n\nThe fastest validation call:\n\n```javascript\nvar Ajv = require('ajv');\nvar ajv = new Ajv(); // options can be passed, e.g. {allErrors: true}\nvar validate = ajv.compile(schema);\nvar valid = validate(data);\nif (!valid) console.log(validate.errors);\n```\n\nor with less code\n\n```javascript\n// ...\nvar valid = ajv.validate(schema, data);\nif (!valid) console.log(ajv.errors);\n// ...\n```\n\nor\n\n```javascript\n// ...\najv.addSchema(schema, 'mySchema');\nvar valid = ajv.validate('mySchema', data);\nif (!valid) console.log(ajv.errorsText());\n// ...\n```\n\nSee [API](#api) and [Options](#options) for more details.\n\nAjv compiles schemas to functions and caches them in all cases (using schema stringified with [json-stable-stringify](https://github.com/substack/json-stable-stringify) as a key), so that the next time the same schema is used (not necessarily the same object instance) it won't be compiled again.\n\nThe best performance is achieved when using compiled functions returned by `compile` or `getSchema` methods (there is no additional function call).\n\n__Please note__: every time validation function or `ajv.validate` are called `errors` property is overwritten. You need to copy `errors` array reference to another variable if you want to use it later (e.g., in the callback). See [Validation errors](#validation-errors)\n\n\n## Using in browser\n\nYou can require Ajv directly from the code you browserify - in this case Ajv will be a part of your bundle.\n\nIf you need to use Ajv in several bundles you can create a separate UMD bundle using `npm run bundle` script (thanks to [siddo420](https://github.com/siddo420)).\n\nThen you need to load Ajv in the browser:\n```html\n<script src=\"ajv.min.js\"></script>\n```\n\nThis bundle can be used with different module systems or creates global `Ajv` if no module system is found.\n\nThe browser bundle is available on [cdnjs](https://cdnjs.com/libraries/ajv).\n\nAjv is tested with these browsers:\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/epoberezkin.svg)](https://saucelabs.com/u/epoberezkin)\n\n__Please note__: some frameworks, e.g. Dojo, may redefine global require in such way that is not compatible with CommonJS module format. In such case Ajv bundle has to be loaded before the framework and then you can use global Ajv (see issue [#234](https://github.com/epoberezkin/ajv/issues/234)).\n\n\n## Command line interface\n\nCLI is available as a separate npm package [ajv-cli](https://github.com/jessedc/ajv-cli). It supports:\n\n- compiling JSON-schemas to test their validity\n- BETA: generating standalone module exporting a validation function to be used without Ajv (using [ajv-pack](https://github.com/epoberezkin/ajv-pack))\n- validating data file(s) against JSON-schema\n- testing expected validity of data against JSON-schema\n- referenced schemas\n- custom meta-schemas\n- files in JSON and JavaScript format\n- all Ajv options\n- reporting changes in data after validation in [JSON-patch](https://tools.ietf.org/html/rfc6902) format\n\n\n## Validation keywords\n\nAjv supports all validation keywords from draft 4 of JSON-schema standard:\n\n- [type](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#type)\n- [for numbers](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-numbers) - maximum, minimum, exclusiveMaximum, exclusiveMinimum, multipleOf\n- [for strings](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-strings) - maxLength, minLength, pattern, format\n- [for arrays](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-arrays) - maxItems, minItems, uniqueItems, items, additionalItems\n- [for objects](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-objects) - maxProperties, minproperties, required, properties, patternProperties, additionalProperties, dependencies\n- [compound keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#keywords-for-all-types) - enum, not, oneOf, anyOf, allOf\n\nWith option `v5: true` Ajv also supports all validation keywords and [$data reference](#data-reference) from [v5 proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) for JSON-schema standard:\n\n- [switch](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#switch-v5-proposal) - conditional validation with a sequence of if/then clauses\n- [contains](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#contains-v5-proposal) - check that array contains a valid item\n- [constant](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#constant-v5-proposal) - check that data is equal to some value\n- [patternGroups](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#patterngroups-v5-proposal) - a more powerful alternative to patternProperties\n- [patternRequired](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#patternrequired-v5-proposal) - like `required` but with patterns that some property should match.\n- [formatMaximum, formatMinimum, formatExclusiveMaximum, formatExclusiveMinimum](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md#formatmaximum--formatminimum-and-exclusiveformatmaximum--exclusiveformatminimum-v5-proposal) - setting limits for date, time, etc.\n\nSee [JSON-Schema validation keywords](https://github.com/epoberezkin/ajv/blob/master/KEYWORDS.md) for more details.\n\n\n## Formats\n\nThe following formats are supported for string validation with \"format\" keyword:\n\n- _date_: full-date according to [RFC3339](http://tools.ietf.org/html/rfc3339#section-5.6).\n- _time_: time with optional time-zone.\n- _date-time_: date-time from the same source (time-zone is mandatory). `date`, `time` and `date-time` validate ranges in `full` mode and only regexp in `fast` mode (see [options](#options)).\n- _uri_: full uri with optional protocol.\n- _email_: email address.\n- _hostname_: host name acording to [RFC1034](http://tools.ietf.org/html/rfc1034#section-3.5).\n- _ipv4_: IP address v4.\n- _ipv6_: IP address v6.\n- _regex_: tests whether a string is a valid regular expression by passing it to RegExp constructor.\n- _uuid_: Universally Unique IDentifier according to [RFC4122](http://tools.ietf.org/html/rfc4122).\n- _json-pointer_: JSON-pointer according to [RFC6901](https://tools.ietf.org/html/rfc6901).\n- _relative-json-pointer_: relative JSON-pointer according to [this draft](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00).\n\nThere are two modes of format validation: `fast` and `full`. This mode affects formats `date`, `time`, `date-time`, `uri`, `email`, and `hostname`. See [Options](#options) for details.\n\nYou can add additional formats and replace any of the formats above using [addFormat](#api-addformat) method.\n\nThe option `unknownFormats` allows to change the behaviour in case an unknown format is encountered - Ajv can either ignore them (default now) or fail schema compilation (will be the default in 5.0.0).\n\nYou can find patterns used for format validation and the sources that were used in [formats.js](https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js).\n\n\n## $data reference\n\nWith `v5` option you can use values from the validated data as the values for the schema keywords. See [v5 proposal](https://github.com/json-schema/json-schema/wiki/$data-(v5-proposal)) for more information about how it works.\n\n`$data` reference is supported in the keywords: constant, enum, format, maximum/minimum, exclusiveMaximum / exclusiveMinimum, maxLength / minLength, maxItems / minItems, maxProperties / minProperties, formatMaximum / formatMinimum, formatExclusiveMaximum / formatExclusiveMinimum, multipleOf, pattern, required, uniqueItems.\n\nThe value of \"$data\" should be a [JSON-pointer](https://tools.ietf.org/html/rfc6901) to the data (the root is always the top level data object, even if the $data reference is inside a referenced subschema) or a [relative JSON-pointer](http://tools.ietf.org/html/draft-luff-relative-json-pointer-00) (it is relative to the current point in data; if the $data reference is inside a referenced subschema it cannot point to the data outside of the root level for this subschema).\n\nExamples.\n\nThis schema requires that the value in property `smaller` is less or equal than the value in the property larger:\n\n```javascript\nvar schema = {\n  \"properties\": {\n    \"smaller\": {\n      \"type\": \"number\",\n      \"maximum\": { \"$data\": \"1/larger\" }\n    },\n    \"larger\": { \"type\": \"number\" }\n  }\n};\n\nvar validData = {\n  smaller: 5,\n  larger: 7\n};\n```\n\nThis schema requires that the properties have the same format as their field names:\n\n```javascript\nvar schema = {\n  \"additionalProperties\": {\n    \"type\": \"string\",\n    \"format\": { \"$data\": \"0#\" }\n  }\n};\n\nvar validData = {\n  'date-time': '1963-06-19T08:30:06.283185Z',\n  email: 'joe.bloggs@example.com'\n}\n```\n\n`$data` reference is resolved safely - it won't throw even if some property is undefined. If `$data` resolves to `undefined` the validation succeeds (with the exclusion of `constant` keyword). If `$data` resolves to incorrect type (e.g. not \"number\" for maximum keyword) the validation fails.\n\n\n## $merge and $patch keywords\n\nWith v5 option and the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) you can use the keywords `$merge` and `$patch` that allow extending JSON-schemas with patches using formats [JSON Merge Patch (RFC 7396)](https://tools.ietf.org/html/rfc7396) and [JSON Patch (RFC 6902)](https://tools.ietf.org/html/rfc6902).\n\nTo add keywords `$merge` and `$patch` to Ajv instance use this code:\n\n```javascript\nrequire('ajv-merge-patch')(ajv);\n```\n\nExamples.\n\nUsing `$merge`:\n\n```json\n{\n  \"$merge\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": {\n      \"properties\": { \"q\": { \"type\": \"number\" } }\n    }\n  }\n}\n```\n\nUsing `$patch`:\n\n```json\n{\n  \"$patch\": {\n    \"source\": {\n      \"type\": \"object\",\n      \"properties\": { \"p\": { \"type\": \"string\" } },\n      \"additionalProperties\": false\n    },\n    \"with\": [\n      { \"op\": \"add\", \"path\": \"/properties/q\", \"value\": { \"type\": \"number\" } }\n    ]\n  }\n}\n```\n\nThe schemas above are equivalent to this schema:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"p\": { \"type\": \"string\" },\n    \"q\": { \"type\": \"number\" }\n  },\n  \"additionalProperties\": false\n}\n```\n\nThe properties `source` and `with` in the keywords `$merge` and `$patch` can use absolute or relative `$ref` to point to other schemas previously added to the Ajv instance or to the fragments of the current schema.\n\nSee the package [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) for more information.\n\n\n## Defining custom keywords\n\nThe advantages of using custom keywords are:\n\n- allow creating validation scenarios that cannot be expressed using JSON-Schema\n- simplify your schemas\n- help bringing a bigger part of the validation logic to your schemas\n- make your schemas more expressive, less verbose and closer to your application domain\n- implement custom data processors that modify your data (`modifying` option MUST be used in keyword definition) and/or create side effects while the data is being validated\n\nIf a keyword is used only for side-effects and its validation result is pre-defined, use option `valid: true/false` in keyword definition to simplify both generated code (no error handling in case of `valid: true`) and your keyword functions (no need to return any validation result).\n\nThe concerns you have to be aware of when extending JSON-schema standard with custom keywords are the portability and understanding of your schemas. You will have to support these custom keywords on other platforms and to properly document these keywords so that everybody can understand them in your schemas.\n\nYou can define custom keywords with [addKeyword](#api-addkeyword) method. Keywords are defined on the `ajv` instance level - new instances will not have previously defined keywords.\n\nAjv allows defining keywords with:\n- validation function\n- compilation function\n- macro function\n- inline compilation function that should return code (as string) that will be inlined in the currently compiled schema.\n\nExample. `range` and `exclusiveRange` keywords using compiled schema:\n\n```javascript\najv.addKeyword('range', { type: 'number', compile: function (sch, parentSchema) {\n  var min = sch[0];\n  var max = sch[1];\n\n  return parentSchema.exclusiveRange === true\n          ? function (data) { return data > min && data < max; }\n          : function (data) { return data >= min && data <= max; }\n} });\n\nvar schema = { \"range\": [2, 4], \"exclusiveRange\": true };\nvar validate = ajv.compile(schema);\nconsole.log(validate(2.01)); // true\nconsole.log(validate(3.99)); // true\nconsole.log(validate(2)); // false\nconsole.log(validate(4)); // false\n```\n\nSeveral custom keywords (typeof, instanceof, range and propertyNames) are defined in [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) package - they can be used for your schemas and as a starting point for your own custom keywords.\n\nSee [Defining custom keywords](https://github.com/epoberezkin/ajv/blob/master/CUSTOM.md) for more details.\n\n\n## Asynchronous compilation\n\nDuring asynchronous compilation remote references are loaded using supplied function. See `compileAsync` method and `loadSchema` [option](#options).\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ loadSchema: loadSchema });\n\najv.compileAsync(schema, function (err, validate) {\n\tif (err) return;\n\tvar valid = validate(data);\n});\n\nfunction loadSchema(uri, callback) {\n\trequest.json(uri, function(err, res, body) {\n\t\tif (err || res.statusCode >= 400)\n\t\t\tcallback(err || new Error('Loading error: ' + res.statusCode));\n\t\telse\n\t\t\tcallback(null, body);\n\t});\n}\n```\n\n__Please note__: [Option](#options) `missingRefs` should NOT be set to `\"ignore\"` or `\"fail\"` for asynchronous compilation to work.\n\n\n## Asynchronous validation\n\nExample in node REPL: https://tonicdev.com/esp/ajv-asynchronous-validation\n\nYou can define custom formats and keywords that perform validation asyncronously by accessing database or some service. You should add `async: true` in the keyword or format defnition (see [addFormat](#api-addformat), [addKeyword](#api-addkeyword) and [Defining custom keywords](#defining-custom-keywords)).\n\nIf your schema uses asynchronous formats/keywords or refers to some schema that contains them it should have `\"$async\": true` keyword so that Ajv can compile it correctly. If asynchronous format/keyword or reference to asynchronous schema is used in the schema without `$async` keyword Ajv will throw an exception during schema compilation.\n\n__Please note__: all asynchronous subschemas that are referenced from the current or other schemas should have `\"$async\": true` keyword as well, otherwise the schema compilation will fail.\n\nValidation function for an asynchronous custom format/keyword should return a promise that resolves to `true` or `false` (or rejects with `new Ajv.ValidationError(errors)` if you want to return custom errors from the keyword function). Ajv compiles asynchronous schemas to either [generator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*) (default) that can be optionally transpiled with [regenerator](https://github.com/facebook/regenerator) or to [es7 async function](http://tc39.github.io/ecmascript-asyncawait/) that can be transpiled with [nodent](https://github.com/MatAtBread/nodent) or with regenerator as well. You can also supply any other transpiler as a function. See [Options](#options).\n\nThe compiled validation function has `$async: true` property (if the schema is asynchronous), so you can differentiate these functions if you are using both syncronous and asynchronous schemas.\n\nIf you are using generators, the compiled validation function can be either wrapped with [co](https://github.com/tj/co) (default) or returned as generator function, that can be used directly, e.g. in [koa](http://koajs.com/) 1.0. `co` is a small library, it is included in Ajv (both as npm dependency and in the browser bundle).\n\nGenerator functions are currently supported in Chrome, Firefox and node.js (0.11+); if you are using Ajv in other browsers or in older versions of node.js you should use one of available transpiling options. All provided async modes use global Promise class. If your platform does not have Promise you should use a polyfill that defines it.\n\nValidation result will be a promise that resolves to `true` or rejects with an exception `Ajv.ValidationError` that has the array of validation errors in `errors` property.\n\n\nExample:\n\n```javascript\n/**\n * without \"async\" and \"transpile\" options (or with option {async: true})\n * Ajv will choose the first supported/installed option in this order:\n * 1. native generator function wrapped with co\n * 2. es7 async functions transpiled with nodent\n * 3. es7 async functions transpiled with regenerator\n */\n\nvar ajv = new Ajv;\n\najv.addKeyword('idExists', {\n  async: true,\n  type: 'number',\n  validate: checkIdExists\n});\n\n\nfunction checkIdExists(schema, data) {\n  return knex(schema.table)\n  .select('id')\n  .where('id', data)\n  .then(function (rows) {\n    return !!rows.length; // true if record is found\n  });\n}\n\nvar schema = {\n  \"$async\": true,\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"users\" }\n    },\n    \"postId\": {\n      \"type\": \"integer\",\n      \"idExists\": { \"table\": \"posts\" }\n    }\n  }\n};\n\nvar validate = ajv.compile(schema);\n\nvalidate({ userId: 1, postId: 19 }))\n.then(function (valid) {\n  // \"valid\" is always true here\n  console.log('Data is valid');\n})\n.catch(function (err) {\n  if (!(err instanceof Ajv.ValidationError)) throw err;\n  // data is invalid\n  console.log('Validation errors:', err.errors);\n});\n\n```\n\n### Using transpilers with asyncronous validation functions.\n\nTo use a transpiler you should separately install it (or load its bundle in the browser).\n\nAjv npm package includes minified browser bundles of regenerator and nodent in dist folder.\n\n\n#### Using nodent\n\n```javascript\nvar ajv = new Ajv({ /* async: 'es7', */ transpile: 'nodent' });\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\n`npm install nodent` or use `nodent.min.js` from dist folder of npm package.\n\n\n#### Using regenerator\n\n```javascript\nvar ajv = new Ajv({ /* async: 'es7', */ transpile: 'regenerator' });\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\n`npm install regenerator` or use `regenerator.min.js` from dist folder of npm package.\n\n\n#### Using other transpilers\n\n```javascript\nvar ajv = new Ajv({ async: 'es7', transpile: transpileFunc });\nvar validate = ajv.compile(schema); // transpiled es7 async function\nvalidate(data).then(successFunc).catch(errorFunc);\n```\n\nSee [Options](#options).\n\n\n#### Comparison of async modes\n\n|mode|transpile<br>speed*|run-time<br>speed*|bundle<br>size|\n|---|:-:|:-:|:-:|\n|generators<br>(native)|-|1.0|-|\n|es7.nodent|1.35|1.1|183Kb|\n|es7.regenerator|1.0|2.7|322Kb|\n|regenerator|1.0|3.2|322Kb|\n\n\\* Relative performance in node v.4, smaller is better.\n\n[nodent](https://github.com/MatAtBread/nodent) has several advantages:\n\n- much smaller browser bundle than regenerator\n- almost the same performance of generated code as native generators in nodejs and the latest Chrome\n- much better performace than native generators in other browsers\n- works in IE 9 (regenerator does not)\n\n[regenerator](https://github.com/facebook/regenerator) is a more widely adopted alternative.\n\n\n## Filtering data\n\nWith [option `removeAdditional`](#options) (added by [andyscott](https://github.com/andyscott)) you can filter data during the validation.\n\nThis option modifies original data.\n\nExample:\n\n```javascript\nvar ajv = new Ajv({ removeAdditional: true });\nvar schema = {\n  \"additionalProperties\": false,\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": {\n      \"additionalProperties\": { \"type\": \"number\" },\n      \"properties\": {\n        \"baz\": { \"type\": \"string\" }\n      }\n    }\n  }\n}\n\nvar data = {\n  \"foo\": 0,\n  \"additional1\": 1, // will be removed; `additionalProperties` == false\n  \"bar\": {\n    \"baz\": \"abc\",\n    \"additional2\": 2 // will NOT be removed; `additionalProperties` != false\n  },\n}\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 0, \"bar\": { \"baz\": \"abc\", \"additional2\": 2 }\n```\n\nIf `removeAdditional` option in the example above were `\"all\"` then both `additional1` and `additional2` properties would have been removed.\n\nIf the option were `\"failing\"` then property `additional1` would have been removed regardless of its value and property `additional2` would have been removed only if its value were failing the schema in the inner `additionalProperties` (so in the example above it would have stayed because it passes the schema, but any non-number would have been removed).\n\n__Please note__: If you use `removeAdditional` option with `additionalProperties` keyword inside `anyOf`/`oneOf` keywords your validation can fail with this schema, for example:\n\n```json\n{\n  \"type\": \"object\",\n  \"oneOf\": [\n    {\n      \"properties\": {\n        \"foo\": { \"type\": \"string\" }\n      },\n      \"required\": [ \"foo\" ],\n      \"additionalProperties\": false\n    },\n    {\n      \"properties\": {\n        \"bar\": { \"type\": \"integer\" }\n      },\n      \"required\": [ \"bar\" ],\n      \"additionalProperties\": false\n    }\n  ]\n}\n```\n\nThe intention of the schema above is to allow objects with either the string property \"foo\" or the integer property \"bar\", but not with both and not with any other properties.\n\nWith the option `removeAdditional: true` the validation will pass for the object `{ \"foo\": \"abc\"}` but will fail for the object `{\"bar\": 1}`. It happens because while the first subschema in `oneOf` is validated, the property `bar` is removed because it is an additional property according to the standard (because it is not included in `properties` keyword in the same schema).\n\nWhile this behaviour is unexpected (issues [#129](https://github.com/epoberezkin/ajv/issues/129), [#134](https://github.com/epoberezkin/ajv/issues/134)), it is correct. To have the expected behaviour (both objects are allowed and additional properties are removed) the schema has to be refactored in this way:\n\n```json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"string\" },\n    \"bar\": { \"type\": \"integer\" }\n  },\n  \"additionalProperties\": false,\n  \"oneOf\": [\n    { \"required\": [ \"foo\" ] },\n    { \"required\": [ \"bar\" ] }\n  ]\n}\n```\n\nThe schema above is also more efficient - it will compile into a faster function.\n\n\n## Assigning defaults\n\nWith [option `useDefaults`](#options) Ajv will assign values from `default` keyword in the schemas of `properties` and `items` (when it is the array of schemas) to the missing properties and items.\n\nThis option modifies original data.\n\n__Please note__: by default the default value is inserted in the generated validation code as a literal (starting from v4.0), so the value inserted in the data will be the deep clone of the default in the schema.\n\nIf you need to insert the default value in the data by reference pass the option `useDefaults: \"shared\"`.\n\nInserting defaults by reference can be faster (in case you have an object in `default`) and it allows to have dynamic values in defaults, e.g. timestamp, without recompiling the schema. The side effect is that modifying the default value in any validated data instance will change the default in the schema and in other validated data instances. See example 3 below.\n\n\nExample 1 (`default` in `properties`):\n\n```javascript\nvar ajv = new Ajv({ useDefaults: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"string\", \"default\": \"baz\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": 1 };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": \"baz\" }\n```\n\nExample 2 (`default` in `items`):\n\n```javascript\nvar schema = {\n  \"type\": \"array\",\n  \"items\": [\n    { \"type\": \"number\" },\n    { \"type\": \"string\", \"default\": \"foo\" }\n  ]\n}\n\nvar data = [ 1 ];\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // [ 1, \"foo\" ]\n```\n\nExample 3 (inserting \"defaults\" by reference):\n\n```javascript\nvar ajv = new Ajv({ useDefaults: 'shared' });\n\nvar schema = {\n  properties: {\n    foo: {\n      default: { bar: 1 }\n    }\n  }\n}\n\nvar validate = ajv.compile(schema);\n\nvar data = {};\nconsole.log(validate(data)); // true\nconsole.log(data); // { foo: { bar: 1 } }\n\ndata.foo.bar = 2;\n\nvar data2 = {};\nconsole.log(validate(data2)); // true\nconsole.log(data2); // { foo: { bar: 2 } }\n```\n\n`default` keywords in other cases are ignored:\n\n- not in `properties` or `items` subschemas\n- in schemas inside `anyOf`, `oneOf` and `not` (see [#42](https://github.com/epoberezkin/ajv/issues/42))\n- in `if` subschema of v5 `switch` keyword\n- in schemas generated by custom macro keywords\n\n\n## Coercing data types\n\nWhen you are validating user inputs all your data properties are usually strings. The option `coerceTypes` allows you to have your data types coerced to the types specified in your schema `type` keywords, both to pass the validation and to use the correctly typed data afterwards.\n\nThis option modifies original data.\n\n__Please note__: if you pass a scalar value to the validating function its type will be coerced and it will pass the validation, but the value of the variable you pass won't be updated because scalars are passed by value.\n\n\nExample 1:\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: true });\nvar schema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"foo\": { \"type\": \"number\" },\n    \"bar\": { \"type\": \"boolean\" }\n  },\n  \"required\": [ \"foo\", \"bar\" ]\n};\n\nvar data = { \"foo\": \"1\", \"bar\": \"false\" };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": 1, \"bar\": false }\n```\n\nExample 2 (array coercions):\n\n```javascript\nvar ajv = new Ajv({ coerceTypes: 'array' });\nvar schema = {\n  \"properties\": {\n    \"foo\": { \"type\": \"array\", \"items\": { \"type\": \"number\" } },\n    \"bar\": { \"type\": \"boolean\" }\n  }\n};\n\nvar data = { \"foo\": \"1\", \"bar\": [\"false\"] };\n\nvar validate = ajv.compile(schema);\n\nconsole.log(validate(data)); // true\nconsole.log(data); // { \"foo\": [1], \"bar\": false }\n```\n\nThe coercion rules, as you can see from the example, are different from JavaScript both to validate user input as expected and to have the coercion reversible (to correctly validate cases where different types are defined in subschemas of \"anyOf\" and other compound keywords).\n\nSee [Coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md) for details.\n\n\n## API\n\n##### new Ajv(Object options) -&gt; Object\n\nCreate Ajv instance.\n\nAll the instance methods below are bound to the instance, so they can be used without the instance.\n\n\n##### .compile(Object schema) -&gt; Function&lt;Object data&gt;\n\nGenerate validating function and cache the compiled schema for future use.\n\nValidating function returns boolean and has properties `errors` with the errors from the last validation (`null` if there were no errors) and `schema` with the reference to the original schema.\n\nUnless the option `validateSchema` is false, the schema will be validated against meta-schema and if schema is invalid the error will be thrown. See [options](#options).\n\n\n##### .compileAsync(Object schema, Function callback)\n\nAsyncronous version of `compile` method that loads missing remote schemas using asynchronous function in `options.loadSchema`. Callback will always be called with 2 parameters: error (or null) and validating function. Error will be not null in the following cases:\n\n- missing schema can't be loaded (`loadSchema` calls callback with error).\n- the schema containing missing reference is loaded, but the reference cannot be resolved.\n- schema (or some referenced schema) is invalid.\n\nThe function compiles schema and loads the first missing schema multiple times, until all missing schemas are loaded.\n\nSee example in [Asynchronous compilation](#asynchronous-compilation).\n\n\n##### .validate(Object schema|String key|String ref, data) -&gt; Boolean\n\nValidate data using passed schema (it will be compiled and cached).\n\nInstead of the schema you can use the key that was previously passed to `addSchema`, the schema id if it was present in the schema or any previously resolved reference.\n\nValidation errors will be available in the `errors` property of Ajv instance (`null` if there were no errors).\n\n__Please note__: every time this method is called the errors are overwritten so you need to copy them to another variable if you want to use them later.\n\nIf the schema is asynchronous (has `$async` keyword on the top level) this method returns a Promise. See [Asynchronous validation](#asynchronous-validation).\n\n\n##### .addSchema(Array&lt;Object&gt;|Object schema [, String key])\n\nAdd schema(s) to validator instance. This method does not compile schemas (but it still validates them). Because of that dependencies can be added in any order and circular dependencies are supported. It also prevents unnecessary compilation of schemas that are containers for other schemas but not used as a whole.\n\nArray of schemas can be passed (schemas should have ids), the second parameter will be ignored.\n\nKey can be passed that can be used to reference the schema and will be used as the schema id if there is no id inside the schema. If the key is not passed, the schema id will be used as the key.\n\n\nOnce the schema is added, it (and all the references inside it) can be referenced in other schemas and used to validate data.\n\nAlthough `addSchema` does not compile schemas, explicit compilation is not required - the schema will be compiled when it is used first time.\n\nBy default the schema is validated against meta-schema before it is added, and if the schema does not pass validation the exception is thrown. This behaviour is controlled by `validateSchema` option.\n\n\n##### .addMetaSchema(Array&lt;Object&gt;|Object schema [, String key])\n\nAdds meta schema(s) that can be used to validate other schemas. That function should be used instead of `addSchema` because there may be instance options that would compile a meta schema incorrectly (at the moment it is `removeAdditional` option).\n\nThere is no need to explicitly add draft 4 meta schema (http://json-schema.org/draft-04/schema and http://json-schema.org/schema) - it is added by default, unless option `meta` is set to `false`. You only need to use it if you have a changed meta-schema that you want to use to validate your schemas. See `validateSchema`.\n\nWith option `v5: true` [meta-schema that includes v5 keywords](https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json) also added.\n\n\n##### <a name=\"api-validateschema\"></a>.validateSchema(Object schema) -&gt; Boolean\n\nValidates schema. This method should be used to validate schemas rather than `validate` due to the inconsistency of `uri` format in JSON-Schema standard.\n\nBy default this method is called automatically when the schema is added, so you rarely need to use it directly.\n\nIf schema doesn't have `$schema` property it is validated against draft 4 meta-schema (option `meta` should not be false) or against [v5 meta-schema](https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#) if option `v5` is true.\n\nIf schema has `$schema` property then the schema with this id (that should be previously added) is used to validate passed schema.\n\nErrors will be available at `ajv.errors`.\n\n\n##### .getSchema(String key) -&gt; Function&lt;Object data&gt;\n\nRetrieve compiled schema previously added with `addSchema` by the key passed to `addSchema` or by its full reference (id). Returned validating function has `schema` property with the reference to the original schema.\n\n\n##### .removeSchema([Object schema|String key|String ref|RegExp pattern])\n\nRemove added/cached schema. Even if schema is referenced by other schemas it can be safely removed as dependent schemas have local references.\n\nSchema can be removed using:\n- key passed to `addSchema`\n- it's full reference (id)\n- RegExp that should match schema id or key (meta-schemas won't be removed)\n- actual schema object that will be stable-stringified to remove schema from cache\n\nIf no parameter is passed all schemas but meta-schemas will be removed and the cache will be cleared.\n\n\n##### <a name=\"api-addformat\"></a>.addFormat(String name, String|RegExp|Function|Object format)\n\nAdd custom format to validate strings. It can also be used to replace pre-defined formats for Ajv instance.\n\nStrings are converted to RegExp.\n\nFunction should return validation result as `true` or `false`.\n\nIf object is passed it should have properties `validate`, `compare` and `async`:\n\n- _validate_: a string, RegExp or a function as described above.\n- _compare_: an optional comparison function that accepts two strings and compares them according to the format meaning. This function is used with keywords `formatMaximum`/`formatMinimum` (from [v5 proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals) - `v5` option should be used). It should return `1` if the first value is bigger than the second value, `-1` if it is smaller and `0` if it is equal.\n- _async_: an optional `true` value if `validate` is an asynchronous function; in this case it should return a promise that resolves with a value `true` or `false`.\n\nCustom formats can be also added via `formats` option.\n\n\n##### <a name=\"api-addkeyword\"></a>.addKeyword(String keyword, Object definition)\n\nAdd custom validation keyword to Ajv instance.\n\nKeyword should be different from all standard JSON schema keywords and different from previously defined keywords. There is no way to redefine keywords or to remove keyword definition from the instance.\n\nKeyword must start with a letter, `_` or `$`, and may continue with letters, numbers, `_`, `$`, or `-`.\nIt is recommended to use an application-specific prefix for keywords to avoid current and future name collisions.\n\nExample Keywords:\n- `\"xyz-example\"`: valid, and uses prefix for the xyz project to avoid name collisions.\n- `\"example\"`: valid, but not recommended as it could collide with future versions of JSON schema etc.\n- `\"3-example\"`: invalid as numbers are not allowed to be the first character in a keyword\n\nKeyword definition is an object with the following properties:\n\n- _type_: optional string or array of strings with data type(s) that the keyword applies to. If not present, the keyword will apply to all types.\n- _validate_: validating function\n- _compile_: compiling function\n- _macro_: macro function\n- _inline_: compiling function that returns code (as string)\n- _schema_: an optional `false` value used with \"validate\" keyword to not pass schema\n- _metaSchema_: an optional meta-schema for keyword schema\n- _modifying_: `true` MUST be passed if keyword modifies data\n- _valid_: pass `true`/`false` to pre-define validation result, the result returned from validation function will be ignored. This option cannot be used with macro keywords.\n- _$data_: an optional `true` value to support [$data reference](#data-reference) as the value of custom keyword. The reference will be resolved at validation time. If the keyword has meta-schema it would be extended to allow $data and it will be used to validate the resolved value. Supporting $data reference requires that keyword has validating function (as the only option or in addition to compile, macro or inline function).\n- _async_: an optional `true` value if the validation function is asynchronous (whether it is compiled or passed in _validate_ property); in this case it should return a promise that resolves with a value `true` or `false`. This option is ignored in case of \"macro\" and \"inline\" keywords.\n- _errors_: an optional boolean indicating whether keyword returns errors. If this property is not set Ajv will determine if the errors were set in case of failed validation.\n\n_compile_, _macro_ and _inline_ are mutually exclusive, only one should be used at a time. _validate_ can be used separately or in addition to them to support $data reference.\n\n__Please note__: If the keyword is validating data type that is different from the type(s) in its definition, the validation function will not be called (and expanded macro will not be used), so there is no need to check for data type inside validation function or inside schema returned by macro function (unless you want to enforce a specific type and for some reason do not want to use a separate `type` keyword for that). In the same way as standard keywords work, if the keyword does not apply to the data type being validated, the validation of this keyword will succeed.\n\nSee [Defining custom keywords](#defining-custom-keywords) for more details.\n\n\n##### .getKeyword(String keyword) -&gt; Object|Boolean\n\nReturns custom keyword definition, `true` for pre-defined keywords and `false` if the keyword is unknown.\n\n\n##### .removeKeyword(String keyword)\n\nRemoves custom or pre-defined keyword so you can redefine them.\n\nWhile this method can be used to extend pre-defined keywords, it can also be used to completely change their meaning - it may lead to unexpected results.\n\n__Please note__: schemas compiled before the keyword is removed will continue to work without changes. To recompile schemas use `removeSchema` method and compile them again.\n\n\n##### .errorsText([Array&lt;Object&gt; errors [, Object options]]) -&gt; String\n\nReturns the text with all errors in a String.\n\nOptions can have properties `separator` (string used to separate errors, \", \" by default) and `dataVar` (the variable name that dataPaths are prefixed with, \"data\" by default).\n\n\n## Options\n\nDefaults:\n\n```javascript\n{\n  // validation and reporting options:\n  v5:               false,\n  allErrors:        false,\n  verbose:          false,\n  jsonPointers:     false,\n  uniqueItems:      true,\n  unicode:          true,\n  format:           'fast',\n  formats:          {},\n  unknownFormats:   'ignore',\n  schemas:          {},\n  // referenced schema options:\n  missingRefs:      true,\n  extendRefs:       true,\n  loadSchema:       undefined, // function(uri, cb) { /* ... */ cb(err, schema); },\n  // options to modify validated data:\n  removeAdditional: false,\n  useDefaults:      false,\n  coerceTypes:      false,\n  // asynchronous validation options:\n  async:            undefined,\n  transpile:        undefined,\n  // advanced options:\n  meta:             true,\n  validateSchema:   true,\n  addUsedSchema:    true,\n  inlineRefs:       true,\n  passContext:      false,\n  loopRequired:     Infinity,\n  ownProperties:    false,\n  multipleOfPrecision: false,\n  errorDataPath:    'object',\n  sourceCode:       true,\n  messages:         true,\n  beautify:         false,\n  cache:            new Cache\n}\n```\n\n##### Validation and reporting options\n\n- _v5_: add keywords `switch`, `constant`, `contains`, `patternGroups`, `patternRequired`, `formatMaximum` / `formatMinimum` and `formatExclusiveMaximum` / `formatExclusiveMinimum` from [JSON-schema v5 proposals](https://github.com/json-schema/json-schema/wiki/v5-Proposals). With this option added schemas without `$schema` property are validated against [v5 meta-schema](https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#). `false` by default.\n- _allErrors_: check all rules collecting all errors. Default is to return after the first error.\n- _verbose_: include the reference to the part of the schema (`schema` and `parentSchema`) and validated data in errors (false by default).\n- _jsonPointers_: set `dataPath` propery of errors using [JSON Pointers](https://tools.ietf.org/html/rfc6901) instead of JavaScript property access notation.\n- _uniqueItems_: validate `uniqueItems` keyword (true by default).\n- _unicode_: calculate correct length of strings with unicode pairs (true by default). Pass `false` to use `.length` of strings that is faster, but gives \"incorrect\" lengths of strings with unicode pairs - each unicode pair is counted as two characters.\n- _format_: formats validation mode ('fast' by default). Pass 'full' for more correct and slow validation or `false` not to validate formats at all. E.g., 25:00:00 and 2015/14/33 will be invalid time and date in 'full' mode but it will be valid in 'fast' mode.\n- _formats_: an object with custom formats. Keys and values will be passed to `addFormat` method.\n- _unknownFormats_: handling of unknown formats. Option values:\n  - `true` (will be default in 5.0.0) - if the unknown format is encountered the exception is thrown during schema compilation. If `format` keyword value is [v5 $data reference](#data-reference) and it is unknown the validation will fail.\n  - `[String]` - an array of unknown format names that will be ignored. This option can be used to allow usage of third party schemas with format(s) for which you don't have definitions, but still fail if some other unknown format is used. If `format` keyword value is [v5 $data reference](#data-reference) and it is not in this array the validation will fail.\n  - `\"ignore\"` (default now) - to log warning during schema compilation and always pass validation. This option is not recommended, as it allows to mistype format name. This behaviour is required by JSON-schema specification.\n- _schemas_: an array or object of schemas that will be added to the instance. If the order is important, pass array. In this case schemas must have IDs in them. Otherwise the object can be passed - `addSchema(value, key)` will be called for each schema in this object.\n\n\n##### Referenced schema options\n\n- _missingRefs_: handling of missing referenced schemas. Option values:\n  - `true` (default) - if the reference cannot be resolved during compilation the exception is thrown. The thrown error has properties `missingRef` (with hash fragment) and `missingSchema` (without it). Both properties are resolved relative to the current base id (usually schema id, unless it was substituted).\n  - `\"ignore\"` - to log error during compilation and always pass validation.\n  - `\"fail\"` - to log error and successfully compile schema but fail validation if this rule is checked.\n- _extendRefs_: validation of other keywords when `$ref` is present in the schema. Option values:\n  - `true` (default) - validate all keywords in the schemas with `$ref`.\n  - `\"ignore\"` - when `$ref` is used other keywords are ignored (as per [JSON Reference](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03#section-3) standard). A warning will be logged during the schema compilation.\n  - `\"fail\"` - if other validation keywords are used together with `$ref` the exception will be throw when the schema is compiled.\n- _loadSchema_: asynchronous function that will be used to load remote schemas when the method `compileAsync` is used and some reference is missing (option `missingRefs` should NOT be 'fail' or 'ignore'). This function should accept 2 parameters: remote schema uri and node-style callback. See example in [Asynchronous compilation](#asynchronous-compilation).\n\n\n##### Options to modify validated data\n\n- _removeAdditional_: remove additional properties - see example in [Filtering data](#filtering-data). This option is not used if schema is added with `addMetaSchema` method. Option values:\n  - `false` (default) - not to remove additional properties\n  - `\"all\"` - all additional properties are removed, regardless of `additionalProperties` keyword in schema (and no validation is made for them).\n  - `true` - only additional properties with `additionalProperties` keyword equal to `false` are removed.\n  - `\"failing\"` - additional properties that fail schema validation will be removed (where `additionalProperties` keyword is `false` or schema).\n- _useDefaults_: replace missing properties and items with the values from corresponding `default` keywords. Default behaviour is to ignore `default` keywords. This option is not used if schema is added with `addMetaSchema` method. See examples in [Assigning defaults](#assigning-defaults). Option values:\n  - `false` (default) - do not use defaults\n  - `true` - insert defaults by value (safer and slower, object literal is used).\n  - `\"shared\"` - insert defaults by reference (faster). If the default is an object, it will be shared by all instances of validated data. If you modify the inserted default in the validated data, it will be modified in the schema as well.\n- _coerceTypes_: change data type of data to match `type` keyword. See the example in [Coercing data types](#coercing-data-types) and [coercion rules](https://github.com/epoberezkin/ajv/blob/master/COERCION.md). Option values:\n  - `false` (default) - no type coercion.\n  - `true` - coerce scalar data types.\n  - `\"array\"` - in addition to coercions between scalar types, coerce scalar data to an array with one element and vice versa (as required by the schema).\n\n\n##### Asynchronous validation options\n\n- _async_: determines how Ajv compiles asynchronous schemas (see [Asynchronous validation](#asynchronous-validation)) to functions. Option values:\n  - `\"*\"` / `\"co*\"` - compile to generator function (\"co*\" - wrapped with `co.wrap`). If generators are not supported and you don't provide `transpile` option, the exception will be thrown when Ajv instance is created.\n  - `\"es7\"` - compile to es7 async function. Unless your platform supports them you need to provide `transpile` option. Currently only MS Edge 13 with flag supports es7 async functions according to [compatibility table](http://kangax.github.io/compat-table/es7/)).\n  - `true` - if transpile option is not passed Ajv will choose the first supported/installed async/transpile modes in this order: \"co*\" (native generator with co.wrap), \"es7\"/\"nodent\", \"co*\"/\"regenerator\" during the creation of the Ajv instance. If none of the options is available the exception will be thrown.\n  - `undefined`- Ajv will choose the first available async mode in the same way as with `true` option but when the first asynchronous schema is compiled.\n- _transpile_: determines whether Ajv transpiles compiled asynchronous validation function. Option values:\n  - `\"nodent\"` - transpile with [nodent](https://github.com/MatAtBread/nodent). If nodent is not installed, the exception will be thrown. nodent can only transpile es7 async functions; it will enforce this mode.\n  - `\"regenerator\"` - transpile with [regenerator](https://github.com/facebook/regenerator). If regenerator is not installed, the exception will be thrown.\n  - a function - this function should accept the code of validation function as a string and return transpiled code. This option allows you to use any other transpiler you prefer.\n\n\n##### Advanced options\n\n- _meta_: add [meta-schema](http://json-schema.org/documentation.html) so it can be used by other schemas (true by default). With option `v5: true` [v5 meta-schema](https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/json-schema-v5.json#) will be added as well. If an object is passed, it will be used as the default meta-schema for schemas that have no `$schema` keyword. This default meta-schema MUST have `$schema` keyword.\n- _validateSchema_: validate added/compiled schemas against meta-schema (true by default). `$schema` property in the schema can either be http://json-schema.org/schema or http://json-schema.org/draft-04/schema or absent (draft-4 meta-schema will be used) or can be a reference to the schema previously added with `addMetaSchema` method. Option values:\n  - `true` (default) -  if the validation fails, throw the exception.\n  - `\"log\"` - if the validation fails, log error.\n  - `false` - skip schema validation.\n- _addUsedSchema_: by default methods `compile` and `validate` add schemas to the instance if they have `id` property that doesn't start with \"#\". If `id` is present and it is not unique the exception will be thrown. Set this option to `false` to skip adding schemas to the instance and the `id` uniqueness check when these methods are used. This option does not affect `addSchema` method.\n- _inlineRefs_: Affects compilation of referenced schemas. Option values:\n  - `true` (default) - the referenced schemas that don't have refs in them are inlined, regardless of their size - that substantially improves performance at the cost of the bigger size of compiled schema functions.\n  - `false` - to not inline referenced schemas (they will be compiled as separate functions).\n  - integer number - to limit the maximum number of keywords of the schema that will be inlined.\n- _passContext_: pass validation context to custom keyword functions. If this option is `true` and you pass some context to the compiled validation function with `validate.call(context, data)`, the `context` will be available as `this` in your custom keywords. By default `this` is Ajv instance.\n- _loopRequired_: by default `required` keyword is compiled into a single expression (or a sequence of statements in `allErrors` mode). In case of a very large number of properties in this keyword it may result in a very big validation function. Pass integer to set the number of properties above which `required` keyword will be validated in a loop - smaller validation function size but also worse performance.\n- _ownProperties_: by default ajv iterates over all enumerable object properties; when this option is `true` only own enumerable object properties (i.e. found directly on the object rather than on its prototype) are iterated. Contributed by @mbroadst.\n- _multipleOfPrecision_: by default `multipleOf` keyword is validated by comparing the result of division with parseInt() of that result. It works for dividers that are bigger than 1. For small dividers such as 0.01 the result of the division is usually not integer (even when it should be integer, see issue [#84](https://github.com/epoberezkin/ajv/issues/84)). If you need to use fractional dividers set this option to some positive integer N to have `multipleOf` validated using this formula: `Math.abs(Math.round(division) - division) < 1e-N` (it is slower but allows for float arithmetics deviations).\n- _errorDataPath_: set `dataPath` to point to 'object' (default) or to 'property' when validating keywords `required`, `additionalProperties` and `dependencies`.\n- _sourceCode_: add `sourceCode` property to validating function (for debugging; this code can be different from the result of toString call).\n- _messages_: Include human-readable messages in errors. `true` by default. `false` can be passed when custom messages are used (e.g. with [ajv-i18n](https://github.com/epoberezkin/ajv-i18n)).\n- _beautify_: format the generated function with [js-beautify](https://github.com/beautify-web/js-beautify) (the validating function is generated without line-breaks). `npm install js-beautify` to use this option. `true` or js-beautify options can be passed.\n- _cache_: an optional instance of cache to store compiled schemas using stable-stringified schema as a key. For example, set-associative cache [sacjs](https://github.com/epoberezkin/sacjs) can be used. If not passed then a simple hash is used which is good enough for the common use case (a limited number of statically defined schemas). Cache should have methods `put(key, value)`, `get(key)`, `del(key)` and `clear()`.\n\n\n## Validation errors\n\nIn case of validation failure Ajv assigns the array of errors to `.errors` property of validation function (or to `.errors` property of Ajv instance in case `validate` or `validateSchema` methods were called). In case of [asynchronous validation](#asynchronous-validation) the returned promise is rejected with the exception of the class `Ajv.ValidationError` that has `.errors` poperty.\n\n\n### Error objects\n\nEach error is an object with the following properties:\n\n- _keyword_: validation keyword.\n- _dataPath_: the path to the part of the data that was validated. By default `dataPath` uses JavaScript property access notation (e.g., `\".prop[1].subProp\"`). When the option `jsonPointers` is true (see [Options](#options)) `dataPath` will be set using JSON pointer standard (e.g., `\"/prop/1/subProp\"`).\n- _schemaPath_: the path (JSON-pointer as a URI fragment) to the schema of the keyword that failed validation.\n- _params_: the object with the additional information about error that can be used to create custom error messages (e.g., using [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) package). See below for parameters set by all keywords.\n- _message_: the standard error message (can be excluded with option `messages` set to false).\n- _schema_: the schema of the keyword (added with `verbose` option).\n- _parentSchema_: the schema containing the keyword (added with `verbose` option)\n- _data_: the data validated by the keyword (added with `verbose` option).\n\n\n### Error parameters\n\nProperties of `params` object in errors depend on the keyword that failed validation.\n\n- `maxItems`, `minItems`, `maxLength`, `minLength`, `maxProperties`, `minProperties` - property `limit` (number, the schema of the keyword).\n- `additionalItems` - property `limit` (the maximum number of allowed items in case when `items` keyword is an array of schemas and `additionalItems` is false).\n- `additionalProperties` - property `additionalProperty` (the property not used in `properties` and `patternProperties` keywords).\n- `patternGroups` (with v5 option) - properties:\n  - `pattern`\n  - `reason` (\"minimum\"/\"maximum\"),\n  - `limit` (max/min allowed number of properties matching number)\n- `dependencies` - properties:\n  - `property` (dependent property),\n  - `missingProperty` (required missing dependency - only the first one is reported currently)\n  - `deps` (required dependencies, comma separated list as a string),\n  - `depsCount` (the number of required dependedncies).\n- `format` - property `format` (the schema of the keyword).\n- `maximum`, `minimum` - properties:\n  - `limit` (number, the schema of the keyword),\n  - `exclusive` (boolean, the schema of `exclusiveMaximum` or `exclusiveMinimum`),\n  - `comparison` (string, comparison operation to compare the data to the limit, with the data on the left and the limit on the right; can be \"<\", \"<=\", \">\", \">=\")\n- `multipleOf` - property `multipleOf` (the schema of the keyword)\n- `pattern` - property `pattern` (the schema of the keyword)\n- `required` - property `missingProperty` (required property that is missing).\n- `patternRequired` (with v5 option) - property `missingPattern` (required pattern that did not match any property).\n- `type` - property `type` (required type(s), a string, can be a comma-separated list)\n- `uniqueItems` - properties `i` and `j` (indices of duplicate items).\n- `enum` - property `allowedValues` pointing to the array of values (the schema of the keyword).\n- `$ref` - property `ref` with the referenced schema URI.\n- custom keywords (in case keyword definition doesn't create errors) - property `keyword` (the keyword name).\n\n\n## Related packages\n\n- [ajv-cli](https://github.com/epoberezkin/ajv-cli) - command line interface for Ajv\n- [ajv-i18n](https://github.com/epoberezkin/ajv-i18n) - internationalised error messages\n- [ajv-merge-patch](https://github.com/epoberezkin/ajv-merge-patch) - keywordsÂ $merge and $patch from v5 proposals.\n- [ajv-keywords](https://github.com/epoberezkin/ajv-keywords) - several custom keywords that can be used with Ajv (typeof, instanceof, range, propertyNames)\n\n\n## Some packages using Ajv\n\n- [webpack](https://github.com/webpack/webpack) - a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser\n- [jsonscript-js](https://github.com/JSONScript/jsonscript-js) - the interpreter for [JSONScript](http://www.jsonscript.org) - scripted processing of existing endpoints and services\n- [osprey-method-handler](https://github.com/mulesoft-labs/osprey-method-handler) - Express middleware for validating requests and responses based on a RAML method object, used in [osprey](https://github.com/mulesoft/osprey) - validating API proxy generated from a RAML definition\n- [har-validator](https://github.com/ahmadnassri/har-validator) - HTTP Archive (HAR) validator\n- [jsoneditor](https://github.com/josdejong/jsoneditor) - a web-based tool to view, edit, format, and validate JSON http://jsoneditoronline.org\n- [JSON Schema Lint](https://github.com/nickcmaynard/jsonschemalint) - a web tool to validate JSON/YAML document against a single JSON-schema http://jsonschemalint.com\n- [objection](https://github.com/vincit/objection.js) - SQL-friendly ORM for node.js\n- [table](https://github.com/gajus/table) - formats data into a string table\n- [ripple-lib](https://github.com/ripple/ripple-lib) - a JavaScript API for interacting with [Ripple](https://ripple.com) in Node.js and the browser\n- [restbase](https://github.com/wikimedia/restbase) - distributed storage with REST API & dispatcher for backend services built to provide a low-latency & high-throughput API for Wikipedia / Wikimedia content\n- [hippie-swagger](https://github.com/CacheControl/hippie-swagger) - [Hippie](https://github.com/vesln/hippie) wrapper that provides end to end API testing with swagger validation\n- [react-form-controlled](https://github.com/seeden/react-form-controlled) - React controlled form components with validation\n- [rabbitmq-schema](https://github.com/tjmehta/rabbitmq-schema) - a schema definition module for RabbitMQ graphs and messages\n- [@query/schema](https://www.npmjs.com/package/@query/schema) - stream filtering with a URI-safe query syntax parsing to JSON Schema\n- [chai-ajv-json-schema](https://github.com/peon374/chai-ajv-json-schema) - chai plugin to us JSON-schema with expect in mocha tests\n- [grunt-jsonschema-ajv](https://github.com/SignpostMarv/grunt-jsonschema-ajv) - Grunt plugin for validating files against JSON-Schema\n- [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) - extract text from bundle into a file\n- [electron-builder](https://github.com/electron-userland/electron-builder) - a solution to package and build a ready for distribution Electron app \n- [addons-linter](https://github.com/mozilla/addons-linter) - Mozilla Add-ons Linter\n- [gh-pages-generator](https://github.com/epoberezkin/gh-pages-generator) - multi-page site generator converting markdown files to GitHub pages\n\n\n## Tests\n\n```\nnpm install\ngit submodule update --init\nnpm test\n```\n\n## Contributing\n\nAll validation functions are generated using doT templates in [dot](https://github.com/epoberezkin/ajv/tree/master/lib/dot) folder. Templates are precompiled so doT is not a run-time dependency.\n\n`npm run build` - compiles templates to [dotjs](https://github.com/epoberezkin/ajv/tree/master/lib/dotjs) folder.\n\n`npm run watch` - automatically compiles templates when files in dot folder change\n\nPlease see [Contributing guidelines](https://github.com/epoberezkin/ajv/blob/master/CONTRIBUTING.md)\n\n\n## Changes history\n\nSee https://github.com/epoberezkin/ajv/releases\n\n__Please note__: [Changes in version 5.0.1-beta](https://github.com/epoberezkin/ajv/releases/tag/5.0.1-beta.0).\n\n[Changes in version 4.6.0](https://github.com/epoberezkin/ajv/releases/tag/4.6.0).\n\n[Changes in version 4.0.0](https://github.com/epoberezkin/ajv/releases/tag/4.0.0).\n\n[Changes in version 3.0.0](https://github.com/epoberezkin/ajv/releases/tag/3.0.0).\n\n[Changes in version 2.0.0](https://github.com/epoberezkin/ajv/releases/tag/2.0.0).\n\n\n## License\n\n[MIT](https://github.com/epoberezkin/ajv/blob/master/LICENSE)\n",
              "readmeFilename": "README.md",
              "optionalDependencies": {},
              "_dependencies": {
                "co": "^4.6.0",
                "json-stable-stringify": "^1.0.1"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ajv",
              "error": "[Circular]",
              "extraneous": false
            },
            "ajv-keywords": {
              "_from": "ajv-keywords@^1.0.0",
              "_id": "ajv-keywords@1.5.1",
              "_inBundle": false,
              "_integrity": "sha1-MU3QpLM2j609/NxU7eYXG4htrzw=",
              "_location": "/ajv-keywords",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "ajv-keywords@^1.0.0",
                "name": "ajv-keywords",
                "escapedName": "ajv-keywords",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/table"
              ],
              "_resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-1.5.1.tgz",
              "_shasum": "314dd0a4b3368fad3dfcdc54ede6171b886daf3c",
              "_spec": "ajv-keywords@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table",
              "author": {
                "name": "Evgeny Poberezkin"
              },
              "bugs": {
                "url": "https://github.com/epoberezkin/ajv-keywords/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Custom JSON-Schema keywords for ajv validator",
              "devDependencies": {
                "ajv": "^4.10.0",
                "ajv-pack": "^0.2.0",
                "chai": "^3.5.0",
                "coveralls": "^2.11.9",
                "dot": "^1.1.1",
                "eslint": "^3.6.0",
                "glob": "^7.1.1",
                "istanbul": "^0.4.3",
                "js-beautify": "^1.6.4",
                "json-schema-test": "^1.2.1",
                "mocha": "^3.0.2",
                "pre-commit": "^1.1.3",
                "uuid": "^3.0.1"
              },
              "files": [
                "index.js",
                "keywords"
              ],
              "homepage": "https://github.com/epoberezkin/ajv-keywords#readme",
              "keywords": [
                "JSON-Schema",
                "ajv",
                "keywords"
              ],
              "license": "MIT",
              "main": "index.js",
              "name": "ajv-keywords",
              "peerDependencies": {
                "ajv": ">=4.10.0"
              },
              "repository": {
                "type": "git",
                "url": "git+https://github.com/epoberezkin/ajv-keywords.git"
              },
              "scripts": {
                "build": "node node_modules/ajv/scripts/compile-dots.js node_modules/ajv/lib keywords",
                "eslint": "eslint index.js keywords/*.js",
                "prepublish": "npm run build",
                "test": "npm run build && npm run eslint && npm run test-cov",
                "test-cov": "istanbul cover -x 'spec/**' node_modules/mocha/bin/_mocha -- spec/*.spec.js -R spec",
                "test-spec": "mocha spec/*.spec.js -R spec"
              },
              "version": "1.5.1",
              "readme": "# ajv-keywords\n\nCustom JSON-Schema keywords for [ajv](https://github.com/epoberezkin/ajv) validator\n\n[![Build Status](https://travis-ci.org/epoberezkin/ajv-keywords.svg?branch=master)](https://travis-ci.org/epoberezkin/ajv-keywords)\n[![npm version](https://badge.fury.io/js/ajv-keywords.svg)](https://www.npmjs.com/package/ajv-keywords)\n[![npm downloads](https://img.shields.io/npm/dm/ajv-keywords.svg)](https://www.npmjs.com/package/ajv-keywords)\n[![Coverage Status](https://coveralls.io/repos/github/epoberezkin/ajv-keywords/badge.svg?branch=master)](https://coveralls.io/github/epoberezkin/ajv-keywords?branch=master)\n\n\n## Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [Keywords](#keywords)\n  - [typeof](#typeof)\n  - [instanceof](#instanceof)\n  - [range and exclusiveRange](#range-and-exclusiverange)\n  - [propertyNames](#propertynames)\n  - [if/then/else](#ifthenelse)\n  - [prohibited](#prohibited)\n  - [deepProperties](#deepproperties)\n  - [deepRequired](#deeprequired)\n  - [regexp](#regexp)\n  - [dynamicDefaults](#dynamicdefaults)\n- [License](#license)\n\n\n## Install\n\n```\nnpm install ajv-keywords\n```\n\n\n## Usage\n\nTo add all available keywords:\n\n```javascript\nvar Ajv = require('ajv');\nvar ajv = new Ajv;\nrequire('ajv-keywords')(ajv);\n\najv.validate({ instanceof: 'RegExp' }, /.*/); // true\najv.validate({ instanceof: 'RegExp' }, '.*'); // false\n```\n\nTo add a single keyword:\n\n```javascript\nrequire('ajv-keywords')(ajv, 'instanceof');\n```\n\nTo add multiple keywords:\n\n```javascript\nrequire('ajv-keywords')(ajv, ['typeof', 'instanceof']);\n```\n\nTo add a single keyword in browser (to avoid adding unused code):\n\n```javascript\nrequire('ajv-keywords/keywords/instanceof')(ajv);\n```\n\n\n## Keywords\n\n### `typeof`\n\nBased on JavaScript `typeof` operation.\n\nThe value of the keyword should be a string (`\"undefined\"`, `\"string\"`, `\"number\"`, `\"object\"`, `\"function\"`, `\"boolean\"` or `\"symbol\"`) or array of strings.\n\nTo pass validation the result of `typeof` operation on the value should be equal to the string (or one of the strings in the array).\n\n```\najv.validate({ typeof: 'undefined' }, undefined); // true\najv.validate({ typeof: 'undefined' }, null); // false\najv.validate({ typeof: ['undefined', 'object'] }, null); // true\n```\n\n\n### `instanceof`\n\nBased on JavaScript `instanceof` operation.\n\nThe value of the keyword should be a string (`\"Object\"`, `\"Array\"`, `\"Function\"`, `\"Number\"`, `\"String\"`, `\"Date\"`, `\"RegExp\"` or `\"Buffer\"`) or array of strings.\n\nTo pass validation the result of `data instanceof ...` operation on the value should be true:\n\n```\najv.validate({ instanceof: 'Array' }, []); // true\najv.validate({ instanceof: 'Array' }, {}); // false\najv.validate({ instanceof: ['Array', 'Function'] }, funciton(){}); // true\n```\n\nYou can add your own constructor function to be recognised by this keyword:\n\n```javascript\nfunction MyClass() {}\nvar instanceofDefinition = require('ajv-keywords').get('instanceof').definition;\n// or require('ajv-keywords/keywords/instanceof').definition;\ninstanceofDefinition.CONSTRUCTORS.MyClass = MyClass;\n\najv.validate({ instanceof: 'MyClass' }, new MyClass); // true\n```\n\n\n### `range` and `exclusiveRange`\n\nSyntax sugar for the combination of minimum and maximum keywords, also fails schema compilation if there are no numbers in the range.\n\nThe value of this keyword must be the array consisting of two numbers, the second must be greater or equal than the first one.\n\nIf the validated value is not a number the validation passes, otherwise to pass validation the value should be greater (or equal) than the first number and smaller (or equal) than the second number in the array. If `exclusiveRange` keyword is present in the same schema and its value is true, the validated value must not be equal to the range boundaries.\n\n```javascript\nvar schema = { range: [1, 3] };\najv.validate(schema, 1); // true\najv.validate(schema, 2); // true\najv.validate(schema, 3); // true\najv.validate(schema, 0.99); // false\najv.validate(schema, 3.01); // false\n\nvar schema = { range: [1, 3], exclusiveRange: true };\najv.validate(schema, 1.01); // true\najv.validate(schema, 2); // true\najv.validate(schema, 2.99); // true\najv.validate(schema, 1); // false\najv.validate(schema, 3); // false\n```\n\n\n### `propertyNames`\n\nThis keyword allows to define the schema for the property names of the object. The value of this keyword should be a valid JSON schema (v5 schemas are supported with Ajv option `{v5: true}`).\n\n```javascript\nvar schema = {\n  type: 'object'\n  propertyNames: {\n    anyOf: [\n      { format: ipv4 },\n      { format: hostname }\n    ]\n  }\n};\n\nvar validData = {\n  '192.128.0.1': {},\n  'test.example.com': {}\n};\n\nvar invalidData = {\n  '1.2.3': {}\n};\n\najv.validate(schema, validData); // true\najv.validate(schema, invalidData); // false\n```\n\n__Please note__: This keyword will be added to the next version of the JSON-Schema standard (draft-6), after it is published the keyword will be included in Ajv as standard validation keyword.\n\n\n### `if`/`then`/`else`\n\nThese keywords allow to implement conditional validation. Their values should be valid JSON-schemas. At the moment it requires using Ajv with v5 option.\n\nIf the data is valid according to the sub-schema in `if` keyword, then the result is equal to the result of data validation against the sub-schema in `then` keyword, otherwise - in `else` keyword (if `else` is absent, the validation succeeds).\n\n```javascript\nrequire('ajv-keywords')(ajv, 'if');\n\nvar schema = {\n  type: 'array',\n  items: {\n    type: 'integer',\n    minimum: 1,\n    if: { maximum: 10 },\n    then: { multipleOf: 2 },\n    else: { multipleOf: 5 }\n  }\n};\n\nvar validItems = [ 2, 4, 6, 8, 10, 15, 20, 25 ]; // etc.\n\nvar invalidItems = [ 1, 3, 5, 11, 12 ]; // etc.\n\najv.validate(schema, validItems); // true\najv.validate(schema, invalidItems); // false\n```\n\nThis keyword is [proposed](https://github.com/json-schema-org/json-schema-spec/issues/180) for the future version of JSON-Schema standard.\n\n\n### `prohibited`\n\nThis keyword allows to prohibit that any of the properties in the list is present in the object.\n\nThis keyword applies only to objects. If the data is not an object, the validation succeeds.\n\nThe value of this keyword should be an array of strings, each string being a property name. For data object to be valid none of the properties in this array should be present in the object.\n\n```\nvar schema = { prohibited: ['foo', 'bar']};\n\nvar validData = { baz: 1 };\nvar alsoValidData = {};\n\nvar invalidDataList = [\n  { foo: 1 },\n  { bar: 2 },\n  { foo: 1, bar: 2}\n];\n```\n\n\n### `deepRequired`\n\nThis keyword allows to check that some deep properties (identified by JSON pointers) are available. The value should be an array of JSON pointers to the data, starting from the current position in data.\n\n```javascript\nvar schema = {\n  type: 'object',\n  deepRequired: [\"/users/1/role\"]\n};\n\nvar validData = {\n  users: [\n    {},\n    {\n      id: 123,\n      role: 'admin'\n    }\n  ]\n};\n\nvar invalidData = {\n  users: [\n    {},\n    {\n      id: 123\n    }\n  ]\n};\n```\n\nSee [json-schema-org/json-schema-spec#203](https://github.com/json-schema-org/json-schema-spec/issues/203#issue-197211916) for an example of the equivalent schema without `deepRequired` keyword.\n\n\n## `deepProperties`\n\nThis keyword allows to validate deep properties (identified by JSON pointers). The value should be an object, where keys are JSON pointers to the data, starting from the current position in data, and the values are corresponding schemas.\n\n```javascript\nvar schema = {\n  type: 'object',\n  deepProperties: {\n    \"/users/1/role\": { \"enum\": [\"admin\"] }\n  }\n};\n\nvar validData = {\n  users: [\n    {},\n    {\n      id: 123,\n      role: 'admin'\n    }\n  ]\n};\n\nvar alsoValidData = {\n  users: {\n    \"1\": {\n      id: 123,\n      role: 'admin'\n    }\n  }\n};\n\nvar invalidData = {\n  users: [\n    {},\n    {\n      id: 123,\n      role: 'user'\n    }\n  ]\n};\n\nvar alsoInvalidData = {\n  users: {\n    \"1\": {\n      id: 123,\n      role: 'user'\n    }\n  }\n};\n```\n\n\n### `regexp`\n\nThis keyword allows to use regular expressions with flags in schemas (the standard `pattern` keyword does not support flags). The value of this keyword can be either a string (the result of `regexp.toString()`) or an object with the properties `pattern` and `flags` (the same strings that should be passed to RegExp constructor).\n\n```javascript\nvar schema = {\n  type: 'object',\n  properties: {\n    foo: { regexp: '/foo/i' },\n    bar: { regexp: { pattern: 'bar', flags: 'i' } }\n  }\n};\n\nvar validData = {\n  foo: 'Food',\n  bar: 'Barmen'\n};\n\nvar invalidData = {\n  foo: 'fog',\n  bar: 'bad'\n};\n```\n\n\n### `dynamicDefaults`\n\nThis keyword allows to assign dynamic defaults to properties, such as timestamps, unique IDs etc.\n\nThis keyword only works if `useDefaults` options is used and not inside `anyOf` keywrods etc., in the same way as [default keyword treated by Ajv](https://github.com/epoberezkin/ajv#assigning-defaults).\n\nThe keyword should be added on the object level. Its value should be an object with each property corresponding to a property name, in the same way as in standard `properties` keyword. The value of each property can be:\n\n- an identifier of default function (a string)\n- an object with properties `func` (an identifier) and `args` (an object with parameters that will be passed to this function during schema compilation - see examples).\n\nThe properties used in `dynamicDefaults` should not be added to `required` keyword (or validation will fail), because unlike `default` this keyword is processed after validation.\n\nThere are several predefined dynamic default functions:\n\n- `\"timestamp\"` - current timestamp in milliseconds\n- `\"datetime\"` - current date and time as string (ISO, valid according to `date-time` format)\n- `\"date\"` - current date as string (ISO, valid according to `date` format)\n- `\"time\"` - current time as string (ISO, valid according to `time` format)\n- `\"random\"` - pseudo-random number in [0, 1) interval\n- `\"randomint\"` - pseudo-random integer number. If string is used as a property value, the function will randomly return 0 or 1. If object `{func: 'randomint', max: N}` is used then the default will be an integer number in [0, N) interval.\n- `\"seq\"` - sequential integer number starting from 0. If string is used as a property value, the default sequence will be used. If object `{func: 'seq', name: 'foo'}` is used then the sequence with name `\"foo\"` will be used. Sequences are global, even if different ajv instances are used.\n\n```javascript\nvar schema = {\n  type: 'object',\n  dynamicDefaults: {\n    ts: 'datetime',\n    r: { func: 'randomint', max: 100 },\n    id: { func: 'seq', name: 'id' }\n  },\n  properties: {\n    ts: {\n      type: 'string',\n      format: 'datetime'\n    },\n    r: {\n      type: 'integer',\n      minimum: 0,\n      maximum: 100,\n      exclusiveMaximum: true\n    },\n    id: {\n      type: 'integer',\n      minimum: 0\n    }\n  }\n};\n\nvar data = {};\najv.validate(data); // true\ndata; // { ts: '2016-12-01T22:07:28.829Z', r: 25, id: 0 }\n\nvar data1 = {};\najv.validate(data1); // true\ndata1; // { ts: '2016-12-01T22:07:29.832Z', r: 68, id: 1 }\n\najv.validate(data1); // true\ndata1; // didn't change, as all properties were defined\n```\n\nYou can add your own dynamic default function to be recognised by this keyword:\n\n```javascript\nvar uuid = require('uuid');\n\nfunction uuidV4() { return uuid.v4(); }\n\nvar definition = require('ajv-keywords').get('dynamicDefaults').definition;\n// or require('ajv-keywords/keywords/dynamicDefaults').definition;\ndefinition.DEFAULTS.uuid = uuidV4;\n\nvar schema = {\n  dynamicDefaults: { id: 'uuid' },\n  properties: { id: { type: 'string', format: 'uuid' } }\n};\n\nvar data = {};\najv.validate(schema, data); // true\ndata; // { id: 'a1183fbe-697b-4030-9bcc-cfeb282a9150' };\n\nvar data1 = {};\najv.validate(schema, data1); // true\ndata1; // { id: '5b008de7-1669-467a-a5c6-70fa244d7209' }\n```\n\nYou also can define dynamic default that accepts parameters, e.g. version of uuid:\n\n```javascript\nvar uuid = require('uuid');\n\nfunction getUuid(args) {\n  var version = 'v' + (arvs && args.v || 4);\n  return function() {\n    return uuid[version]();\n  };\n}\n\nvar definition = require('ajv-keywords').get('dynamicDefaults').definition;\ndefinition.DEFAULTS.uuid = getUuid;\n\nvar schema = {\n  dynamicDefaults: {\n    id1: 'uuid', // v4\n    id2: { func: 'uuid', v: 4 }, // v4\n    id3: { func: 'uuid', v: 1 } // v1\n  }\n};\n```\n\n\n## License\n\n[MIT](https://github.com/JSONScript/ajv-keywords/blob/master/LICENSE)\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/ajv-keywords",
              "error": "[Circular]",
              "extraneous": false
            },
            "chalk": {
              "_from": "chalk@^1.1.3",
              "_id": "chalk@1.1.3",
              "_inBundle": false,
              "_integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",
              "_location": "/chalk",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",
              "_shasum": "a8115c55e4a702fe4d150abd3872822a7e09fc98",
              "_spec": "chalk@^1.1.3",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Terminal string styling done right. Much color.",
              "devDependencies": "[Circular]",
              "engines": "[Circular]",
              "files": "[Circular]",
              "homepage": "https://github.com/chalk/chalk#readme",
              "keywords": "[Circular]",
              "license": "MIT",
              "maintainers": "[Circular]",
              "name": "chalk",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "1.1.3",
              "xo": "[Circular]",
              "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"360\" src=\"https://cdn.rawgit.com/chalk/chalk/19935d6484811c5e468817f846b7b3d417d7bf4a/logo.svg\" alt=\"chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk)\n[![Coverage Status](https://coveralls.io/repos/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/r/chalk/chalk?branch=master)\n[![](http://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4)\n\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68). Although there are other ones, they either do too much or not enough.\n\n**Chalk is a clean and focused alternative.**\n\n![](https://github.com/chalk/ansi-styles/raw/master/screenshot.png)\n\n\n## Why\n\n- Highly performant\n- Doesn't extend `String.prototype`\n- Expressive API\n- Ability to nest styles\n- Clean and focused\n- Auto-detects color support\n- Actively maintained\n- [Used by ~4500 modules](https://www.npmjs.com/browse/depended/chalk) as of July 15, 2015\n\n\n## Install\n\n```\n$ npm install --save chalk\n```\n\n\n## Usage\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nvar chalk = require('chalk');\n\n// style a string\nchalk.blue('Hello world!');\n\n// combine styled and normal strings\nchalk.blue('Hello') + 'World' + chalk.red('!');\n\n// compose multiple styles using the chainable API\nchalk.blue.bgRed.bold('Hello world!');\n\n// pass in multiple arguments\nchalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz');\n\n// nest styles\nchalk.red('Hello', chalk.underline.bgBlue('world') + '!');\n\n// nest styles of the same type even (color, underline, background)\nchalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n);\n```\n\nEasily define your own themes.\n\n```js\nvar chalk = require('chalk');\nvar error = chalk.bold.red;\nconsole.log(error('Error!'));\n```\n\nTake advantage of console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data).\n\n```js\nvar name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> Hello Sindre\n```\n\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `Chalk.red.yellow.green` is equivalent to `Chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.enabled\n\nColor support is automatically detected, but you can override it by setting the `enabled` property. You should however only do this in your own code as it applies globally to all chalk consumers.\n\nIf you need to change this in a reusable module create a new instance:\n\n```js\nvar ctx = new chalk.constructor({enabled: false});\n```\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, add an environment variable `FORCE_COLOR` with any value to force color. Trumps `--no-color`.\n\n### chalk.styles\n\nExposes the styles as [ANSI escape codes](https://github.com/chalk/ansi-styles).\n\nGenerally not useful, but you might need just the `.open` or `.close` escape code if you're mixing externally styled strings with your own.\n\n```js\nvar chalk = require('chalk');\n\nconsole.log(chalk.styles.red);\n//=> {open: '\\u001b[31m', close: '\\u001b[39m'}\n\nconsole.log(chalk.styles.red.open + 'Hello' + chalk.styles.red.close);\n```\n\n### chalk.hasColor(string)\n\nCheck whether a string [has color](https://github.com/chalk/has-ansi).\n\n### chalk.stripColor(string)\n\n[Strip color](https://github.com/chalk/strip-ansi) from a string.\n\nCan be useful in combination with `.supportsColor` to strip color on externally styled text when it's not supported.\n\nExample:\n\n```js\nvar chalk = require('chalk');\nvar styledString = getText();\n\nif (!chalk.supportsColor) {\n\tstyledString = chalk.stripColor(styledString);\n}\n```\n\n\n## Styles\n\n### Modifiers\n\n- `reset`\n- `bold`\n- `dim`\n- `italic` *(not widely supported)*\n- `underline`\n- `inverse`\n- `hidden`\n- `strikethrough` *(not widely supported)*\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue` *(on Windows the bright version is used as normal blue is illegible)*\n- `magenta`\n- `cyan`\n- `white`\n- `gray`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n\n\n## 256-colors\n\nChalk does not support anything other than the base eight colors, which guarantees it will work on all terminals and systems. Some terminals, specifically `xterm` compliant ones, will support the full range of 8-bit colors. For this the lower level [ansi-256-colors](https://github.com/jbnicolai/ansi-256-colors) package can be used.\n\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [`cmder`](http://bliker.github.io/cmder/) instead of `cmd.exe`.\n\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles/) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color/) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/chalk",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "chalk"
            },
            "lodash": {
              "_from": "lodash@^4.0.0",
              "_id": "lodash@4.17.4",
              "_inBundle": false,
              "_integrity": "sha1-eCA6TRwyiuHYbcpkYONptX9AVa4=",
              "_location": "/lodash",
              "_phantomChildren": "[Circular]",
              "_requested": "[Circular]",
              "_requiredBy": "[Circular]",
              "_resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.4.tgz",
              "_shasum": "78203a4d1c328ae1d86dca6460e369b57f4055ae",
              "_spec": "lodash@^4.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
              "author": "[Circular]",
              "bugs": "[Circular]",
              "bundleDependencies": false,
              "contributors": "[Circular]",
              "deprecated": false,
              "description": "Lodash modular utilities.",
              "homepage": "https://lodash.com/",
              "icon": "https://lodash.com/icon.svg",
              "keywords": "[Circular]",
              "license": "MIT",
              "main": "lodash.js",
              "name": "lodash",
              "repository": "[Circular]",
              "scripts": "[Circular]",
              "version": "4.17.4",
              "readme": "# lodash v4.17.4\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.4-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 54-55, Firefox 49-50, IE 11, Edge 14, Safari 9-10, Node.js 6-7, & PhantomJS 2.1.1.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available.\n",
              "readmeFilename": "README.md",
              "dependencies": {},
              "devDependencies": "[Circular]",
              "optionalDependencies": "[Circular]",
              "_dependencies": "[Circular]",
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/lodash",
              "error": "[Circular]",
              "extraneous": false,
              "_deduped": "lodash"
            },
            "slice-ansi": {
              "_from": "slice-ansi@0.0.4",
              "_id": "slice-ansi@0.0.4",
              "_inBundle": false,
              "_integrity": "sha1-7b+JA/ZvfOL46v1s7tZeJkyDGzU=",
              "_location": "/slice-ansi",
              "_phantomChildren": {},
              "_requested": {
                "type": "version",
                "registry": true,
                "raw": "slice-ansi@0.0.4",
                "name": "slice-ansi",
                "escapedName": "slice-ansi",
                "rawSpec": "0.0.4",
                "saveSpec": "[Circular]",
                "fetchSpec": "0.0.4"
              },
              "_requiredBy": [
                "/table"
              ],
              "_resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-0.0.4.tgz",
              "_shasum": "edbf8903f66f7ce2f8eafd6ceed65e264c831b35",
              "_spec": "slice-ansi@0.0.4",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table",
              "author": {
                "name": "David Caccavella",
                "email": "threedeecee@gmail.com"
              },
              "bugs": {
                "url": "https://github.com/chalk/slice-ansi/issues"
              },
              "bundleDependencies": false,
              "dependencies": {},
              "deprecated": false,
              "description": "Slice a string with ANSI escape codes",
              "devDependencies": {
                "ava": "^0.2.0",
                "chalk": "^1.1.1",
                "strip-ansi": "^3.0.0",
                "xo": "*"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/chalk/slice-ansi#readme",
              "keywords": [
                "slice",
                "string",
                "ansi",
                "styles",
                "color",
                "colour",
                "colors",
                "terminal",
                "console",
                "cli",
                "tty",
                "escape",
                "formatting",
                "rgb",
                "256",
                "shell",
                "xterm",
                "log",
                "logging",
                "command-line",
                "text"
              ],
              "license": "MIT",
              "maintainers": [
                {
                  "name": "David Caccavella",
                  "email": "threedeecee@gmail.com",
                  "url": "github.com/dthree"
                },
                {
                  "name": "Sindre Sorhus",
                  "email": "sindresorhus@gmail.com",
                  "url": "sindresorhus.com"
                },
                {
                  "name": "Joshua Appelman",
                  "email": "jappelman@xebia.com",
                  "url": "jbnicolai.com"
                },
                {
                  "name": "JD Ballard",
                  "email": "i.am.qix@gmail.com",
                  "url": "github.com/qix-"
                }
              ],
              "name": "slice-ansi",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/chalk/slice-ansi.git"
              },
              "scripts": {
                "test": "node test.js && xo"
              },
              "version": "0.0.4",
              "readme": "# slice-ansi \n\n[![Build Status](https://travis-ci.org/vorpaljs/slice-ansi.svg?branch=master)](https://travis-ci.org/vorpaljs/slice-ansi)\n[![XO: Linted](https://img.shields.io/badge/xo-linted-blue.svg)](https://github.com/sindresorhus/xo)\n\n> Slice a string with [ANSI escape codes](http://en.wikipedia.org/wiki/ANSI_escape_code#Colors_and_Styles)\n\n## Install\n\n```\n$ npm install --save slice-ansi\n```\n\n## Usage\n\n```js\nvar chalk = require('chalk');\nvar sliceAnsi = require('slice-ansi');\n\nvar input = 'The quick brown ' + chalk.red('fox jumped over ') +\n\t'the lazy ' + chalk.green('dog and then ran away with the unicorn.');\n\nconsole.log(sliceAnsi(input, 20, 30));\n```\n\n## API\n\n### sliceAnsi(input, beginSlice[, endSlice])\n\n#### input\n\nType: `string`\n\nString with ANSI escape codes. Like one styled by [`chalk`](https://github.com/chalk/chalk).\n\n#### beginSlice\n\nType: `number`\n\nThe zero-based index at which to begin the slice.\n\n#### endSlice\n\nType: `number`\n\nOptional. The zero-based index at which to end the slice.\n\n\n## Related\n\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## License\n\nMIT Â© [David Caccavella](https://githbu.com/dthree)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/slice-ansi",
              "error": "[Circular]",
              "extraneous": false
            },
            "string-width": {
              "_from": "string-width@^2.0.0",
              "_id": "string-width@2.1.1",
              "_inBundle": false,
              "_integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
              "_location": "/table/string-width",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "string-width@^2.0.0",
                "name": "string-width",
                "escapedName": "string-width",
                "rawSpec": "^2.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^2.0.0"
              },
              "_requiredBy": [
                "/table"
              ],
              "_resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
              "_shasum": "ab93f27a8dc13d28cac815c462143a6d9012ae9e",
              "_spec": "string-width@^2.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/string-width/issues"
              },
              "bundleDependencies": false,
              "dependencies": {
                "is-fullwidth-code-point": {
                  "_from": "is-fullwidth-code-point@^2.0.0",
                  "_id": "is-fullwidth-code-point@2.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
                  "_location": "/table/is-fullwidth-code-point",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "is-fullwidth-code-point@^2.0.0",
                    "name": "is-fullwidth-code-point",
                    "escapedName": "is-fullwidth-code-point",
                    "rawSpec": "^2.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^2.0.0"
                  },
                  "_requiredBy": [
                    "/table/string-width"
                  ],
                  "_resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
                  "_shasum": "a3b30a5c4f199183167aaab93beefae3ddfb654f",
                  "_spec": "is-fullwidth-code-point@^2.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table/node_modules/string-width",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/sindresorhus/is-fullwidth-code-point/issues"
                  },
                  "bundleDependencies": false,
                  "deprecated": false,
                  "description": "Check if the character represented by a given Unicode code point is fullwidth",
                  "devDependencies": {
                    "ava": "*",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=4"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/sindresorhus/is-fullwidth-code-point#readme",
                  "keywords": [
                    "fullwidth",
                    "full-width",
                    "full",
                    "width",
                    "unicode",
                    "character",
                    "char",
                    "string",
                    "str",
                    "codepoint",
                    "code",
                    "point",
                    "is",
                    "detect",
                    "check"
                  ],
                  "license": "MIT",
                  "name": "is-fullwidth-code-point",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/sindresorhus/is-fullwidth-code-point.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "2.0.0",
                  "xo": {
                    "esnext": true
                  },
                  "readme": "# is-fullwidth-code-point [![Build Status](https://travis-ci.org/sindresorhus/is-fullwidth-code-point.svg?branch=master)](https://travis-ci.org/sindresorhus/is-fullwidth-code-point)\n\n> Check if the character represented by a given [Unicode code point](https://en.wikipedia.org/wiki/Code_point) is [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms)\n\n\n## Install\n\n```\n$ npm install --save is-fullwidth-code-point\n```\n\n\n## Usage\n\n```js\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\n\nisFullwidthCodePoint('è°¢'.codePointAt());\n//=> true\n\nisFullwidthCodePoint('a'.codePointAt());\n//=> false\n```\n\n\n## API\n\n### isFullwidthCodePoint(input)\n\n#### input\n\nType: `number`\n\n[Code point](https://en.wikipedia.org/wiki/Code_point) of a character.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
                  "readmeFilename": "readme.md",
                  "dependencies": {},
                  "optionalDependencies": {},
                  "_dependencies": {},
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table/node_modules/is-fullwidth-code-point",
                  "error": "[Circular]",
                  "extraneous": false
                },
                "strip-ansi": {
                  "_from": "strip-ansi@^4.0.0",
                  "_id": "strip-ansi@4.0.0",
                  "_inBundle": false,
                  "_integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
                  "_location": "/table/strip-ansi",
                  "_phantomChildren": {},
                  "_requested": {
                    "type": "range",
                    "registry": true,
                    "raw": "strip-ansi@^4.0.0",
                    "name": "strip-ansi",
                    "escapedName": "strip-ansi",
                    "rawSpec": "^4.0.0",
                    "saveSpec": "[Circular]",
                    "fetchSpec": "^4.0.0"
                  },
                  "_requiredBy": [
                    "/table/string-width"
                  ],
                  "_resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
                  "_shasum": "a8479022eb1ac368a871389b635262c505ee368f",
                  "_spec": "strip-ansi@^4.0.0",
                  "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table/node_modules/string-width",
                  "author": {
                    "name": "Sindre Sorhus",
                    "email": "sindresorhus@gmail.com",
                    "url": "sindresorhus.com"
                  },
                  "bugs": {
                    "url": "https://github.com/chalk/strip-ansi/issues"
                  },
                  "bundleDependencies": false,
                  "dependencies": {
                    "ansi-regex": {
                      "_from": "ansi-regex@^3.0.0",
                      "_id": "ansi-regex@3.0.0",
                      "_inBundle": false,
                      "_integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
                      "_location": "/table/ansi-regex",
                      "_phantomChildren": {},
                      "_requested": {
                        "type": "range",
                        "registry": true,
                        "raw": "ansi-regex@^3.0.0",
                        "name": "ansi-regex",
                        "escapedName": "ansi-regex",
                        "rawSpec": "^3.0.0",
                        "saveSpec": "[Circular]",
                        "fetchSpec": "^3.0.0"
                      },
                      "_requiredBy": [
                        "/table/strip-ansi"
                      ],
                      "_resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
                      "_shasum": "ed0317c322064f79466c02966bddb605ab37d998",
                      "_spec": "ansi-regex@^3.0.0",
                      "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table/node_modules/strip-ansi",
                      "author": {
                        "name": "Sindre Sorhus",
                        "email": "sindresorhus@gmail.com",
                        "url": "sindresorhus.com"
                      },
                      "bugs": {
                        "url": "https://github.com/chalk/ansi-regex/issues"
                      },
                      "bundleDependencies": false,
                      "deprecated": false,
                      "description": "Regular expression for matching ANSI escape codes",
                      "devDependencies": {
                        "ava": "*",
                        "xo": "*"
                      },
                      "engines": {
                        "node": ">=4"
                      },
                      "files": [
                        "index.js"
                      ],
                      "homepage": "https://github.com/chalk/ansi-regex#readme",
                      "keywords": [
                        "ansi",
                        "styles",
                        "color",
                        "colour",
                        "colors",
                        "terminal",
                        "console",
                        "cli",
                        "string",
                        "tty",
                        "escape",
                        "formatting",
                        "rgb",
                        "256",
                        "shell",
                        "xterm",
                        "command-line",
                        "text",
                        "regex",
                        "regexp",
                        "re",
                        "match",
                        "test",
                        "find",
                        "pattern"
                      ],
                      "license": "MIT",
                      "name": "ansi-regex",
                      "repository": {
                        "type": "git",
                        "url": "git+https://github.com/chalk/ansi-regex.git"
                      },
                      "scripts": {
                        "test": "xo && ava",
                        "view-supported": "node fixtures/view-codes.js"
                      },
                      "version": "3.0.0",
                      "readme": "# ansi-regex [![Build Status](https://travis-ci.org/chalk/ansi-regex.svg?branch=master)](https://travis-ci.org/chalk/ansi-regex)\n\n> Regular expression for matching [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install ansi-regex\n```\n\n\n## Usage\n\n```js\nconst ansiRegex = require('ansi-regex');\n\nansiRegex().test('\\u001B[4mcake\\u001B[0m');\n//=> true\n\nansiRegex().test('cake');\n//=> false\n\n'\\u001B[4mcake\\u001B[0m'.match(ansiRegex());\n//=> ['\\u001B[4m', '\\u001B[0m']\n```\n\n\n## FAQ\n\n### Why do you test for codes not in the ECMA 48 standard?\n\nSome of the codes we run as a test are codes that we acquired finding various lists of non-standard or manufacturer specific codes. We test for both standard and non-standard codes, as most of them follow the same or similar format and can be safely matched in strings without the risk of removing actual string content. There are a few non-standard control codes that do not follow the traditional format (i.e. they end in numbers) thus forcing us to exclude them from the test because we cannot reliably match them.\n\nOn the historical side, those ECMA standards were established in the early 90's whereas the VT100, for example, was designed in the mid/late 70's. At that point in time, control codes were still pretty ungoverned and engineers used them for a multitude of things, namely to activate hardware ports that may have been proprietary. Somewhere else you see a similar 'anarchy' of codes is in the x86 architecture for processors; there are a ton of \"interrupts\" that can mean different things on certain brands of processors, most of which have been phased out.\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n",
                      "readmeFilename": "readme.md",
                      "dependencies": {},
                      "optionalDependencies": {},
                      "_dependencies": {},
                      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table/node_modules/ansi-regex",
                      "error": "[Circular]",
                      "extraneous": false
                    }
                  },
                  "deprecated": false,
                  "description": "Strip ANSI escape codes",
                  "devDependencies": {
                    "ava": "*",
                    "xo": "*"
                  },
                  "engines": {
                    "node": ">=4"
                  },
                  "files": [
                    "index.js"
                  ],
                  "homepage": "https://github.com/chalk/strip-ansi#readme",
                  "keywords": [
                    "strip",
                    "trim",
                    "remove",
                    "ansi",
                    "styles",
                    "color",
                    "colour",
                    "colors",
                    "terminal",
                    "console",
                    "string",
                    "tty",
                    "escape",
                    "formatting",
                    "rgb",
                    "256",
                    "shell",
                    "xterm",
                    "log",
                    "logging",
                    "command-line",
                    "text"
                  ],
                  "license": "MIT",
                  "name": "strip-ansi",
                  "repository": {
                    "type": "git",
                    "url": "git+https://github.com/chalk/strip-ansi.git"
                  },
                  "scripts": {
                    "test": "xo && ava"
                  },
                  "version": "4.0.0",
                  "readme": "# strip-ansi [![Build Status](https://travis-ci.org/chalk/strip-ansi.svg?branch=master)](https://travis-ci.org/chalk/strip-ansi)\n\n> Strip [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\n\n\n## Install\n\n```\n$ npm install strip-ansi\n```\n\n\n## Usage\n\n```js\nconst stripAnsi = require('strip-ansi');\n\nstripAnsi('\\u001B[4mUnicorn\\u001B[0m');\n//=> 'Unicorn'\n```\n\n\n## Related\n\n- [strip-ansi-cli](https://github.com/chalk/strip-ansi-cli) - CLI for this module\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [chalk](https://github.com/chalk/chalk) - Terminal string styling done right\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)\n\n\n## License\n\nMIT\n",
                  "readmeFilename": "readme.md",
                  "optionalDependencies": {},
                  "_dependencies": {
                    "ansi-regex": "^3.0.0"
                  },
                  "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table/node_modules/strip-ansi",
                  "error": "[Circular]",
                  "extraneous": false
                }
              },
              "deprecated": false,
              "description": "Get the visual width of a string - the number of columns required to display it",
              "devDependencies": {
                "ava": "*",
                "xo": "*"
              },
              "engines": {
                "node": ">=4"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/string-width#readme",
              "keywords": [
                "string",
                "str",
                "character",
                "char",
                "unicode",
                "width",
                "visual",
                "column",
                "columns",
                "fullwidth",
                "full-width",
                "full",
                "ansi",
                "escape",
                "codes",
                "cli",
                "command-line",
                "terminal",
                "console",
                "cjk",
                "chinese",
                "japanese",
                "korean",
                "fixed-width"
              ],
              "license": "MIT",
              "name": "string-width",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/string-width.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "2.1.1",
              "readme": "# string-width [![Build Status](https://travis-ci.org/sindresorhus/string-width.svg?branch=master)](https://travis-ci.org/sindresorhus/string-width)\n\n> Get the visual width of a string - the number of columns required to display it\n\nSome Unicode characters are [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) and use double the normal width. [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code) are stripped and doesn't affect the width.\n\nUseful to be able to measure the actual width of command-line output.\n\n\n## Install\n\n```\n$ npm install string-width\n```\n\n\n## Usage\n\n```js\nconst stringWidth = require('string-width');\n\nstringWidth('å¤');\n//=> 2\n\nstringWidth('\\u001b[1må¤\\u001b[22m');\n//=> 2\n\nstringWidth('a');\n//=> 1\n```\n\n\n## Related\n\n- [string-width-cli](https://github.com/sindresorhus/string-width-cli) - CLI for this module\n- [string-length](https://github.com/sindresorhus/string-length) - Get the real length of a string\n- [widest-line](https://github.com/sindresorhus/widest-line) - Get the visual width of the widest line in a string\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "optionalDependencies": {},
              "_dependencies": {
                "is-fullwidth-code-point": "^2.0.0",
                "strip-ansi": "^4.0.0"
              },
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table/node_modules/string-width",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Formats data into a string table.",
          "devDependencies": {
            "ajv-cli": "^1.1.0",
            "babel": "^6.5.2",
            "babel-cli": "^6.14.0",
            "babel-core": "^6.14.0",
            "babel-plugin-add-module-exports": "^0.2.1",
            "babel-plugin-istanbul": "^2.0.3",
            "babel-preset-es2015-node4": "^2.1.0",
            "babel-register": "^6.14.0",
            "chai": "^3.4.1",
            "eslint": "^3.5.0",
            "eslint-config-canonical": "^1.8.6",
            "gitdown": "^2.4.0",
            "husky": "^0.11.7",
            "mocha": "^3.0.2",
            "nyc": "^8.3.1",
            "sinon": "^1.17.2"
          },
          "homepage": "https://github.com/gajus/table#readme",
          "keywords": [
            "ascii",
            "text",
            "table",
            "align",
            "ansi"
          ],
          "license": "BSD-3-Clause",
          "main": "./dist/index.js",
          "name": "table",
          "nyc": {
            "include": [
              "src/*.js"
            ],
            "instrument": false,
            "lines": 70,
            "require": [
              "babel-register"
            ],
            "sourceMap": false
          },
          "repository": {
            "type": "git",
            "url": "git+https://github.com/gajus/table.git"
          },
          "scripts": {
            "build": "rm -fr ./dist && babel --copy-files ./src --out-dir ./dist && npm run make-validators",
            "lint": "npm run build && eslint ./src ./tests",
            "make-readme": "gitdown ./.README/README.md --output-file ./README.md",
            "make-validators": "ajv compile --all-errors --inline-refs=false -s src/schemas/config -c ajv-keywords/keywords/typeof -o dist/validateConfig.js && ajv compile --all-errors --inline-refs=false -s src/schemas/streamConfig -c ajv-keywords/keywords/typeof -o dist/validateStreamConfig.js",
            "precommit": "npm run lint && npm run test",
            "prepublish": "NODE_ENV=production npm run build",
            "test": "npm run build && nyc --check-coverage mocha"
          },
          "version": "3.8.3",
          "readme": "<h1 id=\"table\">Table</h1>\n\n[![Travis build status](http://img.shields.io/travis/gajus/table/master.svg?style=flat)](https://travis-ci.org/gajus/table)\n[![NPM version](http://img.shields.io/npm/v/table.svg?style=flat)](https://www.npmjs.com/package/table)\n[![js-canonical-style](https://img.shields.io/badge/code%20style-canonical-brightgreen.svg?style=flat)](https://github.com/gajus/canonical)\n\n* [Table](#table)\n    * [Features](#table-features)\n    * [Usage](#table-usage)\n        * [Cell Content Alignment](#table-usage-cell-content-alignment)\n        * [Column Width](#table-usage-column-width)\n        * [Custom Border](#table-usage-custom-border)\n        * [Draw Horizontal Line](#table-usage-draw-horizontal-line)\n        * [Padding Cell Content](#table-usage-padding-cell-content)\n        * [Predefined Border Templates](#table-usage-predefined-border-templates)\n        * [Streaming](#table-usage-streaming)\n        * [Text Truncation](#table-usage-text-truncation)\n        * [Text Wrapping](#table-usage-text-wrapping)\n\n\nProduces a string that represents array data in a text table.\n\n![Demo of table displaying a list of missions to the Moon.](./.README/demo.png)\n\n<h2 id=\"table-features\">Features</h2>\n\n* Works with strings containing [fullwidth](https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms) characters.\n* Works with strings containing [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code).\n* Configurable border characters.\n* Configurable content alignment per column.\n* Configurable content padding per column.\n* Configurable column width.\n* Text wrapping.\n\n<h2 id=\"table-usage\">Usage</h2>\n\nTable data is described using an array (rows) of array (cells).\n\n```js\nimport table from 'table';\n\nlet data,\n    output;\n\ndata = [\n    ['0A', '0B', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C']\n];\n\n/**\n * @typedef {string} table~cell\n */\n\n/**\n * @typedef {table~cell[]} table~row\n */\n\n/**\n * @typedef {Object} table~columns\n * @property {string} alignment Cell content alignment (enum: left, center, right) (default: left).\n * @property {number} width Column width (default: auto).\n * @property {number} truncate Number of characters are which the content will be truncated (default: Infinity).\n * @property {number} paddingLeft Cell content padding width left (default: 1).\n * @property {number} paddingRight Cell content padding width right (default: 1).\n */\n\n/**\n * @typedef {Object} table~border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * Used to dynamically tell table whether to draw a line separating rows or not.\n * The default behavior is to always return true.\n *\n * @typedef {function} drawJoin\n * @param {number} index\n * @param {number} size\n * @return {boolean}\n */\n\n/**\n * @typedef {Object} table~config\n * @property {table~border} border\n * @property {table~columns[]} columns Column specific configuration.\n * @property {table~columns} columnDefault Default values for all columns. Column specific settings overwrite the default values.\n * @property {table~drawJoin} drawHorizontalLine\n */\n\n/**\n * Generates a text table.\n *\n * @param {table~row[]} rows\n * @param {table~config} config\n * @return {String}\n */\noutput = table(data);\n\nconsole.log(output);\n```\n\n```\nââââââ¤âââââ¤âââââ\nâ 0A â 0B â 0C â\nââââââ¼âââââ¼âââââ¢\nâ 1A â 1B â 1C â\nââââââ¼âââââ¼âââââ¢\nâ 2A â 2B â 2C â\nââââââ§âââââ§âââââ\n```\n\n\n<h3 id=\"table-usage-cell-content-alignment\">Cell Content Alignment</h3>\n\n`{string} config.columns[{number}].alignment` property controls content horizontal alignment within a cell.\n\nValid values are: \"left\", \"right\" and \"center\".\n\n```js\nlet config,\n    data,\n    output;\n\ndata = [\n    ['0A', '0B', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C']\n];\n\nconfig = {\n    columns: {\n        0: {\n            alignment: 'left',\n            minWidth: 10\n        },\n        1: {\n            alignment: 'center',\n            minWidth: 10\n        },\n        2: {\n            alignment: 'right',\n            minWidth: 10\n        }\n    }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\nââââââââââââââ¤âââââââââââââ¤âââââââââââââ\nâ 0A         â     0B     â         0C â\nââââââââââââââ¼âââââââââââââ¼âââââââââââââ¢\nâ 1A         â     1B     â         1C â\nââââââââââââââ¼âââââââââââââ¼âââââââââââââ¢\nâ 2A         â     2B     â         2C â\nââââââââââââââ§âââââââââââââ§âââââââââââââ\n```\n\n<h3 id=\"table-usage-column-width\">Column Width</h3>\n\n`{number} config.columns[{number}].width` property restricts column width to a fixed width.\n\n```js\nlet data,\n    output,\n    options;\n\ndata = [\n    ['0A', '0B', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C']\n];\n\noptions = {\n    columns: {\n        1: {\n            width: 10\n        }\n    }\n};\n\noutput = table(data, options);\n\nconsole.log(output);\n```\n\n```\nââââââ¤âââââââââââââ¤âââââ\nâ 0A â 0B         â 0C â\nââââââ¼âââââââââââââ¼âââââ¢\nâ 1A â 1B         â 1C â\nââââââ¼âââââââââââââ¼âââââ¢\nâ 2A â 2B         â 2C â\nââââââ§âââââââââââââ§âââââ\n```\n\n<h3 id=\"table-usage-custom-border\">Custom Border</h3>\n\n`{object} config.border` property describes characters used to draw the table border.\n\n```js\nlet config,\n    data,\n    output;\n\ndata = [\n    ['0A', '0B', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C']\n];\n\nconfig = {\n    border: {\n        topBody: `â`,\n        topJoin: `â¬`,\n        topLeft: `â`,\n        topRight: `â`,\n\n        bottomBody: `â`,\n        bottomJoin: `â´`,\n        bottomLeft: `â`,\n        bottomRight: `â`,\n\n        bodyLeft: `â`,\n        bodyRight: `â`,\n        bodyJoin: `â`,\n\n        joinBody: `â`,\n        joinLeft: `â`,\n        joinRight: `â¤`,\n        joinJoin: `â¼`\n    }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\nââââââ¬âââââ¬âââââ\nâ 0A â 0B â 0C â\nââââââ¼âââââ¼âââââ¤\nâ 1A â 1B â 1C â\nââââââ¼âââââ¼âââââ¤\nâ 2A â 2B â 2C â\nââââââ´âââââ´âââââ\n```\n\n<h3 id=\"table-usage-draw-horizontal-line\">Draw Horizontal Line</h3>\n\n`{function} config.drawHorizontalLine` property is a function that is called for every non-content row in the table. The result of the function `{boolean}` determines whether a row is drawn.\n\n```js\nlet data,\n    output,\n    options;\n\ndata = [\n    ['0A', '0B', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C'],\n    ['3A', '3B', '3C'],\n    ['4A', '4B', '4C']\n];\n\noptions = {\n    /**\n     * @typedef {function} drawJoin\n     * @param {number} index\n     * @param {number} size\n     * @return {boolean}\n     */\n    drawHorizontalLine: (index, size) => {\n        return index === 0 || index === 1 || index === size - 1 || index === size;\n    }\n};\n\noutput = table(data, options);\n\nconsole.log(output);\n```\n\n```\nââââââ¤âââââ¤âââââ\nâ 0A â 0B â 0C â\nââââââ¼âââââ¼âââââ¢\nâ 1A â 1B â 1C â\nâ 2A â 2B â 2C â\nâ 3A â 3B â 3C â\nââââââ¼âââââ¼âââââ¢\nâ 4A â 4B â 4C â\nââââââ§âââââ§âââââ\n```\n\n<h3 id=\"table-usage-padding-cell-content\">Padding Cell Content</h3>\n\n`{number} config.columns[{number}].paddingLeft` and `{number} config.columns[{number}].paddingRight` properties control content padding within a cell. Property value represents a number of whitespaces used to pad the content.\n\n```js\nlet config,\n    data,\n    output;\n\ndata = [\n    ['0A', 'AABBCC', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C']\n];\n\nconfig = {\n    columns: {\n        0: {\n            paddingLeft: 3\n        },\n        1: {\n            width: 2,\n            paddingRight: 3\n        }\n    }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\nââââââââ¤âââââââ¤âââââ\nâ   0A â AA   â 0C â\nâ      â BB   â    â\nâ      â CC   â    â\nââââââââ¼âââââââ¼âââââ¢\nâ   1A â 1B   â 1C â\nââââââââ¼âââââââ¼âââââ¢\nâ   2A â 2B   â 2C â\nââââââââ§âââââââ§âââââ\n```\n\n<h3 id=\"table-usage-predefined-border-templates\">Predefined Border Templates</h3>\n\nYou can load one of the predefined border templates using `getBorderCharacters` function.\n\n```js\nimport table, {\n    getBorderCharacters\n} from 'table';\n\nlet config,\n    data;\n\ndata = [\n    ['0A', '0B', '0C'],\n    ['1A', '1B', '1C'],\n    ['2A', '2B', '2C']\n];\n\nconfig = {\n    border: getBorderCharacters(`name of the template`)\n};\n\ntable(data, config);\n```\n\n```\n# honeywell\n\nââââââ¤âââââ¤âââââ\nâ 0A â 0B â 0C â\nââââââ¼âââââ¼âââââ¢\nâ 1A â 1B â 1C â\nââââââ¼âââââ¼âââââ¢\nâ 2A â 2B â 2C â\nââââââ§âââââ§âââââ\n\n# norc\n\nââââââ¬âââââ¬âââââ\nâ 0A â 0B â 0C â\nââââââ¼âââââ¼âââââ¤\nâ 1A â 1B â 1C â\nââââââ¼âââââ¼âââââ¤\nâ 2A â 2B â 2C â\nââââââ´âââââ´âââââ\n\n# ramac (ASCII; for use in terminals that do not support Unicode characters)\n\n+----+----+----+\n| 0A | 0B | 0C |\n|----|----|----|\n| 1A | 1B | 1C |\n|----|----|----|\n| 2A | 2B | 2C |\n+----+----+----+\n\n# void (no borders; see \"bordless table\" section of the documentation)\n\n 0A  0B  0C\n\n 1A  1B  1C\n\n 2A  2B  2C\n\n```\n\nRaise [an issue](https://github.com/gajus/table/issues) if you'd like to contribute a new border template.\n\n<h4 id=\"table-usage-predefined-border-templates-borderless-table\">Borderless Table</h4>\n\nSimply using \"void\" border character template creates a table with a lot of unnecessary spacing.\n\nTo create a more plesant to the eye table, reset the padding and remove the joining rows, e.g.\n\n```js\nlet output;\n\noutput = table(data, {\n    border: getBorderCharacters(`void`),\n    columnDefault: {\n        paddingLeft: 0,\n        paddingRight: 1\n    },\n    drawJoin: () => {\n        return false\n    }\n});\n\nconsole.log(output);\n```\n\n```\n0A 0B 0C\n1A 1B 1C\n2A 2B 2C\n```\n\n<h3 id=\"table-usage-streaming\">Streaming</h3>\n\n`table` package exports `createStream` function used to draw a table and append rows.\n\n`createStream` requires `{number} columnDefault.width` and `{number} columnCount` configuration properties.\n\n```js\nimport {\n    createStream\n} from 'table';\n\nlet config,\n    stream;\n\nconfig = {\n    columnDefault: {\n        width: 50\n    },\n    columnCount: 1\n};\n\nstream = createStream(config);\n\nsetInterval(() => {\n    stream.write([new Date()]);\n}, 500);\n```\n\n![Streaming current date.](./.README/streaming.gif)\n\n`table` package uses ANSI escape codes to overwrite the output of the last line when a new row is printed.\n\nThe underlying implementation is explained in this [Stack Overflow answer](http://stackoverflow.com/a/32938658/368691). \n\nStreaming supports all of the configuration properties and functionality of a static table (such as auto text wrapping, alignment and padding), e.g.\n\n```js\nimport {\n    createStream\n} from 'table';\n\nimport _ from 'lodash';\n\nlet config,\n    stream,\n    i;\n\nconfig = {\n    columnDefault: {\n        width: 50\n    },\n    columnCount: 3,\n    columns: {\n        0: {\n            width: 10,\n            alignment: 'right'\n        },\n        1: {\n            alignment: 'center',\n        },\n        2: {\n            width: 10\n        }\n    }\n};\n\nstream = createStream(config);\n\ni = 0;\n\nsetInterval(() => {\n    let random;\n\n    random = _.sample('abcdefghijklmnopqrstuvwxyz', _.random(1, 30)).join('');\n\n    stream.write([i++, new Date(), random]);\n}, 500);\n```\n\n![Streaming random data.](./.README/streaming-random.gif)\n<h3 id=\"table-usage-text-truncation\">Text Truncation</h3>\n\nTo handle a content that overflows the container width, `table` package implements [text wrapping](#table-usage-text-wrapping). However, sometimes you may want to truncate content that is too long to be displayed in the table.\n\n`{number} config.columns[{number}].truncate` property (default: `Infinity`) truncates the text at the specified length.\n\n```js\nlet config,\n    data,\n    output;\n\ndata = [\n    ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n    columns: {\n        0: {\n            width: 20,\n            truncate: 100\n        }\n    }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\nââââââââââââââââââââââââ\nâ Lorem ipsum dolor si â\nâ t amet, consectetur  â\nâ adipiscing elit. Pha â\nâ sellus pulvinar nibh â\nâ sed mauris conva...  â\nââââââââââââââââââââââââ\n```\n\n<h3 id=\"table-usage-text-wrapping\">Text Wrapping</h3>\n\n`table` package implements auto text wrapping, i.e. text that has width greater than the container width will be separated into multiple lines, e.g.\n\n```js\nlet config,\n    data,\n    output;\n\ndata = [\n    ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n    columns: {\n        0: {\n            width: 20\n        }\n    }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\nââââââââââââââââââââââââ\nâ Lorem ipsum dolor si â\nâ t amet, consectetur  â\nâ adipiscing elit. Pha â\nâ sellus pulvinar nibh â\nâ sed mauris convallis â\nâ dapibus. Nunc venena â\nâ tis tempus nulla sit â\nâ amet viverra.        â\nââââââââââââââââââââââââ\n```\n\nWhen `wrapWord` is `true` the text is broken at the nearest space or one of the special characters (\"-\", \"_\", \"\\\", \"/\", \".\", \",\", \";\"), e.g.\n\n```js\nlet config,\n    data,\n    output;\n\ndata = [\n    ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus pulvinar nibh sed mauris convallis dapibus. Nunc venenatis tempus nulla sit amet viverra.']\n];\n\nconfig = {\n    columns: {\n        0: {\n            width: 20,\n            wrapWord: true\n        }\n    }\n};\n\noutput = table(data, config);\n\nconsole.log(output);\n```\n\n```\nââââââââââââââââââââââââ\nâ Lorem ipsum dolor    â\nâ sit amet,            â\nâ consectetur          â\nâ adipiscing elit.     â\nâ Phasellus pulvinar   â\nâ nibh sed mauris      â\nâ convallis dapibus.   â\nâ Nunc venenatis       â\nâ tempus nulla sit     â\nâ amet viverra.        â\nââââââââââââââââââââââââ\n```\n\n",
          "readmeFilename": "README.md",
          "optionalDependencies": {},
          "_dependencies": {
            "ajv": "^4.7.0",
            "ajv-keywords": "^1.0.0",
            "chalk": "^1.1.1",
            "lodash": "^4.0.0",
            "slice-ansi": "0.0.4",
            "string-width": "^2.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/table",
          "error": "[Circular]",
          "extraneous": false
        },
        "text-table": {
          "_from": "text-table@~0.2.0",
          "_id": "text-table@0.2.0",
          "_inBundle": false,
          "_integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",
          "_location": "/text-table",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "text-table@~0.2.0",
            "name": "text-table",
            "escapedName": "text-table",
            "rawSpec": "~0.2.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "~0.2.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
          "_shasum": "7f5ee823ae805207c00af2df4a84ec3fcfa570b4",
          "_spec": "text-table@~0.2.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "James Halliday",
            "email": "mail@substack.net",
            "url": "http://substack.net"
          },
          "bugs": {
            "url": "https://github.com/substack/text-table/issues"
          },
          "bundleDependencies": false,
          "deprecated": false,
          "description": "borderless text tables with alignment",
          "devDependencies": {
            "cli-color": "~0.2.3",
            "tap": "~0.4.0",
            "tape": "~1.0.2"
          },
          "homepage": "https://github.com/substack/text-table",
          "keywords": [
            "text",
            "table",
            "align",
            "ascii",
            "rows",
            "tabular"
          ],
          "license": "MIT",
          "main": "index.js",
          "name": "text-table",
          "repository": {
            "type": "git",
            "url": "git://github.com/substack/text-table.git"
          },
          "scripts": {
            "test": "tap test/*.js"
          },
          "testling": {
            "files": "test/*.js",
            "browsers": [
              "ie/6..latest",
              "chrome/20..latest",
              "firefox/10..latest",
              "safari/latest",
              "opera/11.0..latest",
              "iphone/6",
              "ipad/6"
            ]
          },
          "version": "0.2.0",
          "readme": "# text-table\n\ngenerate borderless text table strings suitable for printing to stdout\n\n[![build status](https://secure.travis-ci.org/substack/text-table.png)](http://travis-ci.org/substack/text-table)\n\n[![browser support](https://ci.testling.com/substack/text-table.png)](http://ci.testling.com/substack/text-table)\n\n# example\n\n## default align\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'master', '0123456789abcdef' ],\n    [ 'staging', 'fedcba9876543210' ]\n]);\nconsole.log(t);\n```\n\n```\nmaster   0123456789abcdef\nstaging  fedcba9876543210\n```\n\n## left-right align\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'beep', '1024' ],\n    [ 'boop', '33450' ],\n    [ 'foo', '1006' ],\n    [ 'bar', '45' ]\n], { align: [ 'l', 'r' ] });\nconsole.log(t);\n```\n\n```\nbeep   1024\nboop  33450\nfoo    1006\nbar      45\n```\n\n## dotted align\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'beep', '1024' ],\n    [ 'boop', '334.212' ],\n    [ 'foo', '1006' ],\n    [ 'bar', '45.6' ],\n    [ 'baz', '123.' ]\n], { align: [ 'l', '.' ] });\nconsole.log(t);\n```\n\n```\nbeep  1024\nboop   334.212\nfoo   1006\nbar     45.6\nbaz    123.\n```\n\n## centered\n\n``` js\nvar table = require('text-table');\nvar t = table([\n    [ 'beep', '1024', 'xyz' ],\n    [ 'boop', '3388450', 'tuv' ],\n    [ 'foo', '10106', 'qrstuv' ],\n    [ 'bar', '45', 'lmno' ]\n], { align: [ 'l', 'c', 'l' ] });\nconsole.log(t);\n```\n\n```\nbeep    1024   xyz\nboop  3388450  tuv\nfoo    10106   qrstuv\nbar      45    lmno\n```\n\n# methods\n\n``` js\nvar table = require('text-table')\n```\n\n## var s = table(rows, opts={})\n\nReturn a formatted table string `s` from an array of `rows` and some options\n`opts`.\n\n`rows` should be an array of arrays containing strings, numbers, or other\nprintable values.\n\noptions can be:\n\n* `opts.hsep` - separator to use between columns, default `'  '`\n* `opts.align` - array of alignment types for each column, default `['l','l',...]`\n* `opts.stringLength` - callback function to use when calculating the string length\n\nalignment types are:\n\n* `'l'` - left\n* `'r'` - right\n* `'c'` - center\n* `'.'` - decimal\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install text-table\n```\n\n# Use with ANSI-colors\n\nSince the string length of ANSI color schemes does not equal the length\nJavaScript sees internally it is necessary to pass the a custom string length\ncalculator during the main function call.\n\nSee the `test/ansi-colors.js` file for an example.\n\n# license\n\nMIT\n",
          "readmeFilename": "readme.markdown",
          "dependencies": {},
          "optionalDependencies": {},
          "_dependencies": {},
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/text-table",
          "error": "[Circular]",
          "extraneous": false
        },
        "user-home": {
          "_from": "user-home@^2.0.0",
          "_id": "user-home@2.0.0",
          "_inBundle": false,
          "_integrity": "sha1-nHC/2Babwdy/SGBODwS4tJzenp8=",
          "_location": "/user-home",
          "_phantomChildren": {},
          "_requested": {
            "type": "range",
            "registry": true,
            "raw": "user-home@^2.0.0",
            "name": "user-home",
            "escapedName": "user-home",
            "rawSpec": "^2.0.0",
            "saveSpec": "[Circular]",
            "fetchSpec": "^2.0.0"
          },
          "_requiredBy": [
            "/eslint"
          ],
          "_resolved": "https://registry.npmjs.org/user-home/-/user-home-2.0.0.tgz",
          "_shasum": "9c70bfd8169bc1dcbf48604e0f04b8b49cde9e9f",
          "_spec": "user-home@^2.0.0",
          "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
          "author": {
            "name": "Sindre Sorhus",
            "email": "sindresorhus@gmail.com",
            "url": "sindresorhus.com"
          },
          "bugs": {
            "url": "https://github.com/sindresorhus/user-home/issues"
          },
          "bundleDependencies": false,
          "dependencies": {
            "os-homedir": {
              "_from": "os-homedir@^1.0.0",
              "_id": "os-homedir@1.0.2",
              "_inBundle": false,
              "_integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M=",
              "_location": "/os-homedir",
              "_phantomChildren": {},
              "_requested": {
                "type": "range",
                "registry": true,
                "raw": "os-homedir@^1.0.0",
                "name": "os-homedir",
                "escapedName": "os-homedir",
                "rawSpec": "^1.0.0",
                "saveSpec": "[Circular]",
                "fetchSpec": "^1.0.0"
              },
              "_requiredBy": [
                "/user-home"
              ],
              "_resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",
              "_shasum": "ffbc4988336e0e833de0c168c7ef152121aa7fb3",
              "_spec": "os-homedir@^1.0.0",
              "_where": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/user-home",
              "author": {
                "name": "Sindre Sorhus",
                "email": "sindresorhus@gmail.com",
                "url": "sindresorhus.com"
              },
              "bugs": {
                "url": "https://github.com/sindresorhus/os-homedir/issues"
              },
              "bundleDependencies": false,
              "deprecated": false,
              "description": "Node.js 4 `os.homedir()` ponyfill",
              "devDependencies": {
                "ava": "*",
                "path-exists": "^2.0.0",
                "xo": "^0.16.0"
              },
              "engines": {
                "node": ">=0.10.0"
              },
              "files": [
                "index.js"
              ],
              "homepage": "https://github.com/sindresorhus/os-homedir#readme",
              "keywords": [
                "builtin",
                "core",
                "ponyfill",
                "polyfill",
                "shim",
                "os",
                "homedir",
                "home",
                "dir",
                "directory",
                "folder",
                "user",
                "path"
              ],
              "license": "MIT",
              "name": "os-homedir",
              "repository": {
                "type": "git",
                "url": "git+https://github.com/sindresorhus/os-homedir.git"
              },
              "scripts": {
                "test": "xo && ava"
              },
              "version": "1.0.2",
              "readme": "# os-homedir [![Build Status](https://travis-ci.org/sindresorhus/os-homedir.svg?branch=master)](https://travis-ci.org/sindresorhus/os-homedir)\n\n> Node.js 4 [`os.homedir()`](https://nodejs.org/api/os.html#os_os_homedir) [ponyfill](https://ponyfill.com)\n\n\n## Install\n\n```\n$ npm install --save os-homedir\n```\n\n\n## Usage\n\n```js\nconst osHomedir = require('os-homedir');\n\nconsole.log(osHomedir());\n//=> '/Users/sindresorhus'\n```\n\n\n## Related\n\n- [user-home](https://github.com/sindresorhus/user-home) - Same as this module but caches the result\n- [home-or-tmp](https://github.com/sindresorhus/home-or-tmp) - Get the user home directory with fallback to the system temp directory\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
              "readmeFilename": "readme.md",
              "dependencies": {},
              "optionalDependencies": {},
              "_dependencies": {},
              "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/os-homedir",
              "error": "[Circular]",
              "extraneous": false
            }
          },
          "deprecated": false,
          "description": "Get the path to the user home directory",
          "devDependencies": {
            "ava": "0.0.4",
            "path-exists": "^1.0.0"
          },
          "engines": {
            "node": ">=0.10.0"
          },
          "files": [
            "index.js"
          ],
          "homepage": "https://github.com/sindresorhus/user-home#readme",
          "keywords": [
            "user",
            "home",
            "homedir",
            "os-homedir",
            "dir",
            "directory",
            "folder",
            "path",
            "env",
            "vars",
            "environment",
            "variables",
            "userprofile"
          ],
          "license": "MIT",
          "name": "user-home",
          "repository": {
            "type": "git",
            "url": "git+https://github.com/sindresorhus/user-home.git"
          },
          "scripts": {
            "test": "node test.js"
          },
          "version": "2.0.0",
          "readme": "# user-home [![Build Status](https://travis-ci.org/sindresorhus/user-home.svg?branch=master)](https://travis-ci.org/sindresorhus/user-home)\n\n> Get the path to the user home directory\n\n\n## Install\n\n```\n$ npm install --save user-home\n```\n\n\n## Usage\n\n```js\nvar userHome = require('user-home');\n\nconsole.log(userHome);\n//=> '/Users/sindresorhus'\n```\n\nReturns `null` in the unlikely scenario that the home directory can't be found.\n\n\n## Related\n\n- [user-home-cli](https://github.com/sindresorhus/user-home-cli) - CLI for this module\n- [home-or-tmp](https://github.com/sindresorhus/home-or-tmp) - Get the user home directory with fallback to the system temp directory\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
          "readmeFilename": "readme.md",
          "optionalDependencies": {},
          "_dependencies": {
            "os-homedir": "^1.0.0"
          },
          "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/user-home",
          "error": "[Circular]",
          "extraneous": false
        }
      },
      "deprecated": false,
      "description": "An AST-based pattern checker for JavaScript.",
      "devDependencies": {
        "beefy": "^2.0.0",
        "brfs": "0.0.9",
        "browserify": "^12.0.1",
        "chai": "^3.5.0",
        "cheerio": "^0.19.0",
        "coveralls": "2.11.4",
        "dateformat": "^1.0.8",
        "ejs": "^2.3.3",
        "eslint-release": "^0.5.0",
        "esprima": "^2.4.1",
        "esprima-fb": "^15001.1001.0-dev-harmony-fb",
        "gh-got": "^2.2.0",
        "istanbul": "^0.4.0",
        "jsdoc": "^3.3.0-beta1",
        "karma": "^0.13.22",
        "karma-mocha": "^1.0.1",
        "karma-mocha-reporter": "^2.0.3",
        "karma-phantomjs-launcher": "^1.0.0",
        "leche": "^2.1.1",
        "linefix": "^0.1.1",
        "load-perf": "^0.2.0",
        "markdownlint": "^0.1.0",
        "mocha": "^2.4.5",
        "mock-fs": "^3.9.0",
        "npm-license": "^0.3.2",
        "phantomjs-prebuilt": "^2.1.7",
        "proxyquire": ">=1.0.0 <1.7.5",
        "semver": "^5.0.3",
        "shelljs-nodecli": "~0.1.0",
        "sinon": "^1.17.2",
        "temp": "^0.8.3",
        "through": "^2.3.6"
      },
      "engines": {
        "node": ">=0.10"
      },
      "files": [
        "LICENSE",
        "README.md",
        "bin",
        "conf",
        "lib",
        "messages"
      ],
      "homepage": "http://eslint.org",
      "keywords": [
        "ast",
        "lint",
        "javascript",
        "ecmascript",
        "espree"
      ],
      "license": "MIT",
      "main": "./lib/api.js",
      "name": "eslint",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/eslint/eslint.git"
      },
      "scripts": {
        "alpharelease": "node Makefile.js prerelease -- alpha",
        "betarelease": "node Makefile.js prerelease -- beta",
        "browserify": "node Makefile.js browserify",
        "check-commit": "node Makefile.js checkGitCommit",
        "coveralls": "cat ./coverage/lcov.info | coveralls",
        "docs": "node Makefile.js docs",
        "gensite": "node Makefile.js gensite",
        "lint": "node Makefile.js lint",
        "perf": "node Makefile.js perf",
        "profile": "beefy tests/bench/bench.js --open -- -t brfs -t ./tests/bench/xform-rules.js -r espree",
        "release": "node Makefile.js release",
        "test": "node Makefile.js test"
      },
      "version": "2.13.1",
      "readme": "[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Build status][appveyor-image]][appveyor-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Downloads][downloads-image]][downloads-url]\n[![Bountysource](https://www.bountysource.com/badge/tracker?tracker_id=282608)](https://www.bountysource.com/trackers/282608-eslint?utm_source=282608&utm_medium=shield&utm_campaign=TRACKER_BADGE)\n[![Join the chat at https://gitter.im/eslint/eslint](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eslint/eslint?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# ESLint\n\n[Website](http://eslint.org) |\n[Configuring](http://eslint.org/docs/user-guide/configuring) |\n[Rules](http://eslint.org/docs/rules/) |\n[Contributing](http://eslint.org/docs/developer-guide/contributing) |\n[Reporting Bugs](http://eslint.org/docs/developer-guide/contributing/reporting-bugs) |\n[Code of Conduct](https://jquery.org/conduct/) |\n[Twitter](https://twitter.com/geteslint) |\n[Mailing List](https://groups.google.com/group/eslint) |\n[Chat Room](https://gitter.im/eslint/eslint)\n\nESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\n* ESLint uses [Espree](https://github.com/eslint/espree) for JavaScript parsing.\n* ESLint uses an AST to evaluate patterns in code.\n* ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\n## Installation\n\nYou can install ESLint using npm:\n\n    npm install -g eslint\n\n## Usage\n\nIf it's your first time using ESLint, you should set up a config file using `--init`:\n\n    eslint --init\n\nAfter that, you can run ESLint on any JavaScript file:\n\n    eslint test.js test2.js\n\n**Note:** `eslint --init` is intended for setting up and configuring ESLint on a per-project basis and will perform a local installation of ESLint and its plugins in the directory in which it is run. If you prefer using a global installation of ESLint, any plugins used in your configuration must also be installed globally.\n\n## Configuration\n\nAfter running `eslint --init`, you'll have a `.eslintrc` file in your directory. In it, you'll see some rules configured like this:\n\n```json\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"double\"]\n    }\n}\n```\n\nThe names `\"semi\"` and `\"quotes\"` are the names of [rules](http://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:\n\n* `\"off\"` or `0` - turn the rule off\n* `\"warn\"` or `1` - turn the rule on as a warning (doesn't affect exit code)\n* `\"error\"` or `2` - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](http://eslint.org/docs/user-guide/configuring)).\n\n## Sponsors\n\n* Development is sponsored by [Box](https://box.com)\n* Site search ([eslint.org](http://eslint.org)) is sponsored by [Algolia](https://www.algolia.com)\n\n## Team\n\nThese folks keep the project moving and are resources for help:\n\n* Nicholas C. Zakas ([@nzakas](https://github.com/nzakas)) - project lead\n* Ilya Volodin ([@ilyavolodin](https://github.com/ilyavolodin)) - reviewer\n* Brandon Mills ([@btmills](https://github.com/btmills)) - reviewer\n* Gyandeep Singh ([@gyandeeps](https://github.com/gyandeeps)) - reviewer\n* Toru Nagashima ([@mysticatea](https://github.com/mysticatea)) - reviewer\n* Alberto RodrÃ­guez ([@alberto](https://github.com/alberto)) - reviewer\n* Mathias Schreck ([@lo1tuma](https://github.com/lo1tuma)) - committer\n* Jamund Ferguson ([@xjamundx](https://github.com/xjamundx)) - committer\n* Ian VanSchooten ([@ianvs](https://github.com/ianvs)) - committer\n* Burak YiÄit Kaya ([@byk](https://github.com/byk)) - committer\n* Kai Cataldo ([@kaicataldo](https://github.com/kaicataldo)) - committer\n* Michael Ficarra ([@michaelficarra](https://github.com/michaelficarra)) - committer\n* Mark Pedrotti ([@pedrottimark](https://github.com/pedrottimark)) - committer\n* Oleg Gaidarenko ([@markelog](https://github.com/markelog)) - committer\n* Mike Sherov [@mikesherov](https://github.com/mikesherov)) - committer\n* Henry Zhu ([@hzoo](https://github.com/hzoo)) - committer\n* Marat Dulin ([@mdevils](https://github.com/mdevils)) - committer\n* Alexej Yaroshevich ([@zxqfox](https://github.com/zxqfox)) - committer\n\n## Releases\n\nWe have scheduled releases every two weeks on Friday or Saturday.\n\n## Filing Issues\n\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\n* [Bug Report](http://eslint.org/docs/developer-guide/contributing/reporting-bugs)\n* [Propose a New Rule](http://eslint.org/docs/developer-guide/contributing/new-rules)\n* [Proposing a Rule Change](http://eslint.org/docs/developer-guide/contributing/rule-changes)\n* [Request a Change](http://eslint.org/docs/developer-guide/contributing/changes)\n\n## Semantic Versioning Policy\n\nESLint follows [semantic versioning](http://semver.org). However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:\n\n* Patch release (intended to not break your lint build)\n    * A bug fix in a rule that results in ESLint reporting fewer errors.\n    * A bug fix to the CLI or core (including formatters).\n    * Improvements to documentation.\n    * Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    * Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n* Minor release (might break your lint build)\n    * A bug fix in a rule that results in ESLint reporting more errors.\n    * A new rule is created.\n    * A new option to an existing rule is created.\n    * An existing rule is deprecated.\n    * A new CLI capability is created.\n    * New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).\n    * A new formatter is created.\n* Major release (likely to break your lint build)\n    * `eslint:recommended` is updated.\n    * An existing rule is removed.\n    * An existing formatter is removed.\n    * Part of the public API is removed or changed in an incompatible way.\n\n## Frequently Asked Questions\n\n### How is ESLint different from JSHint?\n\nThe most significant difference is that ESlint has pluggable linting rules. That means you can use the rules it comes with, or you can extend it with rules created by others or by yourself!\n\n### How does ESLint performance compare to JSHint?\n\nESLint is slower than JSHint, usually 2-3x slower on a single file. This is because ESLint uses Espree to construct an AST before it can evaluate your code whereas JSHint evaluates your code as it's being parsed. The speed is also based on the number of rules you enable; the more rules you enable, the slower the process.\n\nDespite being slower, we believe that ESLint is fast enough to replace JSHint without causing significant pain.\n\n### I heard ESLint is going to replace JSCS?\n\nYes. Since we are solving the same problems, ESLint and JSCS teams have decided to join forces and work together in the development of ESLint instead of competing with each other. You can read more about this in both [ESLint](http://eslint.org/blog/2016/04/welcoming-jscs-to-eslint) and [JSCS](https://medium.com/@markelog/jscs-end-of-the-line-bc9bf0b3fdb2#.u76sx334n) announcements.\n\n### So, should I stop using JSCS and start using ESLint?\n\nNot yet. We are still working to smooth the transition. You can see our progress [here](https://github.com/eslint/eslint/milestones/JSCS%20Compatibility). Weâll announce when all of the changes necessary to support JSCS users in ESLint are complete and will start encouraging JSCS users to switch to ESLint at that time. Meanwhile, we recommend you to upgrade to JSCS 3.0 and provide feedback to the team.\n\n### Is ESLint just linting or does it also check style?\n\nESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use it for both.\n\n### Does ESLint support JSX?\n\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](http://eslint.org/docs/user-guide/configuring).). Please note that supporting JSX syntax *is not* the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.\n\n### What about ECMAScript 6 support?\n\nESLint has full support for ECMAScript 6. By default, this support is off. You can enable ECMAScript 6 support through [configuration](http://eslint.org/docs/user-guide/configuring).\n\n### What about experimental features?\n\nESLint doesn't natively support experimental ECMAScript language features. You can use [babel-eslint](https://github.com/babel/babel-eslint) to use any option available in Babel.\n\nOnce a language feature has been adopted into the ECMAScript standard, we will accept\nissues and pull requests related to the new feature, subject to our [contributing\nguidelines](http://eslint.org/docs/developer-guide/contributing). Until then, please use\nthe appropriate parser and plugin(s) for your experimental feature.\n\n### Where to ask for help?\n\nJoin our [Mailing List](https://groups.google.com/group/eslint) or [Chatroom](https://gitter.im/eslint/eslint)\n\n\n[npm-image]: https://img.shields.io/npm/v/eslint.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/eslint\n[travis-image]: https://img.shields.io/travis/eslint/eslint/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eslint/eslint\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/iwxmiobcvbw3b0av/branch/master?svg=true\n[appveyor-url]: https://ci.appveyor.com/project/nzakas/eslint/branch/master\n[coveralls-image]: https://img.shields.io/coveralls/eslint/eslint/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/eslint/eslint?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/eslint.svg?style=flat-square\n[downloads-url]: https://www.npmjs.com/package/eslint\n",
      "readmeFilename": "README.md",
      "optionalDependencies": {},
      "_dependencies": {
        "chalk": "^1.1.3",
        "concat-stream": "^1.4.6",
        "debug": "^2.1.1",
        "doctrine": "^1.2.2",
        "es6-map": "^0.1.3",
        "escope": "^3.6.0",
        "espree": "^3.1.6",
        "estraverse": "^4.2.0",
        "esutils": "^2.0.2",
        "file-entry-cache": "^1.1.1",
        "glob": "^7.0.3",
        "globals": "^9.2.0",
        "ignore": "^3.1.2",
        "imurmurhash": "^0.1.4",
        "inquirer": "^0.12.0",
        "is-my-json-valid": "^2.10.0",
        "is-resolvable": "^1.0.0",
        "js-yaml": "^3.5.1",
        "json-stable-stringify": "^1.0.0",
        "levn": "^0.3.0",
        "lodash": "^4.0.0",
        "mkdirp": "^0.5.0",
        "optionator": "^0.8.1",
        "path-is-absolute": "^1.0.0",
        "path-is-inside": "^1.0.1",
        "pluralize": "^1.2.1",
        "progress": "^1.1.8",
        "require-uncached": "^1.0.2",
        "shelljs": "^0.6.0",
        "strip-json-comments": "~1.0.1",
        "table": "^3.7.8",
        "text-table": "~0.2.0",
        "user-home": "^2.0.0"
      },
      "path": "/Users/pivotal/workspace/LicenseFinder/bin/node_modules/eslint",
      "error": "[Circular]",
      "extraneous": false
    }
  },
  "name": "",
  "version": "",
  "readme": "ERROR: No README data found!",
  "devDependencies": {},
  "optionalDependencies": {},
  "_dependencies": {
    "eslint": "2.13.1"
  },
  "path": "/Users/pivotal/workspace/LicenseFinder/bin",
  "error": "[Circular]",
  "extraneous": false
}
